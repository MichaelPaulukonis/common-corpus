   Node:Top, Next:[2]Introduction, Previous:[3](dir), Up:[4](dir)
#======= THIS IS THE JARGON FILE, VERSION 4.2.2, 20 AUG 2000 =======#

   This is the Jargon File, a comprehensive compendium of hacker slang
   illuminating many aspects of hackish tradition, folklore, and humor.

   This document (the Jargon File) is in the public domain, to be freely
   used, shared, and modified. There are (by intention) no legal
   restraints on what you can do with it, but there are traditions about
   its proper use to which many hackers are quite strongly attached.
   Please extend the courtesy of proper citation when you quote the File,
   ideally with a version number, as it will change and grow over time.
   (Examples of appropriate citation form: "Jargon File 4.2.2" or "The
   on-line hacker Jargon File, version 4.2.2, 20 AUG 2000".)

   The Jargon File is a common heritage of the hacker culture. Over the
   years a number of individuals have volunteered considerable time to
   maintaining the File and been recognized by the net at large as
   editors of it. Editorial responsibilities include: to collate
   contributions and suggestions from others; to seek out corroborating
   information; to cross-reference related entries; to keep the file in a
   consistent format; and to announce and distribute updated versions
   periodically. Current volunteer editors include:

   Eric Raymond [5]esr@snark.thyrsus.com

   Although there is no requirement that you do so, it is considered good
   form to check with an editor before quoting the File in a published
   work or commercial product. We may have additional information that
   would be helpful to you and can assist you in framing your quote to
   reflect not only the letter of the File but its spirit as well.

   All contributions and suggestions about this file sent to a volunteer
   editor are gratefully received and will be regarded, unless otherwise
   labelled, as freely given donations for possible use as part of this
   public-domain file.

   From time to time a snapshot of this file has been polished, edited,
   and formatted for commercial publication with the cooperation of the
   volunteer editors and the hacker community at large. If you wish to
   have a bound paper copy of this file, you may find it convenient to
   purchase one of these. They often contain additional material not
   found in on-line versions. The two `authorized' editions so far are
   described in the Revision History section; there may be more in the
   future.
     * [6]Introduction: The purpose and scope of this File
     * [7]A Few Terms: Of Slang, Jargon and Techspeak
     * [8]Revision History: How the File came to be
     * [9]Jargon Construction: How hackers invent jargon
     * [10]Hacker Writing Style: How they write
     * [11]Email Quotes: And the Inclusion Problem
     * [12]Hacker Speech Style: How hackers talk
     * [13]International Style: Some notes on usage outside the U.S.
     * [14]Lamer-speak: Crackers, Phreaks, and Lamers
     * [15]Pronunciation Guide: How to read the pronunciation keys
     * [16]Other Lexicon Conventions: How to read lexicon entries
     * [17]Format for New Entries: How to submit new entries for the File
     * [18]The Jargon Lexicon: The lexicon itself
     * [19]Appendix A: Hacker Folklore
     * [20]Appendix B: A Portrait of J. Random Hacker
     * [21]Appendix C: Helping Hacker Culture Grow
     * [22]Bibliography: For your further enjoyment
     _________________________________________________________________

   Node:Introduction, Next:[23]A Few Terms, Previous:[24]Top, Up:[25]Top

                                 Introduction

   This document is a collection of slang terms used by various
   subcultures of computer hackers. Though some technical material is
   included for background and flavor, it is not a technical dictionary;
   what we describe here is the language hackers use among themselves for
   fun, social communication, and technical debate.

   The `hacker culture' is actually a loosely networked collection of
   subcultures that is nevertheless conscious of some important shared
   experiences, shared roots, and shared values. It has its own myths,
   heroes, villains, folk epics, in-jokes, taboos, and dreams. Because
   hackers as a group are particularly creative people who define
   themselves partly by rejection of `normal' values and working habits,
   it has unusually rich and conscious traditions for an intentional
   culture less than 40 years old.

   As usual with slang, the special vocabulary of hackers helps hold
   their culture together -- it helps hackers recognize each other's
   places in the community and expresses shared values and experiences.
   Also as usual, not knowing the slang (or using it inappropriately)
   defines one as an outsider, a mundane, or (worst of all in hackish
   vocabulary) possibly even a [26]suit. All human cultures use slang in
   this threefold way -- as a tool of communication, and of inclusion,
   and of exclusion.

   Among hackers, though, slang has a subtler aspect, paralleled perhaps
   in the slang of jazz musicians and some kinds of fine artists but hard
   to detect in most technical or scientific cultures; parts of it are
   code for shared states of consciousness. There is a whole range of
   altered states and problem-solving mental stances basic to high-level
   hacking which don't fit into conventional linguistic reality any
   better than a Coltrane solo or one of Maurits Escher's `trompe l'oeil'
   compositions (Escher is a favorite of hackers), and hacker slang
   encodes these subtleties in many unobvious ways. As a simple example,
   take the distinction between a [27]kluge and an [28]elegant solution,
   and the differing connotations attached to each. The distinction is
   not only of engineering significance; it reaches right back into the
   nature of the generative processes in program design and asserts
   something important about two different kinds of relationship between
   the hacker and the hack. Hacker slang is unusually rich in
   implications of this kind, of overtones and undertones that illuminate
   the hackish psyche.

   But there is more. Hackers, as a rule, love wordplay and are very
   conscious and inventive in their use of language. These traits seem to
   be common in young children, but the conformity-enforcing machine we
   are pleased to call an educational system bludgeons them out of most
   of us before adolescence. Thus, linguistic invention in most
   subcultures of the modern West is a halting and largely unconscious
   process. Hackers, by contrast, regard slang formation and use as a
   game to be played for conscious pleasure. Their inventions thus
   display an almost unique combination of the neotenous enjoyment of
   language-play with the discrimination of educated and powerful
   intelligence. Further, the electronic media which knit them together
   are fluid, `hot' connections, well adapted to both the dissemination
   of new slang and the ruthless culling of weak and superannuated
   specimens. The results of this process give us perhaps a uniquely
   intense and accelerated view of linguistic evolution in action.

   Hacker slang also challenges some common linguistic and
   anthropological assumptions. For example, it has recently become
   fashionable to speak of `low-context' versus `high-context'
   communication, and to classify cultures by the preferred context level
   of their languages and art forms. It is usually claimed that
   low-context communication (characterized by precision, clarity, and
   completeness of self-contained utterances) is typical in cultures
   which value logic, objectivity, individualism, and competition; by
   contrast, high-context communication (elliptical, emotive,
   nuance-filled, multi-modal, heavily coded) is associated with cultures
   which value subjectivity, consensus, cooperation, and tradition. What
   then are we to make of hackerdom, which is themed around extremely
   low-context interaction with computers and exhibits primarily
   "low-context" values, but cultivates an almost absurdly high-context
   slang style?

   The intensity and consciousness of hackish invention make a
   compilation of hacker slang a particularly effective window into the
   surrounding culture -- and, in fact, this one is the latest version of
   an evolving compilation called the `Jargon File', maintained by
   hackers themselves for over 15 years. This one (like its ancestors) is
   primarily a lexicon, but also includes topic entries which collect
   background or sidelight information on hacker culture that would be
   awkward to try to subsume under individual slang definitions.

   Though the format is that of a reference volume, it is intended that
   the material be enjoyable to browse. Even a complete outsider should
   find at least a chuckle on nearly every page, and much that is
   amusingly thought-provoking. But it is also true that hackers use
   humorous wordplay to make strong, sometimes combative statements about
   what they feel. Some of these entries reflect the views of opposing
   sides in disputes that have been genuinely passionate; this is
   deliberate. We have not tried to moderate or pretty up these disputes;
   rather we have attempted to ensure that everyone's sacred cows get
   gored, impartially. Compromise is not particularly a hackish virtue,
   but the honest presentation of divergent viewpoints is.

   The reader with minimal computer background who finds some references
   incomprehensibly technical can safely ignore them. We have not felt it
   either necessary or desirable to eliminate all such; they, too,
   contribute flavor, and one of this document's major intended audiences
   -- fledgling hackers already partway inside the culture -- will
   benefit from them.

   A selection of longer items of hacker folklore and humor is included
   in [29]Appendix A. The `outside' reader's attention is particularly
   directed to the Portrait of J. Random Hacker in [30]Appendix B.
   Appendix C, the [31]Bibliography, lists some non-technical works which
   have either influenced or described the hacker culture.

   Because hackerdom is an intentional culture (one each individual must
   choose by action to join), one should not be surprised that the line
   between description and influence can become more than a little
   blurred. Earlier versions of the Jargon File have played a central
   role in spreading hacker language and the culture that goes with it to
   successively larger populations, and we hope and expect that this one
   will do likewise.
     _________________________________________________________________

   Node:A Few Terms, Next:[32]Revision History,
   Previous:[33]Introduction, Up:[34]Top

Of Slang, Jargon, and Techspeak

   Linguists usually refer to informal language as `slang' and reserve
   the term `jargon' for the technical vocabularies of various
   occupations. However, the ancestor of this collection was called the
   `Jargon File', and hacker slang is traditionally `the jargon'. When
   talking about the jargon there is therefore no convenient way to
   distinguish it from what a linguist would call hackers' jargon -- the
   formal vocabulary they learn from textbooks, technical papers, and
   manuals.

   To make a confused situation worse, the line between hacker slang and
   the vocabulary of technical programming and computer science is fuzzy,
   and shifts over time. Further, this vocabulary is shared with a wider
   technical culture of programmers, many of whom are not hackers and do
   not speak or recognize hackish slang.

   Accordingly, this lexicon will try to be as precise as the facts of
   usage permit about the distinctions among three categories:
     * `slang': informal language from mainstream English or
       non-technical subcultures (bikers, rock fans, surfers, etc).
     * `jargon': without qualifier, denotes informal `slangy' language
       peculiar to or predominantly found among hackers -- the subject of
       this lexicon.
     * `techspeak': the formal technical vocabulary of programming,
       computer science, electronics, and other fields connected to
       hacking.

   This terminology will be consistently used throughout the remainder of
   this lexicon.

   The jargon/techspeak distinction is the delicate one. A lot of
   techspeak originated as jargon, and there is a steady continuing
   uptake of jargon into techspeak. On the other hand, a lot of jargon
   arises from overgeneralization of techspeak terms (there is more about
   this in the [35]Jargon Construction section below).

   In general, we have considered techspeak any term that communicates
   primarily by a denotation well established in textbooks, technical
   dictionaries, or standards documents.

   A few obviously techspeak terms (names of operating systems,
   languages, or documents) are listed when they are tied to hacker
   folklore that isn't covered in formal sources, or sometimes to convey
   critical historical background necessary to understand other entries
   to which they are cross-referenced. Some other techspeak senses of
   jargon words are listed in order to make the jargon senses clear;
   where the text does not specify that a straight technical sense is
   under discussion, these are marked with `[techspeak]' as an etymology.
   Some entries have a primary sense marked this way, with subsequent
   jargon meanings explained in terms of it.

   We have also tried to indicate (where known) the apparent origins of
   terms. The results are probably the least reliable information in the
   lexicon, for several reasons. For one thing, it is well known that
   many hackish usages have been independently reinvented multiple times,
   even among the more obscure and intricate neologisms. It often seems
   that the generative processes underlying hackish jargon formation have
   an internal logic so powerful as to create substantial parallelism
   across separate cultures and even in different languages! For another,
   the networks tend to propagate innovations so quickly that `first use'
   is often impossible to pin down. And, finally, compendia like this one
   alter what they observe by implicitly stamping cultural approval on
   terms and widening their use.

   Despite these problems, the organized collection of jargon-related
   oral history for the new compilations has enabled us to put to rest
   quite a number of folk etymologies, place credit where credit is due,
   and illuminate the early history of many important hackerisms such as
   [36]kluge, [37]cruft, and [38]foo. We believe specialist
   lexicographers will find many of the historical notes more than
   casually instructive.
     _________________________________________________________________

   Node:Revision History, Next:[39]Jargon Construction, Previous:[40]A
   Few Terms, Up:[41]Top

Revision History

   The original Jargon File was a collection of hacker jargon from
   technical cultures including the MIT AI Lab, the Stanford AI lab
   (SAIL), and others of the old ARPANET AI/LISP/PDP-10 communities
   including Bolt, Beranek and Newman (BBN), Carnegie-Mellon University
   (CMU), and Worcester Polytechnic Institute (WPI).

   The Jargon File (hereafter referred to as `jargon-1' or `the File')
   was begun by Raphael Finkel at Stanford in 1975. From this time until
   the plug was finally pulled on the SAIL computer in 1991, the File was
   named AIWORD.RF[UP,DOC] there. Some terms in it date back considerably
   earlier ([42]frob and some senses of [43]moby, for instance, go back
   to the Tech Model Railroad Club at MIT and are believed to date at
   least back to the early 1960s). The revisions of jargon-1 were all
   unnumbered and may be collectively considered `Version 1'.

   In 1976, Mark Crispin, having seen an announcement about the File on
   the SAIL computer, [44]FTPed a copy of the File to MIT. He noticed
   that it was hardly restricted to `AI words' and so stored the file on
   his directory as AI:MRC;SAIL JARGON.

   The file was quickly renamed JARGON > (the `>' caused versioning under
   ITS) as a flurry of enhancements were made by Mark Crispin and Guy L.
   Steele Jr. Unfortunately, amidst all this activity, nobody thought of
   correcting the term `jargon' to `slang' until the compendium had
   already become widely known as the Jargon File.

   Raphael Finkel dropped out of active participation shortly thereafter
   and Don Woods became the SAIL contact for the File (which was
   subsequently kept in duplicate at SAIL and MIT, with periodic
   resynchronizations).

   The File expanded by fits and starts until about 1983; Richard
   Stallman was prominent among the contributors, adding many MIT and
   ITS-related coinages.

   In Spring 1981, a hacker named Charles Spurgeon got a large chunk of
   the File published in Stewart Brand's "CoEvolution Quarterly" (issue
   29, pages 26-35) with illustrations by Phil Wadler and Guy Steele
   (including a couple of the Crunchly cartoons). This appears to have
   been the File's first paper publication.

   A late version of jargon-1, expanded with commentary for the mass
   market, was edited by Guy Steele into a book published in 1983 as "The
   Hacker's Dictionary" (Harper & Row CN 1082, ISBN 0-06-091082-8). The
   other jargon-1 editors (Raphael Finkel, Don Woods, and Mark Crispin)
   contributed to this revision, as did Richard M. Stallman and Geoff
   Goodfellow. This book (now out of print) is hereafter referred to as
   `Steele-1983' and those six as the Steele-1983 coauthors.

   Shortly after the publication of Steele-1983, the File effectively
   stopped growing and changing. Originally, this was due to a desire to
   freeze the file temporarily to facilitate the production of
   Steele-1983, but external conditions caused the `temporary' freeze to
   become permanent.

   The AI Lab culture had been hit hard in the late 1970s by funding cuts
   and the resulting administrative decision to use vendor-supported
   hardware and software instead of homebrew whenever possible. At MIT,
   most AI work had turned to dedicated LISP Machines. At the same time,
   the commercialization of AI technology lured some of the AI Lab's best
   and brightest away to startups along the Route 128 strip in
   Massachusetts and out West in Silicon Valley. The startups built LISP
   machines for MIT; the central MIT-AI computer became a [45]TWENEX
   system rather than a host for the AI hackers' beloved [46]ITS.

   The Stanford AI Lab had effectively ceased to exist by 1980, although
   the SAIL computer continued as a Computer Science Department resource
   until 1991. Stanford became a major [47]TWENEX site, at one point
   operating more than a dozen TOPS-20 systems; but by the mid-1980s most
   of the interesting software work was being done on the emerging BSD
   Unix standard.

   In April 1983, the PDP-10-centered cultures that had nourished the
   File were dealt a death-blow by the cancellation of the Jupiter
   project at Digital Equipment Corporation. The File's compilers,
   already dispersed, moved on to other things. Steele-1983 was partly a
   monument to what its authors thought was a dying tradition; no one
   involved realized at the time just how wide its influence was to be.

   By the mid-1980s the File's content was dated, but the legend that had
   grown up around it never quite died out. The book, and softcopies
   obtained off the ARPANET, circulated even in cultures far removed from
   MIT and Stanford; the content exerted a strong and continuing
   influence on hacker language and humor. Even as the advent of the
   microcomputer and other trends fueled a tremendous expansion of
   hackerdom, the File (and related materials such as the [48]Some AI
   Koans in Appendix A) came to be seen as a sort of sacred epic, a
   hacker-culture Matter of Britain chronicling the heroic exploits of
   the Knights of the Lab. The pace of change in hackerdom at large
   accelerated tremendously -- but the Jargon File, having passed from
   living document to icon, remained essentially untouched for seven
   years.

   This revision contains nearly the entire text of a late version of
   jargon-1 (a few obsolete PDP-10-related entries were dropped after
   careful consultation with the editors of Steele-1983). It merges in
   about 80% of the Steele-1983 text, omitting some framing material and
   a very few entries introduced in Steele-1983 that are now also
   obsolete.

   This new version casts a wider net than the old Jargon File; its aim
   is to cover not just AI or PDP-10 hacker culture but all the technical
   computing cultures wherein the true hacker-nature is manifested. More
   than half of the entries now derive from [49]Usenet and represent
   jargon now current in the C and Unix communities, but special efforts
   have been made to collect jargon from other cultures including IBM PC
   programmers, Amiga fans, Mac enthusiasts, and even the IBM mainframe
   world.

   Eric S. Raymond [50]<esr@snark.thyrsus.com> maintains the new File
   with assistance from Guy L. Steele Jr. [51]<gls@think.com>; these are
   the persons primarily reflected in the File's editorial `we', though
   we take pleasure in acknowledging the special contribution of the
   other coauthors of Steele-1983. Please email all additions,
   corrections, and correspondence relating to the Jargon File to
   [52]jargon@thyrsus.com.

   (Warning: other email addresses appear in this file but are not
   guaranteed to be correct later than the revision date on the first
   line. Don't email us if an attempt to reach your idol bounces -- we
   have no magic way of checking addresses or looking up people.)

   The 2.9.6 version became the main text of "The New Hacker's
   Dictionary", by Eric Raymond (ed.), MIT Press 1991, ISBN
   0-262-68069-6.

   The 3.0.0 version was published in September 1993 as the second
   edition of "The New Hacker's Dictionary", again from MIT Press (ISBN
   0-262-18154-1).

   If you want the book, you should be able to find it at any of the
   major bookstore chains. Failing that, you can order by mail from

   The MIT Press 55 Hayward Street Cambridge, MA 02142

   or order by phone at (800)-356-0343 or (617)-625-8481.

   The maintainers are committed to updating the on-line version of the
   Jargon File through and beyond paper publication, and will continue to
   make it available to archives and public-access sites as a trust of
   the hacker community.

   Here is a chronology of the high points in the recent on-line
   revisions:

   Version 2.1.1, Jun 12 1990: the Jargon File comes alive again after a
   seven-year hiatus. Reorganization and massive additions were by Eric
   S. Raymond, approved by Guy Steele. Many items of UNIX, C, USENET, and
   microcomputer-based jargon were added at that time.

   Version 2.9.6, Aug 16 1991: corresponds to reproduction copy for book.
   This version had 18952 lines, 148629 words, 975551 characters, and
   1702 entries.

   Version 2.9.7, Oct 28 1991: first markup for hypertext browser. This
   version had 19432 lines, 152132 words, 999595 characters, and 1750
   entries.

   Version 2.9.8, Jan 01 1992: first public release since the book,
   including over fifty new entries and numerous corrections/additions to
   old ones. Packaged with version 1.1 of vh(1) hypertext reader. This
   version had 19509 lines, 153108 words, 1006023 characters, and 1760
   entries.

   Version 2.9.9, Apr 01 1992: folded in XEROX PARC lexicon. This version
   had 20298 lines, 159651 words, 1048909 characters, and 1821 entries.

   Version 2.9.10, Jul 01 1992: lots of new historical material. This
   version had 21349 lines, 168330 words, 1106991 characters, and 1891
   entries.

   Version 2.9.11, Jan 01 1993: lots of new historical material. This
   version had 21725 lines, 171169 words, 1125880 characters, and 1922
   entries.

   Version 2.9.12, May 10 1993: a few new entries & changes, marginal
   MUD/IRC slang and some borderline techspeak removed, all in
   preparation for 2nd Edition of TNHD. This version had 22238 lines,
   175114 words, 1152467 characters, and 1946 entries.

   Version 3.0.0, Jul 27 1993: manuscript freeze for 2nd edition of TNHD.
   This version had 22548 lines, 177520 words, 1169372 characters, and
   1961 entries.

   Version 3.1.0, Oct 15 1994: interim release to test WWW conversion.
   This version had 23197 lines, 181001 words, 1193818 characters, and
   1990 entries.

   Version 3.2.0, Mar 15 1995: Spring 1995 update. This version had 23822
   lines, 185961 words, 1226358 characters, and 2031 entries.

   Version 3.3.0, Jan 20 1996: Winter 1996 update. This version had 24055
   lines, 187957 words, 1239604 characters, and 2045 entries.

   Version 3.3.1, Jan 25 1996: Copy-corrected improvement on 3.3.0
   shipped to MIT Press as a step towards TNHD III. This version had
   24147 lines, 188728 words, 1244554 characters, and 2050 entries.

   Version 3.3.2, Mar 20 1996: A number of new entries pursuant on 3.3.2.
   This version had 24442 lines, 190867 words, 1262468 characters, and
   2061 entries.

   Version 3.3.3, Mar 25 1996: Cleanup before TNHD III manuscript freeze.
   This version had 24584 lines, 191932 words, 1269996 characters, and
   2064 entries.

   Version 4.0.0, Jul 25 1996: The actual TNHD III version after
   copy-edit. This version had 24801 lines, 193697 words, 1281402
   characters, and 2067 entries.

   Version 4.1.0, 8 Apr 1999: The Jargon File rides again after three
   years. This version had 25777 lines, 206825 words, 1359992 characters,
   and 2217 entries.

   Version 4.1.1, 18 Apr 1999: Corrections for minor errors in 4.1.0, and
   some new entries. This version had 25921 lines, 208483 words, 1371279
   characters, and 2225 entries.

   Version 4.1.2, 28 Apr 1999: Moving texi2html out of the production
   path. This version had 26006 lines, 209479 words, 1377687 characters,
   and 2225 entries.

   Version 4.1.3, 14 Jun 1999: Minor updates and markup fixes. This
   version had 26108 lines, 210480 words, 1384546 characters, and 2234
   entries.

   Version 4.1.4, 17 Jun 1999: Markup fixes for framed HTML. This version
   had 26117 lines, 210527 words, 1384902 characters, and 2234 entries.

   Version 4.2.0, 31 Jan 2000: Fix processing of URLs. This version had
   26598 lines, 214639 words, 1412243 characters, and 2267 entries.

   Version 4.2.1, 5 Mar 2000: Point release to test new production
   machinery. This version had 26647 lines, 215040 words, 1414942
   characters, and 2269 entries.

   Version 4.2.2, 12 Aug 2000: This version had 27171 lines, 219630
   words, 1444887 characters, and 2302 entries.

   Version numbering: Version numbers should be read as
   major.minor.revision. Major version 1 is reserved for the `old' (ITS)
   Jargon File, jargon-1. Major version 2 encompasses revisions by ESR
   (Eric S. Raymond) with assistance from GLS (Guy L. Steele, Jr.)
   leading up to and including the second paper edition. From now on,
   major version number N.00 will probably correspond to the Nth paper
   edition. Usually later versions will either completely supersede or
   incorporate earlier versions, so there is generally no point in
   keeping old versions around.

   Our thanks to the coauthors of Steele-1983 for oversight and
   assistance, and to the hundreds of Usenetters (too many to name here)
   who contributed entries and encouragement. More thanks go to several
   of the old-timers on the Usenet group alt.folklore.computers, who
   contributed much useful commentary and many corrections and valuable
   historical perspective: Joseph M. Newcomer [53]<jn11+@andrew.cmu.edu>,
   Bernie Cosell [54]<cosell@bbn.com>, Earl Boebert
   [55]<boebert@SCTC.com>, and Joe Morris
   [56]<jcmorris@mwunix.mitre.org>.

   We were fortunate enough to have the aid of some accomplished
   linguists. David Stampe [57]<stampe@hawaii.edu> and Charles Hoequist
   [58]<hoequist@bnr.ca> contributed valuable criticism; Joe Keane
   [59]<jgk@osc.osc.com> helped us improve the pronunciation guides.

   A few bits of this text quote previous works. We are indebted to Brian
   A. LaMacchia [60]<bal@zurich.ai.mit.edu> for obtaining permission for
   us to use material from the "TMRC Dictionary"; also, Don Libes
   [61]<libes@cme.nist.gov> contributed some appropriate material from
   his excellent book "Life With UNIX". We thank Per Lindberg
   [62]<per@front.se>, author of the remarkable Swedish-language 'zine
   "Hackerbladet", for bringing "FOO!" comics to our attention and
   smuggling one of the IBM hacker underground's own baby jargon files
   out to us. Thanks also to Maarten Litmaath for generously allowing the
   inclusion of the ASCII pronunciation guide he formerly maintained. And
   our gratitude to Marc Weiser of XEROX PARC
   [63]<Marc_Weiser.PARC@xerox.com> for securing us permission to quote
   from PARC's own jargon lexicon and shipping us a copy.

   It is a particular pleasure to acknowledge the major contributions of
   Mark Brader [64]<msb@sq.com> and Steve Summit [65]<scs@eskimo.com> to
   the File and Dictionary; they have read and reread many drafts,
   checked facts, caught typos, submitted an amazing number of thoughtful
   comments, and done yeoman service in catching typos and minor usage
   bobbles. Their rare combination of enthusiasm, persistence,
   wide-ranging technical knowledge, and precisionism in matters of
   language has been of invaluable help. Indeed, the sustained volume and
   quality of Mr. Brader's input over several years and several different
   editions has only allowed him to escape co-editor credit by the
   slimmest of margins.

   Finally, George V. Reilly [66]<georgere@microsoft.com> helped with TeX
   arcana and painstakingly proofread some 2.7 and 2.8 versions, and Eric
   Tiedemann [67]<est@thyrsus.com> contributed sage advice throughout on
   rhetoric, amphigory, and philosophunculism.
     _________________________________________________________________

   Node:Jargon Construction, Next:[68]Hacker Writing Style,
   Previous:[69]Revision History, Up:[70]Top

                               How Jargon Works

Jargon Construction

   There are some standard methods of jargonification that became
   established quite early (i.e., before 1970), spreading from such
   sources as the Tech Model Railroad Club, the PDP-1 SPACEWAR hackers,
   and John McCarthy's original crew of LISPers. These include verb
   doubling, soundalike slang, the `-P' convention, overgeneralization,
   spoken inarticulations, and anthropomorphization. Each is discussed
   below. We also cover the standard comparatives for design quality.

   Of these six, verb doubling, overgeneralization, anthropomorphization,
   and (especially) spoken inarticulations have become quite general; but
   soundalike slang is still largely confined to MIT and other large
   universities, and the `-P' convention is found only where LISPers
   flourish.
     * [71]Verb Doubling: Doubling a verb may change its semantics
     * [72]Soundalike Slang: Punning jargon
     * [73]The -P convention: A LISPy way to form questions
     * [74]Overgeneralization: Standard abuses of grammar
     * [75]Spoken Inarticulations: Sighing and <*sigh*>ing
     * [76]Anthropomorphization: Homunculi, daemons, and confused
       programs
     * [77]Comparatives: Standard comparatives for design quality
     _________________________________________________________________

   Node:Verb Doubling, Next:[78]Soundalike Slang, Up:[79]Jargon
   Construction

  Verb Doubling

   A standard construction in English is to double a verb and use it as
   an exclamation, such as "Bang, bang!" or "Quack, quack!". Most of
   these are names for noises. Hackers also double verbs as a concise,
   sometimes sarcastic comment on what the implied subject does. Also, a
   doubled verb is often used to terminate a conversation, in the process
   remarking on the current state of affairs or what the speaker intends
   to do next. Typical examples involve [80]win, [81]lose, [82]hack,
   [83]flame, [84]barf, [85]chomp:

     "The disk heads just crashed." "Lose, lose."
     "Mostly he talked about his latest crock. Flame, flame."
     "Boy, what a bagbiter! Chomp, chomp!"

   Some verb-doubled constructions have special meanings not immediately
   obvious from the verb. These have their own listings in the lexicon.

   The [86]Usenet culture has one tripling convention unrelated to this;
   the names of `joke' topic groups often have a tripled last element.
   The first and paradigmatic example was alt.swedish.chef.bork.bork.bork
   (a "Muppet Show" reference); other infamous examples have included:

     alt.french.captain.borg.borg.borg
     alt.wesley.crusher.die.die.die
     comp.unix.internals.system.calls.brk.brk.brk
     sci.physics.edward.teller.boom.boom.boom
     alt.sadistic.dentists.drill.drill.drill
     _________________________________________________________________

   Node:Soundalike Slang, Next:[87]The -P convention, Previous:[88]Verb
   Doubling, Up:[89]Jargon Construction

  Soundalike slang

   Hackers will often make rhymes or puns in order to convert an ordinary
   word or phrase into something more interesting. It is considered
   particularly [90]flavorful if the phrase is bent so as to include some
   other jargon word; thus the computer hobbyist magazine "Dr. Dobb's
   Journal" is almost always referred to among hackers as `Dr. Frob's
   Journal' or simply `Dr. Frob's'. Terms of this kind that have been in
   fairly wide use include names for newspapers:
    Boston Herald => Horrid (or Harried)
    Boston Globe => Boston Glob
    Houston (or San Francisco) Chronicle
           => the Crocknicle (or the Comical)
    New York Times => New York Slime
    Wall Street Journal => Wall Street Urinal

   However, terms like these are often made up on the spur of the moment.
   Standard examples include:
    Data General => Dirty Genitals
    IBM 360 => IBM Three-Sickly
    Government Property --- Do Not Duplicate (on keys)
            => Government Duplicity --- Do Not Propagate
    for historical reasons => for hysterical raisins
    Margaret Jacks Hall (the CS building at Stanford)
            => Marginal Hacks Hall
    Microsoft => Microsloth
    Internet Explorer => Internet Exploiter

   This is not really similar to the Cockney rhyming slang it has been
   compared to in the past, because Cockney substitutions are opaque
   whereas hacker punning jargon is intentionally transparent.
     _________________________________________________________________

   Node:The -P convention, Next:[91]Overgeneralization,
   Previous:[92]Soundalike Slang, Up:[93]Jargon Construction

  The `-P' convention

   Turning a word into a question by appending the syllable `P'; from the
   LISP convention of appending the letter `P' to denote a predicate (a
   boolean-valued function). The question should expect a yes/no answer,
   though it needn't. (See [94]T and [95]NIL.)
    At dinnertime:

          Q: ``Foodp?''

          A: ``Yeah, I'm pretty hungry.'' or ``T!''


    At any time:

          Q: ``State-of-the-world-P?''

          A: (Straight) ``I'm about to go home.''

          A: (Humorous) ``Yes, the world has a state.''


    On the phone to Florida:

          Q: ``State-p Florida?''

          A: ``Been reading JARGON.TXT again, eh?''

   [One of the best of these is a [96]Gosperism. Once, when we were at a
   Chinese restaurant, Bill Gosper wanted to know whether someone would
   like to share with him a two-person-sized bowl of soup. His inquiry
   was: "Split-p soup?" -- GLS]
     _________________________________________________________________

   Node:Overgeneralization, Next:[97]Spoken Inarticulations,
   Previous:[98]The -P convention, Up:[99]Jargon Construction

  Overgeneralization

   A very conspicuous feature of jargon is the frequency with which
   techspeak items such as names of program tools, command language
   primitives, and even assembler opcodes are applied to contexts outside
   of computing wherever hackers find amusing analogies to them. Thus (to
   cite one of the best-known examples) Unix hackers often [100]grep for
   things rather than searching for them. Many of the lexicon entries are
   generalizations of exactly this kind.

   Hackers enjoy overgeneralization on the grammatical level as well.
   Many hackers love to take various words and add the wrong endings to
   them to make nouns and verbs, often by extending a standard rule to
   nonuniform cases (or vice versa). For example, because

     porous => porosity
     generous => generosity

   hackers happily generalize:

     mysterious => mysteriosity
     ferrous => ferrosity
     obvious => obviosity
     dubious => dubiosity

   Another class of common construction uses the suffix `-itude' to
   abstract a quality from just about any adjective or noun. This usage
   arises especially in cases where mainstream English would perform the
   same abstraction through `-iness' or `-ingness'. Thus:

     win => winnitude (a common exclamation)
     loss => lossitude
     cruft => cruftitude
     lame => lameitude

   Some hackers cheerfully reverse this transformation; they argue, for
   example, that the horizontal degree lines on a globe ought to be
   called `lats' -- after all, they're measuring latitude!

   Also, note that all nouns can be verbed. E.g.: "All nouns can be
   verbed", "I'll mouse it up", "Hang on while I clipboard it over", "I'm
   grepping the files". English as a whole is already heading in this
   direction (towards pure-positional grammar like Chinese); hackers are
   simply a bit ahead of the curve.

   The suffix "-full" can also be applied in generalized and fanciful
   ways, as in "As soon as you have more than one cachefull of data, the
   system starts thrashing," or "As soon as I have more than one headfull
   of ideas, I start writing it all down." A common use is "screenfull",
   meaning the amount of text that will fit on one screen, usually in
   text mode where you have no choice as to character size. Another
   common form is "bufferfull".

   However, hackers avoid the unimaginative verb-making techniques
   characteristic of marketroids, bean-counters, and the Pentagon; a
   hacker would never, for example, `productize', `prioritize', or
   `securitize' things. Hackers have a strong aversion to bureaucratic
   bafflegab and regard those who use it with contempt.

   Similarly, all verbs can be nouned. This is only a slight
   overgeneralization in modern English; in hackish, however, it is good
   form to mark them in some standard nonstandard way. Thus:

     win => winnitude, winnage
     disgust => disgustitude
     hack => hackification

   Further, note the prevalence of certain kinds of nonstandard plural
   forms. Some of these go back quite a ways; the TMRC Dictionary
   includes an entry which implies that the plural of `mouse' is
   [101]meeces, and notes that the defined plural of `caboose' is
   `cabeese'. This latter has apparently been standard (or at least a
   standard joke) among railfans (railroad enthusiasts) for many years.

   On a similarly Anglo-Saxon note, almost anything ending in `x' may
   form plurals in `-xen' (see [102]VAXen and [103]boxen in the main
   text). Even words ending in phonetic /k/ alone are sometimes treated
   this way; e.g., `soxen' for a bunch of socks. Other funny plurals are
   `frobbotzim' for the plural of `frobbozz' (see [104]frobnitz) and
   `Unices' and `Twenices' (rather than `Unixes' and `Twenexes'; see
   [105]Unix, [106]TWENEX in main text). But note that `Twenexen' was
   never used, and `Unixen' was not sighted in the wild until the year
   2000, thirty years after it might logically have come into use; it has
   been suggested that this is because `-ix' and `-ex' are Latin singular
   endings that attract a Latinate plural. Finally, it has been suggested
   to general approval that the plural of `mongoose' ought to be
   `polygoose'.

   The pattern here, as with other hackish grammatical quirks, is
   generalization of an inflectional rule that in English is either an
   import or a fossil (such as the Hebrew plural ending `-im', or the
   Anglo-Saxon plural suffix `-en') to cases where it isn't normally
   considered to apply.

   This is not `poor grammar', as hackers are generally quite well aware
   of what they are doing when they distort the language. It is
   grammatical creativity, a form of playfulness. It is done not to
   impress but to amuse, and never at the expense of clarity.
     _________________________________________________________________

   Node:Spoken Inarticulations, Next:[107]Anthropomorphization,
   Previous:[108]Overgeneralization, Up:[109]Jargon Construction

  Spoken inarticulations

   Words such as `mumble', `sigh', and `groan' are spoken in places where
   their referent might more naturally be used. It has been suggested
   that this usage derives from the impossibility of representing such
   noises on a comm link or in electronic mail, MUDs, and IRC channels
   (interestingly, the same sorts of constructions have been showing up
   with increasing frequency in comic strips). Another expression
   sometimes heard is "Complain!", meaning "I have a complaint!"
     _________________________________________________________________

   Node:Anthropomorphization, Next:[110]Comparatives,
   Previous:[111]Spoken Inarticulations, Up:[112]Jargon Construction

  Anthropomorphization

   Semantically, one rich source of jargon constructions is the hackish
   tendency to anthropomorphize hardware and software. English purists
   and academic computer scientists frequently look down on others for
   anthropomorphizing hardware and software, considering this sort of
   behavior to be characteristic of naive misunderstanding. But most
   hackers anthropomorphize freely, frequently describing program
   behavior in terms of wants and desires.

   Thus it is common to hear hardware or software talked about as though
   it has homunculi talking to each other inside it, with intentions and
   desires. Thus, one hears "The protocol handler got confused", or that
   programs "are trying" to do things, or one may say of a routine that
   "its goal in life is to X". One even hears explanations like "... and
   its poor little brain couldn't understand X, and it died." Sometimes
   modelling things this way actually seems to make them easier to
   understand, perhaps because it's instinctively natural to think of
   anything with a really complex behavioral repertoire as `like a
   person' rather than `like a thing'.

   At first glance, to anyone who understands how these programs actually
   work, this seems like an absurdity. As hackers are among the people
   who know best how these phenomena work, it seems odd that they would
   use language that seemds to ascribe conciousness to them. The mind-set
   behind this tendency thus demands examination.

   The key to understanding this kind of usage is that it isn't done in a
   naive way; hackers don't personalize their stuff in the sense of
   feeling empathy with it, nor do they mystically believe that the
   things they work on every day are `alive'. To the contrary: hackers
   who anthropomorphize are expressing not a vitalistic view of program
   behavior but a mechanistic view of human behavior.

   Almost all hackers subscribe to the mechanistic, materialistic
   ontology of science (this is in practice true even of most of the
   minority with contrary religious theories). In this view, people are
   biological machines - consciousness is an interesting and valuable
   epiphenomenon, but mind is implemented in machinery which is not
   fundamentally different in information-processing capacity from
   computers.

   Hackers tend to take this a step further and argue that the difference
   between a substrate of CHON atoms and water and a substrate of silicon
   and metal is a relatively unimportant one; what matters, what makes a
   thing `alive', is information and richness of pattern. This is animism
   from the flip side; it implies that humans and computers and dolphins
   and rocks are all machines exhibiting a continuum of modes of
   `consciousness' according to their information-processing capacity.

   Because hackers accept a that a human machine can have intentions, it
   is therefore easy for them to ascribe consciousness and intention to
   complex patterned systems such as computers. If consciousness is
   mechanical, it is neither more or less absurd to say that "The program
   wants to go into an infinite loop" than it is to say that "I want to
   go eat some chocolate" - and even defensible to say that "The stone,
   once dropped, wants to move towards the center of the earth".

   This viewpoint has respectable company in academic philosophy. Daniel
   Dennett organizes explanations of behavior using three stances: the
   "physical stance" (thing-to-be-explained as a physical object), the
   "design stance" (thing-to-be-explained as an artifact), and the
   "intentional stance" (thing-to-be-explained as an agent with desires
   and intentions). Which stances are appropriate is a matter not of
   truth but of utility. Hackers typically view simple programs from the
   design stance, but more complex ones are modelled using the
   intentional stance.
     _________________________________________________________________

   Node:Comparatives, Previous:[113]Anthropomorphization, Up:[114]Jargon
   Construction

  Comparatives

   Finally, note that many words in hacker jargon have to be understood
   as members of sets of comparatives. This is especially true of the
   adjectives and nouns used to describe the beauty and functional
   quality of code. Here is an approximately correct spectrum:

     monstrosity brain-damage screw bug lose misfeature
     crock kluge hack win feature elegance perfection

   The last is spoken of as a mythical absolute, approximated but never
   actually attained. Another similar scale is used for describing the
   reliability of software:

     broken flaky dodgy fragile brittle
     solid robust bulletproof armor-plated

   Note, however, that `dodgy' is primarily Commonwealth Hackish (it is
   rare in the U.S.) and may change places with `flaky' for some
   speakers.

   Coinages for describing [115]lossage seem to call forth the very
   finest in hackish linguistic inventiveness; it has been truly said
   that hackers have even more words for equipment failures than Yiddish
   has for obnoxious people.
     _________________________________________________________________

   Node:Hacker Writing Style, Next:[116]Email Quotes,
   Previous:[117]Jargon Construction, Up:[118]Top

Hacker Writing Style

   We've already seen that hackers often coin jargon by overgeneralizing
   grammatical rules. This is one aspect of a more general fondness for
   form-versus-content language jokes that shows up particularly in
   hackish writing. One correspondent reports that he consistently
   misspells `wrong' as `worng'. Others have been known to criticize
   glitches in Jargon File drafts by observing (in the mode of Douglas
   Hofstadter) "This sentence no verb", or "Too repetetetive", or "Bad
   speling", or "Incorrectspa cing." Similarly, intentional spoonerisms
   are often made of phrases relating to confusion or things that are
   confusing; `dain bramage' for `brain damage' is perhaps the most
   common (similarly, a hacker would be likely to write "Excuse me, I'm
   cixelsyd today", rather than "I'm dyslexic today"). This sort of thing
   is quite common and is enjoyed by all concerned.

   Hackers tend to use quotes as balanced delimiters like parentheses,
   much to the dismay of American editors. Thus, if "Jim is going" is a
   phrase, and so are "Bill runs" and "Spock groks", then hackers
   generally prefer to write: "Jim is going", "Bill runs", and "Spock
   groks". This is incorrect according to standard American usage (which
   would put the continuation commas and the final period inside the
   string quotes); however, it is counter-intuitive to hackers to
   mutilate literal strings with characters that don't belong in them.
   Given the sorts of examples that can come up in discussions of
   programming, American-style quoting can even be grossly misleading.
   When communicating command lines or small pieces of code, extra
   characters can be a real pain in the neck.

   Consider, for example, a sentence in a [119]vi tutorial that looks
   like this:

     Then delete a line from the file by typing "dd".

   Standard usage would make this

     Then delete a line from the file by typing "dd."

   but that would be very bad -- because the reader would be prone to
   type the string d-d-dot, and it happens that in vi(1) dot repeats the
   last command accepted. The net result would be to delete two lines!

   The Jargon File follows hackish usage throughout.

   Interestingly, a similar style is now preferred practice in Great
   Britain, though the older style (which became established for
   typographical reasons having to do with the aesthetics of comma and
   quotes in typeset text) is still accepted there. "Hart's Rules" and
   the "Oxford Dictionary for Writers and Editors" call the hacker-like
   style `new' or `logical' quoting. This returns British English to the
   style Latin languages (including Spanish, French, Italian, Catalan)
   have been using all along.

   Another hacker habit is a tendency to distinguish between `scare'
   quotes and `speech' quotes; that is, to use British-style single
   quotes for marking and reserve American-style double quotes for actual
   reports of speech or text included from elsewhere. Interestingly, some
   authorities describe this as correct general usage, but mainstream
   American English has gone to using double-quotes indiscriminately
   enough that hacker usage appears marked [and, in fact, I thought this
   was a personal quirk of mine until I checked with Usenet --ESR]. One
   further permutation that is definitely not standard is a hackish
   tendency to do marking quotes by using apostrophes (single quotes) in
   pairs; that is, 'like this'. This is modelled on string and character
   literal syntax in some programming languages (reinforced by the fact
   that many character-only terminals display the apostrophe in
   typewriter style, as a vertical single quote).

   One quirk that shows up frequently in the [120]email style of Unix
   hackers in particular is a tendency for some things that are normally
   all-lowercase (including usernames and the names of commands and C
   routines) to remain uncapitalized even when they occur at the
   beginning of sentences. It is clear that, for many hackers, the case
   of such identifiers becomes a part of their internal representation
   (the `spelling') and cannot be overridden without mental effort (an
   appropriate reflex because Unix and C both distinguish cases and
   confusing them can lead to [121]lossage). A way of escaping this
   dilemma is simply to avoid using these constructions at the beginning
   of sentences.

   There seems to be a meta-rule behind these nonstandard hackerisms to
   the effect that precision of expression is more important than
   conformance to traditional rules; where the latter create ambiguity or
   lose information they can be discarded without a second thought. It is
   notable in this respect that other hackish inventions (for example, in
   vocabulary) also tend to carry very precise shades of meaning even
   when constructed to appear slangy and loose. In fact, to a hacker, the
   contrast between `loose' form and `tight' content in jargon is a
   substantial part of its humor!

   Hackers have also developed a number of punctuation and emphasis
   conventions adapted to single-font all-ASCII communications links, and
   these are occasionally carried over into written documents even when
   normal means of font changes, underlining, and the like are available.

   One of these is that TEXT IN ALL CAPS IS INTERPRETED AS `LOUD', and
   this becomes such an ingrained synesthetic reflex that a person who
   goes to caps-lock while in [122]talk mode may be asked to "stop
   shouting, please, you're hurting my ears!".

   Also, it is common to use bracketing with unusual characters to
   signify emphasis. The asterisk is most common, as in "What the
   *hell*?" even though this interferes with the common use of the
   asterisk suffix as a footnote mark. The underscore is also common,
   suggesting underlining (this is particularly common with book titles;
   for example, "It is often alleged that Joe Haldeman wrote
   _The_Forever_War_ as a rebuttal to Robert Heinlein's earlier novel of
   the future military, _Starship_Troopers_."). Other forms exemplified
   by "=hell=", "\hell/", or "/hell/" are occasionally seen (it's claimed
   that in the last example the first slash pushes the letters over to
   the right to make them italic, and the second keeps them from falling
   over). On FidoNet, you might see #bright# and ^dark^ text, which was
   actually interpreted by some reader software. Finally, words may also
   be emphasized L I K E T H I S, or by a series of carets (^) under them
   on the next line of the text.

   There is a semantic difference between *emphasis like this* (which
   emphasizes the phrase as a whole), and *emphasis* *like* *this* (which
   suggests the writer speaking very slowly and distinctly, as if to a
   very young child or a mentally impaired person). Bracketing a word
   with the `*' character may also indicate that the writer wishes
   readers to consider that an action is taking place or that a sound is
   being made. Examples: *bang*, *hic*, *ring*, *grin*, *kick*, *stomp*,
   *mumble*.

   One might also see the above sound effects as <bang>, <hic>, <ring>,
   <grin>, <kick>, <stomp>, <mumble>. This use of angle brackets to mark
   their contents originally derives from conventions used in [123]BNF,
   but since about 1993 it has been reinforced by the HTML markup used on
   the World Wide Web.

   Angle-bracket enclosure is also used to indicate that a term stands
   for some [124]random member of a larger class (this is straight from
   [125]BNF). Examples like the following are common:
So this <ethnic> walks into a bar one day...

   There is also an accepted convention for `writing under erasure'; the
   text
Be nice to this fool^H^H^H^Hgentleman,
he's visiting from corporate HQ.

   reads roughly as "Be nice to this fool, er, gentleman...", with irony
   emphasized. The digraph ^H is often used as a print representation for
   a backspace, and was actually very visible on old-style printing
   terminals. As the text was being composed the characters would be
   echoed and printed immediately, and when a correction was made the
   backspace keystrokes would be echoed with the string '^H'. Of course,
   the final composed text would have no trace of the backspace
   characters (or the original erroneous text).

   This convention parallels (and may have been influenced by) the ironic
   use of `slashouts' in science-fiction fanzines.

   A related habit uses editor commands to signify corrections to
   previous text. This custom faded in email as more mailers got good
   editing capabilities, only to tale on new life on IRCs and other
   line-based chat systems.
I've seen that term used on alt.foobar often.
Send it to Erik for the File.
Oops...s/Erik/Eric/.

   The s/Erik/Eric/ says "change Erik to Eric in the preceding". This
   syntax is borrowed from the Unix editing tools ed and sed, but is
   widely recognized by non-Unix hackers as well.

   In a formula, * signifies multiplication but two asterisks in a row
   are a shorthand for exponentiation (this derives from FORTRAN). Thus,
   one might write 2 ** 8 = 256.

   Another notation for exponentiation one sees more frequently uses the
   caret (^, ASCII 1011110); one might write instead 2^8 = 256. This goes
   all the way back to Algol-60, which used the archaic ASCII `up-arrow'
   that later became the caret; this was picked up by Kemeny and Kurtz's
   original BASIC, which in turn influenced the design of the bc(1) and
   dc(1) Unix tools, which have probably done most to reinforce the
   convention on Usenet. (TeX math mode also uses ^ for exponention.) The
   notation is mildly confusing to C programmers, because ^ means bitwise
   exclusive-or in C. Despite this, it was favored 3:1 over ** in a
   late-1990 snapshot of Usenet. It is used consistently in this lexicon.

   In on-line exchanges, hackers tend to use decimal forms or improper
   fractions (`3.5' or `7/2') rather than `typewriter style' mixed
   fractions (`3-1/2'). The major motive here is probably that the former
   are more readable in a monospaced font, together with a desire to
   avoid the risk that the latter might be read as `three minus
   one-half'. The decimal form is definitely preferred for fractions with
   a terminating decimal representation; there may be some cultural
   influence here from the high status of scientific notation.

   Another on-line convention, used especially for very large or very
   small numbers, is taken from C (which derived it from FORTRAN). This
   is a form of `scientific notation' using `e' to replace `*10^'; for
   example, one year is about 3e7 seconds long.

   The tilde (~) is commonly used in a quantifying sense of
   `approximately'; that is, ~50 means `about fifty'.

   On Usenet and in the [126]MUD world, common C boolean, logical, and
   relational operators such as |, &, ||, &&, !, ==, !=, >, <, >=, and =<
   are often combined with English. The Pascal not-equals, <>, is also
   recognized, and occasionally one sees /= for not-equals (from Ada,
   Common Lisp, and Fortran 90). The use of prefix `!' as a loose synonym
   for `not-' or `no-' is particularly common; thus, `!clue' is read
   `no-clue' or `clueless'.

   A related practice borrows syntax from preferred programming languages
   to express ideas in a natural-language text. For example, one might
   see the following:
In <jrh578689@thudpucker.com> J. R. Hacker wrote:
>I recently had occasion to field-test the Snafu
>Systems 2300E adaptive gonkulator.  The price was
>right, and the racing stripe on the case looked
>kind of neat, but its performance left something
>to be desired.

Yeah, I tried one out too.

#ifdef FLAME
Hasn't anyone told those idiots that you can't get
decent bogon suppression with AFJ filters at today's
net volumes?
#endif /* FLAME */

I guess they figured the price premium for true
frame-based semantic analysis was too high.
Unfortunately, it's also the only workable approach.
I wouldn't recommend purchase of this product unless
you're on a *very* tight budget.

#include <disclaimer.h>
--
                 == Frank Foonly (Fubarco Systems)

   In the above, the #ifdef/#endif pair is a conditional compilation
   syntax from C; here, it implies that the text between (which is a
   [127]flame) should be evaluated only if you have turned on (or defined
   on) the switch FLAME. The #include at the end is C for "include
   standard disclaimer here"; the `standard disclaimer' is understood to
   read, roughly, "These are my personal opinions and not to be construed
   as the official position of my employer."

   The top section in the example, with > at the left margin, is an
   example of an inclusion convention we'll discuss below.

   More recently, following on the huge popularity of the World Wide Web,
   pseudo-HTML markup has become popular for similar purposes:
<flame>
Your father was a hamster and your mother smelt of elderberries!
</flame>

   You'll even see this with an HTML-style modifier:
<flame intensity="100%">
You seem well-suited for a career in government.
</flame>

   Another recent (late 1990s) construction now common on USENET seems to
   be borrowed from Perl. It consists of using a dollar sign before an
   uppercased form of a word or acronym to suggest any [128]random member
   of the class indicated by the word. Thus: `$PHB' means "any random
   member of the class `Pointy-Haired Boss'".

   Hackers also mix letters and numbers more freely than in mainstream
   usage. In particular, it is good hackish style to write a digit
   sequence where you intend the reader to understand the text string
   that names that number in English. So, hackers prefer to write `1970s'
   rather than `nineteen-seventies' or `1970's' (the latter looks like a
   possessive).

   It should also be noted that hackers exhibit much less reluctance to
   use multiply-nested parentheses than is normal in English. Part of
   this is almost certainly due to influence from LISP (which uses deeply
   nested parentheses (like this (see?)) in its syntax a lot), but it has
   also been suggested that a more basic hacker trait of enjoying playing
   with complexity and pushing systems to their limits is in operation.

   Finally, it is worth mentioning that many studies of on-line
   communication have shown that electronic links have a de-inhibiting
   effect on people. Deprived of the body-language cues through which
   emotional state is expressed, people tend to forget everything about
   other parties except what is presented over that ASCII link. This has
   both good and bad effects. A good one is that it encourages honesty
   and tends to break down hierarchical authority relationships; a bad
   one is that it may encourage depersonalization and gratuitous
   rudeness. Perhaps in response to this, experienced netters often
   display a sort of conscious formal politesse in their writing that has
   passed out of fashion in other spoken and written media (for example,
   the phrase "Well said, sir!" is not uncommon).

   Many introverted hackers who are next to inarticulate in person
   communicate with considerable fluency over the net, perhaps precisely
   because they can forget on an unconscious level that they are dealing
   with people and thus don't feel stressed and anxious as they would
   face to face.

   Though it is considered gauche to publicly criticize posters for poor
   spelling or grammar, the network places a premium on literacy and
   clarity of expression. It may well be that future historians of
   literature will see in it a revival of the great tradition of personal
   letters as art.
     _________________________________________________________________

   Node:Email Quotes, Next:[129]Hacker Speech Style, Previous:[130]Hacker
   Writing Style, Up:[131]Top

Email Quotes and Inclusion Conventions

   One area where conventions for on-line writing are still in some flux
   is the marking of included material from earlier messages -- what
   would be called `block quotations' in ordinary English. From the usual
   typographic convention employed for these (smaller font at an extra
   indent), there derived a practice of included text being indented by
   one ASCII TAB (0001001) character, which under Unix and many other
   environments gives the appearance of an 8-space indent.

   Early mail and netnews readers had no facility for including messages
   this way, so people had to paste in copy manually. BSD Mail(1) was the
   first message agent to support inclusion, and early Usenetters
   emulated its style. But the TAB character tended to push included text
   too far to the right (especially in multiply nested inclusions),
   leading to ugly wraparounds. After a brief period of confusion (during
   which an inclusion leader consisting of three or four spaces became
   established in EMACS and a few mailers), the use of leading > or >
   became standard, perhaps owing to its use in ed(1) to display tabs
   (alternatively, it may derive from the > that some early Unix mailers
   used to quote lines starting with "From" in text, so they wouldn't
   look like the beginnings of new message headers). Inclusions within
   inclusions keep their > leaders, so the `nesting level' of a quotation
   is visually apparent.

   The practice of including text from the parent article when posting a
   followup helped solve what had been a major nuisance on Usenet: the
   fact that articles do not arrive at different sites in the same order.
   Careless posters used to post articles that would begin with, or even
   consist entirely of, "No, that's wrong" or "I agree" or the like. It
   was hard to see who was responding to what. Consequently, around 1984,
   new news-posting software evolved a facility to automatically include
   the text of a previous article, marked with "> " or whatever the
   poster chose. The poster was expected to delete all but the relevant
   lines. The result has been that, now, careless posters post articles
   containing the entire text of a preceding article, followed only by
   "No, that's wrong" or "I agree".

   Many people feel that this cure is worse than the original disease,
   and there soon appeared newsreader software designed to let the reader
   skip over included text if desired. Today, some posting software
   rejects articles containing too high a proportion of lines beginning
   with `>' -- but this too has led to undesirable workarounds, such as
   the deliberate inclusion of zero-content filler lines which aren't
   quoted and thus pull the message below the rejection threshold.

   Because the default mailers supplied with Unix and other operating
   systems haven't evolved as quickly as human usage, the older
   conventions using a leading TAB or three or four spaces are still
   alive; however, >-inclusion is now clearly the prevalent form in both
   netnews and mail.

   Inclusion practice is still evolving, and disputes over the `correct'
   inclusion style occasionally lead to [132]holy wars.

   Most netters view an inclusion as a promise that comment on it will
   immediately follow. The preferred, conversational style looks like
   this,
     > relevant excerpt 1
     response to excerpt
     > relevant excerpt 2
     response to excerpt
     > relevant excerpt 3
     response to excerpt

   or for short messages like this:
     > entire message
     response to message

   Thanks to poor design of some PC-based mail agents, one will
   occasionally see the entire quoted message after the response, like
   this
     response to message
     > entire message

   but this practice is strongly deprecated.

   Though > remains the standard inclusion leader, | is occasionally used
   for extended quotations where original variations in indentation are
   being retained (one mailer even combines these and uses |>). One also
   sees different styles of quoting a number of authors in the same
   message: one (deprecated because it loses information) uses a leader
   of >  for everyone, another (the most common) is > > > > , > > > ,
   etc. (or >>>> , >>>, etc., depending on line length and nesting depth)
   reflecting the original order of messages, and yet another is to use a
   different citation leader for each author, say > , : , | , }
   (preserving nesting so that the inclusion order of messages is still
   apparent, or tagging the inclusions with authors' names). Yet another
   style is to use each poster's initials (or login name) as a citation
   leader for that poster.

   Occasionally one sees a #  leader used for quotations from
   authoritative sources such as standards documents; the intended
   allusion is to the root prompt (the special Unix command prompt issued
   when one is running as the privileged super-user).
     _________________________________________________________________

   Node:Hacker Speech Style, Next:[133]International Style,
   Previous:[134]Email Quotes, Up:[135]Top

Hacker Speech Style

   Hackish speech generally features extremely precise diction, careful
   word choice, a relatively large working vocabulary, and relatively
   little use of contractions or street slang. Dry humor, irony, puns,
   and a mildly flippant attitude are highly valued -- but an underlying
   seriousness and intelligence are essential. One should use just enough
   jargon to communicate precisely and identify oneself as a member of
   the culture; overuse of jargon or a breathless, excessively gung-ho
   attitude is considered tacky and the mark of a loser.

   This speech style is a variety of the precisionist English normally
   spoken by scientists, design engineers, and academics in technical
   fields. In contrast with the methods of jargon construction, it is
   fairly constant throughout hackerdom.

   It has been observed that many hackers are confused by negative
   questions -- or, at least, that the people to whom they are talking
   are often confused by the sense of their answers. The problem is that
   they have done so much programming that distinguishes between
if (going) ...

   and
if (!going) ...

   that when they parse the question "Aren't you going?" it may seem to
   be asking the opposite question from "Are you going?", and so to merit
   an answer in the opposite sense. This confuses English-speaking
   non-hackers because they were taught to answer as though the negative
   part weren't there. In some other languages (including Russian,
   Chinese, and Japanese) the hackish interpretation is standard and the
   problem wouldn't arise. Hackers often find themselves wishing for a
   word like French `si', German `doch', or Dutch `jawel' - a word with
   which one could unambiguously answer `yes' to a negative question.
   (See also [136]mu)

   For similar reasons, English-speaking hackers almost never use double
   negatives, even if they live in a region where colloquial usage allows
   them. The thought of uttering something that logically ought to be an
   affirmative knowing it will be misparsed as a negative tends to
   disturb them.

   In a related vein, hackers sometimes make a game of answering
   questions containing logical connectives with a strictly literal
   rather than colloquial interpretation. A non-hacker who is indelicate
   enough to ask a question like "So, are you working on finding that bug
   now or leaving it until later?" is likely to get the perfectly correct
   answer "Yes!" (that is, "Yes, I'm doing it either now or later, and
   you didn't ask which!").
     _________________________________________________________________

   Node:International Style, Next:[137]Lamer-speak, Previous:[138]Hacker
   Speech Style, Up:[139]Top

International Style

   Although the Jargon File remains primarily a lexicon of hacker usage
   in American English, we have made some effort to get input from
   abroad. Though the hacker-speak of other languages often uses
   translations of jargon from English (often as transmitted to them by
   earlier Jargon File versions!), the local variations are interesting,
   and knowledge of them may be of some use to travelling hackers.

   There are some references herein to `Commonwealth hackish'. These are
   intended to describe some variations in hacker usage as reported in
   the English spoken in Great Britain and the Commonwealth (Canada,
   Australia, India, etc. -- though Canada is heavily influenced by
   American usage). There is also an entry on [140]Commonwealth Hackish
   reporting some general phonetic and vocabulary differences from U.S.
   hackish.

   Hackers in Western Europe and (especially) Scandinavia report that
   they often use a mixture of English and their native languages for
   technical conversation. Occasionally they develop idioms in their
   English usage that are influenced by their native-language styles.
   Some of these are reported here.

   On the other hand, English often gives rise to grammatical and
   vocabulary mutations in the native language. For example, Italian
   hackers often use the nonexistent verbs `scrollare' (to scroll) and
   `deletare' (to delete) rather than native Italian `scorrere' and
   `cancellare'. Similarly, the English verb `to hack' has been seen
   conjugated in Swedish. In German, many Unix terms in English are
   casually declined as if they were German verbs - thus:
   mount/mounten/gemountet; grep/grepen/gegrept; fork/forken/geforkt;
   core dump/core-dumpen, core-gedumpt. And Spanish-speaking hackers use
   `linkar' (to link), `debugear' (to debug), and `lockear' (to lock).

   European hackers report that this happens partly because the English
   terms make finer distinctions than are available in their native
   vocabularies, and partly because deliberate language-crossing makes
   for amusing wordplay.

   A few notes on hackish usages in Russian have been added where they
   are parallel with English idioms and thus comprehensible to
   English-speakers.
     _________________________________________________________________

   Node:Lamer-speak, Next:[141]Pronunciation Guide,
   Previous:[142]International Style, Up:[143]Top

Crackers, Phreaks, and Lamers

   From the early 1980s onward, a flourishing culture of local,
   MS-DOS-based bulletin boards developed separately from Internet
   hackerdom. The BBS culture has, as its seamy underside, a stratum of
   `pirate boards' inhabited by [144]crackers, phone phreaks, and
   [145]warez d00dz. These people (mostly teenagers running IBM-PC clones
   from their bedrooms) have developed their own characteristic jargon,
   heavily influenced by skateboard lingo and underground-rock slang.

   Though crackers often call themselves `hackers', they aren't (they
   typically have neither significant programming ability, nor Internet
   expertise, nor experience with UNIX or other true multi-user systems).
   Their vocabulary has little overlap with hackerdom's. Nevertheless,
   this lexicon covers much of it so the reader will be able to
   understand what goes by on bulletin-board systems.

   Here is a brief guide to cracker and [146]warez d00dz usage:
     * Misspell frequently. The substitutions
     phone => fone
     freak => phreak
       are obligatory.
     * Always substitute `z's for `s's. (i.e. "codes" -> "codez"). The
       substitution of 'z' for 's' has evolved so that a 'z' is bow
       systematically put at the end of words to denote an illegal or
       cracking connection. Examples : Appz, passwordz, passez, utilz,
       MP3z, distroz, pornz, sitez, gamez, crackz, serialz, downloadz,
       FTPz, etc.
     * Type random emphasis characters after a post line (i.e. "Hey
       Dudes!#!$#$!#!$").
     * Use the emphatic `k' prefix ("k-kool", "k-rad", "k-awesome")
       frequently.
     * Abbreviate compulsively ("I got lotsa warez w/ docs").
     * Substitute `0' for `o' ("r0dent", "l0zer").
     * TYPE ALL IN CAPS LOCK, SO IT LOOKS LIKE YOU'RE YELLING ALL THE
       TIME.

   These traits are similar to those of [147]B1FF, who originated as a
   parody of naive [148]BBS users; also of his latter-day equivalent
   [149]Jeff K.. Occasionally, this sort of distortion may be used as
   heavy sarcasm by a real hacker, as in:
    > I got X Windows running under Linux!

    d00d!  u R an 31337 hax0r

   The only practice resembling this in actual hacker usage is the
   substitution of a dollar sign of `s' in names of products or service
   felt to be excessively expensive, e.g. Compu$erve, Micro$oft.

   For further discussion of the pirate-board subculture, see [150]lamer,
   [151]elite, [152]leech, [153]poser, [154]cracker, and especially
   [155]warez d00dz, [156]banner site, [157]ratio site, [158]leech mode.
     _________________________________________________________________

   Node:Pronunciation Guide, Next:[159]Other Lexicon Conventions,
   Previous:[160]Lamer-speak, Up:[161]Top

                            How to Use the Lexicon

Pronunciation Guide

   Pronunciation keys are provided in the jargon listings for all entries
   that are neither dictionary words pronounced as in standard English
   nor obvious compounds thereof. Slashes bracket phonetic
   pronunciations, which are to be interpreted using the following
   conventions:
    1. Syllables are hyphen-separated, except that an accent or
       back-accent follows each accented syllable (the back-accent marks
       a secondary accent in some words of four or more syllables). If no
       accent is given, the word is pronounced with equal accentuation on
       all syllables (this is common for abbreviations).
    2. Consonants are pronounced as in American English. The letter `g'
       is always hard (as in "got" rather than "giant"); `ch' is soft
       ("church" rather than "chemist"). The letter `j' is the sound that
       occurs twice in "judge". The letter `s' is always as in "pass",
       never a z sound. The digraph `kh' is the guttural of "loch" or
       "l'chaim". The digraph 'gh' is the aspirated g+h of "bughouse" or
       "ragheap" (rare in English).
    3. Uppercase letters are pronounced as their English letter names;
       thus (for example) /H-L-L/ is equivalent to /aych el el/. /Z/ may
       be pronounced /zee/ or /zed/ depending on your local dialect.
    4. Vowels are represented as follows:

        /a/
                back, that

        /ah/
                father, palm (see note)

        /ar/
                far, mark

        /aw/
                flaw, caught

        /ay/
                bake, rain

        /e/
                less, men

        /ee/
                easy, ski

        /eir/
                their, software

        /i/
                trip, hit

        /i:/
                life, sky

        /o/
                block, stock (see note)

        /oh/
                flow, sew

        /oo/
                loot, through

        /or/
                more, door

        /ow/
                out, how

        /oy/
                boy, coin

        /uh/
                but, some

        /u/
                put, foot

        /y/
                yet, young

        /yoo/
                few, chew

        /[y]oo/
                /oo/ with optional fronting as in `news' (/nooz/ or
                /nyooz/)

   The glyph /*/ is used for the `schwa' sound of unstressed or occluded
   vowels (the one that is often written with an upside-down `e'). The
   schwa vowel is omitted in syllables containing vocalic r, l, m or n;
   that is, `kitten' and `color' would be rendered /kit'n/ and /kuhl'r/,
   not /kit'*n/ and /kuhl'*r/.

   Note that the above table reflects mainly distinctions found in
   standard American English (that is, the neutral dialect spoken by TV
   network announcers and typical of educated speech in the Upper
   Midwest, Chicago, Minneapolis/St. Paul and Philadelphia). However, we
   separate /o/ from /ah/, which tend to merge in standard American. This
   may help readers accustomed to accents resembling British Received
   Pronunciation.

   The intent of this scheme is to permit as many readers as possible to
   map the pronunciations into their local dialect by ignoring some
   subset of the distinctions we make. Speakers of British RP, for
   example, can smash terminal /r/ and all unstressed vowels. Speakers of
   many varieties of southern American will automatically map /o/ to
   /aw/; and so forth. (Standard American makes a good reference dialect
   for this purpose because it has crisp consonants and more vowel
   distinctions than other major dialects, and tends to retain
   distinctions between unstressed vowels. It also happens to be what
   your editor speaks.)

   Entries with a pronunciation of `//' are written-only usages. (No,
   Unix weenies, this does not mean `pronounce like previous
   pronunciation'!)
     _________________________________________________________________

   Node:Other Lexicon Conventions, Next:[162]Format for New Entries,
   Previous:[163]Pronunciation Guide, Up:[164]Top

Other Lexicon Conventions

   Entries are sorted in case-blind ASCII collation order (rather than
   the letter-by-letter order ignoring interword spacing common in
   mainstream dictionaries), except that all entries beginning with
   nonalphabetic characters are sorted after Z. The case-blindness is a
   feature, not a bug.

   The beginning of each entry is marked by a colon (:) at the left
   margin. This convention helps out tools like hypertext browsers that
   benefit from knowing where entry boundaries are, but aren't as
   context-sensitive as humans.

   In pure ASCII renderings of the Jargon File, you will see {} used to
   bracket words which themselves have entries in the File. This isn't
   done all the time for every such word, but it is done everywhere that
   a reminder seems useful that the term has a jargon meaning and one
   might wish to refer to its entry.

   In this all-ASCII version, headwords for topic entries are
   distinguished from those for ordinary entries by being followed by
   "::" rather than ":"; similarly, references are surrounded by "{{" and
   "}}" rather than "{" and "}".

   Defining instances of terms and phrases appear in `slanted type'. A
   defining instance is one which occurs near to or as part of an
   explanation of it.

   Prefixed ** is used as linguists do; to mark examples of incorrect
   usage.

   We follow the `logical' quoting convention described in the Writing
   Style section above. In addition, we reserve double quotes for actual
   excerpts of text or (sometimes invented) speech. Scare quotes (which
   mark a word being used in a nonstandard way), and philosopher's quotes
   (which turn an utterance into the string of letters or words that name
   it) are both rendered with single quotes.

   References such as malloc(3) and patch(1) are to Unix facilities (some
   of which, such as patch(1), are actually freeware distributed over
   Usenet). The Unix manuals use foo(n) to refer to item foo in section
   (n) of the manual, where n=1 is utilities, n=2 is system calls, n=3 is
   C library routines, n=6 is games, and n=8 (where present) is system
   administration utilities. Sections 4, 5, and 7 of the manuals have
   changed roles frequently and in any case are not referred to in any of
   the entries.

   Various abbreviations used frequently in the lexicon are summarized
   here:

   abbrev.
          abbreviation

   adj.
          adjective

   adv.
          adverb

   alt.
          alternate

   cav.
          caveat

   conj.
          conjunction

   esp.
          especially

   excl.
          exclamation

   imp.
          imperative

   interj.
          interjection

   n.
          noun

   obs.
          obsolete

   pl.
          plural

   poss.
          possibly

   pref.
          prefix

   prob.
          probably

   prov.
          proverbial

   quant.
          quantifier

   suff.
          suffix

   syn.
          synonym (or synonymous with)

   v.
          verb (may be transitive or intransitive)

   var.
          variant

   vi.
          intransitive verb

   vt.
          transitive verb

   Where alternate spellings or pronunciations are given, alt. separates
   two possibilities with nearly equal distribution, while var. prefixes
   one that is markedly less common than the primary.

   Where a term can be attributed to a particular subculture or is known
   to have originated there, we have tried to so indicate. Here is a list
   of abbreviations used in etymologies:

   Amateur Packet Radio
          A technical culture of ham-radio sites using AX.25 and TCP/IP
          for wide-area networking and BBS systems.

   Berkeley
          University of California at Berkeley

   BBN
          Bolt, Beranek & Newman

   Cambridge
          the university in England (not the city in Massachusetts where
          MIT happens to be located!)

   CMU
          Carnegie-Mellon University

   Commodore
          Commodore Business Machines

   DEC
          The Digital Equipment Corporation (now Compaq).

   Fairchild
          The Fairchild Instruments Palo Alto development group

   FidoNet
          See the [165]FidoNet entry

   IBM
          International Business Machines

   MIT
          Massachusetts Institute of Technology; esp. the legendary MIT
          AI Lab culture of roughly 1971 to 1983 and its feeder groups,
          including the Tech Model Railroad Club

   NRL
          Naval Research Laboratories

   NYU
          New York University

   OED
          The Oxford English Dictionary

   Purdue
          Purdue University

   SAIL
          Stanford Artificial Intelligence Laboratory (at Stanford
          University)

   SI
          From Système International, the name for the standard
          conventions of metric nomenclature used in the sciences

   Stanford
          Stanford University

   Sun
          Sun Microsystems

   TMRC
          Some MITisms go back as far as the Tech Model Railroad Club
          (TMRC) at MIT c. 1960. Material marked TMRC is from "An
          Abridged Dictionary of the TMRC Language", originally compiled
          by Pete Samson in 1959

   UCLA
          University of California at Los Angeles

   UK
          the United Kingdom (England, Wales, Scotland, Northern Ireland)

   Usenet
          See the [166]Usenet entry

   WPI
          Worcester Polytechnic Institute, site of a very active
          community of PDP-10 hackers during the 1970s

   WWW
          The World-Wide-Web.

   XEROX PARC
          XEROX's Palo Alto Research Center, site of much pioneering
          research in user interface design and networking

   Yale
          Yale University

   Some other etymology abbreviations such as [167]Unix and [168]PDP-10
   refer to technical cultures surrounding specific operating systems,
   processors, or other environments. The fact that a term is labelled
   with any one of these abbreviations does not necessarily mean its use
   is confined to that culture. In particular, many terms labelled `MIT'
   and `Stanford' are in quite general use. We have tried to give some
   indication of the distribution of speakers in the usage notes;
   however, a number of factors mentioned in the introduction conspire to
   make these indications less definite than might be desirable.

   A few new definitions attached to entries are marked [proposed]. These
   are usually generalizations suggested by editors or Usenet respondents
   in the process of commenting on previous definitions of those entries.
   These are not represented as established jargon.
     _________________________________________________________________

   Node:Format for New Entries, Next:[169]The Jargon Lexicon,
   Previous:[170]Other Lexicon Conventions, Up:[171]Top

Format For New Entries

   You can mail submissions for the Jargon File to
   [172]jargon@snark.thyrsus.com.

   We welcome new jargon, and corrections to or amplifications of
   existing entries. You can improve your submission's chances of being
   included by adding background information on user population and years
   of currency. References to actual usage via URLs and/or DejaNews
   pointers are particularly welcomed.

   All contributions and suggestions about the Jargon File will be
   considered donations to be placed in the public domain as part of this
   File, and may be used in subsequent paper editions. Submissions may be
   edited for accuracy, clarity and concision.

   We are looking to expand the File's range of technical specialties
   covered. There are doubtless rich veins of jargon yet untapped in the
   scientific computing, graphics, and networking hacker communities;
   also in numerical analysis, computer architectures and VLSI design,
   language design, and many other related fields. Send us your jargon!

   We are not interested in straight technical terms explained by
   textbooks or technical dictionaries unless an entry illuminates
   `underground' meanings or aspects not covered by official histories.
   We are also not interested in `joke' entries -- there is a lot of
   humor in the file but it must flow naturally out of the explanations
   of what hackers do and how they think.

   It is OK to submit items of jargon you have originated if they have
   spread to the point of being used by people who are not personally
   acquainted with you. We prefer items to be attested by independent
   submission from two different sites.

   An HTML version of the File is available at
   http://www.tuxedo.org/jargon. Please send us URLs for materials
   related to the entries, so we can enrich the File's link structure.

   The Jargon File will be regularly maintained and made available for
   browsing on the World Wide Web, and will include a version number.
   Read it, pass it around, contribute -- this is your monument!
     _________________________________________________________________

   Node:The Jargon Lexicon, Next:[173]Appendix A, Previous:[174]Format
   for New Entries, Up:[175]Top

                              The Jargon Lexicon

     * [176]= 0 =:
     * [177]= A =:
     * [178]= B =:
     * [179]= C =:
     * [180]= D =:
     * [181]= E =:
     * [182]= F =:
     * [183]= G =:
     * [184]= H =:
     * [185]= I =:
     * [186]= J =:
     * [187]= K =:
     * [188]= L =:
     * [189]= M =:
     * [190]= N =:
     * [191]= O =:
     * [192]= P =:
     * [193]= Q =:
     * [194]= R =:
     * [195]= S =:
     * [196]= T =:
     * [197]= U =:
     * [198]= V =:
     * [199]= W =:
     * [200]= X =:
     * [201]= Y =:
     * [202]= Z =:
     _________________________________________________________________

   Node:= 0 =, Next:[203]= A =, Up:[204]The Jargon Lexicon

= 0 =

     * [205]0:
     * [206]1TBS:
     * [207]120 reset:
     * [208]2:
     * [209]404:
     * [210]404 compliant:
     * [211]4.2:
     * [212]@-party:
     _________________________________________________________________

   Node:0, Next:[213]1TBS, Up:[214]= 0 =

   0

   Numeric zero, as opposed to the letter `O' (the 15th letter of the
   English alphabet). In their unmodified forms they look a lot alike,
   and various kluges invented to make them visually distinct have
   compounded the confusion. If your zero is center-dotted and letter-O
   is not, or if letter-O looks almost rectangular but zero looks more
   like an American football stood on end (or the reverse), you're
   probably looking at a modern character display (though the dotted zero
   seems to have originated as an option on IBM 3270 controllers). If
   your zero is slashed but letter-O is not, you're probably looking at
   an old-style ASCII graphic set descended from the default typewheel on
   the venerable ASR-33 Teletype (Scandinavians, for whom Ø is a letter,
   curse this arrangement). (Interestingly, the slashed zero long
   predates computers; Florian Cajori's monumental "A History of
   Mathematical Notations" notes that it was used in the twelfth and
   thirteenth centuries.) If letter-O has a slash across it and the zero
   does not, your display is tuned for a very old convention used at IBM
   and a few other early mainframe makers (Scandinavians curse this
   arrangement even more, because it means two of their letters collide).
   Some Burroughs/Unisys equipment displays a zero with a reversed slash.
   Old CDC computers rendered letter O as an unbroken oval and 0 as an
   oval broken at upper right and lower left. And yet another convention
   common on early line printers left zero unornamented but added a tail
   or hook to the letter-O so that it resembled an inverted Q or cursive
   capital letter-O (this was endorsed by a draft ANSI standard for how
   to draw ASCII characters, but the final standard changed the
   distinguisher to a tick-mark in the upper-left corner). Are we
   sufficiently confused yet?
     _________________________________________________________________

   Node:1TBS, Next:[215]120 reset, Previous:[216]0, Up:[217]= 0 =

   1TBS // n.

   The "One True Brace Style"; see [218]indent style.
     _________________________________________________________________

   Node:120 reset, Next:[219]2, Previous:[220]1TBS, Up:[221]= 0 =

   120 reset /wuhn-twen'tee ree'set/ n.

   [from 120 volts, U.S. wall voltage] To cycle power on a machine in
   order to reset or unjam it. Compare [222]Big Red Switch, [223]power
   cycle.
     _________________________________________________________________

   Node:2, Next:[224]404, Previous:[225]120 reset, Up:[226]= 0 =

   2 infix.

   In translation software written by hackers, infix 2 often represents
   the syllable to with the connotation `translate to': as in dvi2ps (DVI
   to PostScript), int2string (integer to string), and texi2roff (Texinfo
   to [nt]roff). Several versions of a joke have floated around the
   internet in which some idiot programmer fixes the Y2K bug by changing
   all the Y's in something to K's, as in Januark, Februark, etc.
     _________________________________________________________________

   Node:404, Next:[227]404 compliant, Previous:[228]2, Up:[229]= 0 =

   404 // n.

   [from the HTTP error "file not found on server"] Extended to humans to
   convey that the subject has no idea or no clue - sapience not found.
   May be used reflexively; "Uh, I'm 404ing" means "I'm drawing a blank".
     _________________________________________________________________

   Node:404 compliant, Next:[230]4.2, Previous:[231]404, Up:[232]= 0 =

   404 compliant adj.

   The status of a website which has been completely removed, usually by
   the administrators of the hosting site as a result of net abuse by the
   website operators. The term is a tongue-in-cheek reference to the
   standard "301 compliant" Murkowski Bill disclaimer used by spammers.
   See also: [233]spam, [234]spamvertize.
     _________________________________________________________________

   Node:4.2, Next:[235]@-party, Previous:[236]404 compliant, Up:[237]= 0
   =

   4.2 /for' poynt too'/ n.

   Without a prefix, this almost invariably refers to [238]BSD Unix
   release 4.2. Note that it is an indication of cluelessness to say
   "version 4.2", and "release 4.2" is rare; the number stands on its
   own, or is used in the more explicit forms 4.2BSD or (less commonly)
   BSD 4.2. Similar remarks apply to "4.3", "4.4" and to earlier,
   less-widespread releases 4.1 and 2.9.
     _________________________________________________________________

   Node:@-party, Next:[239]abbrev, Previous:[240]4.2, Up:[241]= 0 =

   @-party /at'par`tee/ n.

   [from the @-sign in an Internet address] (alt. `@-sign party' /at'si:n
   par`tee/) A semi-closed party thrown for hackers at a science-fiction
   convention (esp. the annual World Science Fiction Convention or
   "Worldcon"); one must have a [242]network address to get in, or at
   least be in company with someone who does. One of the most reliable
   opportunities for hackers to meet face to face with people who might
   otherwise be represented by mere phosphor dots on their screens.
   Compare [243]boink.

   The first recorded @-party was held at the Westercon (a U.S. western
   regional SF convention) over the July 4th weekend in 1980. It is not
   clear exactly when the canonical @-party venue shifted to the Worldcon
   but it had certainly become established by Constellation in 1983.
   Sadly, the @-party tradition has been in decline since about 1996,
   mainly because having an @-address no longer functions as an effective
   lodge pin.
     _________________________________________________________________

   Node:= A =, Next:[244]= B =, Previous:[245]= 0 =, Up:[246]The Jargon
   Lexicon

= A =

     * [247]abbrev:
     * [248]ABEND:
     * [249]accumulator:
     * [250]ACK:
     * [251]Acme:
     * [252]acolyte:
     * [253]ad-hockery:
     * [254]Ada:
     * [255]address harvester:
     * [256]adger:
     * [257]admin:
     * [258]ADVENT:
     * [259]AFAIK:
     * [260]AFJ:
     * [261]AFK:
     * [262]AI:
     * [263]AI-complete:
     * [264]AI koans:
     * [265]AIDS:
     * [266]AIDX:
     * [267]airplane rule:
     * [268]Alderson loop:
     * [269]aliasing bug:
     * [270]Alice and Bob:
     * [271]all-elbows:
     * [272]alpha geek:
     * [273]alpha particles:
     * [274]alt:
     * [275]alt bit:
     * [276]Aluminum Book:
     * [277]ambimouseterous:
     * [278]Amiga:
     * [279]Amiga Persecution Complex:
     * [280]amoeba:
     * [281]amp off:
     * [282]amper:
     * [283]Angband:
     * [284]angle brackets:
     * [285]angry fruit salad:
     * [286]annoybot:
     * [287]annoyware:
     * [288]ANSI:
     * [289]ANSI standard:
     * [290]ANSI standard pizza:
     * [291]AOL!:
     * [292]app:
     * [293]arena:
     * [294]arg:
     * [295]ARMM:
     * [296]armor-plated:
     * [297]asbestos:
     * [298]asbestos cork award:
     * [299]asbestos longjohns:
     * [300]ASCII:
     * [301]ASCII art:
     * [302]ASCIIbetical order:
     * [303]astroturfing:
     * [304]atomic:
     * [305]attoparsec:
     * [306]AUP:
     * [307]autobogotiphobia:
     * [308]automagically:
     * [309]avatar:
     * [310]awk:
     _________________________________________________________________

   Node:abbrev, Next:[311]ABEND, Previous:[312]@-party, Up:[313]= A =

   abbrev /*-breev'/, /*-brev'/ n.

   Common abbreviation for `abbreviation'.
     _________________________________________________________________

   Node:ABEND, Next:[314]accumulator, Previous:[315]abbrev, Up:[316]= A =

   ABEND /a'bend/, /*-bend'/ n.

   [ABnormal END] 1. Abnormal termination (of software); [317]crash;
   [318]lossage. Derives from an error message on the IBM 360; used
   jokingly by hackers but seriously mainly by [319]code grinders.
   Usually capitalized, but may appear as `abend'. Hackers will try to
   persuade you that ABEND is called `abend' because it is what system
   operators do to the machine late on Friday when they want to call it a
   day, and hence is from the German `Abend' = `Evening'. 2.
   [alt.callahans] Absent By Enforced Net Deprivation - used in the
   subject lines of postings warning friends of an imminent loss of
   Internet access. (This can be because of computer downtime, loss of
   provider, moving or illness.) Variants of this also appear: ABVND =
   `Absent By Voluntary Net Deprivation' and ABSEND = `Absent By
   Self-Enforced Net Deprivation' have been sighted.
     _________________________________________________________________

   Node:accumulator, Next:[320]ACK, Previous:[321]ABEND, Up:[322]= A =

   accumulator n. obs.

   1. Archaic term for a register. On-line use of it as a synonym for
   `register' is a fairly reliable indication that the user has been
   around for quite a while and/or that the architecture under discussion
   is quite old. The term in full is almost never used of microprocessor
   registers, for example, though symbolic names for arithmetic registers
   beginning in `A' derive from historical use of the term `accumulator'
   (and not, actually, from `arithmetic'). Confusingly, though, an `A'
   register name prefix may also stand for `address', as for example on
   the Motorola 680x0 family. 2. A register being used for arithmetic or
   logic (as opposed to addressing or a loop index), especially one being
   used to accumulate a sum or count of many items. This use is in
   context of a particular routine or stretch of code. "The FOOBAZ
   routine uses A3 as an accumulator." 3. One's in-basket (esp. among
   old-timers who might use sense 1). "You want this reviewed? Sure, just
   put it in the accumulator." (See [323]stack.)
     _________________________________________________________________

   Node:ACK, Next:[324]Acme, Previous:[325]accumulator, Up:[326]= A =

   ACK /ak/ interj.

   1. [common; from the ASCII mnemonic for 0000110] Acknowledge. Used to
   register one's presence (compare mainstream Yo!). An appropriate
   response to [327]ping or [328]ENQ. 2. [from the comic strip "Bloom
   County"] An exclamation of surprised disgust, esp. in "Ack pffft!"
   Semi-humorous. Generally this sense is not spelled in caps (ACK) and
   is distinguished by a following exclamation point. 3. Used to politely
   interrupt someone to tell them you understand their point (see
   [329]NAK). Thus, for example, you might cut off an overly long
   explanation with "Ack. Ack. Ack. I get it now". 4. An affirmative.
   "Think we ought to ditch that damn NT server for a Linux box?" "ACK!"

   There is also a usage "ACK?" (from sense 1) meaning "Are you there?",
   often used in email when earlier mail has produced no reply, or during
   a lull in [330]talk mode to see if the person has gone away (the
   standard humorous response is of course [331]NAK (sense 1), i.e., "I'm
   not here").
     _________________________________________________________________

   Node:Acme, Next:[332]acolyte, Previous:[333]ACK, Up:[334]= A =

   Acme n.

   The canonical supplier of bizarre, elaborate, and non-functional
   gadgetry - where Rube Goldberg and Heath Robinson (two cartoonists who
   specialized in elaborate contraptions) shop. The name has been
   humorously expanded as A (or American) Company Making Everything. (In
   fact, Acme was a real brand sold from Sears Roebuck catalogs in the
   early 1900s.) Describing some X as an "Acme X" either means "This is
   [335]insanely great", or, more likely, "This looks [336]insanely great
   on paper, but in practice it's really easy to shoot yourself in the
   foot with it." Compare [337]pistol.

   This term, specially cherished by American hackers and explained here
   for the benefit of our overseas brethren, comes from the Warner
   Brothers' series of "Roadrunner" cartoons. In these cartoons, the
   famished Wile E. Coyote was forever attempting to catch up with, trap,
   and eat the Roadrunner. His attempts usually involved one or more
   high-technology Rube Goldberg devices - rocket jetpacks, catapults,
   magnetic traps, high-powered slingshots, etc. These were usually
   delivered in large cardboard boxes, labeled prominently with the Acme
   name. These devices invariably malfunctioned in improbable and violent
   ways.
     _________________________________________________________________

   Node:acolyte, Next:[338]ad-hockery, Previous:[339]Acme, Up:[340]= A =

   acolyte n. obs.

   [TMRC] An [341]OSU privileged enough to submit data and programs to a
   member of the [342]priesthood.
     _________________________________________________________________

   Node:ad-hockery, Next:[343]Ada, Previous:[344]acolyte, Up:[345]= A =

   ad-hockery /ad-hok'*r-ee/ n.

   [Purdue] 1. Gratuitous assumptions made inside certain programs, esp.
   expert systems, which lead to the appearance of semi-intelligent
   behavior but are in fact entirely arbitrary. For example,
   fuzzy-matching of input tokens that might be typing errors against a
   symbol table can make it look as though a program knows how to spell.
   2. Special-case code to cope with some awkward input that would
   otherwise cause a program to [346]choke, presuming normal inputs are
   dealt with in some cleaner and more regular way. Also called
   `ad-hackery', `ad-hocity' (/ad-hos'*-tee/), `ad-crockery'. See also
   [347]ELIZA effect.
     _________________________________________________________________

   Node:Ada, Next:[348]address harvester, Previous:[349]ad-hockery,
   Up:[350]= A =

   Ada n.

   A [351]Pascal-descended language that was at one time made mandatory
   for Department of Defense software projects by the Pentagon. Hackers
   are nearly unanimous in observing that, technically, it is precisely
   what one might expect given that kind of endorsement by fiat; designed
   by committee, crockish, difficult to use, and overall a disastrous,
   multi-billion-dollar boondoggle (one common description wss "The PL/I
   of the 1980s"). Hackers find Ada's exception-handling and
   inter-process communication features particularly hilarious. Ada
   Lovelace (the daughter of Lord Byron who became the world's first
   programmer while cooperating with Charles Babbage on the design of his
   mechanical computing engines in the mid-1800s) would almost certainly
   blanch at the use to which her name has latterly been put; the kindest
   thing that has been said about it is that there is probably a good
   small language screaming to get out from inside its vast,
   [352]elephantine bulk.
     _________________________________________________________________

   Node:address harvester, Next:[353]adger, Previous:[354]Ada, Up:[355]=
   A =

   address harvester n.

   A robot that searches web pages and/or filters netnews traffic looking
   for valid email addresses. Some address harvesters are benign, used
   only for compiling address directories. Most, unfortunately, are run
   by miscreants compiling address lists to [356]spam. Address harvesters
   can be foiled by a [357]teergrube.
     _________________________________________________________________

   Node:adger, Next:[358]admin, Previous:[359]address harvester,
   Up:[360]= A =

   adger /aj'r/ vt.

   [UCLA mutant of [361]nadger, poss. also from the middle name of an
   infamous [362]tenured graduate student] To make a bonehead move with
   consequences that could have been foreseen with even slight mental
   effort. E.g., "He started removing files and promptly adgered the
   whole project". Compare [363]dumbass attack.
     _________________________________________________________________

   Node:admin, Next:[364]ADVENT, Previous:[365]adger, Up:[366]= A =

   admin /ad-min'/ n.

   Short for `administrator'; very commonly used in speech or on-line to
   refer to the systems person in charge on a computer. Common
   constructions on this include `sysadmin' and `site admin' (emphasizing
   the administrator's role as a site contact for email and news) or
   `newsadmin' (focusing specifically on news). Compare [367]postmaster,
   [368]sysop, [369]system mangler.
     _________________________________________________________________

   Node:ADVENT, Next:[370]AFAIK, Previous:[371]admin, Up:[372]= A =

   ADVENT /ad'vent/ n.

   The prototypical computer adventure game, first designed by Will
   Crowther on the [373]PDP-10 in the mid-1970s as an attempt at
   computer-refereed fantasy gaming, and expanded into a puzzle-oriented
   game by Don Woods at Stanford in 1976. (Woods had been one of the
   authors of [374]INTERCAL.) Now better known as Adventure or Colossal
   Cave Adventure, but the [375]TOPS-10 operating system permitted only
   six-letter filenames. See also [376]vadding, [377]Zork, and
   [378]Infocom.

   This game defined the terse, dryly humorous style since expected in
   text adventure games, and popularized several tag lines that have
   become fixtures of hacker-speak: "A huge green fierce snake bars the
   way!" "I see no X here" (for some noun X). "You are in a maze of
   twisty little passages, all alike." "You are in a little maze of
   twisty passages, all different." The `magic words' [379]xyzzy and
   [380]plugh also derive from this game.

   Crowther, by the way, participated in the exploration of the Mammoth &
   Flint Ridge cave system; it actually has a `Colossal Cave' and a
   `Bedquilt' as in the game, and the `Y2' that also turns up is cavers'
   jargon for a map reference to a secondary entrance.

   ADVENT sources are available for FTP at
   [381]ftp://ftp.wustl.edu/doc/misc/if-archive/games/source/advent.tar.Z
   . There is a
   [382]http://people.delphi.com/rickadams/adventure/index.html.
     _________________________________________________________________

   Node:AFAIK, Next:[383]AFJ, Previous:[384]ADVENT, Up:[385]= A =

   AFAIK // n.

   [Usenet] Abbrev. for "As Far As I Know".
     _________________________________________________________________

   Node:AFJ, Next:[386]AFK, Previous:[387]AFAIK, Up:[388]= A =

   AFJ // n.

   Written-only abbreviation for "April Fool's Joke". Elaborate April
   Fool's hoaxes are a long-established tradition on Usenet and Internet;
   see [389]kremvax for an example. In fact, April Fool's Day is the only
   seasonal holiday consistently marked by customary observances on
   Internet and other hacker networks.
     _________________________________________________________________

   Node:AFK, Next:[390]AI, Previous:[391]AFJ, Up:[392]= A =

   AFK

   [MUD] Abbrev. for "Away From Keyboard". Used to notify others that you
   will be momentarily unavailable online. eg. "Let's not go kill that
   frost giant yet, I need to go AFK to make a phone call". Often MUDs
   will have a command to politely inform others of your absence when
   they try to talk with you. The term is not restricted to MUDs,
   however, and has become common in many chat situations, from IRC to
   Unix talk.
     _________________________________________________________________

   Node:AI, Next:[393]AI-complete, Previous:[394]AFK, Up:[395]= A =

   AI /A-I/ n.

   Abbreviation for `Artificial Intelligence', so common that the full
   form is almost never written or spoken among hackers.
     _________________________________________________________________

   Node:AI-complete, Next:[396]AI koans, Previous:[397]AI, Up:[398]= A =

   AI-complete /A-I k*m-pleet'/ adj.

   [MIT, Stanford: by analogy with `NP-complete' (see [399]NP-)] Used to
   describe problems or subproblems in AI, to indicate that the solution
   presupposes a solution to the `strong AI problem' (that is, the
   synthesis of a human-level intelligence). A problem that is
   AI-complete is, in other words, just too hard.

   Examples of AI-complete problems are `The Vision Problem' (building a
   system that can see as well as a human) and `The Natural Language
   Problem' (building a system that can understand and speak a natural
   language as well as a human). These may appear to be modular, but all
   attempts so far (1999) to solve them have foundered on the amount of
   context information and `intelligence' they seem to require. See also
   [400]gedanken.
     _________________________________________________________________

   Node:AI koans, Next:[401]AIDS, Previous:[402]AI-complete, Up:[403]= A
   =

   AI koans /A-I koh'anz/ pl.n.

   A series of pastiches of Zen teaching riddles created by Danny Hillis
   at the MIT AI Lab around various major figures of the Lab's culture
   (several are included under [404]Some AI Koans in Appendix A). See
   also [405]ha ha only serious, [406]mu, and [407]hacker humor.
     _________________________________________________________________

   Node:AIDS, Next:[408]AIDX, Previous:[409]AI koans, Up:[410]= A =

   AIDS /aydz/ n.

   Short for A* Infected Disk Syndrome (`A*' is a [411]glob pattern that
   matches, but is not limited to, Apple or Amiga), this condition is
   quite often the result of practicing unsafe [412]SEX. See [413]virus,
   [414]worm, [415]Trojan horse, [416]virgin.
     _________________________________________________________________

   Node:AIDX, Next:[417]airplane rule, Previous:[418]AIDS, Up:[419]= A =

   AIDX /ayd'k*z/ n.

   Derogatory term for IBM's perverted version of Unix, AIX, especially
   for the AIX 3.? used in the IBM RS/6000 series (some hackers think it
   is funnier just to pronounce "AIX" as "aches"). A victim of the
   dreaded "hybridism" disease, this attempt to combine the two main
   currents of the Unix stream ([420]BSD and [421]USG Unix) became a
   [422]monstrosity to haunt system administrators' dreams. For example,
   if new accounts are created while many users are logged on, the load
   average jumps quickly over 20 due to silly implementation of the user
   databases. For a quite similar disease, compare [423]HP-SUX. Also,
   compare [424]Macintrash, [425]Nominal Semidestructor, [426]ScumOS,
   [427]sun-stools.
     _________________________________________________________________

   Node:airplane rule, Next:[428]Alderson loop, Previous:[429]AIDX,
   Up:[430]= A =

   airplane rule n.

   "Complexity increases the possibility of failure; a twin-engine
   airplane has twice as many engine problems as a single-engine
   airplane." By analogy, in both software and electronics, the rule that
   simplicity increases robustness. It is correspondingly argued that the
   right way to build reliable systems is to put all your eggs in one
   basket, after making sure that you've built a really good basket. See
   also [431]KISS Principle, [432]elegant.
     _________________________________________________________________

   Node:Alderson loop, Next:[433]aliasing bug, Previous:[434]airplane
   rule, Up:[435]= A =

   Alderson loop n.

   [Intel] A special version of an [436]infinite loop where there is an
   exit condition available, but inaccessible in the current
   implementation of the code. Typically this is created while debugging
   user interface code. An example would be when there is a menu stating,
   "Select 1-3 or 9 to quit" and 9 is not allowed by the function that
   takes the selection from the user.

   This term received its name from a programmer who had coded a modal
   message box in MSAccess with no Ok or Cancel buttons, thereby
   disabling the entire program whenever the box came up. The message box
   had the proper code for dismissal and even was set up so that when the
   non-existent Ok button was pressed the proper code would be called.
     _________________________________________________________________

   Node:aliasing bug, Next:[437]Alice and Bob, Previous:[438]Alderson
   loop, Up:[439]= A =

   aliasing bug n.

   A class of subtle programming errors that can arise in code that does
   dynamic allocation, esp. via malloc(3) or equivalent. If several
   pointers address (`aliases for') a given hunk of storage, it may
   happen that the storage is freed or reallocated (and thus moved)
   through one alias and then referenced through another, which may lead
   to subtle (and possibly intermittent) lossage depending on the state
   and the allocation history of the malloc [440]arena. Avoidable by use
   of allocation strategies that never alias allocated core, or by use of
   higher-level languages, such as [441]LISP, which employ a garbage
   collector (see [442]GC). Also called a [443]stale pointer bug. See
   also [444]precedence lossage, [445]smash the stack, [446]fandango on
   core, [447]memory leak, [448]memory smash, [449]overrun screw,
   [450]spam.

   Historical note: Though this term is nowadays associated with C
   programming, it was already in use in a very similar sense in the
   Algol-60 and FORTRAN communities in the 1960s.
     _________________________________________________________________

   Node:Alice and Bob, Next:[451]all-elbows, Previous:[452]aliasing bug,
   Up:[453]= A =

   Alice and Bob n.

   The archetypal individuals used as examples in discussions of
   cryptographic protocols. Originally, theorists would say something
   like: "A communicates with someone who claims to be B, So to be sure,
   A tests that B knows a secret number K. So A sends to B a random
   number X. B then forms Y by encrypting X under key K and sends Y back
   to A" Because this sort of thing is is quite hard to follow, theorists
   stopped using the unadorned letters A and B to represent the main
   players and started calling them Alice and Bob. So now we say "Alice
   communicates with someone claiming to be Bob, and to be sure, So Alice
   tests that Bob knows a secret number K. Alice sends to Bob a random
   number X. Bob then forms Y by encrypting X under key K and sends Y
   back to Alice". A whole mythology rapidly grew up around the
   metasyntactic names; see
   [454]http://www.conceptlabs.co.uk/alicebob.html.

   In Bruce Schneier's definitive introductory text "Applied
   Cryptography" (2nd ed., 1996, John Wiley & Sons, ISBN 0-471-11709-9)
   he introduces a table of dramatis personae headed by Alice and Bob.
   Others include Carol (a participant in three- and four-party
   protocols), Dave (a participant in four-party protocols), Eve (an
   eavesdropper), Mallory (a malicious active attacker), Trent (a trusted
   arbitrator), Walter (a warden), Peggy (a prover) and Victor (a
   verifier). These names for roles are either already standard or, given
   the wide popularity of the book, may be expected to quickly become so.
     _________________________________________________________________

   Node:all-elbows, Next:[455]alpha geek, Previous:[456]Alice and Bob,
   Up:[457]= A =

   all-elbows adj.

   [MS-DOS] Of a TSR (terminate-and-stay-resident) IBM PC program, such
   as the N pop-up calendar and calculator utilities that circulate on
   [458]BBS systems: unsociable. Used to describe a program that rudely
   steals the resources that it needs without considering that other TSRs
   may also be resident. One particularly common form of rudeness is
   lock-up due to programs fighting over the keyboard interrupt. See
   [459]rude, also [460]mess-dos.
     _________________________________________________________________

   Node:alpha geek, Next:[461]alpha particles, Previous:[462]all-elbows,
   Up:[463]= A =

   alpha geek n.

   [from animal ethologists' `alpha male'] The most technically
   accomplished or skillful person in some implied context. "Ask Larry,
   he's the alpha geek here."
     _________________________________________________________________

   Node:alpha particles, Next:[464]alt, Previous:[465]alpha geek,
   Up:[466]= A =

   alpha particles n.

   See [467]bit rot.
     _________________________________________________________________

   Node:alt, Next:[468]alt bit, Previous:[469]alpha particles, Up:[470]=
   A =

   alt /awlt/

   1. n. The alt shift key on an IBM PC or [471]clone keyboard; see
   [472]bucky bits, sense 2 (though typical PC usage does not simply set
   the 0200 bit). 2. n. The `option' key on a Macintosh; use of this term
   usually reveals that the speaker hacked PCs before coming to the Mac
   (see also [473]feature key, which is sometimes incorrectly called
   `alt'). 3. n.,obs. [PDP-10; often capitalized to ALT] Alternate name
   for the ASCII ESC character (ASCII 0011011), after the keycap labeling
   on some older terminals; also `altmode' (/awlt'mohd/). This character
   was almost never pronounced `escape' on an ITS system, in [474]TECO,
   or under TOPS-10 -- always alt, as in "Type alt alt to end a TECO
   command" or "alt-U onto the system" (for "log onto the [ITS] system").
   This usage probably arose because alt is more convenient to say than
   `escape', especially when followed by another alt or a character (or
   another alt and a character, for that matter). 4. The alt hierarchy on
   Usenet, the tree of newsgroups created by users without a formal vote
   and approval procedure. There is a myth, not entirely implausible,
   that alt is acronymic for "anarchists, lunatics, and terrorists"; but
   in fact it is simply short for "alternative".
     _________________________________________________________________

   Node:alt bit, Next:[475]Aluminum Book, Previous:[476]alt, Up:[477]= A
   =

   alt bit /awlt bit/ [from alternate] adj.

   See [478]meta bit.
     _________________________________________________________________

   Node:Aluminum Book, Next:[479]ambimouseterous, Previous:[480]alt bit,
   Up:[481]= A =

   Aluminum Book n.

   [MIT] "Common LISP: The Language", by Guy L. Steele Jr. (Digital
   Press, first edition 1984, second edition 1990). Note that due to a
   technical screwup some printings of the second edition are actually of
   a color the author describes succinctly as "yucky green". See also
   [482]book titles.
     _________________________________________________________________

   Node:ambimouseterous, Next:[483]Amiga, Previous:[484]Aluminum Book,
   Up:[485]= A =

   ambimouseterous /am-b*-mows'ter-us/ or /am-b*-mows'trus/ adj.

   [modeled on ambidextrous] Able to use a mouse with either hand.
     _________________________________________________________________

   Node:Amiga, Next:[486]Amiga Persecution Complex,
   Previous:[487]ambimouseterous, Up:[488]= A =

   Amiga n

   A series of personal computer models originally sold by Commodore,
   based on 680x0 processors, custom support chips and an operating
   system that combined some of the best features of Macintosh and Unix
   with compatibility with neither.

   The Amiga was released just as the personal computing world
   standardized on IBM-PC clones. This prevented it from gaining serious
   market share, despite the fact that the first Amigas had a substantial
   technological lead on the IBM XTs of the time. Instead, it acquired a
   small but zealous population of enthusiastic hackers who dreamt of one
   day unseating the clones (see [489]Amiga Persecution Complex). The
   traits of this culture are both spoofed and illuminated in [490]The
   BLAZE Humor Viewer. The strength of the Amiga platform seeded a small
   industry of companies building software and hardware for the platform,
   especially in graphics and video applications (see [491]video
   toaster).

   Due to spectacular mismanagement, Commodore did hardly any R&D,
   allowing the competition to close Amiga's technological lead. After
   Commodore went bankrupt in 1994 the technology passed through several
   hands, none of whom did much with it. However, the Amiga is still
   being produced in Europe under license and has a substantial number of
   fans, which will probably extend the platform's life considerably.
     _________________________________________________________________

   Node:Amiga Persecution Complex, Next:[492]amoeba, Previous:[493]Amiga,
   Up:[494]= A =

   Amiga Persecution Complex n.

   The disorder suffered by a particularly egregious variety of
   [495]bigot, those who believe that the marginality of their preferred
   machine is the result of some kind of industry-wide conspiracy (for
   without a conspiracy of some kind, the eminent superiority of their
   beloved shining jewel of a platform would obviously win over all,
   market pressures be damned!) Those afflicted are prone to engaging in
   [496]flame wars and calling for boycotts and mailbombings. Amiga
   Persecution Complex is by no means limited to Amiga users; NeXT,
   [497]NeWS, [498]OS/2, Macintosh, [499]LISP, and [500]GNU users are
   also common victims. [501]Linux users used to display symptoms very
   frequently before Linux started winning; some still do. See also
   [502]newbie, [503]troll, [504]holy wars, [505]weenie, [506]Get a
   life!.
     _________________________________________________________________

   Node:amoeba, Next:[507]amp off, Previous:[508]Amiga Persecution
   Complex, Up:[509]= A =

   amoeba n.

   Humorous term for the Commodore Amiga personal computer.
     _________________________________________________________________

   Node:amp off, Next:[510]amper, Previous:[511]amoeba, Up:[512]= A =

   amp off vt.

   [Purdue] To run in [513]background. From the Unix shell `&' operator.
     _________________________________________________________________

   Node:amper, Next:[514]Angband, Previous:[515]amp off, Up:[516]= A =

   amper n.

   Common abbreviation for the name of the ampersand (`&', ASCII 0100110)
   character. See [517]ASCII for other synonyms.
     _________________________________________________________________

   Node:Angband, Next:[518]angle brackets, Previous:[519]amper, Up:[520]=
   A =

   Angband n. /ang'band/

   Like [521]nethack, [522]moria, and [523]rogue, one of the large freely
   distributed Dungeons-and-Dragons-like simulation games, available for
   a wide range of machines and operating systems. The name is from
   Tolkien's Pits of Angband (compare [524]elder days, [525]elvish). Has
   been described as "Moria on steroids"; but, unlike Moria, many aspects
   of the game are customizable. This leads many hackers and would-be
   hackers into fooling with these instead of doing productive work.
   There are many Angband variants, of which the most notorious is
   probably the rather whimsical Zangband. In this game, when a key that
   does not correspond to a command is pressed, the game will display
   "Type ? for help" 50% of the time. The other 50% of the time, random
   error messages including "An error has occurred because an error of
   type 42 has occurred" and "Windows 95 uninstalled successfully" will
   be displayed. Zangband also allows the player to kill Santa Claus (who
   has some really good stuff, but also has a lot of friends), "Bull
   Gates", and Barney the Dinosaur (but be watchful; Barney has a nasty
   case of halitosis). There is an official angband home page at
   [526]http://www.phial.com/angband and a zangband one at
   [527]http://thangorodrim.angband.org. See also [528]Random Number God.
     _________________________________________________________________

   Node:angle brackets, Next:[529]angry fruit salad,
   Previous:[530]Angband, Up:[531]= A =

   angle brackets n.

   Either of the characters < (ASCII 0111100) and > (ASCII 0111110)
   (ASCII less-than or greater-than signs). Typographers in the [532]Real
   World use angle brackets which are either taller and slimmer (the ISO
   `Bra' and `Ket' characters), or significantly smaller (single or
   double guillemets) than the less-than and greater-than signs. See
   [533]broket, [534]ASCII.
     _________________________________________________________________

   Node:angry fruit salad, Next:[535]annoybot, Previous:[536]angle
   brackets, Up:[537]= A =

   angry fruit salad n.

   A bad visual-interface design that uses too many colors. (This term
   derives, of course, from the bizarre day-glo colors found in canned
   fruit salad.) Too often one sees similar effects from interface
   designers using color window systems such as [538]X; there is a
   tendency to create displays that are flashy and attention-getting but
   uncomfortable for long-term use.
     _________________________________________________________________

   Node:annoybot, Next:[539]annoyware, Previous:[540]angry fruit salad,
   Up:[541]= A =

   annoybot /*-noy-bot/ n.

   [IRC] See [542]bot.
     _________________________________________________________________

   Node:annoyware, Next:[543]ANSI, Previous:[544]annoybot, Up:[545]= A =

   annoyware n.

   A type of [546]shareware that frequently disrupts normal program
   operation to display requests for payment to the author in return for
   the ability to disable the request messages. (Also called `nagware')
   The requests generally require user action to acknowledge the message
   before normal operation is resumed and are often tied to the most
   frequently used features of the software. See also [547]careware,
   [548]charityware, [549]crippleware, [550]freeware, [551]FRS,
   [552]guiltware, [553]postcardware, and [554]-ware; compare
   [555]payware.
     _________________________________________________________________

   Node:ANSI, Next:[556]ANSI standard, Previous:[557]annoyware, Up:[558]=
   A =

   ANSI /an'see/

   1. n. [techspeak] The American National Standards Institute. ANSI,
   along with the International Organization for Standards (ISO),
   standardized the C programming language (see [559]K&R, [560]Classic
   C), and promulgates many other important software standards. 2. n.
   [techspeak] A terminal may be said to be `ANSI' if it meets the ANSI
   X.364 standard for terminal control. Unfortunately, this standard was
   both over-complicated and too permissive. It has been retired and
   replaced by the ECMA-48 standard, which shares both flaws. 3. n. [BBS
   jargon] The set of screen-painting codes that most MS-DOS and Amiga
   computers accept. This comes from the ANSI.SYS device driver that must
   be loaded on an MS-DOS computer to view such codes. Unfortunately,
   neither DOS ANSI nor the BBS ANSIs derived from it exactly match the
   ANSI X.364 terminal standard. For example, the ESC-[1m code turns on
   the bold highlight on large machines, but in IBM PC/MS-DOS ANSI, it
   turns on `intense' (bright) colors. Also, in BBS-land, the term `ANSI'
   is often used to imply that a particular computer uses or can emulate
   the IBM high-half character set from MS-DOS. Particular use depends on
   context. Occasionally, the vanilla ASCII character set is used with
   the color codes, but on BBSs, ANSI and `IBM characters' tend to go
   together.
     _________________________________________________________________

   Node:ANSI standard, Next:[561]ANSI standard pizza, Previous:[562]ANSI,
   Up:[563]= A =

   ANSI standard /an'see stan'd*rd/

   The ANSI standard usage of `ANSI standard' refers to any practice
   which is typical or broadly done. It's most appropriately applied to
   things that everyone does that are not quite regulation. For example:
   ANSI standard shaking of a laser printer cartridge to get extra life
   from it, or the ANSI standard word tripling in names of usenet alt
   groups.
     _________________________________________________________________

   Node:ANSI standard pizza, Next:[564]AOL!, Previous:[565]ANSI standard,
   Up:[566]= A =

   ANSI standard pizza /an'see stan'd*rd peet'z*/

   [CMU] Pepperoni and mushroom pizza. Coined allegedly because most
   pizzas ordered by CMU hackers during some period leading up to
   mid-1990 were of that flavor. See also [567]rotary debugger; compare
   [568]ISO standard cup of tea.
     _________________________________________________________________

   Node:AOL!, Next:[569]app, Previous:[570]ANSI standard pizza, Up:[571]=
   A =

   AOL! n.

   [Usenet] Common synonym for "Me, too!" alluding to the legendary
   propensity of America Online users to utter contentless "Me, too!"
   postings. The number of exclamation points following varies from zero
   to five or so. The pseudo-HTML

     <AOL>Me, too!</AOL>

   is also frequently seen. See also [572]September that never ended.
     _________________________________________________________________

   Node:app, Next:[573]arena, Previous:[574]AOL!, Up:[575]= A =

   app /ap/ n.

   Short for `application program', as opposed to a systems program. Apps
   are what systems vendors are forever chasing developers to create for
   their environments so they can sell more boxes. Hackers tend not to
   think of the things they themselves run as apps; thus, in hacker
   parlance the term excludes compilers, program editors, games, and
   messaging systems, though a user would consider all those to be apps.
   (Broadly, an app is often a self-contained environment for performing
   some well-defined task such as `word processing'; hackers tend to
   prefer more general-purpose tools.) See [576]killer app; oppose
   [577]tool, [578]operating system.
     _________________________________________________________________

   Node:arena, Next:[579]arg, Previous:[580]app, Up:[581]= A =

   arena n.

   [common; Unix] The area of memory attached to a process by brk(2) and
   sbrk(2) and used by malloc(3) as dynamic storage. So named from a
   malloc: corrupt arena message emitted when some early versions
   detected an impossible value in the free block list. See [582]overrun
   screw, [583]aliasing bug, [584]memory leak, [585]memory smash,
   [586]smash the stack.
     _________________________________________________________________

   Node:arg, Next:[587]ARMM, Previous:[588]arena, Up:[589]= A =

   arg /arg/ n.

   Abbreviation for `argument' (to a function), used so often as to have
   become a new word (like `piano' from `pianoforte'). "The sine function
   takes 1 arg, but the arc-tangent function can take either 1 or 2
   args." Compare [590]param, [591]parm, [592]var.
     _________________________________________________________________

   Node:ARMM, Next:[593]armor-plated, Previous:[594]arg, Up:[595]= A =

   ARMM n.

   [acronym, `Automated Retroactive Minimal Moderation'] A Usenet
   [596]cancelbot created by Dick Depew of Munroe Falls, Ohio. ARMM was
   intended to automatically cancel posts from anonymous-posting sites.
   Unfortunately, the robot's recognizer for anonymous postings triggered
   on its own automatically-generated control messages! Transformed by
   this stroke of programming ineptitude into a monster of
   Frankensteinian proportions, it broke loose on the night of March 31,
   1993 and proceeded to [597]spam news.admin.policy with a recursive
   explosion of over 200 messages.

   ARMM's bug produced a recursive [598]cascade of messages each of which
   mechanically added text to the ID and Subject and some other headers
   of its parent. This produced a flood of messages in which each header
   took up several screens and each message ID and subject line got
   longer and longer and longer.

   Reactions varied from amusement to outrage. The pathological messages
   crashed at least one mail system, and upset people paying line charges
   for their Usenet feeds. One poster described the ARMM debacle as
   "instant Usenet history" (also establishing the term [599]despew), and
   it has since been widely cited as a cautionary example of the havoc
   the combination of good intentions and incompetence can wreak on a
   network. Compare [600]Great Worm; [601]sorcerer's apprentice mode. See
   also [602]software laser, [603]network meltdown.
     _________________________________________________________________

   Node:armor-plated, Next:[604]asbestos, Previous:[605]ARMM, Up:[606]= A
   =

   armor-plated n.

   Syn. for [607]bulletproof.
     _________________________________________________________________

   Node:asbestos, Next:[608]asbestos cork award,
   Previous:[609]armor-plated, Up:[610]= A =

   asbestos adj.

   [common] Used as a modifier to anything intended to protect one from
   [611]flames; also in other highly [612]flame-suggestive usages. See,
   for example, [613]asbestos longjohns and [614]asbestos cork award.
     _________________________________________________________________

   Node:asbestos cork award, Next:[615]asbestos longjohns,
   Previous:[616]asbestos, Up:[617]= A =

   asbestos cork award n.

   Once, long ago at MIT, there was a [618]flamer so consistently
   obnoxious that another hacker designed, had made, and distributed
   posters announcing that said flamer had been nominated for the
   `asbestos cork award'. (Any reader in doubt as to the intended
   application of the cork should consult the etymology under
   [619]flame.) Since then, it is agreed that only a select few have
   risen to the heights of bombast required to earn this dubious dignity
   -- but there is no agreement on which few.
     _________________________________________________________________

   Node:asbestos longjohns, Next:[620]ASCII, Previous:[621]asbestos cork
   award, Up:[622]= A =

   asbestos longjohns n.

   Notional garments donned by [623]Usenet posters just before emitting a
   remark they expect will elicit [624]flamage. This is the most common
   of the [625]asbestos coinages. Also `asbestos underwear', `asbestos
   overcoat', etc.
     _________________________________________________________________

   Node:ASCII, Next:[626]ASCII art, Previous:[627]asbestos longjohns,
   Up:[628]= A =

   ASCII /as'kee/ n.

   [originally an acronym (American Standard Code for Information
   Interchange) but now merely conventional] The predominant character
   set encoding of present-day computers. The standard version uses 7
   bits for each character, whereas most earlier codes (including early
   drafts of of ASCII prior to June 1961) used fewer. This change allowed
   the inclusion of lowercase letters -- a major [629]win -- but it did
   not provide for accented letters or any other letterforms not used in
   English (such as the German sharp-S or the ae-ligature which is a
   letter in, for example, Norwegian). It could be worse, though. It
   could be much worse. See [630]EBCDIC to understand how. A history of
   ASCII and its ancestors is at
   [631]http://www.wps.com/texts/codes/index.html.

   Computers are much pickier and less flexible about spelling than
   humans; thus, hackers need to be very precise when talking about
   characters, and have developed a considerable amount of verbal
   shorthand for them. Every character has one or more names -- some
   formal, some concise, some silly. Common jargon names for ASCII
   characters are collected here. See also individual entries for
   [632]bang, [633]excl, [634]open, [635]ques, [636]semi, [637]shriek,
   [638]splat, [639]twiddle, and [640]Yu-Shiang Whole Fish.

   This list derives from revision 2.3 of the Usenet ASCII pronunciation
   guide. Single characters are listed in ASCII order; character pairs
   are sorted in by first member. For each character, common names are
   given in rough order of popularity, followed by names that are
   reported but rarely seen; official ANSI/CCITT names are surrounded by
   brokets: <>. Square brackets mark the particularly silly names
   introduced by [641]INTERCAL. The abbreviations "l/r" and "o/c" stand
   for left/right and "open/close" respectively. Ordinary parentheticals
   provide some usage information.

   !
          Common: [642]bang; pling; excl; shriek; ball-bat; <exclamation
          mark>. Rare: factorial; exclam; smash; cuss; boing; yell; wow;
          hey; wham; eureka; [spark-spot]; soldier, control.

   "
          Common: double quote; quote. Rare: literal mark; double-glitch;
          <quotation marks>; <dieresis>; dirk; [rabbit-ears]; double
          prime.

   #
          Common: number sign; pound; pound sign; hash; sharp;
          [643]crunch; hex; [mesh]. Rare: grid; crosshatch; octothorpe;
          flash; <square>, pig-pen; tictactoe; scratchmark; thud; thump;
          [644]splat.

   $
          Common: dollar; <dollar sign>. Rare: currency symbol; buck;
          cash; string (from BASIC); escape (when used as the echo of
          ASCII ESC); ding; cache; [big money].

   %
          Common: percent; <percent sign>; mod; grapes. Rare:
          [double-oh-seven].

   &
          Common: <ampersand>; amper; and, and sign. Rare: address (from
          C); reference (from C++); andpersand; bitand; background (from
          sh(1)); pretzel; amp. [INTERCAL called this `ampersand'; what
          could be sillier?]

   '
          Common: single quote; quote; <apostrophe>. Rare: prime; glitch;
          tick; irk; pop; [spark]; <closing single quotation mark>;
          <acute accent>.

   ( )
          Common: l/r paren; l/r parenthesis; left/right; open/close;
          paren/thesis; o/c paren; o/c parenthesis; l/r parenthesis; l/r
          banana. Rare: so/already; lparen/rparen; <opening/closing
          parenthesis>; o/c round bracket, l/r round bracket, [wax/wane];
          parenthisey/unparenthisey; l/r ear.

   *
          Common: star; [[645]splat]; <asterisk>. Rare: wildcard; gear;
          dingle; mult; spider; aster; times; twinkle; glob (see
          [646]glob); [647]Nathan Hale.

   +
          Common: <plus>; add. Rare: cross; [intersection].

   ,
          Common: <comma>. Rare: <cedilla>; [tail].

   -
          Common: dash; <hyphen>; <minus>. Rare: [worm]; option; dak;
          bithorpe.

   .
          Common: dot; point; <period>; <decimal point>. Rare: radix
          point; full stop; [spot].

   /
          Common: slash; stroke; <slant>; forward slash. Rare: diagonal;
          solidus; over; slak; virgule; [slat].

   :
          Common: <colon>. Rare: dots; [two-spot].

   ;
          Common: <semicolon>; semi. Rare: weenie; [hybrid], pit-thwong.

   < >
          Common: <less/greater than>; bra/ket; l/r angle; l/r angle
          bracket; l/r broket. Rare: from/{into, towards}; read
          from/write to; suck/blow; comes-from/gozinta; in/out;
          crunch/zap (all from UNIX); tic/tac; [angle/right angle].

   =
          Common: <equals>; gets; takes. Rare: quadrathorpe; [half-mesh].

   ?
          Common: query; <question mark>; [648]ques. Rare: whatmark;
          [what]; wildchar; huh; hook; buttonhook; hunchback.

   @
          Common: at sign; at; strudel. Rare: each; vortex; whorl;
          [whirlpool]; cyclone; snail; ape; cat; rose; cabbage;
          <commercial at>.

   V
          Rare: [book].

   [ ]
          Common: l/r square bracket; l/r bracket; <opening/closing
          bracket>; bracket/unbracket. Rare: square/unsquare; [U turn/U
          turn back].

   \
          Common: backslash, hack, whack; escape (from C/UNIX); reverse
          slash; slosh; backslant; backwhack. Rare: bash; <reverse
          slant>; reversed virgule; [backslat].

   ^
          Common: hat; control; uparrow; caret; <circumflex>. Rare: xor
          sign, chevron; [shark (or shark-fin)]; to the (`to the power
          of'); fang; pointer (in Pascal).

   _
          Common: <underline>; underscore; underbar; under. Rare: score;
          backarrow; skid; [flatworm].

   `
          Common: backquote; left quote; left single quote; open quote;
          <grave accent>; grave. Rare: backprime; [backspark];
          unapostrophe; birk; blugle; back tick; back glitch; push;
          <opening single quotation mark>; quasiquote.

   { }
          Common: o/c brace; l/r brace; l/r squiggly; l/r squiggly
          bracket/brace; l/r curly bracket/brace; <opening/closing
          brace>. Rare: brace/unbrace; curly/uncurly; leftit/rytit; l/r
          squirrelly; [embrace/bracelet].

   |
          Common: bar; or; or-bar; v-bar; pipe; vertical bar. Rare:
          <vertical line>; gozinta; thru; pipesinta (last three from
          UNIX); [spike].

   ~
          Common: <tilde>; squiggle; [649]twiddle; not. Rare: approx;
          wiggle; swung dash; enyay; [sqiggle (sic)].

   The pronunciation of # as `pound' is common in the U.S. but a bad
   idea; [650]Commonwealth Hackish has its own, rather more apposite use
   of `pound sign' (confusingly, on British keyboards the pound graphic
   happens to replace #; thus Britishers sometimes call # on a U.S.-ASCII
   keyboard `pound', compounding the American error). The U.S. usage
   derives from an old-fashioned commercial practice of using a # suffix
   to tag pound weights on bills of lading. The character is usually
   pronounced `hash' outside the U.S. There are more culture wars over
   the correct pronunciation of this character than any other, which has
   led to the [651]ha ha only serious suggestion that it be pronounced
   `shibboleth' (see Judges 12:6 in an Old Testament or Tanakh).

   The `uparrow' name for circumflex and `leftarrow' name for underline
   are historical relics from archaic ASCII (the 1963 version), which had
   these graphics in those character positions rather than the modern
   punctuation characters.

   The `swung dash' or `approximation' sign is not quite the same as
   tilde in typeset material but the ASCII tilde serves for both (compare
   [652]angle brackets).

   Some other common usages cause odd overlaps. The #, $, >, and &
   characters, for example, are all pronounced "hex" in different
   communities because various assemblers use them as a prefix tag for
   hexadecimal constants (in particular, # in many assembler-programming
   cultures, $ in the 6502 world, > at Texas Instruments, and & on the
   BBC Micro, Sinclair, and some Z80 machines). See also [653]splat.

   The inability of ASCII text to correctly represent any of the world's
   other major languages makes the designers' choice of 7 bits look more
   and more like a serious [654]misfeature as the use of international
   networks continues to increase (see [655]software rot). Hardware and
   software from the U.S. still tends to embody the assumption that ASCII
   is the universal character set and that characters have 7 bits; this
   is a major irritant to people who want to use a character set suited
   to their own languages. Perversely, though, efforts to solve this
   problem by proliferating `national' character sets produce an
   evolutionary pressure to use a smaller subset common to all those in
   use.
     _________________________________________________________________

   Node:ASCII art, Next:[656]ASCIIbetical order, Previous:[657]ASCII,
   Up:[658]= A =

   ASCII art n.

   The fine art of drawing diagrams using the ASCII character set (mainly
   |, -, /, \, and +). Also known as `character graphics' or `ASCII
   graphics'; see also [659]boxology. Here is a serious example:
    o----)||(--+--|<----+   +---------o + D O
      L  )||(  |        |   |             C U
    A I  )||(  +-->|-+  |   +-\/\/-+--o -   T
    C N  )||(        |  |   |      |        P
      E  )||(  +-->|-+--)---+--|(--+-o      U
         )||(  |        |          | GND    T
    o----)||(--+--|<----+----------+

    A power supply consisting of a full wave rectifier circuit
    feeding a capacitor input filter circuit

   And here are some very silly examples:
  |\/\/\/|     ____/|              ___    |\_/|    ___
  |      |     \ o.O|   ACK!      /   \_  |` '|  _/   \
  |      |      =(_)=  THPHTH!   /      \/     \/      \
  | (o)(o)        U             /                       \
  C      _)  (__)                \/\/\/\  _____  /\/\/\/
  | ,___|    (oo)                       \/     \/
  |   /       \/-------\         U                  (__)
 /____\        ||     | \    /---V  `v'-            oo )
/      \       ||---W||  *  * |--|   || |`.         |_/\

               //-o-\\
        ____---=======---____
    ====___\   /.. ..\   /___====      Klingons rule OK!
  //        ---\__O__/---        \\
  \_\                           /_/

   There is an important subgenre of ASCII art that puns on the standard
   character names in the fashion of a rebus.
+--------------------------------------------------------+
|      ^^^^^^^^^^^^                                      |
| ^^^^^^^^^^^            ^^^^^^^^^                       |
|                 ^^^^^^^^^^^^^            ^^^^^^^^^^^^^ |
|        ^^^^^^^         B       ^^^^^^^^^               |
|  ^^^^^^^^^          ^^^            ^^^^^^^^^^^^^^      |
+--------------------------------------------------------+
             " A Bee in the Carrot Patch "

   Within humorous ASCII art, there is for some reason an entire
   flourishing subgenre of pictures of silly cows. Four of these are
   reproduced in the examples above, here are three more:
         (__)              (__)              (__)
         (\/)              ($$)              (**)
  /-------\/        /-------\/        /-------\/
 / | 666 ||        / |=====||        / |     ||
*  ||----||       *  ||----||       *  ||----||
   ~~    ~~          ~~    ~~          ~~    ~~
Satanic cow    This cow is a Yuppie   Cow in love

   Finally, here's a magnificent example of ASCII art depicting an
   Edwardian train station in Dunedin, New Zealand:
                                  .-.
                                 /___\
                                 |___|
                                 |]_[|
                                 / I \
                              JL/  |  \JL
   .-.                    i   ()   |   ()   i                    .-.
   |_|     .^.           /_\  LJ=======LJ  /_\           .^.     |_|
._/___\._./___\_._._._._.L_J_/.-.     .-.\_L_J._._._._._/___\._./___\._._._
       ., |-,-| .,       L_J  |_| [I] |_|  L_J       ., |-,-| .,        .,
       JL |-O-| JL       L_J%%%%%%%%%%%%%%%L_J       JL |-O-| JL        JL
IIIIII_HH_'-'-'_HH_IIIIII|_|=======H=======|_|IIIIII_HH_'-'-'_HH_IIIIII_HH_
-------[]-------[]-------[_]----\.=I=./----[_]-------[]-------[]--------[]-
 _/\_  ||\\_I_//||  _/\_ [_] []_/_L_J_\_[] [_] _/\_  ||\\_I_//||  _/\_  ||\
 |__|  ||=/_|_\=||  |__|_|_|   _L_L_J_J_   |_|_|__|  ||=/_|_\=||  |__|  ||-
 |__|  |||__|__|||  |__[___]__--__===__--__[___]__|  |||__|__|||  |__|  |||
IIIIIII[_]IIIII[_]IIIIIL___J__II__|_|__II__L___JIIIII[_]IIIII[_]IIIIIIII[_]
 \_I_/ [_]\_I_/[_] \_I_[_]\II/[]\_\I/_/[]\II/[_]\_I_/ [_]\_I_/[_] \_I_/ [_]
./   \.L_J/   \L_J./   L_JI  I[]/     \[]I  IL_J    \.L_J/   \L_J./   \.L_J
|     |L_J|   |L_J|    L_J|  |[]|     |[]|  |L_J     |L_J|   |L_J|     |L_J
|_____JL_JL___JL_JL____|-||  |[]|     |[]|  ||-|_____JL_JL___JL_JL_____JL_J

   There is a newsgroup, alt.ascii-art, devoted to this genre; however,
   see also [660]warlording.
     _________________________________________________________________

   Node:ASCIIbetical order, Next:[661]astroturfing, Previous:[662]ASCII
   art, Up:[663]= A =

   ASCIIbetical order /as'kee-be'-t*-kl or'dr/ adj.,n.

   Used to indicate that data is sorted in ASCII collated order rather
   than alphabetical order. This lexicon is sorted in something close to
   ASCIIbetical order, but with case ignored and entries beginning with
   non-alphabetic characters moved to the end. "At my video store, they
   used their computer to sort the videos into ASCIIbetical order, so I
   couldn't find `"Crocodile" Dundee' until I thought to look before
   `2001' and `48 HRS.'!"
     _________________________________________________________________

   Node:astroturfing, Next:[664]atomic, Previous:[665]ASCIIbetical order,
   Up:[666]= A =

   astroturfing n.

   The use of paid shills to create the impression of a popular movement,
   through means like letters to newspapers from soi-disant `concerned
   citizens', paid opinion pieces, and the formation of grass-roots
   lobbying groups that are actually funded by a PR group (astroturf is
   fake grass; hence the term). This term became common among hackers
   after it came to light in early 1998 that Microsoft had attempted to
   use such tactics to forestall the U.S. Department of Justice's
   antitrust action against the company.

   This backfired horribly, angering a number of state attorneys-general
   enough to induce them to go public with plans to join the Federal
   suit. It also set anybody defending Microsoft on the net for the
   accusation "You're just astroturfing!".
     _________________________________________________________________

   Node:atomic, Next:[667]attoparsec, Previous:[668]astroturfing,
   Up:[669]= A =

   atomic adj.

   [from Gk. `atomos', indivisible] 1. Indivisible; cannot be split up.
   For example, an instruction may be said to do several things
   `atomically', i.e., all the things are done immediately, and there is
   no chance of the instruction being half-completed or of another being
   interspersed. Used esp. to convey that an operation cannot be screwed
   up by interrupts. "This routine locks the file and increments the
   file's semaphore atomically." 2. [primarily techspeak] Guaranteed to
   complete successfully or not at all, usu. refers to database
   transactions. If an error prevents a partially-performed transaction
   from proceeding to completion, it must be "backed out," as the
   database must not be left in an inconsistent state.

   Computer usage, in either of the above senses, has none of the
   connotations that `atomic' has in mainstream English (i.e. of
   particles of matter, nuclear explosions etc.).
     _________________________________________________________________

   Node:attoparsec, Next:[670]AUP, Previous:[671]atomic, Up:[672]= A =

   attoparsec n.

   About an inch. `atto-' is the standard SI prefix for multiplication by
   10^(-18). A parsec (parallax-second) is 3.26 light-years; an
   attoparsec is thus 3.26 * 10^(-18) light years, or about 3.1 cm (thus,
   1 attoparsec/[673]microfortnight equals about 1 inch/sec). This unit
   is reported to be in use (though probably not very seriously) among
   hackers in the U.K. See [674]micro-.
     _________________________________________________________________

   Node:AUP, Next:[675]autobogotiphobia, Previous:[676]attoparsec,
   Up:[677]= A =

   AUP /A-U-P/

   Abbreviation, "Acceptable Use Policy". The policy of a given ISP which
   sets out what the ISP considers to be (un)acceptable uses of its
   Internet resources.
     _________________________________________________________________

   Node:autobogotiphobia, Next:[678]automagically, Previous:[679]AUP,
   Up:[680]= A =

   autobogotiphobia /aw'toh-boh-got`*-foh'bee-*/

   n. See [681]bogotify.
     _________________________________________________________________

   Node:automagically, Next:[682]avatar, Previous:[683]autobogotiphobia,
   Up:[684]= A =

   automagically /aw-toh-maj'i-klee/ adv.

   Automatically, but in a way that, for some reason (typically because
   it is too complicated, or too ugly, or perhaps even too trivial), the
   speaker doesn't feel like explaining to you. See [685]magic. "The
   C-INTERCAL compiler generates C, then automagically invokes cc(1) to
   produce an executable."

   This term is quite old, going back at least to the mid-70s in jargon
   and probably much earlier. The word `automagic' occurred in
   advertising (for a shirt-ironing gadget) as far back as the late
   1940s.
     _________________________________________________________________

   Node:avatar, Next:[686]awk, Previous:[687]automagically, Up:[688]= A =

   avatar n. Syn.

   [in Hindu mythology, the incarnation of a god] 1. Among people working
   on virtual reality and [689]cyberspace interfaces, an avatar is an
   icon or representation of a user in a shared virtual reality. The term
   is sometimes used on [690]MUDs. 2. [CMU, Tektronix] [691]root,
   [692]superuser. There are quite a few Unix machines on which the name
   of the superuser account is `avatar' rather than `root'. This quirk
   was originated by a CMU hacker who found the terms `root' and
   `superuser' unimaginative, and thought `avatar' might better impress
   people with the responsibility they were accepting.
     _________________________________________________________________

   Node:awk, Next:[693]B5, Previous:[694]avatar, Up:[695]= A =

   awk /awk/

   1. n. [Unix techspeak] An interpreted language for massaging text data
   developed by Alfred Aho, Peter Weinberger, and Brian Kernighan (the
   name derives from their initials). It is characterized by C-like
   syntax, a declaration-free approach to variable typing and
   declarations, associative arrays, and field-oriented text processing.
   See also [696]Perl. 2. n. Editing term for an expression awkward to
   manipulate through normal [697]regexp facilities (for example, one
   containing a [698]newline). 3. vt. To process data using awk(1).
     _________________________________________________________________

   Node:= B =, Next:[699]= C =, Previous:[700]= A =, Up:[701]The Jargon
   Lexicon

= B =

     * [702]B5:
     * [703]back door:
     * [704]backbone cabal:
     * [705]backbone site:
     * [706]backgammon:
     * [707]background:
     * [708]backreference:
     * [709]backronym:
     * [710]backspace and overstrike:
     * [711]backward combatability:
     * [712]BAD:
     * [713]Bad and Wrong:
     * [714]Bad Thing:
     * [715]bag on the side:
     * [716]bagbiter:
     * [717]bagbiting:
     * [718]baggy pantsing:
     * [719]balloonian variable:
     * [720]bamf:
     * [721]banana label:
     * [722]banana problem:
     * [723]banner ad:
     * [724]banner site:
     * [725]barn:
     * [726]batbelt:
     * [727]Befunge:
     * [728]BI:
     * [729]binary four:
     * [730]bandwidth:
     * [731]bang:
     * [732]bang on:
     * [733]bang path:
     * [734]banner:
     * [735]bar:
     * [736]bare metal:
     * [737]barf:
     * [738]barfmail:
     * [739]barfulation:
     * [740]barfulous:
     * [741]barney:
     * [742]baroque:
     * [743]BASIC:
     * [744]batch:
     * [745]bathtub curve:
     * [746]baud:
     * [747]baud barf:
     * [748]baz:
     * [749]bazaar:
     * [750]bboard:
     * [751]BBS:
     * [752]BCPL:
     * [753]beam:
     * [754]beanie key:
     * [755]beep:
     * [756]beige toaster:
     * [757]bells and whistles:
     * [758]bells whistles and gongs:
     * [759]benchmark:
     * [760]Berkeley Quality Software:
     * [761]berklix:
     * [762]Berzerkeley:
     * [763]beta:
     * [764]BFI:
     * [765]bible:
     * [766]BiCapitalization:
     * [767]B1FF:
     * [768]biff:
     * [769]Big Gray Wall:
     * [770]big iron:
     * [771]Big Red Switch:
     * [772]Big Room:
     * [773]big win:
     * [774]big-endian:
     * [775]bignum:
     * [776]bigot:
     * [777]bit:
     * [778]bit bang:
     * [779]bit bashing:
     * [780]bit bucket:
     * [781]bit decay:
     * [782]bit rot:
     * [783]bit twiddling:
     * [784]bit-paired keyboard:
     * [785]bitblt:
     * [786]BITNET:
     * [787]bits:
     * [788]bitty box:
     * [789]bixen:
     * [790]bixie:
     * [791]black art:
     * [792]black hole:
     * [793]black magic:
     * [794]Black Screen of Death:
     * [795]Black Thursday:
     * [796]blammo:
     * [797]blargh:
     * [798]blast:
     * [799]blat:
     * [800]bletch:
     * [801]bletcherous:
     * [802]blink:
     * [803]blinkenlights:
     * [804]blit:
     * [805]blitter:
     * [806]blivet:
     * [807]bloatware:
     * [808]BLOB:
     * [809]block:
     * [810]block transfer computations:
     * [811]Bloggs Family:
     * [812]blow an EPROM:
     * [813]blow away:
     * [814]blow out:
     * [815]blow past:
     * [816]blow up:
     * [817]BLT:
     * [818]Blue Book:
     * [819]blue box:
     * [820]Blue Glue:
     * [821]blue goo:
     * [822]Blue Screen of Death:
     * [823]blue wire:
     * [824]blurgle:
     * [825]BNF:
     * [826]boa:
     * [827]board:
     * [828]boat anchor:
     * [829]bob:
     * [830]bodysurf code:
     * [831]BOF:
     * [832]BOFH:
     * [833]bogo-sort:
     * [834]bogometer:
     * [835]BogoMIPS:
     * [836]bogon:
     * [837]bogon filter:
     * [838]bogon flux:
     * [839]bogosity:
     * [840]bogotify:
     * [841]bogue out:
     * [842]bogus:
     * [843]Bohr bug:
     * [844]boink:
     * [845]bomb:
     * [846]bondage-and-discipline language:
     * [847]bonk/oif:
     * [848]book titles:
     * [849]boot:
     * [850]Borg:
     * [851]borken:
     * [852]bot:
     * [853]bot spot:
     * [854]bottom feeder:
     * [855]bottom-up implementation:
     * [856]bounce:
     * [857]bounce message:
     * [858]boustrophedon:
     * [859]box:
     * [860]boxed comments:
     * [861]boxen:
     * [862]boxology:
     * [863]bozotic:
     * [864]BQS:
     * [865]brain dump:
     * [866]brain fart:
     * [867]brain-damaged:
     * [868]brain-dead:
     * [869]braino:
     * [870]branch to Fishkill:
     * [871]bread crumbs:
     * [872]break:
     * [873]break-even point:
     * [874]breath-of-life packet:
     * [875]breedle:
     * [876]Breidbart Index:
     * [877]bring X to its knees:
     * [878]brittle:
     * [879]broadcast storm:
     * [880]brochureware:
     * [881]broken:
     * [882]broken arrow:
     * [883]BrokenWindows:
     * [884]broket:
     * [885]Brooks's Law:
     * [886]brown-paper-bag bug:
     * [887]browser:
     * [888]BRS:
     * [889]brute force:
     * [890]brute force and ignorance:
     * [891]BSD:
     * [892]BSOD:
     * [893]BUAF:
     * [894]BUAG:
     * [895]bubble sort:
     * [896]bucky bits:
     * [897]buffer chuck:
     * [898]buffer overflow:
     * [899]bug:
     * [900]bug-compatible:
     * [901]bug-for-bug compatible:
     * [902]bug-of-the-month club:
     * [903]buglix:
     * [904]bulletproof:
     * [905]bullschildt:
     * [906]bum:
     * [907]bump:
     * [908]burble:
     * [909]buried treasure:
     * [910]burn-in period:
     * [911]burst page:
     * [912]busy-wait:
     * [913]buzz:
     * [914]BWQ:
     * [915]by hand:
     * [916]byte:
     * [917]byte sex:
     * [918]bytesexual:
     * [919]Bzzzt! Wrong.:
     _________________________________________________________________

   Node:B5, Next:[920]back door, Previous:[921]awk, Up:[922]= B =

   B5 //

   [common] Abbreviation for "Babylon 5", a science-fiction TV series as
   revered among hackers as was the original Star Trek.
     _________________________________________________________________

   Node:back door, Next:[923]backbone cabal, Previous:[924]B5, Up:[925]=
   B =

   back door n.

   [common] A hole in the security of a system deliberately left in place
   by designers or maintainers. The motivation for such holes is not
   always sinister; some operating systems, for example, come out of the
   box with privileged accounts intended for use by field service
   technicians or the vendor's maintenance programmers. Syn. [926]trap
   door; may also be called a `wormhole'. See also [927]iron box,
   [928]cracker, [929]worm, [930]logic bomb.

   Historically, back doors have often lurked in systems longer than
   anyone expected or planned, and a few have become widely known. Ken
   Thompson's 1983 Turing Award lecture to the ACM admitted the existence
   of a back door in early Unix versions that may have qualified as the
   most fiendishly clever security hack of all time. In this scheme, the
   C compiler contained code that would recognize when the `login'
   command was being recompiled and insert some code recognizing a
   password chosen by Thompson, giving him entry to the system whether or
   not an account had been created for him.

   Normally such a back door could be removed by removing it from the
   source code for the compiler and recompiling the compiler. But to
   recompile the compiler, you have to use the compiler -- so Thompson
   also arranged that the compiler would recognize when it was compiling
   a version of itself, and insert into the recompiled compiler the code
   to insert into the recompiled `login' the code to allow Thompson entry
   -- and, of course, the code to recognize itself and do the whole thing
   again the next time around! And having done this once, he was then
   able to recompile the compiler from the original sources; the hack
   perpetuated itself invisibly, leaving the back door in place and
   active but with no trace in the sources.

   The talk that suggested this truly moby hack was published as
   "Reflections on Trusting Trust", "Communications of the ACM 27", 8
   (August 1984), pp. 761-763 (text available at
   [931]http://www.acm.org/classics). Ken Thompson has since confirmed
   that this hack was implemented and that the Trojan Horse code did
   appear in the login binary of a Unix Support group machine. Ken says
   the crocked compiler was never distributed. Your editor has heard two
   separate reports that suggest that the crocked login did make it out
   of Bell Labs, notably to BBN, and that it enabled at least one
   late-night login across the network by someone using the login name
   `kt'.
     _________________________________________________________________

   Node:backbone cabal, Next:[932]backbone site, Previous:[933]back door,
   Up:[934]= B =

   backbone cabal n.

   A group of large-site administrators who pushed through the [935]Great
   Renaming and reined in the chaos of [936]Usenet during most of the
   1980s. During most of its lifetime, the Cabal (as it was sometimes
   capitalized) steadfastly denied its own existence; it was almost
   obligatory for anyone privy to their secrets to respond "There is no
   Cabal" whenever the existence or activities of the group were
   speculated on in public.

   The result of this policy was an attractive aura of mystery. Even a
   decade after the cabal [937]mailing list disbanded in late 1988
   following a bitter internal catfight, many people believed (or claimed
   to believe) that it had not actually disbanded but only gone deeper
   underground with its power intact.

   This belief became a model for various paranoid theories about various
   Cabals with dark nefarious objectives beginning with taking over the
   Usenet or Internet. These paranoias were later satirized in ways that
   took on a life of their own. See [938]Eric Conspiracy for one example.

   See [939]NANA for the subsequent history of "the Cabal".
     _________________________________________________________________

   Node:backbone site, Next:[940]backgammon, Previous:[941]backbone
   cabal, Up:[942]= B =

   backbone site n.,obs.

   Formerly, a key Usenet and email site, one that processes a large
   amount of third-party traffic, especially if it is the home site of
   any of the regional coordinators for the Usenet maps. Notable backbone
   sites as of early 1993, when this sense of the term was beginning to
   pass out of general use due to wide availability of cheap Internet
   connections, included uunet and the mail machines at Rutgers
   University, UC Berkeley, [943]DEC's Western Research Laboratories,
   Ohio State University, and the University of Texas. Compare [944]rib
   site, [945]leaf site.

   [1996 update: This term is seldom heard any more. The UUCP network
   world that gave it meaning has nearly disappeared; everyone is on the
   Internet now and network traffic is distributed in very different
   patterns. Today one might see references to a `backbone router'
   instead --ESR]
     _________________________________________________________________

   Node:backgammon, Next:[946]background, Previous:[947]backbone site,
   Up:[948]= B =

   backgammon

   See [949]bignum (sense 3), [950]moby (sense 4), and [951]pseudoprime.
     _________________________________________________________________

   Node:background, Next:[952]backreference, Previous:[953]backgammon,
   Up:[954]= B =

   background n.,adj.,vt.

   [common] To do a task `in background' is to do it whenever
   [955]foreground matters are not claiming your undivided attention, and
   `to background' something means to relegate it to a lower priority.
   "For now, we'll just print a list of nodes and links; I'm working on
   the graph-printing problem in background." Note that this implies
   ongoing activity but at a reduced level or in spare time, in contrast
   to mainstream `back burner' (which connotes benign neglect until some
   future resumption of activity). Some people prefer to use the term for
   processing that they have queued up for their unconscious minds (a
   tack that one can often fruitfully take upon encountering an obstacle
   in creative work). Compare [956]amp off, [957]slopsucker.

   Technically, a task running in background is detached from the
   terminal where it was started (and often running at a lower priority);
   oppose [958]foreground. Nowadays this term is primarily associated
   with [959]Unix, but it appears to have been first used in this sense
   on OS/360.
     _________________________________________________________________

   Node:backreference, Next:[960]backronym, Previous:[961]background,
   Up:[962]= B =

   backreference n.

   1. In a regular expression or pattern match, the text which was
   matched within grouping parentheses parentheses. 2. The part of the
   pattern which refers back to the matched text. 3. By extension,
   anything which refers back to something which has been seen or
   discussed before. "When you said `she' just now, who were you
   backreferencing?"
     _________________________________________________________________

   Node:backronym, Next:[963]backspace and overstrike,
   Previous:[964]backreference, Up:[965]= B =

   backronym n.

   [portmanteau of back + acronym] A word interpreted as an acronym that
   was not originally so intended. This is a special case of what
   linguists call `back formation'. Examples are given under [966]BASIC,
   [967]recursive acronym (Cygnus), [968]Acme, and [969]mung. Discovering
   backronyms is a common form of wordplay among hackers. Compare
   [970]retcon.
     _________________________________________________________________

   Node:backspace and overstrike, Next:[971]backward combatability,
   Previous:[972]backronym, Up:[973]= B =

   backspace and overstrike interj.

   [rare] Whoa! Back up. Used to suggest that someone just said or did
   something wrong. Once common among APL programmers; may now be
   obsolete.
     _________________________________________________________________

   Node:backward combatability, Next:[974]BAD, Previous:[975]backspace
   and overstrike, Up:[976]= B =

   backward combatability /bak'w*rd k*m-bat'*-bil'*-tee/ n.

   [CMU, Tektronix: from `backward compatibility'] A property of hardware
   or software revisions in which previous protocols, formats, layouts,
   etc. are irrevocably discarded in favor of `new and improved'
   protocols, formats, and layouts, leaving the previous ones not merely
   deprecated but actively defeated. (Too often, the old and new versions
   cannot definitively be distinguished, such that lingering instances of
   the previous ones yield crashes or other infelicitous effects, as
   opposed to a simple "version mismatch" message.) A backwards
   compatible change, on the other hand, allows old versions to coexist
   without crashes or error messages, but too many major changes
   incorporating elaborate backwards compatibility processing can lead to
   extreme [977]software bloat. See also [978]flag day.
     _________________________________________________________________

   Node:BAD, Next:[979]Bad and Wrong, Previous:[980]backward
   combatability, Up:[981]= B =

   BAD /B-A-D/ adj.

   [IBM: acronym, `Broken As Designed'] Said of a program that is
   [982]bogus because of bad design and misfeatures rather than because
   of bugginess. See [983]working as designed.
     _________________________________________________________________

   Node:Bad and Wrong, Next:[984]Bad Thing, Previous:[985]BAD, Up:[986]=
   B =

   Bad and Wrong adj.

   [Durham, UK] Said of something that is both badly designed and wrongly
   executed. This common term is the prototype of, and is used by
   contrast with, three less common terms - Bad and Right (a kludge,
   something ugly but functional); Good and Wrong (an overblown GUI or
   other attractive nuisance); and (rare praise) Good and Right. These
   terms entered common use at Durham c.1994 and may have been imported
   from elsewhere; they are also in use at Oxford, and the emphatic form
   "Evil, Bad and Wrong" (abbreviated EBW) is reported fromm there. There
   are standard abbreviations: they start with B&R, a typo for "Bad and
   Wrong". Consequently, B&W is actually "Bad and Right", G&R = "Good and
   Wrong", and G&W = "Good and Right". Compare [987]evil and rude,
   [988]Good Thing, [989]Bad Thing.
     _________________________________________________________________

   Node:Bad Thing, Next:[990]bag on the side, Previous:[991]Bad and
   Wrong, Up:[992]= B =

   Bad Thing n.

   [very common; from the 1930 Sellar & Yeatman parody "1066 And All
   That"] Something that can't possibly result in improvement of the
   subject. This term is always capitalized, as in "Replacing all of the
   9600-baud modems with bicycle couriers would be a Bad Thing". Oppose
   [993]Good Thing. British correspondents confirm that [994]Bad Thing
   and [995]Good Thing (and prob. therefore [996]Right Thing and
   [997]Wrong Thing) come from the book referenced in the etymology,
   which discusses rulers who were Good Kings but Bad Things. This has
   apparently created a mainstream idiom on the British side of the pond.
   It is very common among American hackers, but not in mainstream usage
   here. Compare [998]Bad and Wrong.
     _________________________________________________________________

   Node:bag on the side, Next:[999]bagbiter, Previous:[1000]Bad Thing,
   Up:[1001]= B =

   bag on the side n.

   [prob. originally related to a colostomy bag] An extension to an
   established hack that is supposed to add some functionality to the
   original. Usually derogatory, implying that the original was being
   overextended and should have been thrown away, and the new product is
   ugly, inelegant, or bloated. Also v. phrase, `to hang a bag on the
   side [of]'. "C++? That's just a bag on the side of C ...." "They want
   me to hang a bag on the side of the accounting system."
     _________________________________________________________________

   Node:bagbiter, Next:[1002]bagbiting, Previous:[1003]bag on the side,
   Up:[1004]= B =

   bagbiter /bag'bi:t-*r/ n.

   1. Something, such as a program or a computer, that fails to work, or
   works in a remarkably clumsy manner. "This text editor won't let me
   make a file with a line longer than 80 characters! What a bagbiter!"
   2. A person who has caused you some trouble, inadvertently or
   otherwise, typically by failing to program the computer properly.
   Synonyms: [1005]loser, [1006]cretin, [1007]chomper. 3. `bite the bag'
   vi. To fail in some manner. "The computer keeps crashing every five
   minutes." "Yes, the disk controller is really biting the bag."

   The original loading of these terms was almost undoubtedly obscene,
   possibly referring to a douche bag or the scrotum (we have reports of
   "Bite the douche bag!" being used as a taunt at MIT 1970-1976, and we
   have another report that "Bite the bag!" was in common use at least as
   early as 1965), but in their current usage they have become almost
   completely sanitized.

   ITS's [1008]lexiphage program was the first and to date only known
   example of a program intended to be a bagbiter.
     _________________________________________________________________

   Node:bagbiting, Next:[1009]baggy pantsing, Previous:[1010]bagbiter,
   Up:[1011]= B =

   bagbiting adj.

   Having the quality of a [1012]bagbiter. "This bagbiting system won't
   let me compute the factorial of a negative number." Compare
   [1013]losing, [1014]cretinous, [1015]bletcherous, `barfucious' (under
   [1016]barfulous) and `chomping' (under [1017]chomp).
     _________________________________________________________________

   Node:baggy pantsing, Next:[1018]balloonian variable,
   Previous:[1019]bagbiting, Up:[1020]= B =

   baggy pantsing v.

   [Georgia Tech] A "baggy pantsing" is used to reprimand hackers who
   incautiously leave their terminals unlocked. The affected user will
   come back to find a post from them on internal newsgroups discussing
   exactly how baggy their pants are, an accepted stand-in for
   "unattentive user who left their work unprotected in the clusters". A
   properly-done baggy pantsing is highly mocking and humorous (see
   examples below). It is considered bad form to post a baggy pantsing to
   off-campus newsgroups or the more technical, serious groups. A
   particularly nice baggy pantsing may be "claimed" by immediately
   quoting the message in full, followed by your sig; this has the added
   benefit of keeping the embarassed victim from being able to delete the
   post. Interesting baggy-pantsings have been done involving adding
   commands to login scripts to repost the message every time the unlucky
   user logs in; Unix boxes on the residential network, when cracked,
   oftentimes have their homepages replaced (after being politely
   backedup to another file) with a baggy-pants message; .plan files are
   also occasionally targeted. Usage: "Prof. Greenlee fell asleep in the
   Solaris cluster again; we baggy-pantsed him to
   git.cc.class.2430.flame."
     _________________________________________________________________

   Node:balloonian variable, Next:[1021]bamf, Previous:[1022]baggy
   pantsing, Up:[1023]= B =

   balloonian variable n.

   [Commodore users; perh. a deliberate phonetic mangling of `boolean
   variable'?] Any variable that doesn't actually hold or control state,
   but must nevertheless be declared, checked, or set. A typical
   balloonian variable started out as a flag attached to some environment
   feature that either became obsolete or was planned but never
   implemented. Compatibility concerns (or politics attached to same) may
   require that such a flag be treated as though it were [1024]live.
     _________________________________________________________________

   Node:bamf, Next:[1025]banana label, Previous:[1026]balloonian
   variable, Up:[1027]= B =

   bamf /bamf/

   1. [from X-Men comics; originally "bampf"] interj. Notional sound made
   by a person or object teleporting in or out of the hearer's vicinity.
   Often used in [1028]virtual reality (esp. [1029]MUD) electronic
   [1030]fora when a character wishes to make a dramatic entrance or
   exit. 2. The sound of magical transformation, used in virtual reality
   [1031]fora like MUDs. 3. In MUD circles, "bamf" is also used to refer
   to the act by which a MUD server sends a special notification to the
   MUD client to switch its connection to another server ("I'll set up
   the old site to just bamf people over to our new location."). 4. Used
   by MUDders on occasion in a more general sense related to sense 3, to
   refer to directing someone to another location or resource ("A user
   was asking about some technobabble so I bamfed them to
   [1032]http://www.tuxedo.org/jargon/".)
     _________________________________________________________________

   Node:banana label, Next:[1033]banana problem, Previous:[1034]bamf,
   Up:[1035]= B =

   banana label n.

   The labels often used on the sides of [1036]macrotape reels, so called
   because they are shaped roughly like blunt-ended bananas. This term,
   like macrotapes themselves, is still current but visibly headed for
   obsolescence.
     _________________________________________________________________

   Node:banana problem, Next:[1037]binary four, Previous:[1038]banana
   label, Up:[1039]= B =

   banana problem n.

   [from the story of the little girl who said "I know how to spell
   `banana', but I don't know when to stop"]. Not knowing where or when
   to bring a production to a close (compare [1040]fencepost error). One
   may say `there is a banana problem' of an algorithm with poorly
   defined or incorrect termination conditions, or in discussing the
   evolution of a design that may be succumbing to featuritis (see also
   [1041]creeping elegance, [1042]creeping featuritis). See item 176
   under [1043]HAKMEM, which describes a banana problem in a
   [1044]Dissociated Press implementation. Also, see [1045]one-banana
   problem for a superficially similar but unrelated usage.
     _________________________________________________________________

   Node:binary four, Next:[1046]bandwidth, Previous:[1047]banana problem,
   Up:[1048]= B =

   binary four n.

   [Usenet] The finger, in the sense of `digitus impudicus'. This comes
   from an analogy between binary and the hand, i.e. 1=00001=thumb,
   2=00010=index finger, 3=00011=index and thumb, 4=00100. Considered
   silly. Prob. from humorous derivative of [1049]finger, sense 4.
     _________________________________________________________________

   Node:bandwidth, Next:[1050]bang, Previous:[1051]binary four,
   Up:[1052]= B =

   bandwidth n.

   1. [common] Used by hackers (in a generalization of its technical
   meaning) as the volume of information per unit time that a computer,
   person, or transmission medium can handle. "Those are amazing
   graphics, but I missed some of the detail -- not enough bandwidth, I
   guess." Compare [1053]low-bandwidth. This generalized usage began to
   go mainstream after the Internet population explosion of 1993-1994. 2.
   Attention span. 3. On [1054]Usenet, a measure of network capacity that
   is often wasted by people complaining about how items posted by others
   are a waste of bandwidth.
     _________________________________________________________________

   Node:bang, Next:[1055]bang on, Previous:[1056]bandwidth, Up:[1057]= B
   =

   bang

   1. n. Common spoken name for ! (ASCII 0100001), especially when used
   in pronouncing a [1058]bang path in spoken hackish. In [1059]elder
   days this was considered a CMUish usage, with MIT and Stanford hackers
   preferring [1060]excl or [1061]shriek; but the spread of Unix has
   carried `bang' with it (esp. via the term [1062]bang path) and it is
   now certainly the most common spoken name for !. Note that it is used
   exclusively for non-emphatic written !; one would not say
   "Congratulations bang" (except possibly for humorous purposes), but if
   one wanted to specify the exact characters `foo!' one would speak "Eff
   oh oh bang". See [1063]shriek, [1064]ASCII. 2. interj. An exclamation
   signifying roughly "I have achieved enlightenment!", or "The dynamite
   has cleared out my brain!" Often used to acknowledge that one has
   perpetrated a [1065]thinko immediately after one has been called on
   it.
     _________________________________________________________________

   Node:bang on, Next:[1066]bang path, Previous:[1067]bang, Up:[1068]= B
   =

   bang on vt.

   To stress-test a piece of hardware or software: "I banged on the new
   version of the simulator all day yesterday and it didn't crash once. I
   guess it is ready for release." The term [1069]pound on is synonymous.
     _________________________________________________________________

   Node:bang path, Next:[1070]banner, Previous:[1071]bang on, Up:[1072]=
   B =

   bang path n.

   [now historical] An old-style UUCP electronic-mail address specifying
   hops to get from some assumed-reachable location to the addressee, so
   called because each [1073]hop is signified by a [1074]bang sign. Thus,
   for example, the path ...!bigsite!foovax!barbox!me directs people to
   route their mail to machine bigsite (presumably a well-known location
   accessible to everybody) and from there through the machine foovax to
   the account of user me on barbox.

   In the bad old days of not so long ago, before autorouting mailers
   became commonplace, people often published compound bang addresses
   using the { } convention (see [1075]glob) to give paths from several
   big machines, in the hopes that one's correspondent might be able to
   get mail to one of them reliably (example: ...!{seismo, ut-sally,
   ihnp4}!rice!beta!gamma!me). Bang paths of 8 to 10 hops were not
   uncommon in 1981. Late-night dial-up UUCP links would cause week-long
   transmission times. Bang paths were often selected by both
   transmission time and reliability, as messages would often get lost.
   See [1076]Internet address, [1077]the network, and [1078]sitename.
     _________________________________________________________________

   Node:banner, Next:[1079]banner ad, Previous:[1080]bang path,
   Up:[1081]= B =

   banner n.

   1. The title page added to printouts by most print spoolers (see
   [1082]spool). Typically includes user or account ID information in
   very large character-graphics capitals. Also called a `burst page',
   because it indicates where to burst (tear apart) fanfold paper to
   separate one user's printout from the next. 2. A similar printout
   generated (typically on multiple pages of fan-fold paper) from
   user-specified text, e.g., by a program such as Unix's banner({1,6}).
   3. On interactive software, a first screen containing a logo and/or
   author credits and/or a copyright notice. This is probably now the
   commonest sense.
     _________________________________________________________________

   Node:banner ad, Next:[1083]banner site, Previous:[1084]banner,
   Up:[1085]= B =

   banner ad n.

   Any of the annoying graphical advertisements that span the tops of way
   too many Web pages.
     _________________________________________________________________

   Node:banner site, Next:[1086]bar, Previous:[1087]banner ad, Up:[1088]=
   B =

   banner site n.

   [warez d00dz] A FTP site storing pirated files where one must first
   click on several banners and/or subscribe to various `free' services,
   usually generating some form of revenues for the site owner, to be
   able to access the site. More often than not, the username/password
   painfully obtained by clicking on banners and subscribing to bogus
   services or mailing lists turns out to be non-working or gives access
   to a site that always responds busy. See [1089]ratio site, [1090]leech
   mode.
     _________________________________________________________________

   Node:bar, Next:[1091]bare metal, Previous:[1092]banner site,
   Up:[1093]= B =

   bar /bar/ n.

   1. [very common] The second [1094]metasyntactic variable, after
   [1095]foo and before [1096]baz. "Suppose we have two functions: FOO
   and BAR. FOO calls BAR...." 2. Often appended to [1097]foo to produce
   [1098]foobar.
     _________________________________________________________________

   Node:bare metal, Next:[1099]barf, Previous:[1100]bar, Up:[1101]= B =

   bare metal n.

   1. [common] New computer hardware, unadorned with such snares and
   delusions as an [1102]operating system, an [1103]HLL, or even
   assembler. Commonly used in the phrase `programming on the bare
   metal', which refers to the arduous work of [1104]bit bashing needed
   to create these basic tools for a new machine. Real bare-metal
   programming involves things like building boot proms and BIOS chips,
   implementing basic monitors used to test device drivers, and writing
   the assemblers that will be used to write the compiler back ends that
   will give the new machine a real development environment. 2.
   `Programming on the bare metal' is also used to describe a style of
   [1105]hand-hacking that relies on bit-level peculiarities of a
   particular hardware design, esp. tricks for speed and space
   optimization that rely on crocks such as overlapping instructions (or,
   as in the famous case described in [1106]The Story of Mel (in Appendix
   A), interleaving of opcodes on a magnetic drum to minimize fetch
   delays due to the device's rotational latency). This sort of thing has
   become less common as the relative costs of programming time and
   machine resources have changed, but is still found in heavily
   constrained environments such as industrial embedded systems, and in
   the code of hackers who just can't let go of that low-level control.
   See [1107]Real Programmer.

   In the world of personal computing, bare metal programming (especially
   in sense 1 but sometimes also in sense 2) is often considered a
   [1108]Good Thing, or at least a necessary evil (because these machines
   have often been sufficiently slow and poorly designed to make it
   necessary; see [1109]ill-behaved). There, the term usually refers to
   bypassing the BIOS or OS interface and writing the application to
   directly access device registers and machine addresses. "To get 19.2
   kilobaud on the serial port, you need to get down to the bare metal."
   People who can do this sort of thing well are held in high regard.
     _________________________________________________________________

   Node:barf, Next:[1110]barfmail, Previous:[1111]bare metal, Up:[1112]=
   B =

   barf /barf/ n.,v.

   [common; from mainstream slang meaning `vomit'] 1. interj. Term of
   disgust. This is the closest hackish equivalent of the Valspeak "gag
   me with a spoon". (Like, euwww!) See [1113]bletch. 2. vi. To say
   "Barf!" or emit some similar expression of disgust. "I showed him my
   latest hack and he barfed" means only that he complained about it, not
   that he literally vomited. 3. vi. To fail to work because of
   unacceptable input, perhaps with a suitable error message, perhaps
   not. Examples: "The division operation barfs if you try to divide by
   0." (That is, the division operation checks for an attempt to divide
   by zero, and if one is encountered it causes the operation to fail in
   some unspecified, but generally obvious, manner.) "The text editor
   barfs if you try to read in a new file before writing out the old
   one." See [1114]choke, [1115]gag. In Commonwealth Hackish, `barf' is
   generally replaced by `puke' or `vom'. [1116]barf is sometimes also
   used as a [1117]metasyntactic variable, like [1118]foo or [1119]bar.
     _________________________________________________________________

   Node:barfmail, Next:[1120]barfulation, Previous:[1121]barf, Up:[1122]=
   B =

   barfmail n.

   Multiple [1123]bounce messages accumulating to the level of serious
   annoyance, or worse. The sort of thing that happens when an
   inter-network mail gateway goes down or wonky.
     _________________________________________________________________

   Node:barfulation, Next:[1124]barfulous, Previous:[1125]barfmail,
   Up:[1126]= B =

   barfulation /bar`fyoo-lay'sh*n/ interj.

   Variation of [1127]barf used around the Stanford area. An exclamation,
   expressing disgust. On seeing some particularly bad code one might
   exclaim, "Barfulation! Who wrote this, Quux?"
     _________________________________________________________________

   Node:barfulous, Next:[1128]barn, Previous:[1129]barfulation,
   Up:[1130]= B =

   barfulous /bar'fyoo-l*s/ adj.

   (alt. `barfucious', /bar-fyoo-sh*s/) Said of something that would make
   anyone barf, if only for esthetic reasons.
     _________________________________________________________________

   Node:barn, Next:[1131]barney, Previous:[1132]barfulous, Up:[1133]= B =

   barn n.

   [uncommon; prob. from the nuclear military] An unexpectedly large
   quantity of something: a unit of measurement. "Why is /var/adm taking
   up so much space?" "The logs have grown to several barns." The source
   of this is clear: when physicists were first studying nuclear
   interactions, the probability was thought to be proportional to the
   cross-sectional area of the nucleus (this probability is still called
   the cross-section). Upon experimenting, they discovered the
   interactions were far more probable than expected; the nuclei were `as
   big as a barn'. The units for cross-sections were christened Barns,
   (10^-24 cm^2) and the book containing cross-sections has a picture of
   a barn on the cover.
     _________________________________________________________________

   Node:barney, Next:[1134]baroque, Previous:[1135]barn, Up:[1136]= B =

   barney n.

   In Commonwealth hackish, `barney' is to [1137]fred (sense #1) as
   [1138]bar is to [1139]foo. That is, people who commonly use `fred' as
   their first metasyntactic variable will often use `barney' second. The
   reference is, of course, to Fred Flintstone and Barney Rubble in the
   Flintstones cartoons.
     _________________________________________________________________

   Node:baroque, Next:[1140]BASIC, Previous:[1141]barney, Up:[1142]= B =

   baroque adj.

   [common] Feature-encrusted; complex; gaudy; verging on excessive. Said
   of hardware or (esp.) software designs, this has many of the
   connotations of [1143]elephantine or [1144]monstrosity but is less
   extreme and not pejorative in itself. "Metafont even has features to
   introduce random variations to its letterform output. Now that is
   baroque!" See also [1145]rococo.
     _________________________________________________________________

   Node:BASIC, Next:[1146]batbelt, Previous:[1147]baroque, Up:[1148]= B =

   BASIC /bay'-sic/ n.

   A programming language, originally designed for Dartmouth's
   experimental timesharing system in the early 1960s, which for many
   years was the leading cause of brain damage in proto-hackers. Edsger
   W. Dijkstra observed in "Selected Writings on Computing: A Personal
   Perspective" that "It is practically impossible to teach good
   programming style to students that have had prior exposure to BASIC:
   as potential programmers they are mentally mutilated beyond hope of
   regeneration." This is another case (like [1149]Pascal) of the
   cascading [1150]lossage that happens when a language deliberately
   designed as an educational toy gets taken too seriously. A novice can
   write short BASIC programs (on the order of 10-20 lines) very easily;
   writing anything longer (a) is very painful, and (b) encourages bad
   habits that will make it harder to use more powerful languages well.
   This wouldn't be so bad if historical accidents hadn't made BASIC so
   common on low-end micros in the 1980s. As it is, it probably ruined
   tens of thousands of potential wizards.

   [1995: Some languages called `BASIC' aren't quite this nasty any more,
   having acquired Pascal- and C-like procedures and control structures
   and shed their line numbers. --ESR]

   Note: the name is commonly parsed as Beginner's All-purpose Symbolic
   Instruction Code, but this is a [1151]backronym. BASIC was originally
   named Basic, simply because it was a simple and basic programming
   language. Because most programming language names were in fact
   acronyms, BASIC was often capitalized just out of habit or to be
   silly. No acronym for BASIC originally existed or was intended (as one
   can verify by reading texts through the early 1970s). Later, around
   the mid-1970s, people began to make up backronyms for BASIC because
   they weren't sure. Beginner's All-purpose Symbolic Instruction Code is
   the one that caught on.
     _________________________________________________________________

   Node:batbelt, Next:[1152]batch, Previous:[1153]BASIC, Up:[1154]= B =

   batbelt n.

   Many hackers routinely hang numerous devices such as pagers,
   cell-phones, personal organizers, leatherman multitools, pocket
   knives, flashlights, walkie-talkies, even miniature computers from
   their belts. When many of these devices are worn at once, the hacker's
   belt somewhat resembles Batman's utility belt; hence it is referred to
   as a batbelt.
     _________________________________________________________________

   Node:batch, Next:[1155]bathtub curve, Previous:[1156]batbelt,
   Up:[1157]= B =

   batch adj.

   1. Non-interactive. Hackers use this somewhat more loosely than the
   traditional technical definitions justify; in particular, switches on
   a normally interactive program that prepare it to receive
   non-interactive command input are often referred to as `batch mode'
   switches. A `batch file' is a series of instructions written to be
   handed to an interactive program running in batch mode. 2. Performance
   of dreary tasks all at one sitting. "I finally sat down in batch mode
   and wrote out checks for all those bills; I guess they'll turn the
   electricity back on next week..." 3. `batching up': Accumulation of a
   number of small tasks that can be lumped together for greater
   efficiency. "I'm batching up those letters to send sometime" "I'm
   batching up bottles to take to the recycling center."
     _________________________________________________________________

   Node:bathtub curve, Next:[1158]baud, Previous:[1159]batch, Up:[1160]=
   B =

   bathtub curve n.

   Common term for the curve (resembling an end-to-end section of one of
   those claw-footed antique bathtubs) that describes the expected
   failure rate of electronics with time: initially high, dropping to
   near 0 for most of the system's lifetime, then rising again as it
   `tires out'. See also [1161]burn-in period, [1162]infant mortality.
     _________________________________________________________________

   Node:baud, Next:[1163]baud barf, Previous:[1164]bathtub curve,
   Up:[1165]= B =

   baud /bawd/ n.

   [simplified from its technical meaning] n. Bits per second. Hence
   kilobaud or Kbaud, thousands of bits per second. The technical meaning
   is `level transitions per second'; this coincides with bps only for
   two-level modulation with no framing or stop bits. Most hackers are
   aware of these nuances but blithely ignore them.

   Historical note: `baud' was originally a unit of telegraph signalling
   speed, set at one pulse per second. It was proposed at the November,
   1926 conference of the Comité Consultatif International Des
   Communications Télégraphiques as an improvement on the then standard
   practice of referring to line speeds in terms of words per minute, and
   named for Jean Maurice Emile Baudot (1845-1903), a French engineer who
   did a lot of pioneering work in early teleprinters.
     _________________________________________________________________

   Node:baud barf, Next:[1166]baz, Previous:[1167]baud, Up:[1168]= B =

   baud barf /bawd barf/ n.

   The garbage one gets a terminal (or terminal emulator) when using a
   modem connection with some protocol setting (esp. line speed)
   incorrect, or when someone picks up a voice extension on the same
   line, or when really bad line noise disrupts the connection. Baud barf
   is not completely [1169]random, by the way; hackers with a lot of
   serial-line experience can usually tell whether the device at the
   other end is expecting a higher or lower speed than the terminal is
   set to. Really experienced ones can identify particular speeds.
     _________________________________________________________________

   Node:baz, Next:[1170]bazaar, Previous:[1171]baud barf, Up:[1172]= B =

   baz /baz/ n.

   1. [common] The third [1173]metasyntactic variable "Suppose we have
   three functions: FOO, BAR, and BAZ. FOO calls BAR, which calls
   BAZ...." (See also [1174]fum) 2. interj. A term of mild annoyance. In
   this usage the term is often drawn out for 2 or 3 seconds, producing
   an effect not unlike the bleating of a sheep; /baaaaaaz/. 3.
   Occasionally appended to [1175]foo to produce `foobaz'.

   Earlier versions of this lexicon derived `baz' as a Stanford
   corruption of [1176]bar. However, Pete Samson (compiler of the
   [1177]TMRC lexicon) reports it was already current when he joined TMRC
   in 1958. He says "It came from "Pogo". Albert the Alligator, when
   vexed or outraged, would shout `Bazz Fazz!' or `Rowrbazzle!' The club
   layout was said to model the (mythical) New England counties of
   Rowrfolk and Bassex (Rowrbazzle mingled with
   (Norfolk/Suffolk/Middlesex/Essex)."
     _________________________________________________________________

   Node:bazaar, Next:[1178]bboard, Previous:[1179]baz, Up:[1180]= B =

   bazaar n.,adj.

   In 1997, after meditatating on the success of [1181]Linux for three
   years, the Jargon File's own editor ESR wrote an analytical paper on
   hacker culture and development models titled [1182]The Cathedral and
   the Bazaar. The main argument of the paper was that [1183]Brooks's Law
   is not the whole story; given the right social machinery, debugging
   can be efficiently parallelized across large numbers of programmers.
   The title metaphor caught on (see also [1184]cathedral), and the style
   of development typical in the Linux community is now often referred to
   as the bazaar mode. Its characteristics include releasing code early
   and often, and actively seeking the largest possible pool of peer
   reviewers.
     _________________________________________________________________

   Node:bboard, Next:[1185]BBS, Previous:[1186]bazaar, Up:[1187]= B =

   bboard /bee'bord/ n.

   [contraction of `bulletin board'] 1. Any electronic bulletin board;
   esp. used of [1188]BBS systems running on personal micros, less
   frequently of a Usenet [1189]newsgroup (in fact, use of this term for
   a newsgroup generally marks one either as a [1190]newbie fresh in from
   the BBS world or as a real old-timer predating Usenet). 2. At CMU and
   other colleges with similar facilities, refers to campus-wide
   electronic bulletin boards. 3. The term `physical bboard' is sometimes
   used to refer to an old-fashioned, non-electronic cork-and-thumbtack
   memo board. At CMU, it refers to a particular one outside the CS
   Lounge.

   In either of senses 1 or 2, the term is usually prefixed by the name
   of the intended board (`the Moonlight Casino bboard' or `market
   bboard'); however, if the context is clear, the better-read bboards
   may be referred to by name alone, as in (at CMU) "Don't post for-sale
   ads on general".
     _________________________________________________________________

   Node:BBS, Next:[1191]BCPL, Previous:[1192]bboard, Up:[1193]= B =

   BBS /B-B-S/ n.

   [common; abbreviation, `Bulletin Board System'] An electronic bulletin
   board system; that is, a message database where people can log in and
   leave broadcast messages for others grouped (typically) into
   [1194]topic groups. The term was especially applied to the thousands
   of local BBS systems that operated during the pre-Internet
   microcomputer era of roughly 1980 to 1995, typically run by amateurs
   for fun out of their homes on MS-DOS boxes with a single modem line
   each. Fans of Usenet and Internet or the big commercial timesharing
   bboards such as CompuServe and GEnie tended to consider local BBSes
   the low-rent district of the hacker culture, but they served a
   valuable function by knitting together lots of hackers and users in
   the personal-micro world who would otherwise have been unable to
   exchange code at all. Post-Internet, BBSs are likely to be local
   newsgroups on an ISP; efficiency has increased but a certain flavor
   has been lost. See also [1195]bboard.
     _________________________________________________________________

   Node:BCPL, Next:[1196]beam, Previous:[1197]BBS, Up:[1198]= B =

   BCPL // n.

   [abbreviation, `Basic Combined Programming Language') A programming
   language developed by Martin Richards in Cambridge in 1967. It is
   remarkable for its rich syntax, small size of compiler (it can be run
   in 16k) and extreme portability. It reached break-even point at a very
   early stage, and was the language in which the original [1199]hello
   world program was written. It has been ported to so many different
   systems that its creator confesses to having lost count. It has only
   one data type (a machine word) which can be used as an integer, a
   character, a floating point number, a pointer, or almost anything
   else, depending on context. BCPL was a precursor of C, which inherited
   some of its features.
     _________________________________________________________________

   Node:beam, Next:[1200]beanie key, Previous:[1201]BCPL, Up:[1202]= B =

   beam vt.

   [from Star Trek Classic's "Beam me up, Scotty!"] 1. To transfer
   [1203]softcopy of a file electronically; most often in combining forms
   such as `beam me a copy' or `beam that over to his site'. 2. Palm
   Pilot users very commonly use this term for the act of exchanging bits
   via the infrared links on their machines (this term seems to have
   originated with the ill-fated Newton Message Pad). Compare
   [1204]blast, [1205]snarf, [1206]BLT.
     _________________________________________________________________

   Node:beanie key, Next:[1207]beep, Previous:[1208]beam, Up:[1209]= B =

   beanie key n.

   [Mac users] See [1210]command key.
     _________________________________________________________________

   Node:beep, Next:[1211]Befunge, Previous:[1212]beanie key, Up:[1213]= B
   =

   beep n.,v.

   Syn. [1214]feep. This term is techspeak under MS-DOS and OS/2, and
   seems to be generally preferred among micro hobbyists.
     _________________________________________________________________

   Node:Befunge, Next:[1215]beige toaster, Previous:[1216]beep,
   Up:[1217]= B =

   Befunge n.

   A worthy companion to [1218]INTERCAL; a computer language family which
   escapes the quotidian limitation of linear control flow and embraces
   program counters flying through multiple dimensions with exotic
   topologies. Sadly, the Befunge home page has vanished, but a Befunge
   version of the [1219]hello world program is at
   [1220]http://www.catseye.mb.ca/esoteric/befunge.html.
     _________________________________________________________________

   Node:beige toaster, Next:[1221]bells and whistles,
   Previous:[1222]Befunge, Up:[1223]= B =

   beige toaster n.

   A Macintosh. See [1224]toaster; compare [1225]Macintrash,
   [1226]maggotbox.
     _________________________________________________________________

   Node:bells and whistles, Next:[1227]bells whistles and gongs,
   Previous:[1228]beige toaster, Up:[1229]= B =

   bells and whistles n.

   [common] Features added to a program or system to make it more
   [1230]flavorful from a hacker's point of view, without necessarily
   adding to its utility for its primary function. Distinguished from
   [1231]chrome, which is intended to attract users. "Now that we've got
   the basic program working, let's go back and add some bells and
   whistles." No one seems to know what distinguishes a bell from a
   whistle. The recognized emphatic form is "bells, whistles, and gongs".

   It used to be thought that this term derived from the toyboxes on
   theater organs. However, the "and gongs" strongly suggests a different
   origin, at sea. Before powered horns, ships routinely used bells,
   whistles, and gongs to signal each other over longer distances than
   voice can carry.
     _________________________________________________________________

   Node:bells whistles and gongs, Next:[1232]benchmark,
   Previous:[1233]bells and whistles, Up:[1234]= B =

   bells whistles and gongs n.

   A standard elaborated form of [1235]bells and whistles; typically said
   with a pronounced and ironic accent on the `gongs'.
     _________________________________________________________________

   Node:benchmark, Next:[1236]Berkeley Quality Software,
   Previous:[1237]bells whistles and gongs, Up:[1238]= B =

   benchmark n.

   [techspeak] An inaccurate measure of computer performance. "In the
   computer industry, there are three kinds of lies: lies, damn lies, and
   benchmarks." Well-known ones include Whetstone, Dhrystone, Rhealstone
   (see [1239]h), the Gabriel LISP benchmarks (see [1240]gabriel), the
   SPECmark suite, and LINPACK. See also [1241]machoflops, [1242]MIPS,
   [1243]smoke and mirrors.
     _________________________________________________________________

   Node:Berkeley Quality Software, Next:[1244]berklix,
   Previous:[1245]benchmark, Up:[1246]= B =

   Berkeley Quality Software adj.

   (often abbreviated `BQS') Term used in a pejorative sense to refer to
   software that was apparently created by rather spaced-out hackers late
   at night to solve some unique problem. It usually has nonexistent,
   incomplete, or incorrect documentation, has been tested on at least
   two examples, and core dumps when anyone else attempts to use it. This
   term was frequently applied to early versions of the dbx(1) debugger.
   See also [1247]Berzerkeley.

   Note to British and Commonwealth readers: that's /berk'lee/, not
   /bark'lee/ as in British Received Pronunciation.
     _________________________________________________________________

   Node:berklix, Next:[1248]Berzerkeley, Previous:[1249]Berkeley Quality
   Software, Up:[1250]= B =

   berklix /berk'liks/ n.,adj.

   [contraction of `Berkeley Unix'] See [1251]BSD. Not used at Berkeley
   itself. May be more common among [1252]suits attempting to sound like
   cognoscenti than among hackers, who usually just say `BSD'.
     _________________________________________________________________

   Node:Berzerkeley, Next:[1253]beta, Previous:[1254]berklix, Up:[1255]=
   B =

   Berzerkeley /b*r-zer'klee/ n.

   [from `berserk', via the name of a now-deceased record label; poss.
   originated by famed columnist Herb Caen] Humorous distortion of
   `Berkeley' used esp. to refer to the practices or products of the
   [1256]BSD Unix hackers. See [1257]software bloat,
   [1258]Missed'em-five, [1259]Berkeley Quality Software.

   Mainstream use of this term in reference to the cultural and political
   peculiarities of UC Berkeley as a whole has been reported from as far
   back as the 1960s.
     _________________________________________________________________

   Node:beta, Next:[1260]BFI, Previous:[1261]Berzerkeley, Up:[1262]= B =

   beta /bay't*/, /be't*/ or (Commonwealth) /bee't*/ n.

   1. Mostly working, but still under test; usu. used with `in': `in
   beta'. In the [1263]Real World, systems (hardware or software)
   software often go through two stages of release testing: Alpha
   (in-house) and Beta (out-house?). Beta releases are generally made to
   a group of lucky (or unlucky) trusted customers. 2. Anything that is
   new and experimental. "His girlfriend is in beta" means that he is
   still testing for compatibility and reserving judgment. 3. Flaky;
   dubious; suspect (since beta software is notoriously buggy).

   Historical note: More formally, to beta-test is to test a pre-release
   (potentially unreliable) version of a piece of software by making it
   available to selected (or self-selected) customers and users. This
   term derives from early 1960s terminology for product cycle
   checkpoints, first used at IBM but later standard throughout the
   industry. `Alpha Test' was the unit, module, or component test phase;
   `Beta Test' was initial system test. These themselves came from
   earlier A- and B-tests for hardware. The A-test was a feasibility and
   manufacturability evaluation done before any commitment to design and
   development. The B-test was a demonstration that the engineering model
   functioned as specified. The C-test (corresponding to today's beta)
   was the B-test performed on early samples of the production design,
   and the D test was the C test repeated after the model had been in
   production a while.
     _________________________________________________________________

   Node:BFI, Next:[1264]bible, Previous:[1265]beta, Up:[1266]= B =

   BFI /B-F-I/ n.

   See [1267]brute force and ignorance. Also encountered in the variants
   `BFMI', `brute force and massive ignorance' and `BFBI' `brute force
   and bloody ignorance'. In dome parts of the U.S. this abbreviation was
   probably reinforced by a company called Browning-Ferris Industries who
   used to be in the waste-management business; a large BFI logo in
   white-on-blue could be seen on the sides of garbage trucks.
     _________________________________________________________________

   Node:bible, Next:[1268]BiCapitalization, Previous:[1269]BFI,
   Up:[1270]= B =

   bible n.

   1. One of a small number of fundamental source books such as
   [1271]Knuth, [1272]K&R, or the [1273]Camel Book. 2. The most detailed
   and authoritative reference for a particular language, operating
   system, or other complex software system.
     _________________________________________________________________

   Node:BiCapitalization, Next:[1274]B1FF, Previous:[1275]bible,
   Up:[1276]= B =

   BiCapitalization n.

   The act said to have been performed on trademarks (such as
   [1277]PostScript, NeXT, [1278]NeWS, VisiCalc, FrameMaker, TK!solver,
   EasyWriter) that have been raised above the ruck of common coinage by
   nonstandard capitalization. Too many [1279]marketroid types think this
   sort of thing is really cute, even the 2,317th time they do it.
   Compare [1280]studlycaps.
     _________________________________________________________________

   Node:B1FF, Next:[1281]BI, Previous:[1282]BiCapitalization, Up:[1283]=
   B =

   B1FF /bif/ [Usenet] (alt. `BIFF') n.

   The most famous [1284]pseudo, and the prototypical [1285]newbie.
   Articles from B1FF feature all uppercase letters sprinkled liberally
   with bangs, typos, `cute' misspellings (EVRY BUDY LUVS GOOD OLD BIFF
   CUZ HE"S A K00L DOOD AN HE RITES REEL AWESUM THINGZ IN CAPITULL LETTRS
   LIKE THIS!!!), use (and often misuse) of fragments of [1286]talk mode
   abbreviations, a long [1287]sig block (sometimes even a [1288]doubled
   sig), and unbounded naivete. B1FF posts articles using his elder
   brother's VIC-20. B1FF's location is a mystery, as his articles appear
   to come from a variety of sites. However, [1289]BITNET seems to be the
   most frequent origin. The theory that B1FF is a denizen of BITNET is
   supported by B1FF's (unfortunately invalid) electronic mail address:
   B1FF@BIT.NET.

   [1993: Now It Can Be Told! My spies inform me that B1FF was originally
   created by Joe Talmadge <jat@cup.hp.com>, also the author of the
   infamous and much-plagiarized "Flamer's Bible". The BIFF filter he
   wrote was later passed to Richard Sexton, who posted BIFFisms much
   more widely. Versions have since been posted for the amusement of the
   net at large. See also [1290]Jeff K. --ESR]
     _________________________________________________________________

   Node:BI, Next:[1291]biff, Previous:[1292]B1FF, Up:[1293]= B =

   BI //

   Common written abbreviation for [1294]Breidbart Index.
     _________________________________________________________________

   Node:biff, Next:[1295]Big Gray Wall, Previous:[1296]BI, Up:[1297]= B =

   biff /bif/ vt.

   To notify someone of incoming mail. From the BSD utility biff(1),
   which was in turn named after a friendly dog who used to chase
   frisbees in the halls at UCB while 4.2BSD was in development. There
   was a legend that it had a habit of barking whenever the mailman came,
   but the author of biff says this is not true. No relation to
   [1298]B1FF.
     _________________________________________________________________

   Node:Big Gray Wall, Next:[1299]big iron, Previous:[1300]biff,
   Up:[1301]= B =

   Big Gray Wall n.

   What faces a [1302]VMS user searching for documentation. A full VMS
   kit comes on a pallet, the documentation taking up around 15 feet of
   shelf space before the addition of layered products such as compilers,
   databases, multivendor networking, and programming tools. Recent
   (since VMS version 5) documentation comes with gray binders; under VMS
   version 4 the binders were orange (`big orange wall'), and under
   version 3 they were blue. See [1303]VMS. Often contracted to `Gray
   Wall'.
     _________________________________________________________________

   Node:big iron, Next:[1304]Big Red Switch, Previous:[1305]Big Gray
   Wall, Up:[1306]= B =

   big iron n.

   [common] Large, expensive, ultra-fast computers. Used generally of
   [1307]number-crunching supercomputers such as Crays, but can include
   more conventional big commercial IBMish mainframes. Term of approval;
   compare [1308]heavy metal, oppose [1309]dinosaur.
     _________________________________________________________________

   Node:Big Red Switch, Next:[1310]Big Room, Previous:[1311]big iron,
   Up:[1312]= B =

   Big Red Switch n.

   [IBM] The power switch on a computer, esp. the `Emergency Pull' switch
   on an IBM [1313]mainframe or the power switch on an IBM PC where it
   really is large and red. "This !@%$% [1314]bitty box is hung again;
   time to hit the Big Red Switch." Sources at IBM report that, in tune
   with the company's passion for [1315]TLAs, this is often abbreviated
   as `BRS' (this has also become established on FidoNet and in the PC
   [1316]clone world). It is alleged that the emergency pull switch on an
   IBM 360/91 actually fired a non-conducting bolt into the main power
   feed; the BRSes on more recent mainframes physically drop a block into
   place so that they can't be pushed back in. People get fired for
   pulling them, especially inappropriately (see also [1317]molly-guard).
   Compare [1318]power cycle, [1319]three-finger salute, [1320]120 reset;
   see also [1321]scram switch.
     _________________________________________________________________

   Node:Big Room, Next:[1322]big win, Previous:[1323]Big Red Switch,
   Up:[1324]= B =

   Big Room n.

   (Also `Big Blue Room') The extremely large room with the blue ceiling
   and intensely bright light (during the day) or black ceiling with lots
   of tiny night-lights (during the night) found outside all computer
   installations. "He can't come to the phone right now, he's somewhere
   out in the Big Room."
     _________________________________________________________________

   Node:big win, Next:[1325]big-endian, Previous:[1326]Big Room,
   Up:[1327]= B =

   big win n.

   1. [common] Major success. 2. [MIT] Serendipity. "Yes, those two
   physicists discovered high-temperature superconductivity in a batch of
   ceramic that had been prepared incorrectly according to their
   experimental schedule. Small mistake; big win!" See [1328]win big.
     _________________________________________________________________

   Node:big-endian, Next:[1329]bignum, Previous:[1330]big win, Up:[1331]=
   B =

   big-endian adj.

   [common; From Swift's "Gulliver's Travels" via the famous paper "On
   Holy Wars and a Plea for Peace" by Danny Cohen, USC/ISI IEN 137, dated
   April 1, 1980] 1. Describes a computer architecture in which, within a
   given multi-byte numeric representation, the most significant byte has
   the lowest address (the word is stored `big-end-first'). Most
   processors, including the IBM 370 family, the [1332]PDP-10, the
   Motorola microprocessor families, and most of the various RISC designs
   are big-endian. Big-endian byte order is also sometimes called
   `network order'. See [1333]little-endian, [1334]middle-endian,
   [1335]NUXI problem, [1336]swab. 2. An [1337]Internet address the wrong
   way round. Most of the world follows the Internet standard and writes
   email addresses starting with the name of the computer and ending up
   with the name of the country. In the U.K. the Joint Networking Team
   had decided to do it the other way round before the Internet domain
   standard was established. Most gateway sites have [1338]ad-hockery in
   their mailers to handle this, but can still be confused. In
   particular, the address me@uk.ac.bris.pys.as could be interpreted in
   JANET's big-endian way as one in the U.K. (domain uk) or in the
   standard little-endian way as one in the domain as (American Samoa) on
   the opposite side of the world.
     _________________________________________________________________

   Node:bignum, Next:[1339]bigot, Previous:[1340]big-endian, Up:[1341]= B
   =

   bignum /big'nuhm/ n.

   [common; orig. from MIT MacLISP] 1. [techspeak] A multiple-precision
   computer representation for very large integers. 2. More generally,
   any very large number. "Have you ever looked at the United States
   Budget? There's bignums for you!" 3. [Stanford] In backgammon, large
   numbers on the dice especially a roll of double fives or double sixes
   (compare [1342]moby, sense 4). See also [1343]El Camino Bignum.

   Sense 1 may require some explanation. Most computer languages provide
   a kind of data called `integer', but such computer integers are
   usually very limited in size; usually they must be smaller than 2^(31)
   (2,147,483,648) or (on a [1344]bitty box) 2^(15) (32,768). If you want
   to work with numbers larger than that, you have to use floating-point
   numbers, which are usually accurate to only six or seven decimal
   places. Computer languages that provide bignums can perform exact
   calculations on very large numbers, such as 1000! (the factorial of
   1000, which is 1000 times 999 times 998 times ... times 2 times 1).
   For example, this value for 1000! was computed by the MacLISP system
   using bignums:
40238726007709377354370243392300398571937486421071
46325437999104299385123986290205920442084869694048
00479988610197196058631666872994808558901323829669
94459099742450408707375991882362772718873251977950
59509952761208749754624970436014182780946464962910
56393887437886487337119181045825783647849977012476
63288983595573543251318532395846307555740911426241
74743493475534286465766116677973966688202912073791
43853719588249808126867838374559731746136085379534
52422158659320192809087829730843139284440328123155
86110369768013573042161687476096758713483120254785
89320767169132448426236131412508780208000261683151
02734182797770478463586817016436502415369139828126
48102130927612448963599287051149649754199093422215
66832572080821333186116811553615836546984046708975
60290095053761647584772842188967964624494516076535
34081989013854424879849599533191017233555566021394
50399736280750137837615307127761926849034352625200
01588853514733161170210396817592151090778801939317
81141945452572238655414610628921879602238389714760
88506276862967146674697562911234082439208160153780
88989396451826324367161676217916890977991190375403
12746222899880051954444142820121873617459926429565
81746628302955570299024324153181617210465832036786
90611726015878352075151628422554026517048330422614
39742869330616908979684825901254583271682264580665
26769958652682272807075781391858178889652208164348
34482599326604336766017699961283186078838615027946
59551311565520360939881806121385586003014356945272
24206344631797460594682573103790084024432438465657
24501440282188525247093519062092902313649327349756
55139587205596542287497740114133469627154228458623
77387538230483865688976461927383814900140767310446
64025989949022222176590433990188601856652648506179
97023561938970178600408118897299183110211712298459
01641921068884387121855646124960798722908519296819
37238864261483965738229112312502418664935314397013
74285319266498753372189406942814341185201580141233
44828015051399694290153483077644569099073152433278
28826986460278986432113908350621709500259738986355
42771967428222487575867657523442202075736305694988
25087968928162753848863396909959826280956121450994
87170124451646126037902930912088908694202851064018
21543994571568059418727489980942547421735824010636
77404595741785160829230135358081840096996372524230
56085590370062427124341690900415369010593398383577
79394109700277534720000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
000000000000000000.
     _________________________________________________________________

   Node:bigot, Next:[1345]bit, Previous:[1346]bignum, Up:[1347]= B =

   bigot n.

   [common] A person who is religiously attached to a particular
   computer, language, operating system, editor, or other tool (see
   [1348]religious issues). Usually found with a specifier; thus, `cray
   bigot', `ITS bigot', `APL bigot', `VMS bigot', `Berkeley bigot'. Real
   bigots can be distinguished from mere partisans or zealots by the fact
   that they refuse to learn alternatives even when the march of time
   and/or technology is threatening to obsolete the favored tool. It is
   truly said "You can tell a bigot, but you can't tell him much."
   Compare [1349]weenie, [1350]Amiga Persecution Complex.
     _________________________________________________________________

   Node:bit, Next:[1351]bit bang, Previous:[1352]bigot, Up:[1353]= B =

   bit n.

   [from the mainstream meaning and `Binary digIT'] 1. [techspeak] The
   unit of information; the amount of information obtained by asking a
   yes-or-no question for which the two outcomes are equally probable. 2.
   [techspeak] A computational quantity that can take on one of two
   values, such as true and false or 0 and 1. 3. A mental flag: a
   reminder that something should be done eventually. "I have a bit set
   for you." (I haven't seen you for a while, and I'm supposed to tell or
   ask you something.) 4. More generally, a (possibly incorrect) mental
   state of belief. "I have a bit set that says that you were the last
   guy to hack on EMACS." (Meaning "I think you were the last guy to hack
   on EMACS, and what I am about to say is predicated on this, so please
   stop me if this isn't true.")

   "I just need one bit from you" is a polite way of indicating that you
   intend only a short interruption for a question that can presumably be
   answered yes or no.

   A bit is said to be `set' if its value is true or 1, and `reset' or
   `clear' if its value is false or 0. One speaks of setting and clearing
   bits. To [1354]toggle or `invert' a bit is to change it, either from 0
   to 1 or from 1 to 0. See also [1355]flag, [1356]trit, [1357]mode bit.

   The term `bit' first appeared in print in the computer-science sense
   in a 1948 paper by information theorist Claude Shannon, and was there
   credited to the early computer scientist John Tukey (who also seems to
   have coined the term `software'). Tukey records that `bit' evolved
   over a lunch table as a handier alternative to `bigit' or `binit', at
   a conference in the winter of 1943-44.
     _________________________________________________________________

   Node:bit bang, Next:[1358]bit bashing, Previous:[1359]bit, Up:[1360]=
   B =

   bit bang n.

   Transmission of data on a serial line, when accomplished by rapidly
   tweaking a single output bit, in software, at the appropriate times.
   The technique is a simple loop with eight OUT and SHIFT instruction
   pairs for each byte. Input is more interesting. And full duplex (doing
   input and output at the same time) is one way to separate the real
   hackers from the [1361]wannabees.

   Bit bang was used on certain early models of Prime computers,
   presumably when UARTs were too expensive, and on archaic Z80 micros
   with a Zilog PIO but no SIO. In an interesting instance of the
   [1362]cycle of reincarnation, this technique returned to use in the
   early 1990s on some RISC architectures because it consumes such an
   infinitesimal part of the processor that it actually makes sense not
   to have a UART. Compare [1363]cycle of reincarnation.
     _________________________________________________________________

   Node:bit bashing, Next:[1364]bit bucket, Previous:[1365]bit bang,
   Up:[1366]= B =

   bit bashing n.

   (alt. `bit diddling' or [1367]bit twiddling) Term used to describe any
   of several kinds of low-level programming characterized by
   manipulation of [1368]bit, [1369]flag, [1370]nybble, and other
   smaller-than-character-sized pieces of data; these include low-level
   device control, encryption algorithms, checksum and error-correcting
   codes, hash functions, some flavors of graphics programming (see
   [1371]bitblt), and assembler/compiler code generation. May connote
   either tedium or a real technical challenge (more usually the former).
   "The command decoding for the new tape driver looks pretty solid but
   the bit-bashing for the control registers still has bugs." See also
   [1372]bit bang, [1373]mode bit.
     _________________________________________________________________

   Node:bit bucket, Next:[1374]bit decay, Previous:[1375]bit bashing,
   Up:[1376]= B =

   bit bucket n.

   [very common] 1. The universal data sink (originally, the mythical
   receptacle used to catch bits when they fall off the end of a register
   during a shift instruction). Discarded, lost, or destroyed data is
   said to have `gone to the bit bucket'. On [1377]Unix, often used for
   [1378]/dev/null. Sometimes amplified as `the Great Bit Bucket in the
   Sky'. 2. The place where all lost mail and news messages eventually
   go. The selection is performed according to [1379]Finagle's Law;
   important mail is much more likely to end up in the bit bucket than
   junk mail, which has an almost 100% probability of getting delivered.
   Routing to the bit bucket is automatically performed by mail-transfer
   agents, news systems, and the lower layers of the network. 3. The
   ideal location for all unwanted mail responses: "Flames about this
   article to the bit bucket." Such a request is guaranteed to overflow
   one's mailbox with flames. 4. Excuse for all mail that has not been
   sent. "I mailed you those figures last week; they must have landed in
   the bit bucket." Compare [1380]black hole.

   This term is used purely in jest. It is based on the fanciful notion
   that bits are objects that are not destroyed but only misplaced. This
   appears to have been a mutation of an earlier term `bit box', about
   which the same legend was current; old-time hackers also report that
   trainees used to be told that when the CPU stored bits into memory it
   was actually pulling them `out of the bit box'. See also [1381]chad
   box.

   Another variant of this legend has it that, as a consequence of the
   `parity preservation law', the number of 1 bits that go to the bit
   bucket must equal the number of 0 bits. Any imbalance results in bits
   filling up the bit bucket. A qualified computer technician can empty a
   full bit bucket as part of scheduled maintenance.
     _________________________________________________________________

   Node:bit decay, Next:[1382]bit rot, Previous:[1383]bit bucket,
   Up:[1384]= B =

   bit decay n.

   See [1385]bit rot. People with a physics background tend to prefer
   this variant for the analogy with particle decay. See also
   [1386]computron, [1387]quantum bogodynamics.
     _________________________________________________________________

   Node:bit rot, Next:[1388]bit twiddling, Previous:[1389]bit decay,
   Up:[1390]= B =

   bit rot n.

   [common] Also [1391]bit decay. Hypothetical disease the existence of
   which has been deduced from the observation that unused programs or
   features will often stop working after sufficient time has passed,
   even if `nothing has changed'. The theory explains that bits decay as
   if they were radioactive. As time passes, the contents of a file or
   the code in a program will become increasingly garbled.

   There actually are physical processes that produce such effects (alpha
   particles generated by trace radionuclides in ceramic chip packages,
   for example, can change the contents of a computer memory
   unpredictably, and various kinds of subtle media failures can corrupt
   files in mass storage), but they are quite rare (and computers are
   built with error-detecting circuitry to compensate for them). The
   notion long favored among hackers that cosmic rays are among the
   causes of such events turns out to be a myth; see the [1392]cosmic
   rays entry for details.

   The term [1393]software rot is almost synonymous. Software rot is the
   effect, bit rot the notional cause.
     _________________________________________________________________

   Node:bit twiddling, Next:[1394]bit-paired keyboard, Previous:[1395]bit
   rot, Up:[1396]= B =

   bit twiddling n.

   [very common] 1. (pejorative) An exercise in tuning (see [1397]tune)
   in which incredible amounts of time and effort go to produce little
   noticeable improvement, often with the result that the code becomes
   incomprehensible. 2. Aimless small modification to a program, esp. for
   some pointless goal. 3. Approx. syn. for [1398]bit bashing; esp. used
   for the act of frobbing the device control register of a peripheral in
   an attempt to get it back to a known state.
     _________________________________________________________________

   Node:bit-paired keyboard, Next:[1399]bitblt, Previous:[1400]bit
   twiddling, Up:[1401]= B =

   bit-paired keyboard n.,obs.

   (alt. `bit-shift keyboard') A non-standard keyboard layout that seems
   to have originated with the Teletype ASR-33 and remained common for
   several years on early computer equipment. The ASR-33 was a mechanical
   device (see [1402]EOU), so the only way to generate the character
   codes from keystrokes was by some physical linkage. The design of the
   ASR-33 assigned each character key a basic pattern that could be
   modified by flipping bits if the SHIFT or the CTRL key was pressed. In
   order to avoid making the thing even more of a kluge than it already
   was, the design had to group characters that shared the same basic bit
   pattern on one key.

   Looking at the ASCII chart, we find:
high  low bits
bits  0000 0001 0010 0011 0100 0101 0110 0111 1000 1001
 010        !    "    #    $    %    &    '    (    )
 011   0    1    2    3    4    5    6    7    8    9

   This is why the characters !"#$%&'() appear where they do on a
   Teletype (thankfully, they didn't use shift-0 for space). The Teletype
   Model 33 was actually designed before ASCII existed, and was
   originally intended to use a code that contained these two rows:
      low bits
high  0000  0010  0100  0110  1000  1010  1100  1110
bits     0001  0011  0101  0111  1001  1011  1101  1111
  10   )  ! bel #  $  % wru &  *  (  "  :  ?  _  ,   .
  11   0  1  2  3  4  5  6  7  8  9  '  ;  /  - esc del

   The result would have been something closer to a normal keyboard. But
   as it happened, Teletype had to use a lot of persuasion just to keep
   ASCII, and the Model 33 keyboard, from looking like this instead:
          !  "  ?  $  '  &  -  (  )  ;  :  *  /  ,  .
       0  1  2  3  4  5  6  7  8  9  +  ~  <  >  ×  |

   Teletype's was not the weirdest variant of the [1403]QWERTY layout
   widely seen, by the way; that prize should probably go to one of
   several (differing) arrangements on IBM's even clunkier 026 and 029
   card punches.

   When electronic terminals became popular, in the early 1970s, there
   was no agreement in the industry over how the keyboards should be laid
   out. Some vendors opted to emulate the Teletype keyboard, while others
   used the flexibility of electronic circuitry to make their product
   look like an office typewriter. Either choice was supported by the
   ANSI computer keyboard standard, X4.14-1971, which referred to the
   alternatives as `logical bit pairing' and `typewriter pairing'. These
   alternatives became known as `bit-paired' and `typewriter-paired'
   keyboards. To a hacker, the bit-paired keyboard seemed far more
   logical -- and because most hackers in those days had never learned to
   touch-type, there was little pressure from the pioneering users to
   adapt keyboards to the typewriter standard.

   The doom of the bit-paired keyboard was the large-scale introduction
   of the computer terminal into the normal office environment, where
   out-and-out technophobes were expected to use the equipment. The
   `typewriter-paired' standard became universal, X4.14 was superseded by
   X4.23-1982, `bit-paired' hardware was quickly junked or relegated to
   dusty corners, and both terms passed into disuse.

   However, in countries without a long history of touch typing, the
   argument against the bit-paired keyboard layout was weak or
   nonexistent. As a result, the standard Japanese keyboard, used on PCs,
   Unix boxen etc. still has all of the !"#$%&'() characters above the
   numbers in the ASR-33 layout.
     _________________________________________________________________

   Node:bitblt, Next:[1404]BITNET, Previous:[1405]bit-paired keyboard,
   Up:[1406]= B =

   bitblt /bit'blit/ n.

   [from [1407]BLT, q.v.] 1. [common] Any of a family of closely related
   algorithms for moving and copying rectangles of bits between main and
   display memory on a bit-mapped device, or between two areas of either
   main or display memory (the requirement to do the [1408]Right Thing in
   the case of overlapping source and destination rectangles is what
   makes BitBlt tricky). 2. Synonym for [1409]blit or [1410]BLT. Both
   uses are borderline techspeak.
     _________________________________________________________________

   Node:BITNET, Next:[1411]bits, Previous:[1412]bitblt, Up:[1413]= B =

   BITNET /bit'net/ n., obs.

   [acronym: Because It's Time NETwork] Everybody's least favorite piece
   of the network (see [1414]the network) - until AOL happened. The
   BITNET hosts were a collection of IBM dinosaurs and VAXen (the latter
   with lobotomized comm hardware) that communicate using 80-character
   [1415]EBCDIC card images (see [1416]eighty-column mind); thus, they
   tend to mangle the headers and text of third-party traffic from the
   rest of the ASCII/[1417]RFC-822 world with annoying regularity. BITNET
   was also notorious as the apparent home of [1418]B1FF. By 1995 it had,
   much to everyone's relief, been obsolesced and absorbed into the
   Internet. Unfortunately, around this time we also got AOL.
     _________________________________________________________________

   Node:bits, Next:[1419]bitty box, Previous:[1420]BITNET, Up:[1421]= B =

   bits pl.n.

   1. Information. Examples: "I need some bits about file formats." ("I
   need to know about file formats.") Compare [1422]core dump, sense 4.
   2. Machine-readable representation of a document, specifically as
   contrasted with paper: "I have only a photocopy of the Jargon File;
   does anyone know where I can get the bits?". See [1423]softcopy,
   [1424]source of all good bits See also [1425]bit.
     _________________________________________________________________

   Node:bitty box, Next:[1426]bixen, Previous:[1427]bits, Up:[1428]= B =

   bitty box /bit'ee boks/ n.

   1. A computer sufficiently small, primitive, or incapable as to cause
   a hacker acute claustrophobia at the thought of developing software on
   or for it. Especially used of small, obsolescent, single-tasking-only
   personal machines such as the Atari 800, Osborne, Sinclair, VIC-20,
   TRS-80, or IBM PC. 2. [Pejorative] More generally, the opposite of
   `real computer' (see [1429]Get a real computer!). See also
   [1430]mess-dos, [1431]toaster, and [1432]toy.
     _________________________________________________________________

   Node:bixen, Next:[1433]bixie, Previous:[1434]bitty box, Up:[1435]= B =

   bixen pl.n.

   Users of BIX (the BIX Information eXchange, formerly the Byte
   Information eXchange). Parallels other plurals like boxen,
   [1436]VAXen, oxen.
     _________________________________________________________________

   Node:bixie, Next:[1437]black art, Previous:[1438]bixen, Up:[1439]= B =

   bixie /bik'see/ n.

   Variant [1440]emoticons used on BIX (the BIX Information eXchange).
   The most common ([1441]smiley) bixie is <@_@>, representing two
   cartoon eyes and a mouth. These were originally invented in an SF
   fanzine called APA-L and imported to BIX by one of the earliest users.
     _________________________________________________________________

   Node:black art, Next:[1442]black hole, Previous:[1443]bixie,
   Up:[1444]= B =

   black art n.

   [common] A collection of arcane, unpublished, and (by implication)
   mostly ad-hoc techniques developed for a particular application or
   systems area (compare [1445]black magic). VLSI design and compiler
   code optimization were (in their beginnings) considered classic
   examples of black art; as theory developed they became [1446]deep
   magic, and once standard textbooks had been written, became merely
   [1447]heavy wizardry. The huge proliferation of formal and informal
   channels for spreading around new computer-related technologies during
   the last twenty years has made both the term `black art' and what it
   describes less common than formerly. See also [1448]voodoo
   programming.
     _________________________________________________________________

   Node:black hole, Next:[1449]black magic, Previous:[1450]black art,
   Up:[1451]= B =

   black hole n.,vt.

   [common] What data (a piece of email or netnews, or a stream of TCP/IP
   packets) has fallen into if it disappears mysteriously between its
   origin and destination sites (that is, without returning a
   [1452]bounce message). "I think there's a black hole at foovax!"
   conveys suspicion that site foovax has been dropping a lot of stuff on
   the floor lately (see [1453]drop on the floor). The implied metaphor
   of email as interstellar travel is interesting in itself. Readily
   verbed as `blackhole': "That router is blackholing IDP packets."
   Compare [1454]bit bucket and see [1455]RBL.
     _________________________________________________________________

   Node:black magic, Next:[1456]Black Screen of Death,
   Previous:[1457]black hole, Up:[1458]= B =

   black magic n.

   [common] A technique that works, though nobody really understands why.
   More obscure than [1459]voodoo programming, which may be done by
   cookbook. Compare also [1460]black art, [1461]deep magic, and
   [1462]magic number (sense 2).
     _________________________________________________________________

   Node:Black Screen of Death, Next:[1463]Black Thursday,
   Previous:[1464]black magic, Up:[1465]= B =

   Black Screen of Death n.

   [prob. related to the Floating Head of Death in a famous "Far Side"
   cartoon.] A failure mode of [1466]Microsloth Windows. On an attempt to
   launch a DOS box, a networked Windows system not uncommonly blanks the
   screen and locks up the PC so hard that it requires a cold [1467]boot
   to recover. This unhappy phenomenon is known as The Black Screen of
   Death. See also [1468]Blue Screen of Death, which has become rather
   more common.
     _________________________________________________________________

   Node:Black Thursday, Next:[1469]blammo, Previous:[1470]Black Screen of
   Death, Up:[1471]= B =

   Black Thursday n.

   February 8th, 1996 - the day of the signing into law of the [1472]CDA,
   so called by analogy with the catastrophic "Black Friday" in 1929 that
   began the Great Depression.
     _________________________________________________________________

   Node:blammo, Next:[1473]blargh, Previous:[1474]Black Thursday,
   Up:[1475]= B =

   blammo v.

   [Oxford Brookes University and alumni, UK] To forcibly remove someone
   from any interactive system, especially talker systems. The operators,
   who may remain hidden, may `blammo' a user who is misbehaving. Very
   similar to MIT [1476]gun; in fact, the `blammo-gun' is a notional
   device used to `blammo' someone. While in actual fact the only
   incarnation of the blammo-gun is the command used to forcibly eject a
   user, operators speak of different levels of blammo-gun fire; e.g., a
   blammo-gun to `stun' will temporarily remove someone, but a blammo-gun
   set to `maim' will stop someone coming back on for a while.
     _________________________________________________________________

   Node:blargh, Next:[1477]blast, Previous:[1478]blammo, Up:[1479]= B =

   blargh /blarg/ n.

   [MIT; now common] The opposite of [1480]ping, sense 5; an exclamation
   indicating that one has absorbed or is emitting a quantum of
   unhappiness. Less common than [1481]ping.
     _________________________________________________________________

   Node:blast, Next:[1482]blat, Previous:[1483]blargh, Up:[1484]= B =

   blast 1. v.,n.

   Synonym for [1485]BLT, used esp. for large data sends over a network
   or comm line. Opposite of [1486]snarf. Usage: uncommon. The variant
   `blat' has been reported. 2. vt. [HP/Apollo] Synonymous with
   [1487]nuke (sense 3). Sometimes the message Unable to kill all
   processes. Blast them (y/n)? would appear in the command window upon
   logout.
     _________________________________________________________________

   Node:blat, Next:[1488]bletch, Previous:[1489]blast, Up:[1490]= B =

   blat n.

   1. Syn. [1491]blast, sense 1. 2. See [1492]thud.
     _________________________________________________________________

   Node:bletch, Next:[1493]bletcherous, Previous:[1494]blat, Up:[1495]= B
   =

   bletch /blech/ interj.

   [very common; from Yiddish/German `brechen', to vomit, poss. via
   comic-strip exclamation `blech'] Term of disgust. Often used in "Ugh,
   bletch". Compare [1496]barf.
     _________________________________________________________________

   Node:bletcherous, Next:[1497]blink, Previous:[1498]bletch, Up:[1499]=
   B =

   bletcherous /blech'*-r*s/ adj.

   Disgusting in design or function; esthetically unappealing. This word
   is seldom used of people. "This keyboard is bletcherous!" (Perhaps the
   keys don't work very well, or are misplaced.) See [1500]losing,
   [1501]cretinous, [1502]bagbiting, [1503]bogus, and [1504]random. The
   term [1505]bletcherous applies to the esthetics of the thing so
   described; similarly for [1506]cretinous. By contrast, something that
   is `losing' or `bagbiting' may be failing to meet objective criteria.
   See also [1507]bogus and [1508]random, which have richer and wider
   shades of meaning than any of the above.
     _________________________________________________________________

   Node:blink, Next:[1509]blinkenlights, Previous:[1510]bletcherous,
   Up:[1511]= B =

   blink vi.,n.

   To use a navigator or off-line message reader to minimize time spent
   on-line to a commercial network service (a necessity in many places
   outside the U.S. where the telecoms monopolies charge per-minute for
   local calls). This term attained wide use in the UK, but is rare or
   unknown in the US.
     _________________________________________________________________

   Node:blinkenlights, Next:[1512]blit, Previous:[1513]blink, Up:[1514]=
   B =

   blinkenlights /blink'*n-li:tz/ n.

   [common] Front-panel diagnostic lights on a computer, esp. a
   [1515]dinosaur. Now that dinosaurs are rare, this term usually refers
   to status lights on a modem, network hub, or the like.

   This term derives from the last word of the famous blackletter-Gothic
   sign in mangled pseudo-German that once graced about half the computer
   rooms in the English-speaking world. One version ran in its entirety
   as follows:

                       ACHTUNG! ALLES LOOKENSPEEPERS!

     Das computermachine ist nicht fuer gefingerpoken und mittengrabben.
     Ist easy schnappen der springenwerk, blowenfusen und poppencorken
     mit spitzensparken. Ist nicht fuer gewerken bei das dumpkopfen. Das
     rubbernecken sichtseeren keepen das cotten-pickenen hans in das
     pockets muss; relaxen und watchen das blinkenlichten.

   This silliness dates back at least as far as 1959 at Stanford
   University and had already gone international by the early 1960s, when
   it was reported at London University's ATLAS computing site. There are
   several variants of it in circulation, some of which actually do end
   with the word `blinkenlights'.

   In an amusing example of turnabout-is-fair-play, German hackers have
   developed their own versions of the blinkenlights poster in fractured
   English, one of which is reproduced here:

                                 ATTENTION

     This room is fullfilled mit special electronische equippment.
     Fingergrabbing and pressing the cnoeppkes from the computers is
     allowed for die experts only! So all the "lefthanders" stay away
     and do not disturben the brainstorming von here working
     intelligencies. Otherwise you will be out thrown and kicked
     anderswhere! Also: please keep still and only watchen astaunished
     the blinkenlights.

   See also [1516]geef.

   Old-time hackers sometimes get nostalgic for blinkenlights because
   they were so much more fun to look at than a blank panel. Sadly, very
   few computers still have them (the three LEDs on a PC keyboard
   certainly don't count). The obvious reasons (cost of wiring, cost of
   front-panel cutouts, almost nobody needs or wants to interpret
   machine-register states on the fly anymore) are only part of the
   story. Another part of it is that radio-frequency leakage from the
   lamp wiring was beginning to be a problem as far back as transistor
   machines. But the most fundamental fact is that there are very few
   signals slow enough to blink an LED these days! With slow CPUs, you
   could watch the bus register or instruction counter tick, but at
   33/66/150MHz it's all a blur.

   Finally, a version updated for the Internet has been seen on
   news.admin.net-abuse.email:

                       ACHTUNG! ALLES LOOKENSPEEPERS!

     Das Internet is nicht fuer gefingerclicken und giffengrabben. Ist
     easy droppenpacket der routers und overloaden der backbone mit der
     spammen und der me-tooen. Ist nicht fuer gewerken bei das
     dumpkopfen. Das mausklicken sichtseeren keepen das bandwit-spewin
     hans in das pockets muss; relaxen und watchen das cursorblinken.

   This newest version partly reflects reports that the word
   `blinkenlights' is (in 1999) undergoing something of a revival in
   usage, but applied to networking equipment. The transmit and receive
   lights on routers, activity lights on switches and hubs, and other
   network equipment often blink in visually pleasing and seemingly
   coordinated ways. Although this is different in some ways from
   register readings, a tall stack of Cisco equipment or a 19-inch rack
   of ISDN terminals can provoke a similar feeling of hypnotic awe,
   especially in a darkened network operations center or server room.
     _________________________________________________________________

   Node:blit, Next:[1517]blitter, Previous:[1518]blinkenlights,
   Up:[1519]= B =

   blit /blit/ vt.

   1. [common] To copy a large array of bits from one part of a
   computer's memory to another part, particularly when the memory is
   being used to determine what is shown on a display screen. "The
   storage allocator picks through the table and copies the good parts up
   into high memory, and then blits it all back down again." See
   [1520]bitblt, [1521]BLT, [1522]dd, [1523]cat, [1524]blast,
   [1525]snarf. More generally, to perform some operation (such as
   toggling) on a large array of bits while moving them. 2. [historical,
   rare] Sometimes all-capitalized as `BLIT': an early experimental
   bit-mapped terminal designed by Rob Pike at Bell Labs, later
   commercialized as the AT&T 5620. (The folk etymology from `Bell Labs
   Intelligent Terminal' is incorrect. Its creators liked to claim that
   "Blit" stood for the Bacon, Lettuce, and Interactive Tomato.)
     _________________________________________________________________

   Node:blitter, Next:[1526]blivet, Previous:[1527]blit, Up:[1528]= B =

   blitter /blit'r/ n.

   [common] A special-purpose chip or hardware system built to perform
   [1529]blit operations, esp. used for fast implementation of bit-mapped
   graphics. The Commodore Amiga and a few other micros have these, but
   since 1990 the trend has been away from them (however, see [1530]cycle
   of reincarnation). Syn. [1531]raster blaster.
     _________________________________________________________________

   Node:blivet, Next:[1532]bloatware, Previous:[1533]blitter, Up:[1534]=
   B =

   blivet /bliv'*t/ n.

   [allegedly from a World War II military term meaning "ten pounds of
   manure in a five-pound bag"] 1. An intractable problem. 2. A crucial
   piece of hardware that can't be fixed or replaced if it breaks. 3. A
   tool that has been hacked over by so many incompetent programmers that
   it has become an unmaintainable tissue of hacks. 4. An out-of-control
   but unkillable development effort. 5. An embarrassing bug that pops up
   during a customer demo. 6. In the subjargon of computer security
   specialists, a denial-of-service attack performed by hogging limited
   resources that have no access controls (for example, shared spool
   space on a multi-user system).

   This term has other meanings in other technical cultures; among
   experimental physicists and hardware engineers of various kinds it
   seems to mean any random object of unknown purpose (similar to hackish
   use of [1535]frob). It has also been used to describe an amusing
   trick-the-eye drawing resembling a three-pronged fork that appears to
   depict a three-dimensional object until one realizes that the parts
   fit together in an impossible way.
     _________________________________________________________________

   Node:bloatware, Next:[1536]BLOB, Previous:[1537]blivet, Up:[1538]= B =

   bloatware n.

   [common] Software that provides minimal functionality while requiring
   a disproportionate amount of diskspace and memory. Especially used for
   application and OS upgrades. This term is very common in the
   Windows/NT world. So is its cause.
     _________________________________________________________________

   Node:BLOB, Next:[1539]block, Previous:[1540]bloatware, Up:[1541]= B =

   BLOB

   1. n. [acronym: Binary Large OBject] Used by database people to refer
   to any random large block of bits that needs to be stored in a
   database, such as a picture or sound file. The essential point about a
   BLOB is that it's an object that cannot be interpreted within the
   database itself. 2. v. To [1542]mailbomb someone by sending a BLOB to
   him/her; esp. used as a mild threat. "If that program crashes again,
   I'm going to BLOB the core dump to you."
     _________________________________________________________________

   Node:block, Next:[1543]block transfer computations,
   Previous:[1544]BLOB, Up:[1545]= B =

   block v.

   [common; from process scheduling terminology in OS theory] 1. vi. To
   delay or sit idle while waiting for something. "We're blocking until
   everyone gets here." Compare [1546]busy-wait. 2. `block on' vt. To
   block, waiting for (something). "Lunch is blocked on Phil's arrival."
     _________________________________________________________________

   Node:block transfer computations, Next:[1547]Bloggs Family,
   Previous:[1548]block, Up:[1549]= B =

   block transfer computations n.

   [from the television series "Dr. Who"] Computations so fiendishly
   subtle and complex that they could not be performed by machines. Used
   to refer to any task that should be expressible as an algorithm in
   theory, but isn't. (The Z80's LDIR instruction, "Computed Block
   Transfer with increment", may also be relevant.)
     _________________________________________________________________

   Node:Bloggs Family, Next:[1550]blow an EPROM, Previous:[1551]block
   transfer computations, Up:[1552]= B =

   Bloggs Family n.

   An imaginary family consisting of Fred and Mary Bloggs and their
   children. Used as a standard example in knowledge representation to
   show the difference between extensional and intensional objects. For
   example, every occurrence of "Fred Bloggs" is the same unique person,
   whereas occurrences of "person" may refer to different people. Members
   of the Bloggs family have been known to pop up in bizarre places such
   as the old [1553]DEC Telephone Directory. Compare [1554]Dr. Fred
   Mbogo; [1555]J. Random Hacker; [1556]Fred Foobar.
     _________________________________________________________________

   Node:blow an EPROM, Next:[1557]blow away, Previous:[1558]Bloggs
   Family, Up:[1559]= B =

   blow an EPROM /bloh *n ee'prom/ v.

   (alt. `blast an EPROM', `burn an EPROM') To program a read-only
   memory, e.g. for use with an embedded system. This term arose because
   the programming process for the Programmable Read-Only Memories
   (PROMs) that preceded present-day Erasable Programmable Read-Only
   Memories (EPROMs) involved intentionally blowing tiny electrical fuses
   on the chip. The usage lives on (it's too vivid and expressive to
   discard) even though the write process on EPROMs is nondestructive.
     _________________________________________________________________

   Node:blow away, Next:[1560]blow out, Previous:[1561]blow an EPROM,
   Up:[1562]= B =

   blow away vt.

   To remove (files and directories) from permanent storage, generally by
   accident. "He reformatted the wrong partition and blew away last
   night's netnews." Oppose [1563]nuke.
     _________________________________________________________________

   Node:blow out, Next:[1564]blow past, Previous:[1565]blow away,
   Up:[1566]= B =

   blow out vi.

   [prob. from mining and tunneling jargon] Of software, to fail
   spectacularly; almost as serious as [1567]crash and burn. See
   [1568]blow past, [1569]blow up, [1570]die horribly.
     _________________________________________________________________

   Node:blow past, Next:[1571]blow up, Previous:[1572]blow out,
   Up:[1573]= B =

   blow past vt.

   To [1574]blow out despite a safeguard. "The server blew past the 5K
   reserve buffer."
     _________________________________________________________________

   Node:blow up, Next:[1575]BLT, Previous:[1576]blow past, Up:[1577]= B =

   blow up vi.

   1. [scientific computation] To become unstable. Suggests that the
   computation is diverging so rapidly that it will soon overflow or at
   least go [1578]nonlinear. 2. Syn. [1579]blow out.
     _________________________________________________________________

   Node:BLT, Next:[1580]Blue Book, Previous:[1581]blow up, Up:[1582]= B =

   BLT /B-L-T/, /bl*t/ or (rarely) /belt/ n.,vt.

   Synonym for [1583]blit. This is the original form of [1584]blit and
   the ancestor of [1585]bitblt. It referred to any large bit-field copy
   or move operation (one resource-intensive memory-shuffling operation
   done on pre-paged versions of ITS, WAITS, and TOPS-10 was sardonically
   referred to as `The Big BLT'). The jargon usage has outlasted the
   [1586]PDP-10 BLock Transfer instruction from which [1587]BLT derives;
   nowadays, the assembler mnemonic [1588]BLT almost always means `Branch
   if Less Than zero'.
     _________________________________________________________________

   Node:Blue Book, Next:[1589]blue box, Previous:[1590]BLT, Up:[1591]= B
   =

   Blue Book n.

   1. Informal name for one of the four standard references on the
   page-layout and graphics-control language [1592]PostScript
   ("PostScript Language Tutorial and Cookbook", Adobe Systems,
   Addison-Wesley 1985, QA76.73.P67P68, ISBN 0-201-10179-3); the other
   three official guides are known as the [1593]Green Book, the [1594]Red
   Book, and the [1595]White Book (sense 2). 2. Informal name for one of
   the three standard references on Smalltalk: "Smalltalk-80: The
   Language and its Implementation", David Robson, Addison-Wesley 1983,
   QA76.8.S635G64, ISBN 0-201-11371-63 (this book also has green and red
   siblings). 3. Any of the 1988 standards issued by the CCITT's ninth
   plenary assembly. These include, among other things, the X.400 email
   spec and the Group 1 through 4 fax standards. See also [1596]book
   titles.
     _________________________________________________________________

   Node:blue box, Next:[1597]Blue Glue, Previous:[1598]Blue Book,
   Up:[1599]= B =

   blue box

   n. 1. obs. Once upon a time, before all-digital switches made it
   possible for the phone companies to move them out of band, one could
   actually hear the switching tones used to route long-distance calls.
   Early [1600]phreakers built devices called `blue boxes' that could
   reproduce these tones, which could be used to commandeer portions of
   the phone network. (This was not as hard as it may sound; one early
   phreak acquired the sobriquet `Captain Crunch' after he proved that he
   could generate switching tones with a plastic whistle pulled out of a
   box of Captain Crunch cereal!) There were other colors of box with
   more specialized phreaking uses; red boxes, black boxes, silver boxes,
   etc. 2. n. An [1601]IBM machine, especially a large (non-PC) one.
     _________________________________________________________________

   Node:Blue Glue, Next:[1602]blue goo, Previous:[1603]blue box,
   Up:[1604]= B =

   Blue Glue n.

   [IBM] IBM's SNA (Systems Network Architecture), an incredibly
   [1605]losing and [1606]bletcherous communications protocol widely
   favored at commercial shops that don't know any better. The official
   IBM definition is "that which binds blue boxes together." See
   [1607]fear and loathing. It may not be irrelevant that Blue Glue is
   the trade name of a 3M product that is commonly used to hold down the
   carpet squares to the removable panel floors common in [1608]dinosaur
   pens. A correspondent at U. Minn. reports that the CS department there
   has about 80 bottles of the stuff hanging about, so they often refer
   to any messy work to be done as `using the blue glue'.
     _________________________________________________________________

   Node:blue goo, Next:[1609]Blue Screen of Death, Previous:[1610]Blue
   Glue, Up:[1611]= B =

   blue goo n.

   Term for `police' [1612]nanobots intended to prevent [1613]gray goo,
   denature hazardous waste, destroy pollution, put ozone back into the
   stratosphere, prevent halitosis, and promote truth, justice, and the
   American way, etc. The term `Blue Goo' can be found in Dr. Seuss's
   "Fox In Socks" to refer to a substance much like bubblegum. `Would you
   like to chew blue goo, sir?'. See [1614]nanotechnology.
     _________________________________________________________________

   Node:Blue Screen of Death, Next:[1615]blue wire, Previous:[1616]blue
   goo, Up:[1617]= B =

   Blue Screen of Death n.

   [common] This term is closely related to the older [1618]Black Screen
   of Death but much more common (many non-hackers have picked it up).
   Due to the extreme fragility and bugginess of Microsoft Windows
   misbehaving applications can readily crash the OS (and the OS
   sometimes crashes itself spontaneously). The Blue Screen of Death,
   sometimes decorated with hex error codes, is what you get when this
   happens. (Commonly abbreviated [1619]BSOD.)

   The following entry from the [1620]Salon Haiku Contest, seems to have
   predated popular use of the term:
        Windows NT crashed.
        I am the Blue Screen of Death
        No one hears your screams.
     _________________________________________________________________

   Node:blue wire, Next:[1621]blurgle, Previous:[1622]Blue Screen of
   Death, Up:[1623]= B =

   blue wire n.

   [IBM] Patch wires (esp. 30 AWG gauge) added to circuit boards at the
   factory to correct design or fabrication problems. Blue wire is not
   necessarily blue, the term describes function rather than color. These
   may be necessary if there hasn't been time to design and qualify
   another board version. In Great Britain this can be `bodge wire',
   after mainstreanm slang `bodge' for a clumsy improvisation or sloppy
   job of work. Compare [1624]purple wire, [1625]red wire, [1626]yellow
   wire, [1627]pink wire.
     _________________________________________________________________

   Node:blurgle, Next:[1628]BNF, Previous:[1629]blue wire, Up:[1630]= B =

   blurgle /bler'gl/ n.

   [UK] Spoken [1631]metasyntactic variable, to indicate some text that
   is obvious from context, or which is already known. If several words
   are to be replaced, blurgle may well be doubled or tripled. "To look
   for something in several files use `grep string blurgle blurgle'." In
   each case, "blurgle blurgle" would be understood to be replaced by the
   file you wished to search. Compare [1632]mumble, sense 7.
     _________________________________________________________________

   Node:BNF, Next:[1633]boa, Previous:[1634]blurgle, Up:[1635]= B =

   BNF /B-N-F/ n.

   1. [techspeak] Acronym for `Backus Normal Form' (later retronymed to
   `Backus-Naur Form' because BNF was not in fact a normal form), a
   metasyntactic notation used to specify the syntax of programming
   languages, command sets, and the like. Widely used for language
   descriptions but seldom documented anywhere, so that it must usually
   be learned by osmosis from other hackers. Consider this BNF for a U.S.
   postal address:
 <postal-address> ::= <name-part> <street-address> <zip-part>

 <personal-part> ::= <name> | <initial> "."

 <name-part> ::= <personal-part> <last-name> [<jr-part>] <EOL>
               | <personal-part> <name-part>

 <street-address> ::= [<apt>] <house-num> <street-name> <EOL>

 <zip-part> ::= <town-name> "," <state-code> <ZIP-code> <EOL>

   This translates into English as: "A postal-address consists of a
   name-part, followed by a street-address part, followed by a zip-code
   part. A personal-part consists of either a first name or an initial
   followed by a dot. A name-part consists of either: a personal-part
   followed by a last name followed by an optional `jr-part' (Jr., Sr.,
   or dynastic number) and end-of-line, or a personal part followed by a
   name part (this rule illustrates the use of recursion in BNFs,
   covering the case of people who use multiple first and middle names
   and/or initials). A street address consists of an optional apartment
   specifier, followed by a street number, followed by a street name. A
   zip-part consists of a town-name, followed by a comma, followed by a
   state code, followed by a ZIP-code followed by an end-of-line." Note
   that many things (such as the format of a personal-part, apartment
   specifier, or ZIP-code) are left unspecified. These are presumed to be
   obvious from context or detailed somewhere nearby. See also
   [1636]parse. 2. Any of a number of variants and extensions of BNF
   proper, possibly containing some or all of the [1637]regexp wildcards
   such as * or +. In fact the example above isn't the pure form invented
   for the Algol-60 report; it uses [], which was introduced a few years
   later in IBM's PL/I definition but is now universally recognized. 3.
   In [1638]science-fiction fandom, a `Big-Name Fan' (someone famous or
   notorious). Years ago a fan started handing out black-on-green BNF
   buttons at SF conventions; this confused the hacker contingent
   terribly.
     _________________________________________________________________

   Node:boa, Next:[1639]board, Previous:[1640]BNF, Up:[1641]= B =

   boa [IBM] n.

   Any one of the fat cables that lurk under the floor in a
   [1642]dinosaur pen. Possibly so called because they display a
   ferocious life of their own when you try to lay them straight and flat
   after they have been coiled for some time. It is rumored within IBM
   that channel cables for the 370 are limited to 200 feet because beyond
   that length the boas get dangerous -- and it is worth noting that one
   of the major cable makers uses the trademark `Anaconda'.
     _________________________________________________________________

   Node:board, Next:[1643]boat anchor, Previous:[1644]boa, Up:[1645]= B =

   board n.

   1. In-context synonym for [1646]bboard; sometimes used even for Usenet
   newsgroups (but see usage note under [1647]bboard, sense 1). 2. An
   electronic circuit board.
     _________________________________________________________________

   Node:boat anchor, Next:[1648]bob, Previous:[1649]board, Up:[1650]= B =

   boat anchor n.

   [common; from ham radio] 1. Like [1651]doorstop but more severe;
   implies that the offending hardware is irreversibly dead or useless.
   "That was a working motherboard once. One lightning strike later,
   instant boat anchor!" 2. A person who just takes up space. 3. Obsolete
   but still working hardware, especially when used of an old S100-bus
   hobbyist system; originally a term of annoyance, but became more and
   more affectionate as the hardware became more and more obsolete.
     _________________________________________________________________

   Node:bob, Next:[1652]bodysurf code, Previous:[1653]boat anchor,
   Up:[1654]= B =

   bob n.

   At [1655]Demon Internet, all tech support personnel are called "Bob".
   (Female support personnel have an option on "Bobette"). This has
   nothing to do with Bob the divine drilling-equipment salesman of the
   [1656]Church of the SubGenius. Nor is it acronymized from "Brother Of
   [1657]BOFH", though all parties agree it could have been. Rather, it
   was triggered by an unusually large draft of new tech-support people
   in 1995. It was observed that there would be much duplication of
   names. To ease the confusion, it was decided that all support techs
   would henceforth be known as "Bob", and identity badges were created
   labelled "Bob 1" and "Bob 2". ("No, we never got any further" reports
   a witness).

   The reason for "Bob" rather than anything else is due to a [1658]luser
   calling and asking to speak to "Bob", despite the fact that no "Bob"
   was currently working for Tech Support. Since we all know "the
   customer is always right", it was decided that there had to be at
   least one "Bob" on duty at all times, just in case.

   This sillyness inexorably snowballed. Shift leaders and managers began
   to refer to their groups of "bobs". Whole ranks of support machines
   were set up (and still exist in the DNS as of 1999) as bob1 through
   bobN. Then came alt.tech-support.recovery, and it was filled with
   Demon support personnel. They all referred to themselves, and to
   others, as `bob', and after a while it caught on. There is now a
   [1659]Bob Code describing the Bob nature.
     _________________________________________________________________

   Node:bodysurf code, Next:[1660]BOF, Previous:[1661]bob, Up:[1662]= B =

   bodysurf code n.

   A program or segment of code written quickly in the heat of
   inspiration without the benefit of formal design or deep thought. Like
   its namesake sport, the result is too often a wipeout that leaves the
   programmer eating sand.
     _________________________________________________________________

   Node:BOF, Next:[1663]BOFH, Previous:[1664]bodysurf code, Up:[1665]= B
   =

   BOF /B-O-F/ or /bof/ n.

   1. [common] Abbreviation for the phrase "Birds Of a Feather" (flocking
   together), an informal discussion group and/or bull session scheduled
   on a conference program. It is not clear where or when this term
   originated, but it is now associated with the USENIX conferences for
   Unix techies and was already established there by 1984. It was used
   earlier than that at DECUS conferences and is reported to have been
   common at SHARE meetings as far back as the early 1960s. 2. Acronym,
   `Beginning of File'.
     _________________________________________________________________

   Node:BOFH, Next:[1666]bogo-sort, Previous:[1667]BOF, Up:[1668]= B =

   BOFH // n.

   [common] Acronym, Bastard Operator From Hell. A system administrator
   with absolutely no tolerance for [1669]lusers. "You say you need more
   filespace? <massive-global-delete> Seems to me you have plenty
   left..." Many BOFHs (and others who would be BOFHs if they could get
   away with it) hang out in the newsgroup alt.sysadmin.recovery,
   although there has also been created a top-level newsgroup hierarchy
   (bofh.*) of their own.

   Several people have written stories about BOFHs. The set usually
   considered canonical is by Simon Travaglia and may be found at the
   [1670]Bastard Home Page. BOFHs and BOFH wannabes hang out on
   [1671]scary devil monastery and wield [1672]LARTs.
     _________________________________________________________________

   Node:bogo-sort, Next:[1673]bogometer, Previous:[1674]BOFH, Up:[1675]=
   B =

   bogo-sort /boh`goh-sort'/ n.

   (var. `stupid-sort') The archetypical perversely awful algorithm (as
   opposed to [1676]bubble sort, which is merely the generic bad
   algorithm). Bogo-sort is equivalent to repeatedly throwing a deck of
   cards in the air, picking them up at random, and then testing whether
   they are in order. It serves as a sort of canonical example of
   awfulness. Looking at a program and seeing a dumb algorithm, one might
   say "Oh, I see, this program uses bogo-sort." Esp. appropriate for
   algorithms with factorial or super-exponential running time in the
   average case and probabilistically infinite worst-case running time.
   Compare [1677]bogus, [1678]brute force, [1679]lasherism.

   A spectacular variant of bogo-sort has been proposed which has the
   interesting property that, if the Many Worlds interpretation of
   quantum mechanics is true, it can sort an arbitrarily large array in
   constant time. (In the Many-Worlds model, the result of any quantum
   action is to split the universe-before into a sheaf of
   universes-after, one for each possible way the state vector can
   collapse; in any one of the universes-after the result appears
   random.) The steps are: 1. Permute the array randomly using a quantum
   process, 2. If the array is not sorted, destroy the universe.
   Implementation of step 2 is left as an exercise for the reader.
     _________________________________________________________________

   Node:bogometer, Next:[1680]BogoMIPS, Previous:[1681]bogo-sort,
   Up:[1682]= B =

   bogometer /boh-gom'-*t-er/ n.

   A notional instrument for measuring [1683]bogosity. Compare the
   [1684]Troll-O-Meter and the `wankometer' described in the [1685]wank
   entry; see also [1686]bogus.
     _________________________________________________________________

   Node:BogoMIPS, Next:[1687]bogon, Previous:[1688]bogometer, Up:[1689]=
   B =

   BogoMIPS /bo'go-mips/ n.

   The number of million times a second a processor can do absolutely
   nothing. The [1690]Linux OS measures BogoMIPS at startup in order to
   calibrate some soft timing loops that will be used later on; details
   at [1691]the BogoMIPS mini-HOWTO. The name Linus chose, of course, is
   an ironic comment on the uselessness of all other [1692]MIPS figures.
     _________________________________________________________________

   Node:bogon, Next:[1693]bogon filter, Previous:[1694]BogoMIPS,
   Up:[1695]= B =

   bogon /boh'gon/ n.

   [very common; by analogy with proton/electron/neutron, but doubtless
   reinforced after 1980 by the similarity to Douglas Adams's `Vogons';
   see the [1696]Bibliography in Appendix C and note that Arthur Dent
   actually mispronounces `Vogons' as `Bogons' at one point] 1. The
   elementary particle of bogosity (see [1697]quantum bogodynamics). For
   instance, "the Ethernet is emitting bogons again" means that it is
   broken or acting in an erratic or bogus fashion. 2. A query packet
   sent from a TCP/IP domain resolver to a root server, having the reply
   bit set instead of the query bit. 3. Any bogus or incorrectly formed
   packet sent on a network. 4. By synecdoche, used to refer to any bogus
   thing, as in "I'd like to go to lunch with you but I've got to go to
   the weekly staff bogon". 5. A person who is bogus or who says bogus
   things. This was historically the original usage, but has been
   overtaken by its derivative senses 1-4. See also [1698]bogosity,
   [1699]bogus; compare [1700]psyton, [1701]fat electrons, [1702]magic
   smoke.

   The bogon has become the type case for a whole bestiary of nonce
   particle names, including the `clutron' or `cluon' (indivisible
   particle of cluefulness, obviously the antiparticle of the bogon) and
   the futon (elementary particle of [1703]randomness, or sometimes of
   lameness). These are not so much live usages in themselves as examples
   of a live meta-usage: that is, it has become a standard joke or
   linguistic maneuver to "explain" otherwise mysterious circumstances by
   inventing nonce particle names. And these imply nonce particle
   theories, with all their dignity or lack thereof (we might note
   parenthetically that this is a generalization from "(bogus particle)
   theories" to "bogus (particle theories)"!). Perhaps such particles are
   the modern-day equivalents of trolls and wood-nymphs as standard
   starting-points around which to construct explanatory myths. Of
   course, playing on an existing word (as in the `futon') yields
   additional flavor. Compare [1704]magic smoke.
     _________________________________________________________________

   Node:bogon filter, Next:[1705]bogon flux, Previous:[1706]bogon,
   Up:[1707]= B =

   bogon filter /boh'gon fil'tr/ n.

   Any device, software or hardware, that limits or suppresses the flow
   and/or emission of bogons. "Engineering hacked a bogon filter between
   the Cray and the VAXen, and now we're getting fewer dropped packets."
   See also [1708]bogosity, [1709]bogus.
     _________________________________________________________________

   Node:bogon flux, Next:[1710]bogosity, Previous:[1711]bogon filter,
   Up:[1712]= B =

   bogon flux /boh'gon fluhks/ n.

   A measure of a supposed field of [1713]bogosity emitted by a speaker,
   measured by a [1714]bogometer; as a speaker starts to wander into
   increasing bogosity a listener might say "Warning, warning, bogon flux
   is rising". See [1715]quantum bogodynamics.
     _________________________________________________________________

   Node:bogosity, Next:[1716]bogotify, Previous:[1717]bogon flux,
   Up:[1718]= B =

   bogosity /boh-go's*-tee/ n.

   1. [orig. CMU, now very common] The degree to which something is
   [1719]bogus. Bogosity is measured with a [1720]bogometer; in a
   seminar, when a speaker says something bogus, a listener might raise
   his hand and say "My bogometer just triggered". More extremely, "You
   just pinned my bogometer" means you just said or did something so
   outrageously bogus that it is off the scale, pinning the bogometer
   needle at the highest possible reading (one might also say "You just
   redlined my bogometer"). The agreed-upon unit of bogosity is the
   [1721]microLenat. 2. The potential field generated by a [1722]bogon
   flux; see [1723]quantum bogodynamics. See also [1724]bogon flux,
   [1725]bogon filter, [1726]bogus.
     _________________________________________________________________

   Node:bogotify, Next:[1727]bogue out, Previous:[1728]bogosity,
   Up:[1729]= B =

   bogotify /boh-go't*-fi:/ vt.

   To make or become bogus. A program that has been changed so many times
   as to become completely disorganized has become bogotified. If you
   tighten a nut too hard and strip the threads on the bolt, the bolt has
   become bogotified and you had better not use it any more. This coinage
   led to the notional `autobogotiphobia' defined as `the fear of
   becoming bogotified'; but is not clear that the latter has ever been
   `live' jargon rather than a self-conscious joke in jargon about
   jargon. See also [1730]bogosity, [1731]bogus.
     _________________________________________________________________

   Node:bogue out, Next:[1732]bogus, Previous:[1733]bogotify, Up:[1734]=
   B =

   bogue out /bohg owt/ vi.

   To become bogus, suddenly and unexpectedly. "His talk was relatively
   sane until somebody asked him a trick question; then he bogued out and
   did nothing but [1735]flame afterwards." See also [1736]bogosity,
   [1737]bogus.
     _________________________________________________________________

   Node:bogus, Next:[1738]Bohr bug, Previous:[1739]bogue out, Up:[1740]=
   B =

   bogus adj.

   1. Non-functional. "Your patches are bogus." 2. Useless. "OPCON is a
   bogus program." 3. False. "Your arguments are bogus." 4. Incorrect.
   "That algorithm is bogus." 5. Unbelievable. "You claim to have solved
   the halting problem for Turing Machines? That's totally bogus." 6.
   Silly. "Stop writing those bogus sagas."

   Astrology is bogus. So is a bolt that is obviously about to break. So
   is someone who makes blatantly false claims to have solved a
   scientific problem. (This word seems to have some, but not all, of the
   connotations of [1741]random -- mostly the negative ones.)

   It is claimed that `bogus' was originally used in the hackish sense at
   Princeton in the late 1960s. It was spread to CMU and Yale by Michael
   Shamos, a migratory Princeton alumnus. A glossary of bogus words was
   compiled at Yale when the word was first popularized there about
   1975-76. These coinages spread into hackerdom from CMU and MIT. Most
   of them remained wordplay objects rather than actual vocabulary items
   or live metaphors. Examples: `amboguous' (having multiple bogus
   interpretations); `bogotissimo' (in a gloriously bogus manner);
   `bogotophile' (one who is pathologically fascinated by the bogus);
   `paleobogology' (the study of primeval bogosity).

   Some bogowords, however, obtained sufficient live currency to be
   listed elsewhere in this lexicon; see [1742]bogometer, [1743]bogon,
   [1744]bogotify, and [1745]quantum bogodynamics and the related but
   unlisted [1746]Dr. Fred Mbogo.

   By the early 1980s `bogus' was also current in something like hacker
   usage sense in West Coast teen slang, and it had gone mainstream by
   1985. A correspondent from Cambridge reports, by contrast, that these
   uses of `bogus' grate on British nerves; in Britain the word means,
   rather specifically, `counterfeit', as in "a bogus 10-pound note".
     _________________________________________________________________

   Node:Bohr bug, Next:[1747]boink, Previous:[1748]bogus, Up:[1749]= B =

   Bohr bug /bohr buhg/ n.

   [from quantum physics] A repeatable [1750]bug; one that manifests
   reliably under a possibly unknown but well-defined set of conditions.
   Antonym of [1751]heisenbug; see also [1752]mandelbug,
   [1753]schroedinbug.
     _________________________________________________________________

   Node:boink, Next:[1754]bomb, Previous:[1755]Bohr bug, Up:[1756]= B =

   boink /boynk/

   [Usenet: variously ascribed to the TV series "Cheers" "Moonlighting",
   and "Soap"] 1. v. To have sex with; compare [1757]bounce, sense 3.
   (This is mainstream slang.) In Commonwealth hackish the variant `bonk'
   is more common. 2. n. After the original Peter Korn `Boinkon'
   [1758]Usenet parties, used for almost any net social gathering, e.g.,
   Miniboink, a small boink held by Nancy Gillett in 1988; Minniboink, a
   Boinkcon in Minnesota in 1989; Humpdayboinks, Wednesday get-togethers
   held in the San Francisco Bay Area. Compare [1759]@-party. 3. Var of
   `bonk'; see [1760]bonk/oif.
     _________________________________________________________________

   Node:bomb, Next:[1761]bondage-and-discipline language,
   Previous:[1762]boink, Up:[1763]= B =

   bomb

   1. v. General synonym for [1764]crash (sense 1) except that it is not
   used as a noun; esp. used of software or OS failures. "Don't run
   Empire with less than 32K stack, it'll bomb." 2. n.,v. Atari ST and
   Macintosh equivalents of a Unix `panic' or Amiga [1765]guru
   meditation, in which icons of little black-powder bombs or mushroom
   clouds are displayed, indicating that the system has died. On the Mac,
   this may be accompanied by a decimal (or occasionally hexadecimal)
   number indicating what went wrong, similar to the Amiga [1766]guru
   meditation number. [1767]MS-DOS machines tend to get [1768]locked up
   in this situation.
     _________________________________________________________________

   Node:bondage-and-discipline language, Next:[1769]bonk/oif,
   Previous:[1770]bomb, Up:[1771]= B =

   bondage-and-discipline language n.

   A language (such as [1772]Pascal, [1773]Ada, APL, or Prolog) that,
   though ostensibly general-purpose, is designed so as to enforce an
   author's theory of `right programming' even though said theory is
   demonstrably inadequate for systems hacking or even vanilla
   general-purpose programming. Often abbreviated `B&D'; thus, one may
   speak of things "having the B&D nature". See [1774]Pascal; oppose
   [1775]languages of choice.
     _________________________________________________________________

   Node:bonk/oif, Next:[1776]book titles,
   Previous:[1777]bondage-and-discipline language, Up:[1778]= B =

   bonk/oif /bonk/, /oyf/ interj.

   In the U.S. [1779]MUD community, it has become traditional to express
   pique or censure by `bonking' the offending person. Convention holds
   that one should acknowledge a bonk by saying `oif!' and there is a
   myth to the effect that failing to do so upsets the cosmic bonk/oif
   balance, causing much trouble in the universe. Some MUDs have
   implemented special commands for bonking and oifing. Note: in parts of
   the U.K. `bonk' is a sexually loaded slang term; care is advised in
   transatlantic conversations (see [1780]boink). Commonwealth hackers
   report a similar convention involving the `fish/bang' balance. See
   also [1781]talk mode.
     _________________________________________________________________

   Node:book titles, Next:[1782]boot, Previous:[1783]bonk/oif, Up:[1784]=
   B =

   book titles

   There is a tradition in hackerdom of informally tagging important
   textbooks and standards documents with the dominant color of their
   covers or with some other conspicuous feature of the cover. Many of
   these are described in this lexicon under their own entries. See
   [1785]Aluminum Book, [1786]Blue Book, [1787]Camel Book,
   [1788]Cinderella Book, [1789]Devil Book, [1790]Dragon Book,
   [1791]Green Book, [1792]Orange Book, [1793]Purple Book, [1794]Red
   Book, [1795]Silver Book, [1796]White Book, [1797]Wizard Book,
   [1798]Yellow Book, and [1799]bible; see also [1800]rainbow series.
   Since about 1983 this tradition has gotten a boost from the popular
   O'Reilly and Associates line of technical books, which usually feature
   some kind of exotic animal on the cover.
     _________________________________________________________________

   Node:boot, Next:[1801]Borg, Previous:[1802]book titles, Up:[1803]= B =

   boot v.,n.

   [techspeak; from `by one's bootstraps'] To load and initialize the
   operating system on a machine. This usage is no longer jargon (having
   passed into techspeak) but has given rise to some derivatives that are
   still jargon.

   The derivative `reboot' implies that the machine hasn't been down for
   long, or that the boot is a [1804]bounce (sense 4) intended to clear
   some state of [1805]wedgitude. This is sometimes used of human thought
   processes, as in the following exchange: "You've lost me." "OK,
   reboot. Here's the theory...."

   This term is also found in the variants `cold boot' (from power-off
   condition) and `warm boot' (with the CPU and all devices already
   powered up, as after a hardware reset or software crash).

   Another variant: `soft boot', reinitialization of only part of a
   system, under control of other software still running: "If you're
   running the [1806]mess-dos emulator, control-alt-insert will cause a
   soft-boot of the emulator, while leaving the rest of the system
   running."

   Opposed to this there is `hard boot', which connotes hostility towards
   or frustration with the machine being booted: "I'll have to hard-boot
   this losing Sun." "I recommend booting it hard." One often hard-boots
   by performing a [1807]power cycle.

   Historical note: this term derives from `bootstrap loader', a short
   program that was read in from cards or paper tape, or toggled in from
   the front panel switches. This program was always very short (great
   efforts were expended on making it short in order to minimize the
   labor and chance of error involved in toggling it in), but was just
   smart enough to read in a slightly more complex program (usually from
   a card or paper tape reader), to which it handed control; this program
   in turn was smart enough to read the application or operating system
   from a magnetic tape drive or disk drive. Thus, in successive steps,
   the computer `pulled itself up by its bootstraps' to a useful
   operating state. Nowadays the bootstrap is usually found in ROM or
   EPROM, and reads the first stage in from a fixed location on the disk,
   called the `boot block'. When this program gains control, it is
   powerful enough to load the actual OS and hand control over to it.
     _________________________________________________________________

   Node:Borg, Next:[1808]borken, Previous:[1809]boot, Up:[1810]= B =

   Borg n.

   In "Star Trek: The Next Generation" the Borg is a species of cyborg
   that ruthlessly seeks to incorporate all sentient life into itself;
   their slogan is "You will be assimilated. Resistance is futile." In
   hacker parlance, the Borg is usually [1811]Microsoft, which is thought
   to be trying just as ruthlessly to assimilate all computers and the
   entire Internet to itself (there is a widely circulated image of Bill
   Gates as a Borg). Being forced to use Windows or NT is often referred
   to as being "Borged". Interestingly, the [1812]Halloween Documents
   reveal that this jargon is live within Microsoft itself. (Other
   companies, notably Intel and UUNet, have also occasionally been
   equated to the Borg.) See also [1813]Evil Empire, [1814]Internet
   Exploiter.

   In IETF circles, where direct pressure from Microsoft is not a daily
   reality, the Borg is sometimes Cisco. This usage commemmorates their
   tendency to pay any price to hire talent away from their competitors.
   In fact, at the Spring 1997 IETF, a large number of ex-Cisco
   employees, all former members of Routing Geeks, showed up with
   t-shirts printed with "Recovering Borg".
     _________________________________________________________________

   Node:borken, Next:[1815]bot, Previous:[1816]Borg, Up:[1817]= B =

   borken adj.

   (also `borked') Common deliberate typo for `broken'.
     _________________________________________________________________

   Node:bot, Next:[1818]bot spot, Previous:[1819]borken, Up:[1820]= B =

   bot n

   [common on IRC, MUD and among gamers; from `robot'] 1. An [1821]IRC or
   [1822]MUD user who is actually a program. On IRC, typically the robot
   provides some useful service. Examples are NickServ, which tries to
   prevent random users from adopting [1823]nicks already claimed by
   others, and MsgServ, which allows one to send asynchronous messages to
   be delivered when the recipient signs on. Also common are `annoybots',
   such as KissServ, which perform no useful function except to send cute
   messages to other people. Service bots are less common on MUDs; but
   some others, such as the `Julia' bot active in 1990-91, have been
   remarkably impressive Turing-test experiments, able to pass as human
   for as long as ten or fifteen minutes of conversation. 2. An
   AI-controlled player in a computer game (especially a first-person
   shooter such as Quake) which, unlike ordinary monsters, operates like
   a human-controlled player, with access to a player's weapons and
   abilities. An example can be found at
   [1824]http://www.telefragged.com/thefatal/. 3. Term used, though less
   commonly, for a web [1825]spider. The file for controlling spider
   behavior on your site is officially the "Robots Exclusion File" and
   its URL is "http://<somehost>/robots.txt")

   Note that bots in all senses were `robots' when the terms first
   appeared in the early 1990s, but the shortened form is now habitual.
     _________________________________________________________________

   Node:bot spot, Next:[1826]bottom feeder, Previous:[1827]bot,
   Up:[1828]= B =

   bot spot n.

   [MUD] The user on a MUD with the longest connect time. Derives from
   the fact that [1829]bots on MUDS often stay constantly connected and
   appear at the bottom of the list.
     _________________________________________________________________

   Node:bottom feeder, Next:[1830]bottom-up implementation,
   Previous:[1831]bot spot, Up:[1832]= B =

   bottom feeder n.

   1. An Internet user that leeches off ISPs - the sort you can never
   provide good enough services for, always complains about the price, no
   matter how low it may be, and will bolt off to another service the
   moment there is even the slimmest price difference. While most bottom
   feeders infest free or almost free services such as AOL, MSN, and
   Hotmail, too many flock to whomever happens to be the cheapest
   regional ISP at the time. Bottom feeders are often the classic problem
   user, known for unleashing spam, flamage, and other breaches of
   [1833]netiquette. 2. Syn. for [1834]slopsucker, derived from the
   fishermen's and naturalists' term for finny creatures who subsist on
   the primordial ooze. (This sense is older.)
     _________________________________________________________________

   Node:bottom-up implementation, Next:[1835]bounce,
   Previous:[1836]bottom feeder, Up:[1837]= B =

   bottom-up implementation n.

   Hackish opposite of the techspeak term `top-down design'. It has been
   received wisdom in most programming cultures that it is best to design
   from higher levels of abstraction down to lower, specifying sequences
   of action in increasing detail until you get to actual code. Hackers
   often find (especially in exploratory designs that cannot be closely
   specified in advance) that it works best to build things in the
   opposite order, by writing and testing a clean set of primitive
   operations and then knitting them together. Naively applied, this
   leads to hacked-together bottom-up implementations; a more
   sophisticated response is `middle-out implementation', in which
   scratch code within primitives at the mid-level of the system is
   gradually replaced with a more polished version of the lowest level at
   the same time the structure above the midlevel is being built.
     _________________________________________________________________

   Node:bounce, Next:[1838]bounce message, Previous:[1839]bottom-up
   implementation, Up:[1840]= B =

   bounce v.

   1. [common; perhaps by analogy to a bouncing check] An electronic mail
   message that is undeliverable and returns an error notification to the
   sender is said to `bounce'. See also [1841]bounce message. 2.
   [Stanford] To play volleyball. The now-demolished [1842]D. C. Power
   Lab building used by the Stanford AI Lab in the 1970s had a volleyball
   court on the front lawn. From 5 P.M. to 7 P.M. was the scheduled
   maintenance time for the computer, so every afternoon at 5 would come
   over the intercom the cry: "Now hear this: bounce, bounce!", followed
   by Brian McCune loudly bouncing a volleyball on the floor outside the
   offices of known volleyballers. 3. To engage in sexual intercourse;
   prob. from the expression `bouncing the mattress', but influenced by
   Roo's psychosexually loaded "Try bouncing me, Tigger!" from the
   "Winnie-the-Pooh" books. Compare [1843]boink. 4. To casually reboot a
   system in order to clear up a transient problem. Reported primarily
   among [1844]VMS and [1845]Unix users. 5. [VM/CMS programmers]
   Automatic warm-start of a machine after an error. "I logged on this
   morning and found it had bounced 7 times during the night" 6. [IBM] To
   [1846]power cycle a peripheral in order to reset it.
     _________________________________________________________________

   Node:bounce message, Next:[1847]boustrophedon, Previous:[1848]bounce,
   Up:[1849]= B =

   bounce message n.

   [common] Notification message returned to sender by a site unable to
   relay [1850]email to the intended [1851]Internet address recipient or
   the next link in a [1852]bang path (see [1853]bounce, sense 1).
   Reasons might include a nonexistent or misspelled username or a
   [1854]down relay site. Bounce messages can themselves fail, with
   occasionally ugly results; see [1855]sorcerer's apprentice mode and
   [1856]software laser. The terms `bounce mail' and `barfmail' are also
   common.
     _________________________________________________________________

   Node:boustrophedon, Next:[1857]box, Previous:[1858]bounce message,
   Up:[1859]= B =

   boustrophedon n.

   [from a Greek word for turning like an ox while plowing] An ancient
   method of writing using alternate left-to-right and right-to-left
   lines. This term is actually philologists' techspeak and typesetters'
   jargon. Erudite hackers use it for an optimization performed by some
   computer typesetting software and moving-head printers. The adverbial
   form `boustrophedonically' is also found (hackers purely love
   constructions like this).
     _________________________________________________________________

   Node:box, Next:[1860]boxed comments, Previous:[1861]boustrophedon,
   Up:[1862]= B =

   box n.

   1. A computer; esp. in the construction `foo box' where foo is some
   functional qualifier, like `graphics', or the name of an OS (thus,
   `Unix box', `MS-DOS box', etc.) "We preprocess the data on Unix boxes
   before handing it up to the mainframe." 2. [IBM] Without qualification
   but within an SNA-using site, this refers specifically to an IBM
   front-end processor or FEP /F-E-P/. An FEP is a small computer
   necessary to enable an IBM [1863]mainframe to communicate beyond the
   limits of the [1864]dinosaur pen. Typically used in expressions like
   the cry that goes up when an SNA network goes down: "Looks like the
   [1865]box has fallen over." (See [1866]fall over.) See also [1867]IBM,
   [1868]fear and loathing, [1869]Blue Glue.
     _________________________________________________________________

   Node:boxed comments, Next:[1870]boxen, Previous:[1871]box, Up:[1872]=
   B =

   boxed comments n.

   Comments (explanatory notes attached to program instructions) that
   occupy several lines by themselves; so called because in assembler and
   C code they are often surrounded by a box in a style something like
   this:

/*************************************************
 *
 * This is a boxed comment in C style
 *
 *************************************************/

   Common variants of this style omit the asterisks in column 2 or add a
   matching row of asterisks closing the right side of the box. The
   sparest variant omits all but the comment delimiters themselves; the
   `box' is implied. Oppose [1873]winged comments.
     _________________________________________________________________

   Node:boxen, Next:[1874]boxology, Previous:[1875]boxed comments,
   Up:[1876]= B =

   boxen /bok'sn/ pl.n.

   [very common; by analogy with [1877]VAXen] Fanciful plural of
   [1878]box often encountered in the phrase `Unix boxen', used to
   describe commodity [1879]Unix hardware. The connotation is that any
   two Unix boxen are interchangeable.
     _________________________________________________________________

   Node:boxology, Next:[1880]bozotic, Previous:[1881]boxen, Up:[1882]= B
   =

   boxology /bok-sol'*-jee/ n.

   Syn. [1883]ASCII art. This term implies a more restricted domain, that
   of box-and-arrow drawings. "His report has a lot of boxology in it."
   Compare [1884]macrology.
     _________________________________________________________________

   Node:bozotic, Next:[1885]BQS, Previous:[1886]boxology, Up:[1887]= B =

   bozotic /boh-zoh'tik/ or /boh-zo'tik/ adj.

   [from the name of a TV clown even more losing than Ronald McDonald]
   Resembling or having the quality of a bozo; that is, clownish,
   ludicrously wrong, unintentionally humorous. Compare [1888]wonky,
   [1889]demented. Note that the noun `bozo' occurs in slang, but the
   mainstream adjectival form would be `bozo-like' or (in New England)
   `bozoish'.
     _________________________________________________________________

   Node:BQS, Next:[1890]brain dump, Previous:[1891]bozotic, Up:[1892]= B
   =

   BQS /B-Q-S/ adj.

   Syn. [1893]Berkeley Quality Software.
     _________________________________________________________________

   Node:brain dump, Next:[1894]brain fart, Previous:[1895]BQS, Up:[1896]=
   B =

   brain dump n.

   [common] The act of telling someone everything one knows about a
   particular topic or project. Typically used when someone is going to
   let a new party maintain a piece of code. Conceptually analogous to an
   operating system [1897]core dump in that it saves a lot of useful
   [1898]state before an exit. "You'll have to give me a brain dump on
   FOOBAR before you start your new job at HackerCorp." See [1899]core
   dump (sense 4). At Sun, this is also known as `TOI' (transfer of
   information).
     _________________________________________________________________

   Node:brain fart, Next:[1900]brain-damaged, Previous:[1901]brain dump,
   Up:[1902]= B =

   brain fart n.

   The actual result of a [1903]braino, as opposed to the mental glitch
   that is the braino itself. E.g., typing dir on a Unix box after a
   session with DOS.
     _________________________________________________________________

   Node:brain-damaged, Next:[1904]brain-dead, Previous:[1905]brain fart,
   Up:[1906]= B =

   brain-damaged adj.

   1. [common; generalization of `Honeywell Brain Damage' (HBD), a
   theoretical disease invented to explain certain utter cretinisms in
   Honeywell [1907]Multics] adj. Obviously wrong; [1908]cretinous;
   [1909]demented. There is an implication that the person responsible
   must have suffered brain damage, because he should have known better.
   Calling something brain-damaged is really bad; it also implies it is
   unusable, and that its failure to work is due to poor design rather
   than some accident. "Only six monocase characters per file name? Now
   that's brain-damaged!" 2. [esp. in the Mac world] May refer to free
   demonstration software that has been deliberately crippled in some way
   so as not to compete with the product it is intended to sell. Syn.
   [1910]crippleware.
     _________________________________________________________________

   Node:brain-dead, Next:[1911]braino, Previous:[1912]brain-damaged,
   Up:[1913]= B =

   brain-dead adj.

   [common] Brain-damaged in the extreme. It tends to imply terminal
   design failure rather than malfunction or simple stupidity. "This comm
   program doesn't know how to send a break -- how brain-dead!"
     _________________________________________________________________

   Node:braino, Next:[1914]branch to Fishkill, Previous:[1915]brain-dead,
   Up:[1916]= B =

   braino /bray'no/ n.

   Syn. for [1917]thinko. See also [1918]brain fart.
     _________________________________________________________________

   Node:branch to Fishkill, Next:[1919]bread crumbs,
   Previous:[1920]braino, Up:[1921]= B =

   branch to Fishkill n.

   [IBM: from the location of one of the corporation's facilities] Any
   unexpected jump in a program that produces catastrophic or just plain
   weird results. See [1922]jump off into never-never land,
   [1923]hyperspace.
     _________________________________________________________________

   Node:bread crumbs, Next:[1924]break, Previous:[1925]branch to
   Fishkill, Up:[1926]= B =

   bread crumbs n.

   1. Debugging statements inserted into a program that emit output or
   log indicators of the program's [1927]state to a file so you can see
   where it dies or pin down the cause of surprising behavior. The term
   is probably a reference to the Hansel and Gretel story from the
   Brothers Grimm or the older French folktale of Thumbelina; in several
   variants of these, a character leaves a trail of bread crumbs so as
   not to get lost in the woods. 2. In user-interface design, any feature
   that allows some tracking of where you've been, like coloring visited
   links purple rather than blue in Netscape (also called `footrinting').
     _________________________________________________________________

   Node:break, Next:[1928]break-even point, Previous:[1929]bread crumbs,
   Up:[1930]= B =

   break

   1. vt. To cause to be [1931]broken (in any sense). "Your latest patch
   to the editor broke the paragraph commands." 2. v. (of a program) To
   stop temporarily, so that it may debugged. The place where it stops is
   a `breakpoint'. 3. [techspeak] vi. To send an RS-232 break (two
   character widths of line high) over a serial comm line. 4. [Unix] vi.
   To strike whatever key currently causes the tty driver to send SIGINT
   to the current process. Normally, break (sense 3), delete or
   [1932]control-C does this. 5. `break break' may be said to interrupt a
   conversation (this is an example of verb doubling). This usage comes
   from radio communications, which in turn probably came from landline
   telegraph/teleprinter usage, as badly abused in the Citizen's Band
   craze a few years ago.
     _________________________________________________________________

   Node:break-even point, Next:[1933]breath-of-life packet,
   Previous:[1934]break, Up:[1935]= B =

   break-even point n.

   In the process of implementing a new computer language, the point at
   which the language is sufficiently effective that one can implement
   the language in itself. That is, for a new language called,
   hypothetically, FOOGOL, one has reached break-even when one can write
   a demonstration compiler for FOOGOL in FOOGOL, discard the original
   implementation language, and thereafter use working versions of FOOGOL
   to develop newer ones. This is an important milestone; see [1936]MFTL.

   Since this entry was first written, several correspondents have
   reported that there actually was a compiler for a tiny Algol-like
   language called Foogol floating around on various [1937]VAXen in the
   early and mid-1980s. A FOOGOL implementation is available at the
   Retrocomputing Museum [1938]http://www.ccil.org/retro.
     _________________________________________________________________

   Node:breath-of-life packet, Next:[1939]breedle,
   Previous:[1940]break-even point, Up:[1941]= B =

   breath-of-life packet n.

   [XEROX PARC] An Ethernet packet that contains bootstrap (see
   [1942]boot) code, periodically sent out from a working computer to
   infuse the `breath of life' into any computer on the network that has
   happened to crash. Machines depending on such packets have sufficient
   hardware or firmware code to wait for (or request) such a packet
   during the reboot process. See also [1943]dickless workstation.

   The notional `kiss-of-death packet', with a function complementary to
   that of a breath-of-life packet, is recommended for dealing with hosts
   that consume too many network resources. Though `kiss-of-death packet'
   is usually used in jest, there is at least one documented instance of
   an Internet subnet with limited address-table slots in a gateway
   machine in which such packets were routinely used to compete for
   slots, rather like Christmas shoppers competing for scarce parking
   spaces.
     _________________________________________________________________

   Node:breedle, Next:[1944]Breidbart Index,
   Previous:[1945]breath-of-life packet, Up:[1946]= B =

   breedle n.

   See [1947]feep.
     _________________________________________________________________

   Node:Breidbart Index, Next:[1948]bring X to its knees,
   Previous:[1949]breedle, Up:[1950]= B =

   Breidbart Index /bri:d'bart ind*ks/

   A measurement of the severity of spam invented by long-time hacker
   Seth Breidbart, used for programming cancelbots. The Breidbart Index
   takes into account the fact that excessive multi-posting [1951]EMP is
   worse than excessive cross-posting [1952]ECP. The Breidbart Index is
   computed as follows: For each article in a spam, take the square-root
   of the number of newsgroups to which the article is posted. The
   Breidbart Index is the sum of the square roots of all of the posts in
   the spam. For example, one article posted to nine newsgroups and again
   to sixteen would have BI = sqrt(9) + sqrt(16) = 7. It is generally
   agreed that a spam is cancelable if the Breidbart Index exceeds 20.

   The Breidbart Index accumulates over a 45-day window. Ten articles
   yesterday and ten articles today and ten articles tomorrow add up to a
   30-article spam. Spam fighters will often reset the count if you can
   convince them that the spam was accidental and/or you have seen the
   error of your ways and won't repeat it. Breidbart Index can accumulate
   over multiple authors. For example, the "Make Money Fast" pyramid
   scheme exceeded a BI of 20 a long time ago, and is now considered
   "cancel on sight".
     _________________________________________________________________

   Node:bring X to its knees, Next:[1953]brittle,
   Previous:[1954]Breidbart Index, Up:[1955]= B =

   bring X to its knees v.

   [common] To present a machine, operating system, piece of software, or
   algorithm with a load so extreme or [1956]pathological that it grinds
   to a halt. "To bring a MicroVAX to its knees, try twenty users running
   [1957]vi -- or four running [1958]EMACS." Compare [1959]hog.
     _________________________________________________________________

   Node:brittle, Next:[1960]broadcast storm, Previous:[1961]bring X to
   its knees, Up:[1962]= B =

   brittle adj.

   Said of software that is functional but easily broken by changes in
   operating environment or configuration, or by any minor tweak to the
   software itself. Also, any system that responds inappropriately and
   disastrously to abnormal but expected external stimuli; e.g., a file
   system that is usually totally scrambled by a power failure is said to
   be brittle. This term is often used to describe the results of a
   research effort that were never intended to be robust, but it can be
   applied to commercial software, which (due to closed-source
   development) displays the quality far more often than it ought to.
   Oppose [1963]robust.
     _________________________________________________________________

   Node:broadcast storm, Next:[1964]brochureware, Previous:[1965]brittle,
   Up:[1966]= B =

   broadcast storm n.

   [common] An incorrect packet broadcast on a network that causes most
   hosts to respond all at once, typically with wrong answers that start
   the process over again. See [1967]network meltdown; compare [1968]mail
   storm.
     _________________________________________________________________

   Node:brochureware, Next:[1969]broken, Previous:[1970]broadcast storm,
   Up:[1971]= B =

   brochureware n.

   Planned but non-existent product like [1972]vaporware, but with the
   added implication that marketing is actively selling and promoting it
   (they've printed brochures). Brochureware is often deployed as a
   strategic weapon; the idea is to con customers into not committing to
   an existing product of the competition's. It is a safe bet that when a
   brochureware product finally becomes real, it will be more expensive
   than and inferior to the alternatives that had been available for
   years.
     _________________________________________________________________

   Node:broken, Next:[1973]broken arrow, Previous:[1974]brochureware,
   Up:[1975]= B =

   broken adj.

   1. Not working properly (of programs). 2. Behaving strangely;
   especially (when used of people) exhibiting extreme depression.
     _________________________________________________________________

   Node:broken arrow, Next:[1976]BrokenWindows, Previous:[1977]broken,
   Up:[1978]= B =

   broken arrow n.

   [IBM] The error code displayed on line 25 of a 3270 terminal (or a PC
   emulating a 3270) for various kinds of protocol violations and
   "unexpected" error conditions (including connection to a [1979]down
   computer). On a PC, simulated with `->/_', with the two center
   characters overstruck.

   Note: to appreciate this term fully, it helps to know that `broken
   arrow' is also military jargon for an accident involving nuclear
   weapons....
     _________________________________________________________________

   Node:BrokenWindows, Next:[1980]broket, Previous:[1981]broken arrow,
   Up:[1982]= B =

   BrokenWindows n.

   Abusive hackerism for the [1983]crufty and [1984]elephantine [1985]X
   environment on Sun machines; properly called `OpenWindows'.
     _________________________________________________________________

   Node:broket, Next:[1986]Brooks's Law, Previous:[1987]BrokenWindows,
   Up:[1988]= B =

   broket /broh'k*t/ or /broh'ket`/ n.

   [rare; by analogy with `bracket': a `broken bracket'] Either of the
   characters < and >, when used as paired enclosing delimiters. This
   word originated as a contraction of the phrase `broken bracket', that
   is, a bracket that is bent in the middle. (At MIT, and apparently in
   the [1989]Real World as well, these are usually called [1990]angle
   brackets.)
     _________________________________________________________________

   Node:Brooks's Law, Next:[1991]brown-paper-bag bug,
   Previous:[1992]broket, Up:[1993]= B =

   Brooks's Law prov.

   "Adding manpower to a late software project makes it later" -- a
   result of the fact that the expected advantage from splitting
   development work among N programmers is O(N) (that is, proportional to
   N), but the complexity and communications cost associated with
   coordinating and then merging their work is O(N^2) (that is,
   proportional to the square of N). The quote is from Fred Brooks, a
   manager of IBM's OS/360 project and author of "The Mythical Man-Month"
   (Addison-Wesley, 1975, ISBN 0-201-00650-2), an excellent early book on
   software engineering. The myth in question has been most tersely
   expressed as "Programmer time is fungible" and Brooks established
   conclusively that it is not. Hackers have never forgotten his advice
   (though it's not the whole story; see [1994]bazaar); too often,
   [1995]management still does. See also [1996]creationism,
   [1997]second-system effect, [1998]optimism.
     _________________________________________________________________

   Node:brown-paper-bag bug, Next:[1999]browser, Previous:[2000]Brooks's
   Law, Up:[2001]= B =

   brown-paper-bag bug n.

   A bug in a public software release that is so embarrassing that the
   author notionally wears a brown paper bag over his head for a while so
   he won't be recognized on the net. Entered popular usage after the
   early-1999 release of the first Linux 2.2, which had one. The phrase
   was used in Linus Torvalds's apology posting.
     _________________________________________________________________

   Node:browser, Next:[2002]BRS, Previous:[2003]brown-paper-bag bug,
   Up:[2004]= B =

   browser n.

   A program specifically designed to help users view and navigate
   hypertext, on-line documentation, or a database. While this general
   sense has been present in jargon for a long time, the proliferation of
   browsers for the World Wide Web after 1992 has made it much more
   popular and provided a central or default techspeak meaning of the
   word previously lacking in hacker usage. Nowadays, if someone mentions
   using a `browser' without qualification, one may assume it is a Web
   browser.
     _________________________________________________________________

   Node:BRS, Next:[2005]brute force, Previous:[2006]browser, Up:[2007]= B
   =

   BRS /B-R-S/ n.

   Syn. [2008]Big Red Switch. This abbreviation is fairly common on-line.
     _________________________________________________________________

   Node:brute force, Next:[2009]brute force and ignorance,
   Previous:[2010]BRS, Up:[2011]= B =

   brute force adj.

   Describes a primitive programming style, one in which the programmer
   relies on the computer's processing power instead of using his or her
   own intelligence to simplify the problem, often ignoring problems of
   scale and applying naive methods suited to small problems directly to
   large ones. The term can also be used in reference to programming
   style: brute-force programs are written in a heavyhanded, tedious way,
   full of repetition and devoid of any elegance or useful abstraction
   (see also [2012]brute force and ignorance).

   The [2013]canonical example of a brute-force algorithm is associated
   with the `traveling salesman problem' (TSP), a classical [2014]NP-hard
   problem: Suppose a person is in, say, Boston, and wishes to drive to N
   other cities. In what order should the cities be visited in order to
   minimize the distance travelled? The brute-force method is to simply
   generate all possible routes and compare the distances; while
   guaranteed to work and simple to implement, this algorithm is clearly
   very stupid in that it considers even obviously absurd routes (like
   going from Boston to Houston via San Francisco and New York, in that
   order). For very small N it works well, but it rapidly becomes
   absurdly inefficient when N increases (for N = 15, there are already
   1,307,674,368,000 possible routes to consider, and for N = 1000 --
   well, see [2015]bignum). Sometimes, unfortunately, there is no better
   general solution than brute force. See also [2016]NP-.

   A more simple-minded example of brute-force programming is finding the
   smallest number in a large list by first using an existing program to
   sort the list in ascending order, and then picking the first number
   off the front.

   Whether brute-force programming should actually be considered stupid
   or not depends on the context; if the problem is not terribly big, the
   extra CPU time spent on a brute-force solution may cost less than the
   programmer time it would take to develop a more `intelligent'
   algorithm. Additionally, a more intelligent algorithm may imply more
   long-term complexity cost and bug-chasing than are justified by the
   speed improvement.

   Ken Thompson, co-inventor of Unix, is reported to have uttered the
   epigram "When in doubt, use brute force". He probably intended this as
   a [2017]ha ha only serious, but the original Unix kernel's preference
   for simple, robust, and portable algorithms over [2018]brittle `smart'
   ones does seem to have been a significant factor in the success of
   that OS. Like so many other tradeoffs in software design, the choice
   between brute force and complex, finely-tuned cleverness is often a
   difficult one that requires both engineering savvy and delicate
   esthetic judgment.
     _________________________________________________________________

   Node:brute force and ignorance, Next:[2019]BSD, Previous:[2020]brute
   force, Up:[2021]= B =

   brute force and ignorance n.

   A popular design technique at many software houses -- [2022]brute
   force coding unrelieved by any knowledge of how problems have been
   previously solved in elegant ways. Dogmatic adherence to design
   methodologies tends to encourage this sort of thing. Characteristic of
   early [2023]larval stage programming; unfortunately, many never
   outgrow it. Often abbreviated BFI: "Gak, they used a [2024]bubble
   sort! That's strictly from BFI." Compare [2025]bogosity.
     _________________________________________________________________

   Node:BSD, Next:[2026]BSOD, Previous:[2027]brute force and ignorance,
   Up:[2028]= B =

   BSD /B-S-D/ n.

   [abbreviation for `Berkeley Software Distribution'] a family of
   [2029]Unix versions for the [2030]DEC [2031]VAX and PDP-11 developed
   by Bill Joy and others at [2032]Berzerkeley starting around 1977,
   incorporating paged virtual memory, TCP/IP networking enhancements,
   and many other features. The BSD versions (4.1, 4.2, and 4.3) and the
   commercial versions derived from them (SunOS, ULTRIX, and Mt. Xinu)
   held the technical lead in the Unix world until AT&T's successful
   standardization efforts after about 1986; descendants including
   Free/Open/NetBSD, BSD/OS and MacOS X are still widely popular. Note
   that BSD versions going back to 2.9 are often referred to by their
   version numbers alone, without the BSD prefix. See [2033]4.2,
   [2034]Unix, [2035]USG Unix.
     _________________________________________________________________

   Node:BSOD, Next:[2036]BUAF, Previous:[2037]BSD, Up:[2038]= B =

   BSOD /B-S-O-D/

   Very commmon abbreviation for [2039]Blue Screen of Death. Both spoken
   and written.
     _________________________________________________________________

   Node:BUAF, Next:[2040]BUAG, Previous:[2041]BSOD, Up:[2042]= B =

   BUAF // n.

   [abbreviation, from alt.fan.warlord] Big Ugly ASCII Font -- a special
   form of [2043]ASCII art. Various programs exist for rendering text
   strings into block, bloob, and pseudo-script fonts in cells between
   four and six character cells on a side; this is smaller than the
   letters generated by older [2044]banner (sense 2) programs. These are
   sometimes used to render one's name in a [2045]sig block, and are
   critically referred to as `BUAF's. See [2046]warlording.
     _________________________________________________________________

   Node:BUAG, Next:[2047]bubble sort, Previous:[2048]BUAF, Up:[2049]= B =

   BUAG // n.

   [abbreviation, from alt.fan.warlord] Big Ugly ASCII Graphic.
   Pejorative term for ugly [2050]ASCII art, especially as found in
   [2051]sig blocks. For some reason, mutations of the head of Bart
   Simpson are particularly common in the least imaginative [2052]sig
   blocks. See [2053]warlording.
     _________________________________________________________________

   Node:bubble sort, Next:[2054]bucky bits, Previous:[2055]BUAG,
   Up:[2056]= B =

   bubble sort n.

   Techspeak for a particular sorting technique in which pairs of
   adjacent values in the list to be sorted are compared and interchanged
   if they are out of order; thus, list entries `bubble upward' in the
   list until they bump into one with a lower sort value. Because it is
   not very good relative to other methods and is the one typically
   stumbled on by [2057]naive and untutored programmers, hackers consider
   it the [2058]canonical example of a naive algorithm. (However, it's
   been shown by repeated experiment that below about 5000 records
   bubble-sort is OK anyway.) The canonical example of a really bad
   algorithm is [2059]bogo-sort. A bubble sort might be used out of
   ignorance, but any use of bogo-sort could issue only from brain damage
   or willful perversity.
     _________________________________________________________________

   Node:bucky bits, Next:[2060]buffer chuck, Previous:[2061]bubble sort,
   Up:[2062]= B =

   bucky bits /buh'kee bits/ n.

   1. obs. The bits produced by the CONTROL and META shift keys on a SAIL
   keyboard (octal 200 and 400 respectively), resulting in a 9-bit
   keyboard character set. The MIT AI TV (Knight) keyboards extended this
   with TOP and separate left and right CONTROL and META keys, resulting
   in a 12-bit character set; later, LISP Machines added such keys as
   SUPER, HYPER, and GREEK (see [2063]space-cadet keyboard). 2. By
   extension, bits associated with `extra' shift keys on any keyboard,
   e.g., the ALT on an IBM PC or command and option keys on a Macintosh.

   It has long been rumored that `bucky bits' were named for Buckminster
   Fuller during a period when he was consulting at Stanford. Actually,
   bucky bits were invented by Niklaus Wirth when he was at Stanford in
   1964-65; he first suggested the idea of an EDIT key to set the 8th bit
   of an otherwise 7-bit ASCII character). It seems that, unknown to
   Wirth, certain Stanford hackers had privately nicknamed him `Bucky'
   after a prominent portion of his dental anatomy, and this nickname
   transferred to the bit. Bucky-bit commands were used in a number of
   editors written at Stanford, including most notably TV-EDIT and NLS.

   The term spread to MIT and CMU early and is now in general use.
   Ironically, Wirth himself remained unaware of its derivation for
   nearly 30 years, until GLS dug up this history in early 1993! See
   [2064]double bucky, [2065]quadruple bucky.
     _________________________________________________________________

   Node:buffer chuck, Next:[2066]buffer overflow, Previous:[2067]bucky
   bits, Up:[2068]= B =

   buffer chuck n.

   Shorter and ruder syn. for [2069]buffer overflow.
     _________________________________________________________________

   Node:buffer overflow, Next:[2070]bug, Previous:[2071]buffer chuck,
   Up:[2072]= B =

   buffer overflow n.

   What happens when you try to stuff more data into a buffer (holding
   area) than it can handle. This problem is commonly exploited by
   [2073]crackers to get arbitrary commands executed by a program running
   with root permissions. This may be due to a mismatch in the processing
   rates of the producing and consuming processes (see [2074]overrun and
   [2075]firehose syndrome), or because the buffer is simply too small to
   hold all the data that must accumulate before a piece of it can be
   processed. For example, in a text-processing tool that [2076]crunches
   a line at a time, a short line buffer can result in [2077]lossage as
   input from a long line overflows the buffer and trashes data beyond
   it. Good defensive programming would check for overflow on each
   character and stop accepting data when the buffer is full up. The term
   is used of and by humans in a metaphorical sense. "What time did I
   agree to meet you? My buffer must have overflowed." Or "If I answer
   that phone my buffer is going to overflow." See also [2078]spam,
   [2079]overrun screw.
     _________________________________________________________________

   Node:bug, Next:[2080]bug-compatible, Previous:[2081]buffer overflow,
   Up:[2082]= B =

   bug n.

   An unwanted and unintended property of a program or piece of hardware,
   esp. one that causes it to malfunction. Antonym of [2083]feature.
   Examples: "There's a bug in the editor: it writes things out
   backwards." "The system crashed because of a hardware bug." "Fred is a
   winner, but he has a few bugs" (i.e., Fred is a good guy, but he has a
   few personality problems).

   Historical note: Admiral Grace Hopper (an early computing pioneer
   better known for inventing [2084]COBOL) liked to tell a story in which
   a technician solved a [2085]glitch in the Harvard Mark II machine by
   pulling an actual insect out from between the contacts of one of its
   relays, and she subsequently promulgated [2086]bug in its hackish
   sense as a joke about the incident (though, as she was careful to
   admit, she was not there when it happened). For many years the logbook
   associated with the incident and the actual bug in question (a moth)
   sat in a display case at the Naval Surface Warfare Center (NSWC). The
   entire story, with a picture of the logbook and the moth taped into
   it, is recorded in the "Annals of the History of Computing", Vol. 3,
   No. 3 (July 1981), pp. 285-286.

   The text of the log entry (from September 9, 1947), reads "1545 Relay
   #70 Panel F (moth) in relay. First actual case of bug being found".
   This wording establishes that the term was already in use at the time
   in its current specific sense -- and Hopper herself reports that the
   term `bug' was regularly applied to problems in radar electronics
   during WWII.

   Indeed, the use of `bug' to mean an industrial defect was already
   established in Thomas Edison's time, and a more specific and rather
   modern use can be found in an electrical handbook from 1896 ("Hawkin's
   New Catechism of Electricity", Theo. Audel & Co.) which says: "The
   term `bug' is used to a limited extent to designate any fault or
   trouble in the connections or working of electric apparatus." It
   further notes that the term is "said to have originated in quadruplex
   telegraphy and have been transferred to all electric apparatus."

   The latter observation may explain a common folk etymology of the
   term; that it came from telephone company usage, in which "bugs in a
   telephone cable" were blamed for noisy lines. Though this derivation
   seems to be mistaken, it may well be a distorted memory of a joke
   first current among telegraph operators more than a century ago!

   Or perhaps not a joke. Historians of the field inform us that the term
   "bug" was regularly used in the early days of telegraphy to refer to a
   variety of semi-automatic telegraphy keyers that would send a string
   of dots if you held them down. In fact, the Vibroplex keyers (which
   were among the most common of this type) even had a graphic of a
   beetle on them (and still do)! While the ability to send repeated dots
   automatically was very useful for professional morse code operators,
   these were also significantly trickier to use than the older manual
   keyers, and it could take some practice to ensure one didn't introduce
   extraneous dots into the code by holding the key down a fraction too
   long. In the hands of an inexperienced operator, a Vibroplex "bug" on
   the line could mean that a lot of garbled Morse would soon be coming
   your way.

   Further, the term "bug" has long been used among radio technicians to
   describe a device that converts electromagnetic field variations into
   acoustic signals. It is used to trace radio interference and look for
   dangerous radio emissions. Radio community usage derives from the
   roach-like shape of the first versions used by 19th century
   physicists. The first versions consisted of a coil of wire (roach
   body), with the two wire ends sticking out and bent back to nearly
   touch forming a spark gap (roach antennae). The bug is to the radio
   technician what the stethoscope is to the stereotype medical doctor.
   This sense is almost certainly ancestral to modern use of "bug" for a
   covert monitoring device, but may also have contributed to the use of
   "bug" for the effects of radio interference itself.

   Actually, use of `bug' in the general sense of a disruptive event goes
   back to Shakespeare! (Henry VI, part III - Act V, Scene II: King
   Edward: "So, lie thou there. Die thou; and die our fear; For Warwick
   was a bug that fear'd us all.") In the first edition of Samuel
   Johnson's dictionary one meaning of `bug' is "A frightful object; a
   walking spectre"; this is traced to `bugbear', a Welsh term for a
   variety of mythological monster which (to complete the circle) has
   recently been reintroduced into the popular lexicon through fantasy
   role-playing games.

   In any case, in jargon the word almost never refers to insects. Here
   is a plausible conversation that never actually happened:

   "There is a bug in this ant farm!"

   "What do you mean? I don't see any ants in it."

   "That's the bug."

   A careful discussion of the etymological issues can be found in a
   paper by Fred R. Shapiro, 1987, "Entomology of the Computer Bug:
   History and Folklore", American Speech 62(4):376-378.

   [There has been a widespread myth that the original bug was moved to
   the Smithsonian, and an earlier version of this entry so asserted. A
   correspondent who thought to check discovered that the bug was not
   there. While investigating this in late 1990, your editor discovered
   that the NSWC still had the bug, but had unsuccessfully tried to get
   the Smithsonian to accept it -- and that the present curator of their
   History of American Technology Museum didn't know this and agreed that
   it would make a worthwhile exhibit. It was moved to the Smithsonian in
   mid-1991, but due to space and money constraints was not actually
   exhibited years afterwards. Thus, the process of investigating the
   original-computer-bug bug fixed it in an entirely unexpected way, by
   making the myth true! --ESR]
     _________________________________________________________________

   Node:bug-compatible, Next:[2087]bug-for-bug compatible,
   Previous:[2088]bug, Up:[2089]= B =

   bug-compatible adj.

   [common] Said of a design or revision that has been badly compromised
   by a requirement to be compatible with [2090]fossils or
   [2091]misfeatures in other programs or (esp.) previous releases of
   itself. "MS-DOS 2.0 used \ as a path separator to be bug-compatible
   with some cretin's choice of / as an option character in 1.0."
     _________________________________________________________________

   Node:bug-for-bug compatible, Next:[2092]bug-of-the-month club,
   Previous:[2093]bug-compatible, Up:[2094]= B =

   bug-for-bug compatible n.

   Same as [2095]bug-compatible, with the additional implication that
   much tedious effort went into ensuring that each (known) bug was
   replicated.
     _________________________________________________________________

   Node:bug-of-the-month club, Next:[2096]buglix,
   Previous:[2097]bug-for-bug compatible, Up:[2098]= B =

   bug-of-the-month club n.

   [from "book-of-the-month club", a time-honored mail-order-marketing
   technique in the U.S.] A mythical club which users of `sendmail(8)'
   (the UNIX mail daemon) belong to; this was coined on the Usenet
   newsgroup comp.security.unix at a time when sendmail security holes,
   which allowed outside [2099]crackers access to the system, were being
   uncovered at an alarming rate, forcing sysadmins to update very often.
   Also, more completely, `fatal security bug-of-the-month club'. See
   also [2100]kernel-of-the-week club.
     _________________________________________________________________

   Node:buglix, Next:[2101]bulletproof, Previous:[2102]bug-of-the-month
   club, Up:[2103]= B =

   buglix /buhg'liks/ n.

   [uncommon] Pejorative term referring to [2104]DEC's ULTRIX operating
   system in its earlier severely buggy versions. Still used to describe
   ULTRIX, but without nearly so much venom. Compare [2105]AIDX,
   [2106]HP-SUX, [2107]Nominal Semidestructor, [2108]Telerat,
   [2109]sun-stools.
     _________________________________________________________________

   Node:bulletproof, Next:[2110]bullschildt, Previous:[2111]buglix,
   Up:[2112]= B =

   bulletproof adj.

   Used of an algorithm or implementation considered extremely
   [2113]robust; lossage-resistant; capable of correctly recovering from
   any imaginable exception condition -- a rare and valued quality.
   Implies that the programmer has thought of all possible errors, and
   added [2114]code to protect against each one. Thus, in some cases,
   this can imply code that is too heavyweight, due to excessive paranoia
   on the part of the programmer. Syn. [2115]armor-plated.
     _________________________________________________________________

   Node:bullschildt, Next:[2116]bum, Previous:[2117]bulletproof,
   Up:[2118]= B =

   bullschildt /bul'shilt/ n.

   [comp.lang.c on USENET] A confident, but incorrect, statement about a
   programming language. This immortalizes a very bad book about [2119]C,
   Herbert Schildt's "C - The Complete Reference". One reviewer commented
   "The naive errors in this book would be embarassing even in a
   programming assignment turned in by a computer science college
   sophomore."
     _________________________________________________________________

   Node:bum, Next:[2120]bump, Previous:[2121]bullschildt, Up:[2122]= B =

   bum

   1. vt. To make highly efficient, either in time or space, often at the
   expense of clarity. "I managed to bum three more instructions out of
   that code." "I spent half the night bumming the interrupt code." In
   1996, this term and the practice it describes are semi-obsolete. In
   [2123]elder days, John McCarthy (inventor of [2124]LISP) used to
   compare some efficiency-obsessed hackers among his students to "ski
   bums"; thus, optimization became "program bumming", and eventually
   just "bumming". 2. To squeeze out excess; to remove something in order
   to improve whatever it was removed from (without changing function;
   this distinguishes the process from a [2125]featurectomy). 3. n. A
   small change to an algorithm, program, or hardware device to make it
   more efficient. "This hardware bum makes the jump instruction faster."
   Usage: now uncommon, largely superseded by v. [2126]tune (and n.
   [2127]tweak, [2128]hack), though none of these exactly capture sense
   2. All these uses are rare in Commonwealth hackish, because in the
   parent dialects of English the noun `bum' is a rude synonym for
   `buttocks' and the verb `bum' for buggery.
     _________________________________________________________________

   Node:bump, Next:[2129]burble, Previous:[2130]bum, Up:[2131]= B =

   bump vt.

   Synonym for increment. Has the same meaning as C's ++ operator. Used
   esp. of counter variables, pointers, and index dummies in for, while,
   and do-while loops.
     _________________________________________________________________

   Node:burble, Next:[2132]buried treasure, Previous:[2133]bump,
   Up:[2134]= B =

   burble v.

   [from Lewis Carroll's "Jabberwocky"] Like [2135]flame, but connotes
   that the source is truly clueless and ineffectual (mere flamers can be
   competent). A term of deep contempt. "There's some guy on the phone
   burbling about how he got a DISK FULL error and it's all our comm
   software's fault." This is mainstream slang in some parts of England.
     _________________________________________________________________

   Node:buried treasure, Next:[2136]burn-in period,
   Previous:[2137]burble, Up:[2138]= B =

   buried treasure n.

   A surprising piece of code found in some program. While usually not
   wrong, it tends to vary from [2139]crufty to [2140]bletcherous, and
   has lain undiscovered only because it was functionally correct,
   however horrible it is. Used sarcastically, because what is found is
   anything but treasure. Buried treasure almost always needs to be dug
   up and removed. "I just found that the scheduler sorts its queue using
   [2141]bubble sort! Buried treasure!"
     _________________________________________________________________

   Node:burn-in period, Next:[2142]burst page, Previous:[2143]buried
   treasure, Up:[2144]= B =

   burn-in period n.

   1. A factory test designed to catch systems with [2145]marginal
   components before they get out the door; the theory is that burn-in
   will protect customers by outwaiting the steepest part of the
   [2146]bathtub curve (see [2147]infant mortality). 2. A period of
   indeterminate length in which a person using a computer is so
   intensely involved in his project that he forgets basic needs such as
   food, drink, sleep, etc. Warning: Excessive burn-in can lead to
   burn-out. See [2148]hack mode, [2149]larval stage.

   Historical note: the origin of "burn-in" (sense 1) is apparently the
   practice of setting a new-model airplane's brakes on fire, then
   extinguishing the fire, in order to make them hold better. This was
   done on the first version of the U.S. spy-plane, the U-2.
     _________________________________________________________________

   Node:burst page, Next:[2150]busy-wait, Previous:[2151]burn-in period,
   Up:[2152]= B =

   burst page n.

   Syn. [2153]banner, sense 1.
     _________________________________________________________________

   Node:busy-wait, Next:[2154]buzz, Previous:[2155]burst page, Up:[2156]=
   B =

   busy-wait vi.

   Used of human behavior, conveys that the subject is busy waiting for
   someone or something, intends to move instantly as soon as it shows
   up, and thus cannot do anything else at the moment. "Can't talk now,
   I'm busy-waiting till Bill gets off the phone."

   Technically, `busy-wait' means to wait on an event by [2157]spinning
   through a tight or timed-delay loop that polls for the event on each
   pass, as opposed to setting up an interrupt handler and continuing
   execution on another part of the task. In applications this is a
   wasteful technique, and best avoided on time-sharing systems where a
   busy-waiting program may [2158]hog the processor. However, it is often
   unavoidable in kernel programming. In the Linux world, kernel
   busy-waits are usually referred to as `spinlocks'.
     _________________________________________________________________

   Node:buzz, Next:[2159]BWQ, Previous:[2160]busy-wait, Up:[2161]= B =

   buzz vi.

   1. Of a program, to run with no indication of progress and perhaps
   without guarantee of ever finishing; esp. said of programs thought to
   be executing tight loops of code. A program that is buzzing appears to
   be [2162]catatonic, but never gets out of catatonia, while a buzzing
   loop may eventually end of its own accord. "The program buzzes for
   about 10 seconds trying to sort all the names into order." See
   [2163]spin; see also [2164]grovel. 2. [ETA Systems] To test a wire or
   printed circuit trace for continuity, esp. by applying an AC rather
   than DC signal. Some wire faults will pass DC tests but fail an AC
   buzz test. 3. To process an array or list in sequence, doing the same
   thing to each element. "This loop buzzes through the tz array looking
   for a terminator type."
     _________________________________________________________________

   Node:BWQ, Next:[2165]by hand, Previous:[2166]buzz, Up:[2167]= B =

   BWQ /B-W-Q/ n.

   [IBM: abbreviation, `Buzz Word Quotient'] The percentage of buzzwords
   in a speech or documents. Usually roughly proportional to
   [2168]bogosity. See [2169]TLA.
     _________________________________________________________________

   Node:by hand, Next:[2170]byte, Previous:[2171]BWQ, Up:[2172]= B =

   by hand adv.

   [common] 1. Said of an operation (especially a repetitive, trivial,
   and/or tedious one) that ought to be performed automatically by the
   computer, but which a hacker instead has to step tediously through.
   "My mailer doesn't have a command to include the text of the message
   I'm replying to, so I have to do it by hand." This does not
   necessarily mean the speaker has to retype a copy of the message; it
   might refer to, say, dropping into a subshell from the mailer, making
   a copy of one's mailbox file, reading that into an editor, locating
   the top and bottom of the message in question, deleting the rest of
   the file, inserting `>' characters on each line, writing the file,
   leaving the editor, returning to the mailer, reading the file in, and
   later remembering to delete the file. Compare [2173]eyeball search. 2.
   By extension, writing code which does something in an explicit or
   low-level way for which a presupplied library routine ought to have
   been available. "This cretinous B-tree library doesn't supply a decent
   iterator, so I'm having to walk the trees by hand."
     _________________________________________________________________

   Node:byte, Next:[2174]byte sex, Previous:[2175]by hand, Up:[2176]= B =

   byte /bi:t/ n.

   [techspeak] A unit of memory or data equal to the amount used to
   represent one character; on modern architectures this is usually 8
   bits, but may be 9 on 36-bit machines. Some older architectures used
   `byte' for quantities of 6 or 7 bits, and the PDP-10 supported `bytes'
   that were actually bitfields of 1 to 36 bits! These usages are now
   obsolete, and even 9-bit bytes have become rare in the general trend
   toward power-of-2 word sizes.

   Historical note: The term was coined by Werner Buchholz in 1956 during
   the early design phase for the IBM Stretch computer; originally it was
   described as 1 to 6 bits (typical I/O equipment of the period used
   6-bit chunks of information). The move to an 8-bit byte happened in
   late 1956, and this size was later adopted and promulgated as a
   standard by the System/360. The word was coined by mutating the word
   `bite' so it would not be accidentally misspelled as [2177]bit. See
   also [2178]nybble.
     _________________________________________________________________

   Node:byte sex, Next:[2179]bytesexual, Previous:[2180]byte, Up:[2181]=
   B =

   byte sex n.

   [common] The byte sex of hardware is [2182]big-endian or
   [2183]little-endian; see those entries.
     _________________________________________________________________

   Node:bytesexual, Next:[2184]Bzzzt! Wrong., Previous:[2185]byte sex,
   Up:[2186]= B =

   bytesexual /bi:t`sek'shu-*l/ adj.

   [rare] Said of hardware, denotes willingness to compute or pass data
   in either [2187]big-endian or [2188]little-endian format (depending,
   presumably, on a [2189]mode bit somewhere). See also [2190]NUXI
   problem.
     _________________________________________________________________

   Node:Bzzzt! Wrong., Next:[2191]C, Previous:[2192]bytesexual,
   Up:[2193]= B =

   Bzzzt! Wrong. /bzt rong/ excl.

   [common; Usenet/Internet; punctuation varies] From a Robin Williams
   routine in the movie "Dead Poets Society" spoofing radio or TV quiz
   programs, such as Truth or Consequences, where an incorrect answer
   earns one a blast from the buzzer and condolences from the
   interlocutor. A way of expressing mock-rude disagreement, usually
   immediately following an included quote from another poster. The less
   abbreviated "*Bzzzzt*, wrong, but thank you for playing" is also
   common; capitalization and emphasis of the buzzer sound varies.
     _________________________________________________________________

   Node:= C =, Next:[2194]= D =, Previous:[2195]= B =, Up:[2196]The
   Jargon Lexicon

= C =

     * [2197]C:
     * [2198]C Programmer's Disease:
     * [2199]C&C:
     * [2200]C++:
     * [2201]calculator:
     * [2202]Camel Book:
     * [2203]can:
     * [2204]can't happen:
     * [2205]cancelbot:
     * [2206]Cancelmoose[tm]:
     * [2207]candygrammar:
     * [2208]canonical:
     * [2209]card walloper:
     * [2210]careware:
     * [2211]cargo cult programming:
     * [2212]cascade:
     * [2213]case and paste:
     * [2214]casters-up mode:
     * [2215]casting the runes:
     * [2216]cat:
     * [2217]catatonic:
     * [2218]cathedral:
     * [2219]cd tilde:
     * [2220]CDA:
     * [2221]cdr:
     * [2222]chad:
     * [2223]chad box:
     * [2224]chain:
     * [2225]channel:
     * [2226]channel hopping:
     * [2227]channel op:
     * [2228]chanop:
     * [2229]char:
     * [2230]charityware:
     * [2231]chase pointers:
     * [2232]chawmp:
     * [2233]check:
     * [2234]cheerfully:
     * [2235]chemist:
     * [2236]Chernobyl chicken:
     * [2237]Chernobyl packet:
     * [2238]chicken head:
     * [2239]chiclet keyboard:
     * [2240]Chinese Army technique:
     * [2241]choad:
     * [2242]choke:
     * [2243]chomp:
     * [2244]chomper:
     * [2245]CHOP:
     * [2246]Christmas tree:
     * [2247]Christmas tree packet:
     * [2248]chrome:
     * [2249]chug:
     * [2250]Church of the SubGenius:
     * [2251]Cinderella Book:
     * [2252]CI$:
     * [2253]Classic C:
     * [2254]clean:
     * [2255]CLM:
     * [2256]clobber:
     * [2257]clock:
     * [2258]clocks:
     * [2259]clone:
     * [2260]clone-and-hack coding:
     * [2261]clover key:
     * [2262]clue-by-four:
     * [2263]clustergeeking:
     * [2264]co-lo:
     * [2265]code:
     * [2266]coaster:
     * [2267]COBOL:
     * [2268]COBOL fingers:
     * [2269]cobweb site:
     * [2270]code grinder:
     * [2271]code monkey:
     * [2272]Code of the Geeks:
     * [2273]code police:
     * [2274]codes:
     * [2275]codewalker:
     * [2276]coefficient of X:
     * [2277]cokebottle:
     * [2278]cold boot:
     * [2279]COME FROM:
     * [2280]comm mode:
     * [2281]command key:
     * [2282]comment out:
     * [2283]Commonwealth Hackish:
     * [2284]compact:
     * [2285]compiler jock:
     * [2286]compo:
     * [2287]compress:
     * [2288]Compu$erve:
     * [2289]computer confetti:
     * [2290]computer geek:
     * [2291]computron:
     * [2292]con:
     * [2293]condition out:
     * [2294]condom:
     * [2295]confuser:
     * [2296]connector conspiracy:
     * [2297]cons:
     * [2298]considered harmful:
     * [2299]console:
     * [2300]console jockey:
     * [2301]content-free:
     * [2302]control-C:
     * [2303]control-O:
     * [2304]control-Q:
     * [2305]control-S:
     * [2306]Conway's Law:
     * [2307]cookbook:
     * [2308]cooked mode:
     * [2309]cookie:
     * [2310]cookie bear:
     * [2311]cookie file:
     * [2312]cookie jar:
     * [2313]cookie monster:
     * [2314]copious free time:
     * [2315]copper:
     * [2316]copy protection:
     * [2317]copybroke:
     * [2318]copycenter:
     * [2319]copyleft:
     * [2320]copyparty:
     * [2321]copywronged:
     * [2322]core:
     * [2323]core cancer:
     * [2324]core dump:
     * [2325]core leak:
     * [2326]Core Wars:
     * [2327]corge:
     * [2328]cosmic rays:
     * [2329]cough and die:
     * [2330]courier:
     * [2331]cow orker:
     * [2332]cowboy:
     * [2333]CP/M:
     * [2334]CPU Wars:
     * [2335]crack:
     * [2336]crack root:
     * [2337]cracker:
     * [2338]cracking:
     * [2339]crank:
     * [2340]crapplet:
     * [2341]CrApTeX:
     * [2342]crash:
     * [2343]crash and burn:
     * [2344]crawling horror:
     * [2345]cray:
     * [2346]cray instability:
     * [2347]crayola:
     * [2348]crayola books:
     * [2349]crayon:
     * [2350]creationism:
     * [2351]creep:
     * [2352]creeping elegance:
     * [2353]creeping featurism:
     * [2354]creeping featuritis:
     * [2355]cretin:
     * [2356]cretinous:
     * [2357]crippleware:
     * [2358]critical mass:
     * [2359]crlf:
     * [2360]crock:
     * [2361]cross-post:
     * [2362]crossload:
     * [2363]crudware:
     * [2364]cruft:
     * [2365]cruft together:
     * [2366]cruftsmanship:
     * [2367]crufty:
     * [2368]crumb:
     * [2369]crunch:
     * [2370]cryppie:
     * [2371]CTSS:
     * [2372]cube:
     * [2373]cubing:
     * [2374]cup holder:
     * [2375]cursor dipped in X:
     * [2376]cuspy:
     * [2377]cut a tape:
     * [2378]cybercrud:
     * [2379]cyberpunk:
     * [2380]cyberspace:
     * [2381]cycle:
     * [2382]cycle crunch:
     * [2383]cycle drought:
     * [2384]cycle of reincarnation:
     * [2385]cycle server:
     * [2386]cypherpunk:
     * [2387]C|N>K:
     _________________________________________________________________

   Node:C, Next:[2388]C Programmer's Disease, Previous:[2389]Bzzzt!
   Wrong., Up:[2390]= C =

   C n.

   1. The third letter of the English alphabet. 2. ASCII 1000011. 3. The
   name of a programming language designed by Dennis Ritchie during the
   early 1970s and immediately used to reimplement [2391]Unix; so called
   because many features derived from an earlier compiler named `B' in
   commemoration of its parent, BCPL. (BCPL was in turn descended from an
   earlier Algol-derived language, CPL.) Before Bjarne Stroustrup settled
   the question by designing [2392]C++, there was a humorous debate over
   whether C's successor should be named `D' or `P'. C became immensely
   popular outside Bell Labs after about 1980 and is now the dominant
   language in systems and microcomputer applications programming. See
   also [2393]languages of choice, [2394]indent style.

   C is often described, with a mixture of fondness and disdain varying
   according to the speaker, as "a language that combines all the
   elegance and power of assembly language with all the readability and
   maintainability of assembly language".
     _________________________________________________________________

   Node:C Programmer's Disease, Next:[2395]C&C, Previous:[2396]C,
   Up:[2397]= C =

   C Programmer's Disease n.

   The tendency of the undisciplined C programmer to set arbitrary but
   supposedly generous static limits on table sizes (defined, if you're
   lucky, by constants in header files) rather than taking the trouble to
   do proper dynamic storage allocation. If an application user later
   needs to put 68 elements into a table of size 50, the afflicted
   programmer reasons that he or she can easily reset the table size to
   68 (or even as much as 70, to allow for future expansion) and
   recompile. This gives the programmer the comfortable feeling of having
   made the effort to satisfy the user's (unreasonable) demands, and
   often affords the user multiple opportunities to explore the marvelous
   consequences of [2398]fandango on core. In severe cases of the
   disease, the programmer cannot comprehend why each fix of this kind
   seems only to further disgruntle the user.
     _________________________________________________________________

   Node:C&C, Next:[2399]C++, Previous:[2400]C Programmer's Disease,
   Up:[2401]= C =

   C&C //

   [common, esp. on news.admin.net-abuse.email] Contraction of "Coffee &
   Cats". This frequently occurs as a warning label on USENET posts that
   are likely to cause you to [2402]snarf coffee onto your keyboard and
   startle the cat off your lap.
     _________________________________________________________________

   Node:C++, Next:[2403]calculator, Previous:[2404]C&C, Up:[2405]= C =

   C++ /C'-pluhs-pluhs/ n.

   Designed by Bjarne Stroustrup of AT&T Bell Labs as a successor to
   [2406]C. Now one of the [2407]languages of choice, although many
   hackers still grumble that it is the successor to either Algol 68 or
   [2408]Ada (depending on generation), and a prime example of
   [2409]second-system effect. Almost anything that can be done in any
   language can be done in C++, but it requires a [2410]language lawyer
   to know what is and what is not legal-- the design is almost too large
   to hold in even hackers' heads. Much of the [2411]cruft results from
   C++'s attempt to be backward compatible with C. Stroustrup himself has
   said in his retrospective book "The Design and Evolution of C++" (p.
   207), "Within C++, there is a much smaller and cleaner language
   struggling to get out." [Many hackers would now add "Yes, and it's
   called [2412]Java" --ESR]
     _________________________________________________________________

   Node:calculator, Next:[2413]Camel Book, Previous:[2414]C++, Up:[2415]=
   C =

   calculator [Cambridge] n.

   Syn. for [2416]bitty box.
     _________________________________________________________________

   Node:Camel Book, Next:[2417]can, Previous:[2418]calculator, Up:[2419]=
   C =

   Camel Book n.

   Universally recognized nickname for the book "Programming Perl", by
   Larry Wall and Randal L. Schwartz, O'Reilly and Associates 1991, ISBN
   0-937175-64-1 (second edition 1996, ISBN 1-56592-149-6). The
   definitive reference on [2420]Perl.
     _________________________________________________________________

   Node:can, Next:[2421]can't happen, Previous:[2422]Camel Book,
   Up:[2423]= C =

   can vt.

   To abort a job on a time-sharing system. Used esp. when the person
   doing the deed is an operator, as in "canned from the [2424]console".
   Frequently used in an imperative sense, as in "Can that print job, the
   LPT just popped a sprocket!" Synonymous with [2425]gun. It is said
   that the ASCII character with mnemonic CAN (0011000) was used as a
   kill-job character on some early OSes. Alternatively, this term may
   derive from mainstream slang `canned' for being laid off or fired.
     _________________________________________________________________

   Node:can't happen, Next:[2426]cancelbot, Previous:[2427]can,
   Up:[2428]= C =

   can't happen

   The traditional program comment for code executed under a condition
   that should never be true, for example a file size computed as
   negative. Often, such a condition being true indicates data corruption
   or a faulty algorithm; it is almost always handled by emitting a fatal
   error message and terminating or crashing, since there is little else
   that can be done. Some case variant of "can't happen" is also often
   the text emitted if the `impossible' error actually happens! Although
   "can't happen" events are genuinely infrequent in production code,
   programmers wise enough to check for them habitually are often
   surprised at how frequently they are triggered during development and
   how many headaches checking for them turns out to head off. See also
   [2429]firewall code (sense 2).
     _________________________________________________________________

   Node:cancelbot, Next:[2430]Cancelmoose[tm], Previous:[2431]can't
   happen, Up:[2432]= C =

   cancelbot /kan'sel-bot/

   [Usenet: compound, cancel + robot] 1. Mythically, a
   [2433]robocanceller 2. In reality, most cancelbots are manually
   operated by being fed lists of spam message IDs.
     _________________________________________________________________

   Node:Cancelmoose[tm], Next:[2434]candygrammar,
   Previous:[2435]cancelbot, Up:[2436]= C =

   Cancelmoose[tm] /kan'sel-moos/

   [Usenet] The archetype and model of all good [2437]spam-fighters. Once
   upon a time, the 'Moose would send out spam-cancels and then post
   notice anonymously to news.admin.policy, news.admin.misc, and
   alt.current-events.net-abuse. The 'Moose stepped to the fore on its
   own initiative, at a time (mid-1994) when spam-cancels were irregular
   and disorganized, and behaved altogether admirably - fair,
   even-handed, and quick to respond to comments and criticism, all
   without self-aggrandizement or martyrdom. Cancelmoose[tm] quickly
   gained near-unanimous support from the readership of all three
   above-mentioned groups.

   Nobody knows who Cancelmoose[tm] really is, and there aren't even any
   good rumors. However, the 'Moose now has an e-mail address
   ([2438]moose@cm.org) and a web site ([2439]http://www.cm.org.)

   By early 1995, others had stepped into the spam-cancel business, and
   appeared to be comporting themselves well, after the 'Moose's manner.
   The 'Moose has now gotten out of the business, and is more interested
   in ending spam (and cancels) entirely.
     _________________________________________________________________

   Node:candygrammar, Next:[2440]canonical,
   Previous:[2441]Cancelmoose[tm], Up:[2442]= C =

   candygrammar n.

   A programming-language grammar that is mostly [2443]syntactic sugar;
   the term is also a play on `candygram'. [2444]COBOL, Apple's Hypertalk
   language, and a lot of the so-called `4GL' database languages share
   this property. The usual intent of such designs is that they be as
   English-like as possible, on the theory that they will then be easier
   for unskilled people to program. This intention comes to grief on the
   reality that syntax isn't what makes programming hard; it's the mental
   effort and organization required to specify an algorithm precisely
   that costs. Thus the invariable result is that `candygrammar'
   languages are just as difficult to program in as terser ones, and far
   more painful for the experienced hacker.

   [The overtones from the old Chevy Chase skit on Saturday Night Live
   should not be overlooked. This was a "Jaws" parody. Someone lurking
   outside an apartment door tries all kinds of bogus ways to get the
   occupant to open up, while ominous music plays in the background. The
   last attempt is a half-hearted "Candygram!" When the door is opened, a
   shark bursts in and chomps the poor occupant. [There is a similar gag
   in "Blazing Saddles" --ESR] There is a moral here for those attracted
   to candygrammars. Note that, in many circles, pretty much the same
   ones who remember Monty Python sketches, all it takes is the word
   "Candygram!", suitably timed, to get people rolling on the floor. --
   GLS]
     _________________________________________________________________

   Node:canonical, Next:[2445]card walloper, Previous:[2446]candygrammar,
   Up:[2447]= C =

   canonical adj.

   [very common; historically, `according to religious law'] The usual or
   standard state or manner of something. This word has a somewhat more
   technical meaning in mathematics. Two formulas such as 9 + x and x + 9
   are said to be equivalent because they mean the same thing, but the
   second one is in `canonical form' because it is written in the usual
   way, with the highest power of x first. Usually there are fixed rules
   you can use to decide whether something is in canonical form. The
   jargon meaning, a relaxation of the technical meaning, acquired its
   present loading in computer-science culture largely through its
   prominence in Alonzo Church's work in computation theory and
   mathematical logic (see [2448]Knights of the Lambda Calculus). Compare
   [2449]vanilla.

   Non-technical academics do not use the adjective `canonical' in any of
   the senses defined above with any regularity; they do however use the
   nouns `canon' and `canonicity' (not **canonicalness or
   **canonicality). The `canon' of a given author is the complete body of
   authentic works by that author (this usage is familiar to Sherlock
   Holmes fans as well as to literary scholars). `The canon' is the body
   of works in a given field (e.g., works of literature, or of art, or of
   music) deemed worthwhile for students to study and for scholars to
   investigate.

   The word `canon' has an interesting history. It derives ultimately
   from the Greek `kanon' (akin to the English `cane') referring to a
   reed. Reeds were used for measurement, and in Latin and later Greek
   the word `canon' meant a rule or a standard. The establishment of a
   canon of scriptures within Christianity was meant to define a standard
   or a rule for the religion. The above non-techspeak academic usages
   stem from this instance of a defined and accepted body of work.
   Alongside this usage was the promulgation of `canons' (`rules') for
   the government of the Catholic Church. The techspeak usages
   ("according to religious law") derive from this use of the Latin
   `canon'.

   Hackers invest this term with a playfulness that makes an ironic
   contrast with its historical meaning. A true story: One Bob Sjoberg,
   new at the MIT AI Lab, expressed some annoyance at the incessant use
   of jargon. Over his loud objections, GLS and RMS made a point of using
   as much of it as possible in his presence, and eventually it began to
   sink in. Finally, in one conversation, he used the word `canonical' in
   jargon-like fashion without thinking. Steele: "Aha! We've finally got
   you talking jargon too!" Stallman: "What did he say?" Steele: "Bob
   just used `canonical' in the canonical way."

   Of course, canonicality depends on context, but it is implicitly
   defined as the way hackers normally expect things to be. Thus, a
   hacker may claim with a straight face that `according to religious
   law' is not the canonical meaning of `canonical'.
     _________________________________________________________________

   Node:card walloper, Next:[2450]careware, Previous:[2451]canonical,
   Up:[2452]= C =

   card walloper n.

   An EDP programmer who grinds out batch programs that do stupid things
   like print people's paychecks. Compare [2453]code grinder. See also
   [2454]punched card, [2455]eighty-column mind.
     _________________________________________________________________

   Node:careware, Next:[2456]cargo cult programming, Previous:[2457]card
   walloper, Up:[2458]= C =

   careware /keir'weir/ n.

   A variety of [2459]shareware for which either the author suggests that
   some payment be made to a nominated charity or a levy directed to
   charity is included on top of the distribution charge. Syn.
   [2460]charityware; compare [2461]crippleware, sense 2.
     _________________________________________________________________

   Node:cargo cult programming, Next:[2462]cascade,
   Previous:[2463]careware, Up:[2464]= C =

   cargo cult programming n.

   A style of (incompetent) programming dominated by ritual inclusion of
   code or program structures that serve no real purpose. A cargo cult
   programmer will usually explain the extra code as a way of working
   around some bug encountered in the past, but usually neither the bug
   nor the reason the code apparently avoided the bug was ever fully
   understood (compare [2465]shotgun debugging, [2466]voodoo
   programming).

   The term `cargo cult' is a reference to aboriginal religions that grew
   up in the South Pacific after World War II. The practices of these
   cults center on building elaborate mockups of airplanes and military
   style landing strips in the hope of bringing the return of the
   god-like airplanes that brought such marvelous cargo during the war.
   Hackish usage probably derives from Richard Feynman's characterization
   of certain practices as "cargo cult science" in his book "Surely
   You're Joking, Mr. Feynman!" (W. W. Norton & Co, New York 1985, ISBN
   0-393-01921-7).
     _________________________________________________________________

   Node:cascade, Next:[2467]case and paste, Previous:[2468]cargo cult
   programming, Up:[2469]= C =

   cascade n.

   1. A huge volume of spurious error-message output produced by a
   compiler with poor error recovery. Too frequently, one trivial syntax
   error (such as a missing `)' or `}') throws the parser out of synch so
   that much of the remaining program text is interpreted as garbaged or
   ill-formed. 2. A chain of Usenet followups, each adding some trivial
   variation or riposte to the text of the previous one, all of which is
   reproduced in the new message; an [2470]include war in which the
   object is to create a sort of communal graffito.
     _________________________________________________________________

   Node:case and paste, Next:[2471]casters-up mode,
   Previous:[2472]cascade, Up:[2473]= C =

   case and paste n.

   [from `cut and paste'] 1. The addition of a new [2474]feature to an
   existing system by selecting the code from an existing feature and
   pasting it in with minor changes. Common in telephony circles because
   most operations in a telephone switch are selected using case
   statements. Leads to [2475]software bloat.

   In some circles of EMACS users this is called `programming by Meta-W',
   because Meta-W is the EMACS command for copying a block of text to a
   kill buffer in preparation to pasting it in elsewhere. The term is
   condescending, implying that the programmer is acting mindlessly
   rather than thinking carefully about what is required to integrate the
   code for two similar cases.

   At [2476]DEC (now Compaq), this is sometimes called `clone-and-hack'
   coding.
     _________________________________________________________________

   Node:casters-up mode, Next:[2477]casting the runes,
   Previous:[2478]case and paste, Up:[2479]= C =

   casters-up mode n.

   [IBM, prob. fr. slang belly up] Yet another synonym for `broken' or
   `down'. Usually connotes a major failure. A system (hardware or
   software) which is `down' may be already being restarted before the
   failure is noticed, whereas one which is `casters up' is usually a
   good excuse to take the rest of the day off (as long as you're not
   responsible for fixing it).
     _________________________________________________________________

   Node:casting the runes, Next:[2480]cat, Previous:[2481]casters-up
   mode, Up:[2482]= C =

   casting the runes n.

   What a [2483]guru does when you ask him or her to run a particular
   program and type at it because it never works for anyone else; esp.
   used when nobody can ever see what the guru is doing different from
   what J. Random Luser does. Compare [2484]incantation, [2485]runes,
   [2486]examining the entrails; also see the AI koan about Tom Knight in
   "[2487]Some AI Koans" (Appendix A).

   A correspondent from England tells us that one of ICL's most talented
   systems designers used to be called out occasionally to service
   machines which the [2488]field circus had given up on. Since he knew
   the design inside out, he could often find faults simply by listening
   to a quick outline of the symptoms. He used to play on this by going
   to some site where the field circus had just spent the last two weeks
   solid trying to find a fault, and spreading a diagram of the system
   out on a table top. He'd then shake some chicken bones and cast them
   over the diagram, peer at the bones intently for a minute, and then
   tell them that a certain module needed replacing. The system would
   start working again immediately upon the replacement.
     _________________________________________________________________

   Node:cat, Next:[2489]catatonic, Previous:[2490]casting the runes,
   Up:[2491]= C =

   cat [from `catenate' via [2492]Unix cat(1)] vt.

   1. [techspeak] To spew an entire file to the screen or some other
   output sink without pause (syn. [2493]blast). 2. By extension, to dump
   large amounts of data at an unprepared target or with no intention of
   browsing it carefully. Usage: considered silly. Rare outside Unix
   sites. See also [2494]dd, [2495]BLT.

   Among Unix fans, cat(1) is considered an excellent example of
   user-interface design, because it delivers the file contents without
   such verbosity as spacing or headers between the files, and because it
   does not require the files to consist of lines of text, but works with
   any sort of data.

   Among Unix haters, cat(1) is considered the [2496]canonical example of
   bad user-interface design, because of its woefully unobvious name. It
   is far more often used to [2497]blast a file to standard output than
   to concatenate two files. The name cat for the former operation is
   just as unintuitive as, say, LISP's [2498]cdr.

   Of such oppositions are [2499]holy wars made....
     _________________________________________________________________

   Node:catatonic, Next:[2500]cathedral, Previous:[2501]cat, Up:[2502]= C
   =

   catatonic adj.

   Describes a condition of suspended animation in which something is so
   [2503]wedged or [2504]hung that it makes no response. If you are
   typing on a terminal and suddenly the computer doesn't even echo the
   letters back to the screen as you type, let alone do what you're
   asking it to do, then the computer is suffering from catatonia
   (possibly because it has crashed). "There I was in the middle of a
   winning game of [2505]nethack and it went catatonic on me! Aaargh!"
   Compare [2506]buzz.
     _________________________________________________________________

   Node:cathedral, Next:[2507]cd tilde, Previous:[2508]catatonic,
   Up:[2509]= C =

   cathedral n.,adj.

   [see [2510]bazaar for derivation] The `classical' mode of software
   engineering long thought to be necessarily implied by [2511]Brooks's
   Law. Features small teams, tight project control, and long release
   intervals. This term came into use after analysis of the Linux
   experience suggested there might be something wrong (or at least
   incomplete) in the classical assumptions.
     _________________________________________________________________

   Node:cd tilde, Next:[2512]CDA, Previous:[2513]cathedral, Up:[2514]= C
   =

   cd tilde /C-D til-d*/ vi.

   To go home. From the Unix C-shell and Korn-shell command cd ~, which
   takes one to one's $HOME (cd with no arguments happens to do the same
   thing). By extension, may be used with other arguments; thus, over an
   electronic chat link, cd ~coffee would mean "I'm going to the coffee
   machine."
     _________________________________________________________________

   Node:CDA, Next:[2515]cdr, Previous:[2516]cd tilde, Up:[2517]= C =

   CDA /C-D-A/

   The "Communications Decency Act" of 1996, passed on [2518]Black
   Thursday as section 502 of a major telecommunications reform bill. The
   CDA made it a federal crime in the USA to send a communication which
   is "obscene, lewd, lascivious, filthy, or indecent, with intent to
   annoy, abuse, threaten, or harass another person." It also threatened
   with imprisonment anyone who "knowingly" makes accessible to minors
   any message that "describes, in terms patently offensive as measured
   by contemporary community standards, sexual or excretory activities or
   organs".

   While the CDA was sold as a measure to protect minors from the
   putative evils of pornography, the repressive political aims of the
   bill were laid bare by the Hyde amendment, which intended to outlaw
   discussion of abortion on the Internet.

   To say that this direct attack on First Amendment free-speech rights
   was not well received on the Internet would be putting it mildly. A
   firestorm of protest followed, including a February 29th mass
   demonstration by thousands of netters who turned their [2519]home
   pages black for 48 hours. Several civil-rights groups and
   computing/telecommunications companies mounted a constitutional
   challenge. The CDA was demolished by a strongly-worded decision handed
   down on in 8th-circuit Federal court and subsequently affirmed by the
   U.S. Supreme Court on 26 June 1997 (`White Thursday'). See also
   [2520]Exon.
     _________________________________________________________________

   Node:cdr, Next:[2521]chad, Previous:[2522]CDA, Up:[2523]= C =

   cdr /ku'dr/ or /kuh'dr/ vt.

   [from LISP] To skip past the first item from a list of things
   (generalized from the LISP operation on binary tree structures, which
   returns a list consisting of all but the first element of its
   argument). In the form `cdr down', to trace down a list of elements:
   "Shall we cdr down the agenda?" Usage: silly. See also [2524]loop
   through.

   Historical note: The instruction format of the IBM 704 that hosted the
   original LISP implementation featured two 15-bit fields called the
   `address' and `decrement' parts. The term `cdr' was originally
   `Contents of Decrement part of Register'. Similarly, `car' stood for
   `Contents of Address part of Register'.

   The cdr and car operations have since become bases for formation of
   compound metaphors in non-LISP contexts. GLS recalls, for example, a
   programming project in which strings were represented as linked lists;
   the get-character and skip-character operations were of course called
   CHAR and CHDR.
     _________________________________________________________________

   Node:chad, Next:[2525]chad box, Previous:[2526]cdr, Up:[2527]= C =

   chad /chad/ n.

   1. [common] The perforated edge strips on printer paper, after they
   have been separated from the printed portion. Also called
   [2528]selvage, [2529]perf, and [2530]ripoff. 2. obs. The confetti-like
   paper bits punched out of cards or paper tape; this has also been
   called `chaff', `computer confetti', and `keypunch droppings'. It's
   reported that this was very old Army slang, and it may now be
   mainstream; it has been reported seen (1993) in directions for a
   card-based voting machine in California.

   Historical note: One correspondent believes `chad' (sense 2) derives
   from the Chadless keypunch (named for its inventor), which cut little
   u-shaped tabs in the card to make a hole when the tab folded back,
   rather than punching out a circle/rectangle; it was clear that if the
   Chadless keypunch didn't make them, then the stuff that other
   keypunches made had to be `chad'. There is a legend that the word was
   originally acronymic, standing for "Card Hole Aggregate Debris", but
   this has all the earmarks of a [2531]backronym.
     _________________________________________________________________

   Node:chad box, Next:[2532]chain, Previous:[2533]chad, Up:[2534]= C =

   chad box n.

   A metal box about the size of a lunchbox (or in some models a large
   wastebasket), for collecting the [2535]chad (sense 2) that accumulated
   in [2536]Iron Age card punches. You had to open the covers of the card
   punch periodically and empty the chad box. The [2537]bit bucket was
   notionally the equivalent device in the CPU enclosure, which was
   typically across the room in another great gray-and-blue box.
     _________________________________________________________________

   Node:chain, Next:[2538]channel, Previous:[2539]chad box, Up:[2540]= C
   =

   chain

   1. vi. [orig. from BASIC's CHAIN statement] To hand off execution to a
   child or successor without going through the [2541]OS command
   interpreter that invoked it. The state of the parent program is lost
   and there is no returning to it. Though this facility used to be
   common on memory-limited micros and is still widely supported for
   backward compatibility, the jargon usage is semi-obsolescent; in
   particular, most Unix programmers will think of this as an [2542]exec.
   Oppose the more modern `subshell'. 2. n. A series of linked data areas
   within an operating system or application. `Chain rattling' is the
   process of repeatedly running through the linked data areas searching
   for one which is of interest to the executing program. The implication
   is that there is a very large number of links on the chain.
     _________________________________________________________________

   Node:channel, Next:[2543]channel hopping, Previous:[2544]chain,
   Up:[2545]= C =

   channel n.

   [IRC] The basic unit of discussion on [2546]IRC. Once one joins a
   channel, everything one types is read by others on that channel.
   Channels are named with strings that begin with a `#' sign and can
   have topic descriptions (which are generally irrelevant to the actual
   subject of discussion). Some notable channels are #initgame, #hottub,
   callahans, and #report. At times of international crisis, #report has
   hundreds of members, some of whom take turns listening to various news
   services and typing in summaries of the news, or in some cases, giving
   first-hand accounts of the action (e.g., Scud missile attacks in Tel
   Aviv during the Gulf War in 1991).
     _________________________________________________________________

   Node:channel hopping, Next:[2547]channel op, Previous:[2548]channel,
   Up:[2549]= C =

   channel hopping n.

   [common; IRC, GEnie] To rapidly switch channels on [2550]IRC, or a
   GEnie chat board, just as a social butterfly might hop from one group
   to another at a party. This term may derive from the TV watcher's
   idiom, `channel surfing'.
     _________________________________________________________________

   Node:channel op, Next:[2551]chanop, Previous:[2552]channel hopping,
   Up:[2553]= C =

   channel op /chan'l op/ n.

   [IRC] Someone who is endowed with privileges on a particular [2554]IRC
   channel; commonly abbreviated `chanop' or `CHOP' or just `op' (as of
   2000 these short forms have almost crowded out the parent usage).
   These privileges include the right to [2555]kick users, to change
   various status bits, and to make others into CHOPs.
     _________________________________________________________________

   Node:chanop, Next:[2556]char, Previous:[2557]channel op, Up:[2558]= C
   =

   chanop /chan'-op/ n.

   [IRC] See [2559]channel op.
     _________________________________________________________________

   Node:char, Next:[2560]charityware, Previous:[2561]chanop, Up:[2562]= C
   =

   char /keir/ or /char/; rarely, /kar/ n.

   Shorthand for `character'. Esp. used by C programmers, as `char' is
   C's typename for character data.
     _________________________________________________________________

   Node:charityware, Next:[2563]chase pointers, Previous:[2564]char,
   Up:[2565]= C =

   charityware /cha'rit-ee-weir`/ n.

   Syn. [2566]careware.
     _________________________________________________________________

   Node:chase pointers, Next:[2567]chawmp, Previous:[2568]charityware,
   Up:[2569]= C =

   chase pointers

   1. vi. To go through multiple levels of indirection, as in traversing
   a linked list or graph structure. Used esp. by programmers in C, where
   explicit pointers are a very common data type. This is techspeak, but
   it remains jargon when used of human networks. "I'm chasing pointers.
   Bob said you could tell me who to talk to about...." See
   [2570]dangling pointer and [2571]snap. 2. [Cambridge] `pointer chase'
   or `pointer hunt': The process of going through a [2572]core dump
   (sense 1), interactively or on a large piece of paper printed with hex
   [2573]runes, following dynamic data-structures. Used only in a
   debugging context.
     _________________________________________________________________

   Node:chawmp, Next:[2574]check, Previous:[2575]chase pointers,
   Up:[2576]= C =

   chawmp n.

   [University of Florida] 16 or 18 bits (half of a machine word). This
   term was used by FORTH hackers during the late 1970s/early 1980s; it
   is said to have been archaic then, and may now be obsolete. It was
   coined in revolt against the promiscuous use of `word' for anything
   between 16 and 32 bits; `word' has an additional special meaning for
   FORTH hacks that made the overloading intolerable. For similar
   reasons, /gaw'bl/ (spelled `gawble' or possibly `gawbul') was in use
   as a term for 32 or 48 bits (presumably a full machine word, but our
   sources are unclear on this). These terms are more easily understood
   if one thinks of them as faithful phonetic spellings of `chomp' and
   `gobble' pronounced in a Florida or other Southern U.S. dialect. For
   general discussion of similar terms, see [2577]nybble.
     _________________________________________________________________

   Node:check, Next:[2578]cheerfully, Previous:[2579]chawmp, Up:[2580]= C
   =

   check n.

   A hardware-detected error condition, most commonly used to refer to
   actual hardware failures rather than software-induced traps. E.g., a
   `parity check' is the result of a hardware-detected parity error.
   Recorded here because the word often humorously extended to
   non-technical problems. For example, the term `child check' has been
   used to refer to the problems caused by a small child who is curious
   to know what happens when s/he presses all the cute buttons on a
   computer's console (of course, this particular problem could have been
   prevented with [2581]molly-guards).
     _________________________________________________________________

   Node:cheerfully, Next:[2582]chemist, Previous:[2583]check, Up:[2584]=
   C =

   cheerfully adv.

   See [2585]happily.
     _________________________________________________________________

   Node:chemist, Next:[2586]Chernobyl chicken, Previous:[2587]cheerfully,
   Up:[2588]= C =

   chemist n.

   [Cambridge] Someone who wastes computer time on [2589]number-crunching
   when you'd far rather the machine were doing something more
   productive, such as working out anagrams of your name or printing
   Snoopy calendars or running [2590]life patterns. May or may not refer
   to someone who actually studies chemistry.
     _________________________________________________________________

   Node:Chernobyl chicken, Next:[2591]Chernobyl packet,
   Previous:[2592]chemist, Up:[2593]= C =

   Chernobyl chicken n.

   See [2594]laser chicken.
     _________________________________________________________________

   Node:Chernobyl packet, Next:[2595]chicken head,
   Previous:[2596]Chernobyl chicken, Up:[2597]= C =

   Chernobyl packet /cher-noh'b*l pak'*t/ n.

   A network packet that induces a [2598]broadcast storm and/or
   [2599]network meltdown, in memory of the April 1986 nuclear accident
   at Chernobyl in Ukraine. The typical scenario involves an IP Ethernet
   datagram that passes through a gateway with both source and
   destination Ether and IP address set as the respective broadcast
   addresses for the subnetworks being gated between. Compare
   [2600]Christmas tree packet.
     _________________________________________________________________

   Node:chicken head, Next:[2601]chiclet keyboard,
   Previous:[2602]Chernobyl packet, Up:[2603]= C =

   chicken head n.

   [Commodore] The Commodore Business Machines logo, which strongly
   resembles a poultry part (within Commodore itself the logo was always
   called `chicken lips'). Rendered in ASCII as `C='. With the arguable
   exception of the Amiga (see [2604]amoeba), Commodore's machines were
   notoriously crocky little [2605]bitty boxes (see also [2606]PETSCII),
   albeit people have written multitasking Unix-like operating systems
   with TCP/IP networking for them. Thus, this usage may owe something to
   Philip K. Dick's novel "Do Androids Dream of Electric Sheep?" (the
   basis for the movie "Blade Runner"; the novel is now sold under that
   title), in which a `chickenhead' is a mutant with below-average
   intelligence.
     _________________________________________________________________

   Node:chiclet keyboard, Next:[2607]Chinese Army technique,
   Previous:[2608]chicken head, Up:[2609]= C =

   chiclet keyboard n.

   A keyboard with a small, flat rectangular or lozenge-shaped rubber or
   plastic keys that look like pieces of chewing gum. (Chiclets is the
   brand name of a variety of chewing gum that does in fact resemble the
   keys of chiclet keyboards.) Used esp. to describe the original IBM
   PCjr keyboard. Vendors unanimously liked these because they were
   cheap, and a lot of early portable and laptop products got launched
   using them. Customers rejected the idea with almost equal unanimity,
   and chiclets are not often seen on anything larger than a digital
   watch any more.
     _________________________________________________________________

   Node:Chinese Army technique, Next:[2610]choad, Previous:[2611]chiclet
   keyboard, Up:[2612]= C =

   Chinese Army technique n.

   Syn. [2613]Mongolian Hordes technique.
     _________________________________________________________________

   Node:choad, Next:[2614]choke, Previous:[2615]Chinese Army technique,
   Up:[2616]= C =

   choad /chohd/ n.

   Synonym for `penis' used in alt.tasteless and popularized by the
   denizens thereof. They say: "We think maybe it's from Middle English
   but we're all too damned lazy to check the OED." [I'm not. It isn't.
   --ESR] This term is alleged to have been inherited through 1960s
   underground comics, and to have been recently sighted in the Beavis
   and Butthead cartoons. Speakers of the Hindi, Bengali and Gujarati
   languages have confirmed that `choad' is in fact an Indian vernacular
   word equivalent to `fuck'; it is therefore likely to have entered
   English slang via the British Raj.
     _________________________________________________________________

   Node:choke, Next:[2617]chomp, Previous:[2618]choad, Up:[2619]= C =

   choke v.

   1. [common] To reject input, often ungracefully. "NULs make System V's
   lpr(1) choke." "I tried building an [2620]EMACS binary to use [2621]X,
   but cpp(1) choked on all those #defines." See [2622]barf, [2623]gag,
   [2624]vi. 2. [MIT] More generally, to fail at any endeavor, but with
   some flair or bravado; the popular definition is "to snatch defeat
   from the jaws of victory."
     _________________________________________________________________

   Node:chomp, Next:[2625]chomper, Previous:[2626]choke, Up:[2627]= C =

   chomp vi.

   1. To [2628]lose; specifically, to chew on something of which more was
   bitten off than one can. Probably related to gnashing of teeth. 2. To
   bite the bag; See [2629]bagbiter.

   A hand gesture commonly accompanies this. To perform it, hold the four
   fingers together and place the thumb against their tips. Now open and
   close your hand rapidly to suggest a biting action (much like what
   Pac-Man does in the classic video game, though this pantomime seems to
   predate that). The gesture alone means `chomp chomp' (see "[2630]Verb
   Doubling" in the "[2631]Jargon Construction" section of the
   Prependices). The hand may be pointed at the object of complaint, and
   for real emphasis you can use both hands at once. Doing this to a
   person is equivalent to saying "You chomper!" If you point the gesture
   at yourself, it is a humble but humorous admission of some failure.
   You might do this if someone told you that a program you had written
   had failed in some surprising way and you felt dumb for not having
   anticipated it.
     _________________________________________________________________

   Node:chomper, Next:[2632]CHOP, Previous:[2633]chomp, Up:[2634]= C =

   chomper n.

   Someone or something that is chomping; a loser. See [2635]loser,
   [2636]bagbiter, [2637]chomp.
     _________________________________________________________________

   Node:CHOP, Next:[2638]Christmas tree, Previous:[2639]chomper,
   Up:[2640]= C =

   CHOP /chop/ n.

   [IRC] See [2641]channel op.
     _________________________________________________________________

   Node:Christmas tree, Next:[2642]Christmas tree packet,
   Previous:[2643]CHOP, Up:[2644]= C =

   Christmas tree n.

   A kind of RS-232 line tester or breakout box featuring rows of
   blinking red and green LEDs suggestive of Christmas lights.
     _________________________________________________________________

   Node:Christmas tree packet, Next:[2645]chrome,
   Previous:[2646]Christmas tree, Up:[2647]= C =

   Christmas tree packet n.

   A packet with every single option set for whatever protocol is in use.
   See [2648]kamikaze packet, [2649]Chernobyl packet. (The term doubtless
   derives from a fanciful image of each little option bit being
   represented by a different-colored light bulb, all turned on.) Compare
   [2650]Godzillagram.
     _________________________________________________________________

   Node:chrome, Next:[2651]chug, Previous:[2652]Christmas tree packet,
   Up:[2653]= C =

   chrome n.

   [from automotive slang via wargaming] Showy features added to attract
   users but contributing little or nothing to the power of a system.
   "The 3D icons in Motif are just chrome, but they certainly are pretty
   chrome!" Distinguished from [2654]bells and whistles by the fact that
   the latter are usually added to gratify developers' own desires for
   featurefulness. Often used as a term of contempt.
     _________________________________________________________________

   Node:chug, Next:[2655]Church of the SubGenius, Previous:[2656]chrome,
   Up:[2657]= C =

   chug vi.

   To run slowly; to [2658]grind or [2659]grovel. "The disk is chugging
   like crazy."
     _________________________________________________________________

   Node:Church of the SubGenius, Next:[2660]Cinderella Book,
   Previous:[2661]chug, Up:[2662]= C =

   Church of the SubGenius n.

   A mutant offshoot of [2663]Discordianism launched in 1981 as a spoof
   of fundamentalist Christianity by the `Reverend' Ivan Stang, a
   brilliant satirist with a gift for promotion. Popular among hackers as
   a rich source of bizarre imagery and references such as "Bob" the
   divine drilling-equipment salesman, the Benevolent Space Xists, and
   the Stark Fist of Removal. Much SubGenius theory is concerned with the
   acquisition of the mystical substance or quality of [2664]slack. There
   is a home page at [2665]http://www.subgenius.com/.
     _________________________________________________________________

   Node:Cinderella Book, Next:[2666]CI$, Previous:[2667]Church of the
   SubGenius, Up:[2668]= C =

   Cinderella Book [CMU] n.

   "Introduction to Automata Theory, Languages, and Computation", by John
   Hopcroft and Jeffrey Ullman, (Addison-Wesley, 1979). So called because
   the cover depicts a girl (putatively Cinderella) sitting in front of a
   Rube Goldberg device and holding a rope coming out of it. On the back
   cover, the device is in shambles after she has (inevitably) pulled on
   the rope. See also [2669]book titles.
     _________________________________________________________________

   Node:CI$, Next:[2670]Classic C, Previous:[2671]Cinderella Book,
   Up:[2672]= C =

   CI$ // n.

   Hackerism for `CIS', CompuServe Information Service. The dollar sign
   refers to CompuServe's rather steep line charges. Often used in
   [2673]sig blocks just before a CompuServe address. Syn.
   [2674]Compu$erve.
     _________________________________________________________________

   Node:Classic C, Next:[2675]clean, Previous:[2676]CI$, Up:[2677]= C =

   Classic C /klas'ik C/ n.

   [a play on `Coke Classic'] The C programming language as defined in
   the first edition of [2678]K&R, with some small additions. It is also
   known as `K&R C'. The name came into use while C was being
   standardized by the ANSI X3J11 committee. Also `C Classic'.

   An analogous construction is sometimes applied elsewhere: thus, `X
   Classic', where X = Star Trek (referring to the original TV series) or
   X = PC (referring to IBM's ISA-bus machines as opposed to the PS/2
   series). This construction is especially used of product series in
   which the newer versions are considered serious losers relative to the
   older ones.
     _________________________________________________________________

   Node:clean, Next:[2679]CLM, Previous:[2680]Classic C, Up:[2681]= C =

   clean 1. adj.

   Used of hardware or software designs, implies `elegance in the small',
   that is, a design or implementation that may not hold any surprises
   but does things in a way that is reasonably intuitive and relatively
   easy to comprehend from the outside. The antonym is `grungy' or
   [2682]crufty. 2. v. To remove unneeded or undesired files in a effort
   to reduce clutter: "I'm cleaning up my account." "I cleaned up the
   garbage and now have 100 Meg free on that partition."
     _________________________________________________________________

   Node:CLM, Next:[2683]clobber, Previous:[2684]clean, Up:[2685]= C =

   CLM /C-L-M/

   [Sun: `Career Limiting Move'] 1. n. An action endangering one's future
   prospects of getting plum projects and raises, and possibly one's job:
   "His Halloween costume was a parody of his manager. He won the prize
   for `best CLM'." 2. adj. Denotes extreme severity of a bug, discovered
   by a customer and obviously missed earlier because of poor testing:
   "That's a CLM bug!"
     _________________________________________________________________

   Node:clobber, Next:[2686]clock, Previous:[2687]CLM, Up:[2688]= C =

   clobber vt.

   To overwrite, usually unintentionally: "I walked off the end of the
   array and clobbered the stack." Compare [2689]mung, [2690]scribble,
   [2691]trash, and [2692]smash the stack.
     _________________________________________________________________

   Node:clock, Next:[2693]clocks, Previous:[2694]clobber, Up:[2695]= C =

   clock

   1. n 1. [techspeak] The master oscillator that steps a CPU or other
   digital circuit through its paces. This has nothing to do with the
   time of day, although the software counter that keeps track of the
   latter may be derived from the former. 2. vt. To run a CPU or other
   digital circuit at a particular rate. "If you clock it at 100MHz, it
   gets warm.". See [2696]overclock. 3. vt. To force a digital circuit
   from one state to the next by applying a single clock pulse. "The data
   must be stable 10ns before you clock the latch."
     _________________________________________________________________

   Node:clocks, Next:[2697]clone, Previous:[2698]clock, Up:[2699]= C =

   clocks n.

   Processor logic cycles, so called because each generally corresponds
   to one clock pulse in the processor's timing. The relative execution
   times of instructions on a machine are usually discussed in clocks
   rather than absolute fractions of a second; one good reason for this
   is that clock speeds for various models of the machine may increase as
   technology improves, and it is usually the relative times one is
   interested in when discussing the instruction set. Compare
   [2700]cycle, [2701]jiffy.
     _________________________________________________________________

   Node:clone, Next:[2702]clone-and-hack coding, Previous:[2703]clocks,
   Up:[2704]= C =

   clone n.

   1. An exact duplicate: "Our product is a clone of their product."
   Implies a legal reimplementation from documentation or by
   reverse-engineering. Also connotes lower price. 2. A shoddy, spurious
   copy: "Their product is a clone of our product." 3. A blatant ripoff,
   most likely violating copyright, patent, or trade secret protections:
   "Your product is a clone of my product." This use implies legal action
   is pending. 4. `PC clone:' a PC-BUS/ISA or EISA-compatible 80x86-based
   microcomputer (this use is sometimes spelled `klone' or `PClone').
   These invariably have much more bang for the buck than the IBM
   archetypes they resemble. 5. In the construction `Unix clone': An OS
   designed to deliver a Unix-lookalike environment without Unix license
   fees, or with additional `mission-critical' features such as support
   for real-time programming. 6. v. To make an exact copy of something.
   "Let me clone that" might mean "I want to borrow that paper so I can
   make a photocopy" or "Let me get a copy of that file before you
   [2705]mung it".
     _________________________________________________________________

   Node:clone-and-hack coding, Next:[2706]clover key,
   Previous:[2707]clone, Up:[2708]= C =

   clone-and-hack coding n.

   [DEC] Syn. [2709]case and paste.
     _________________________________________________________________

   Node:clover key, Next:[2710]clue-by-four,
   Previous:[2711]clone-and-hack coding, Up:[2712]= C =

   clover key n.

   [Mac users] See [2713]feature key.
     _________________________________________________________________

   Node:clue-by-four, Next:[2714]clustergeeking, Previous:[2715]clover
   key, Up:[2716]= C =

   clue-by-four

   [Usenet: portmanteau, clue + two-by-four] The notional stick with
   which one whacks an aggressively clueless person. This term derives
   from a western American folk saying about training a mule "First, you
   got to hit him with a two-by-four. That's to get his attention." The
   clue-by-four is a close relative of the [2717]LART. Syn. `clue stick'.
   This metaphor is commonly elaborated; your editor once heard a hacker
   say "I strike you with the great sword Clue-Bringer!"
     _________________________________________________________________

   Node:clustergeeking, Next:[2718]co-lo, Previous:[2719]clue-by-four,
   Up:[2720]= C =

   clustergeeking /kluh'st*r-gee`king/ n.

   [CMU] Spending more time at a computer cluster doing CS homework than
   most people spend breathing.
     _________________________________________________________________

   Node:co-lo, Next:[2721]coaster, Previous:[2722]clustergeeking,
   Up:[2723]= C =

   co-lo /koh'loh`/ n.

   [very common; first heard c.1995] Short for `co-location', used of a
   machine you own that is physically sited on the premises of an ISP in
   order to take advantage of the ISP's direct access to lots of network
   bandwidthm. Often in the phrases `co-lo box' or `co-lo machines'.
   Co-lo boxes are typically web and FTP servers remote-administered by
   their owners, who may seldom or never visit the actual site.
     _________________________________________________________________

   Node:coaster, Next:[2724]COBOL, Previous:[2725]co-lo, Up:[2726]= C =

   coaster n.

   1. Unuseable CD produced during failed attempt at writing to writeable
   or re-writeable CD media. Certainly related to the coaster-like shape
   of a CD, and the relative value of these failures. "I made a lot of
   coasters before I got a good CD." 2. Useless CDs received in the mail
   from the likes of AOL, MSN, CI$, Prodigy, ad nauseam.

   In the U.K., `beermat' is often used in these senses.
     _________________________________________________________________

   Node:COBOL, Next:[2727]COBOL fingers, Previous:[2728]coaster,
   Up:[2729]= C =

   COBOL /koh'bol/ n.

   [COmmon Business-Oriented Language] (Synonymous with [2730]evil.) A
   weak, verbose, and flabby language used by [2731]card wallopers to do
   boring mindless things on [2732]dinosaur mainframes. Hackers believe
   that all COBOL programmers are [2733]suits or [2734]code grinders, and
   no self-respecting hacker will ever admit to having learned the
   language. Its very name is seldom uttered without ritual expressions
   of disgust or horror. One popular one is Edsger W. Dijkstra's famous
   observation that "The use of COBOL cripples the mind; its teaching
   should, therefore, be regarded as a criminal offense." (from "Selected
   Writings on Computing: A Personal Perspective") See also [2735]fear
   and loathing, [2736]software rot.
     _________________________________________________________________

   Node:COBOL fingers, Next:[2737]cobweb site, Previous:[2738]COBOL,
   Up:[2739]= C =

   COBOL fingers /koh'bol fing'grz/ n.

   Reported from Sweden, a (hypothetical) disease one might get from
   coding in COBOL. The language requires code verbose beyond all reason
   (see [2740]candygrammar); thus it is alleged that programming too much
   in COBOL causes one's fingers to wear down to stubs by the endless
   typing. "I refuse to type in all that source code again; it would give
   me COBOL fingers!"
     _________________________________________________________________

   Node:cobweb site, Next:[2741]code, Previous:[2742]COBOL fingers,
   Up:[2743]= C =

   cobweb site n.

   A World Wide Web Site that hasn't been updated so long it has
   figuratively grown cobwebs.
     _________________________________________________________________

   Node:code, Next:[2744]code grinder, Previous:[2745]cobweb site,
   Up:[2746]= C =

   code n.

   The stuff that software writers write, either in source form or after
   translation by a compiler or assembler. Often used in opposition to
   "data", which is the stuff that code operates on. This is a mass noun,
   as in "How much code does it take to do a [2747]bubble sort?", or "The
   code is loaded at the high end of RAM." Anyone referring to software
   as "the software codes" is probably a [2748]newbie or a [2749]suit.
     _________________________________________________________________

   Node:code grinder, Next:[2750]code monkey, Previous:[2751]code,
   Up:[2752]= C =

   code grinder n.

   1. A [2753]suit-wearing minion of the sort hired in legion strength by
   banks and insurance companies to implement payroll packages in RPG and
   other such unspeakable horrors. In its native habitat, the code
   grinder often removes the suit jacket to reveal an underplumage
   consisting of button-down shirt (starch optional) and a tie. In times
   of dire stress, the sleeves (if long) may be rolled up and the tie
   loosened about half an inch. It seldom helps. The [2754]code grinder's
   milieu is about as far from hackerdom as one can get and still touch a
   computer; the term connotes pity. See [2755]Real World, [2756]suit. 2.
   Used of or to a hacker, a really serious slur on the person's creative
   ability; connotes a design style characterized by primitive technique,
   rule-boundedness, [2757]brute force, and utter lack of imagination.
   Compare [2758]card walloper; contrast [2759]hacker, [2760]Real
   Programmer.
     _________________________________________________________________

   Node:code monkey, Next:[2761]Code of the Geeks, Previous:[2762]code
   grinder, Up:[2763]= C =

   code monkey n

   1. A person only capable of grinding out code, but unable to perform
   the higher-primate tasks of software architecture, analysis, and
   design. Mildly insulting. Often applied to the most junior people on a
   programming team. 2. Anyone who writes code for a living; a
   programmer. 3. A self-deprecating way of denying responsibility for a
   [2764]management decision, or of complaining about having to live with
   such decisions. As in "Don't ask me why we need to write a compiler
   in+COBOL, I'm just a code monkey."
     _________________________________________________________________

   Node:Code of the Geeks, Next:[2765]code police, Previous:[2766]code
   monkey, Up:[2767]= C =

   Code of the Geeks n.

   see [2768]geek code.
     _________________________________________________________________

   Node:code police, Next:[2769]codes, Previous:[2770]Code of the Geeks,
   Up:[2771]= C =

   code police n.

   [by analogy with George Orwell's `thought police'] A mythical team of
   Gestapo-like storm troopers that might burst into one's office and
   arrest one for violating programming style rules. May be used either
   seriously, to underline a claim that a particular style violation is
   dangerous, or ironically, to suggest that the practice under
   discussion is condemned mainly by anal-retentive [2772]weenies. "Dike
   out that goto or the code police will get you!" The ironic usage is
   perhaps more common.
     _________________________________________________________________

   Node:codes, Next:[2773]codewalker, Previous:[2774]code police,
   Up:[2775]= C =

   codes n.

   [scientific computing] Programs. This usage is common in people who
   hack supercomputers and heavy-duty [2776]number-crunching, rare to
   unknown elsewhere (if you say "codes" to hackers outside scientific
   computing, their first association is likely to be "and cyphers").
     _________________________________________________________________

   Node:codewalker, Next:[2777]coefficient of X, Previous:[2778]codes,
   Up:[2779]= C =

   codewalker n.

   A program component that traverses other programs for a living.
   Compilers have codewalkers in their front ends; so do cross-reference
   generators and some database front ends. Other utility programs that
   try to do too much with source code may turn into codewalkers. As in
   "This new vgrind feature would require a codewalker to implement."
     _________________________________________________________________

   Node:coefficient of X, Next:[2780]cokebottle,
   Previous:[2781]codewalker, Up:[2782]= C =

   coefficient of X n.

   Hackish speech makes heavy use of pseudo-mathematical metaphors. Four
   particularly important ones involve the terms `coefficient', `factor',
   `index of X', and `quotient'. They are often loosely applied to things
   you cannot really be quantitative about, but there are subtle
   distinctions among them that convey information about the way the
   speaker mentally models whatever he or she is describing.

   `Foo factor' and `foo quotient' tend to describe something for which
   the issue is one of presence or absence. The canonical example is
   [2783]fudge factor. It's not important how much you're fudging; the
   term simply acknowledges that some fudging is needed. You might talk
   of liking a movie for its silliness factor. Quotient tends to imply
   that the property is a ratio of two opposing factors: "I would have
   won except for my luck quotient." This could also be "I would have won
   except for the luck factor", but using quotient emphasizes that it was
   bad luck overpowering good luck (or someone else's good luck
   overpowering your own).

   `Foo index' and `coefficient of foo' both tend to imply that foo is,
   if not strictly measurable, at least something that can be larger or
   smaller. Thus, you might refer to a paper or person as having a `high
   bogosity index', whereas you would be less likely to speak of a `high
   bogosity factor'. `Foo index' suggests that foo is a condensation of
   many quantities, as in the mundane cost-of-living index; `coefficient
   of foo' suggests that foo is a fundamental quantity, as in a
   coefficient of friction. The choice between these terms is often one
   of personal preference; e.g., some people might feel that bogosity is
   a fundamental attribute and thus say `coefficient of bogosity',
   whereas others might feel it is a combination of factors and thus say
   `bogosity index'.
     _________________________________________________________________

   Node:cokebottle, Next:[2784]cold boot, Previous:[2785]coefficient of
   X, Up:[2786]= C =

   cokebottle /kohk'bot-l/ n.

   Any very unusual character, particularly one you can't type because it
   isn't on your keyboard. MIT people used to complain about the
   `control-meta-cokebottle' commands at SAIL, and SAIL people complained
   right back about the `escape-escape-cokebottle' commands at MIT. After
   the demise of the [2787]space-cadet keyboard, `cokebottle' faded away
   as serious usage, but was often invoked humorously to describe an
   (unspecified) weird or non-intuitive keystroke command. It may be due
   for a second inning, however. The OSF/Motif window manager, mwm(1),
   has a reserved keystroke for switching to the default set of
   keybindings and behavior. This keystroke is (believe it or not)
   `control-meta-bang' (see [2788]bang). Since the exclamation point
   looks a lot like an upside down Coke bottle, Motif hackers have begun
   referring to this keystroke as `cokebottle'. See also [2789]quadruple
   bucky.
     _________________________________________________________________

   Node:cold boot, Next:[2790]COME FROM, Previous:[2791]cokebottle,
   Up:[2792]= C =

   cold boot n.

   See [2793]boot.
     _________________________________________________________________

   Node:COME FROM, Next:[2794]comm mode, Previous:[2795]cold boot,
   Up:[2796]= C =

   COME FROM n.

   A semi-mythical language construct dual to the `go to'; COME FROM
   <label> would cause the referenced label to act as a sort of trapdoor,
   so that if the program ever reached it control would quietly and
   [2797]automagically be transferred to the statement following the COME
   FROM. COME FROM was first proposed in R. Lawrence Clark's "A
   Linguistic Contribution to GOTO-less programming", which appeared in a
   1973 [2798]Datamation issue (and was reprinted in the April 1984 issue
   of "Communications of the ACM"). This parodied the then-raging
   `structured programming' [2799]holy wars (see [2800]considered
   harmful). Mythically, some variants are the `assigned COME FROM' and
   the `computed COME FROM' (parodying some nasty control constructs in
   FORTRAN and some extended BASICs). Of course, multi-tasking (or
   non-determinism) could be implemented by having more than one COME
   FROM statement coming from the same label.

   In some ways the FORTRAN DO looks like a COME FROM statement. After
   the terminating statement number/CONTINUE is reached, control
   continues at the statement following the DO. Some generous FORTRANs
   would allow arbitrary statements (other than CONTINUE) for the
   statement, leading to examples like:
      DO 10 I=1,LIMIT
C imagine many lines of code here, leaving the
C original DO statement lost in the spaghetti...
      WRITE(6,10) I,FROB(I)
 10   FORMAT(1X,I5,G10.4)

   in which the trapdoor is just after the statement labeled 10. (This is
   particularly surprising because the label doesn't appear to have
   anything to do with the flow of control at all!)

   While sufficiently astonishing to the unsuspecting reader, this form
   of COME FROM statement isn't completely general. After all, control
   will eventually pass to the following statement. The implementation of
   the general form was left to Univac FORTRAN, ca. 1975 (though a
   roughly similar feature existed on the IBM 7040 ten years earlier).
   The statement AT 100 would perform a COME FROM 100. It was intended
   strictly as a debugging aid, with dire consequences promised to anyone
   so deranged as to use it in production code. More horrible things had
   already been perpetrated in production languages, however; doubters
   need only contemplate the ALTER verb in [2801]COBOL.

   COME FROM was supported under its own name for the first time 15 years
   later, in C-INTERCAL (see [2802]INTERCAL, [2803]retrocomputing);
   knowledgeable observers are still reeling from the shock.
     _________________________________________________________________

   Node:comm mode, Next:[2804]command key, Previous:[2805]COME FROM,
   Up:[2806]= C =

   comm mode /kom mohd/ n.

   [ITS: from the feature supporting on-line chat; the term may spelled
   with one or two m's] Syn. for [2807]talk mode.
     _________________________________________________________________

   Node:command key, Next:[2808]comment out, Previous:[2809]comm mode,
   Up:[2810]= C =

   command key n.

   [Mac users] Syn. [2811]feature key.
     _________________________________________________________________

   Node:comment out, Next:[2812]Commonwealth Hackish,
   Previous:[2813]command key, Up:[2814]= C =

   comment out vt.

   To surround a section of code with comment delimiters or to prefix
   every line in the section with a comment marker; this prevents it from
   being compiled or interpreted. Often done when the code is redundant
   or obsolete, but is being left in the source to make the intent of the
   active code clearer; also when the code in that section is broken and
   you want to bypass it in order to debug some other part of the code.
   Compare [2815]condition out, usually the preferred technique in
   languages (such as [2816]C) that make it possible.
     _________________________________________________________________

   Node:Commonwealth Hackish, Next:[2817]compact, Previous:[2818]comment
   out, Up:[2819]= C =

   Commonwealth Hackish n.

   Hacker jargon as spoken in English outside the U.S., esp. in the
   British Commonwealth. It is reported that Commonwealth speakers are
   more likely to pronounce truncations like `char' and `soc', etc., as
   spelled (/char/, /sok/), as opposed to American /keir/ and /sohsh/.
   Dots in [2820]newsgroup names (especially two-component names) tend to
   be pronounced more often (so soc.wibble is /sok dot wib'l/ rather than
   /sohsh wib'l/).

   Preferred [2821]metasyntactic variables include [2822]blurgle, eek,
   ook, frodo, and bilbo; [2823]wibble, wobble, and in emergencies
   wubble; flob, banana, tom, dick, harry, wombat, frog, [2824]fish,
   [2825]womble and so on and on (see [2826]foo, sense 4). Alternatives
   to verb doubling include suffixes `-o-rama', `frenzy' (as in feeding
   frenzy), and `city' (examples: "barf city!" "hack-o-rama!" "core dump
   frenzy!").

   All the generic differences within the anglophone world inevitably
   show themselves in the associated hackish dialects. The Greek letters
   beta and zeta are usually pronounced /bee't*/ and /zee't*/; meta may
   also be pronounced /mee't*/. Various punctuators (and even letters - Z
   is called `zed', not `zee') are named differently: most crucially, for
   hackish, where Americans use `parens', `brackets' and `braces' for (),
   [] and {}, Commonwealth English uses `brackets', `square brackets' and
   `curly brackets', though `parentheses' may be used for the first; the
   exclamation mark, `!', is called pling rather than bang and the pound
   sign, `#', is called hash; furthermore, the term `the pound sign' is
   understood to mean the pound currency symbol (of course).

   See also [2827]attoparsec, [2828]calculator, [2829]chemist,
   [2830]console jockey, [2831]fish, [2832]go-faster stripes,
   [2833]grunge, [2834]hakspek, [2835]heavy metal, [2836]leaky heap,
   [2837]lord high fixer, [2838]loose bytes, [2839]muddie, [2840]nadger,
   [2841]noddy, [2842]psychedelicware, [2843]plingnet, [2844]raster
   blaster, [2845]RTBM, [2846]seggie, [2847]spod, [2848]sun lounge,
   [2849]terminal junkie, [2850]tick-list features, [2851]weeble,
   [2852]weasel, [2853]YABA, and notes or definitions under [2854]Bad
   Thing, [2855]barf, [2856]bogus, [2857]bum, [2858]chase pointers,
   [2859]cosmic rays, [2860]crippleware, [2861]crunch, [2862]dodgy,
   [2863]gonk, [2864]hamster, [2865]hardwarily, [2866]mess-dos,
   [2867]nybble, [2868]proglet, [2869]root, [2870]SEX, [2871]tweak,
   [2872]womble, and [2873]xyzzy.
     _________________________________________________________________

   Node:compact, Next:[2874]compiler jock, Previous:[2875]Commonwealth
   Hackish, Up:[2876]= C =

   compact adj.

   Of a design, describes the valuable property that it can all be
   apprehended at once in one's head. This generally means the thing
   created from the design can be used with greater facility and fewer
   errors than an equivalent tool that is not compact. Compactness does
   not imply triviality or lack of power; for example, C is compact and
   FORTRAN is not, but C is more powerful than FORTRAN. Designs become
   non-compact through accreting [2877]features and [2878]cruft that
   don't merge cleanly into the overall design scheme (thus, some fans of
   [2879]Classic C maintain that ANSI C is no longer compact).
     _________________________________________________________________

   Node:compiler jock, Next:[2880]compo, Previous:[2881]compact,
   Up:[2882]= C =

   compiler jock n.

   See [2883]jock (sense 2).
     _________________________________________________________________

   Node:compo, Next:[2884]compress, Previous:[2885]compiler jock,
   Up:[2886]= C =

   compo n.

   [[2887]demoscene] Finnish-originated slang for `competition'. Demo
   compos are held at a [2888]demoparty. The usual protocol is that
   several groups make demos for a compo, they are shown on a big screen,
   and then the party participants vote for the best one. Prizes (from
   sponsors and party entrance fees) are given. Standard compo formats
   include [2889]intro compos (4k or 64k demos), music compos, graphics
   compos, quick [2890]demo compos (build a demo within 4 hours for
   example), etc.
     _________________________________________________________________

   Node:compress, Next:[2891]Compu$erve, Previous:[2892]compo, Up:[2893]=
   C =

   compress [Unix] vt.

   When used without a qualifier, generally refers to [2894]crunching of
   a file using a particular C implementation of compression by Joseph M.
   Orost et al. and widely circulated via [2895]Usenet; use of
   [2896]crunch itself in this sense is rare among Unix hackers.
   Specifically, compress is built around the Lempel-Ziv-Welch algorithm
   as described in "A Technique for High Performance Data Compression",
   Terry A. Welch, "IEEE Computer", vol. 17, no. 6 (June 1984), pp. 8-19.
     _________________________________________________________________

   Node:Compu$erve, Next:[2897]computer confetti,
   Previous:[2898]compress, Up:[2899]= C =

   Compu$erve n.

   See [2900]CI$. Synonyms CompuSpend and Compu$pend are also reported.
     _________________________________________________________________

   Node:computer confetti, Next:[2901]computer geek,
   Previous:[2902]Compu$erve, Up:[2903]= C =

   computer confetti n.

   Syn. [2904]chad. Though this term is common, this use of punched-card
   chad is not a good idea, as the pieces are stiff and have sharp
   corners that could injure the eyes. GLS reports that he once attended
   a wedding at MIT during which he and a few other guests
   enthusiastically threw chad instead of rice. The groom later grumbled
   that he and his bride had spent most of the evening trying to get the
   stuff out of their hair.
     _________________________________________________________________

   Node:computer geek, Next:[2905]computron, Previous:[2906]computer
   confetti, Up:[2907]= C =

   computer geek n.

   1. One who eats (computer) bugs for a living. One who fulfills all the
   dreariest negative stereotypes about hackers: an asocial, malodorous,
   pasty-faced monomaniac with all the personality of a cheese grater.
   Cannot be used by outsiders without implied insult to all hackers;
   compare black-on-black vs. white-on-black usage of `nigger'. A
   computer geek may be either a fundamentally clueless individual or a
   proto-hacker in [2908]larval stage. Also called `turbo nerd', `turbo
   geek'. See also [2909]propeller head, [2910]clustergeeking, [2911]geek
   out, [2912]wannabee, [2913]terminal junkie, [2914]spod, [2915]weenie.
   2. Some self-described computer geeks use this term in a positive
   sense and protest sense 1 (this seems to have been a post-1990
   development). For one such argument, see
   [2916]http://www.darkwater.com/omni/geek.html. See also [2917]geek
   code.
     _________________________________________________________________

   Node:computron, Next:[2918]con, Previous:[2919]computer geek,
   Up:[2920]= C =

   computron /kom'pyoo-tron`/

   n. 1. [common] A notional unit of computing power combining
   instruction speed and storage capacity, dimensioned roughly in
   instructions-per-second times megabytes-of-main-store times
   megabytes-of-mass-storage. "That machine can't run GNU Emacs, it
   doesn't have enough computrons!" This usage is usually found in
   metaphors that treat computing power as a fungible commodity good,
   like a crop yield or diesel horsepower. See [2921]bitty box, [2922]Get
   a real computer!, [2923]toy, [2924]crank. 2. A mythical subatomic
   particle that bears the unit quantity of computation or information,
   in much the same way that an electron bears one unit of electric
   charge (see also [2925]bogon). An elaborate pseudo-scientific theory
   of computrons has been developed based on the physical fact that the
   molecules in a solid object move more rapidly as it is heated. It is
   argued that an object melts because the molecules have lost their
   information about where they are supposed to be (that is, they have
   emitted computrons). This explains why computers get so hot and
   require air conditioning; they use up computrons. Conversely, it
   should be possible to cool down an object by placing it in the path of
   a computron beam. It is believed that this may also explain why
   machines that work at the factory fail in the computer room: the
   computrons there have been all used up by the other hardware. (The
   popularity of this theory probably owes something to the "Warlock"
   stories by Larry Niven, the best known being "What Good is a Glass
   Dagger?", in which magic is fueled by an exhaustible natural resource
   called `mana'.)
     _________________________________________________________________

   Node:con, Next:[2926]condition out, Previous:[2927]computron,
   Up:[2928]= C =

   con n.

   [from SF fandom] A science-fiction convention. Not used of other sorts
   of conventions, such as professional meetings. This term, unlike many
   others imported from SF-fan slang, is widely recognized even by
   hackers who aren't [2929]fans. "We'd been corresponding on the net for
   months, then we met face-to-face at a con."
     _________________________________________________________________

   Node:condition out, Next:[2930]condom, Previous:[2931]con, Up:[2932]=
   C =

   condition out vt.

   To prevent a section of code from being compiled by surrounding it
   with a conditional-compilation directive whose condition is always
   false. The [2933]canonical examples of these directives are #if 0 (or
   #ifdef notdef, though some find the latter [2934]bletcherous) and
   #endif in C. Compare [2935]comment out.
     _________________________________________________________________

   Node:condom, Next:[2936]confuser, Previous:[2937]condition out,
   Up:[2938]= C =

   condom n.

   1. The protective plastic bag that accompanies 3.5-inch microfloppy
   diskettes. Rarely, also used of (paper) disk envelopes. Unlike the
   write protect tab, the condom (when left on) not only impedes the
   practice of [2939]SEX but has also been shown to have a high failure
   rate as drive mechanisms attempt to access the disk -- and can even
   fatally frustrate insertion. 2. The protective cladding on a
   [2940]light pipe. 3. `keyboard condom': A flexible, transparent
   plastic cover for a keyboard, designed to provide some protection
   against dust and [2941]programming fluid without impeding typing. 4.
   `elephant condom': the plastic shipping bags used inside cardboard
   boxes to protect hardware in transit. 5. n. obs. A dummy directory
   /usr/tmp/sh, created to foil the [2942]Great Worm by exploiting a
   portability bug in one of its parts. So named in the title of a
   comp.risks article by Gene Spafford during the Worm crisis, and again
   in the text of "The Internet Worm Program: An Analysis", Purdue
   Technical Report CSD-TR-823.
     _________________________________________________________________

   Node:confuser, Next:[2943]connector conspiracy, Previous:[2944]condom,
   Up:[2945]= C =

   confuser n.

   Common soundalike slang for `computer'. Usually encountered in
   compounds such as `confuser room', `personal confuser', `confuser
   guru'. Usage: silly.
     _________________________________________________________________

   Node:connector conspiracy, Next:[2946]cons, Previous:[2947]confuser,
   Up:[2948]= C =

   connector conspiracy n.

   [probably came into prominence with the appearance of the KL-10 (one
   model of the [2949]PDP-10), none of whose connectors matched anything
   else] The tendency of manufacturers (or, by extension, programmers or
   purveyors of anything) to come up with new products that don't fit
   together with the old stuff, thereby making you buy either all new
   stuff or expensive interface devices. The KL-10 Massbus connector was
   actually patented by [2950]DEC, which reputedly refused to license the
   design and thus effectively locked third parties out of competition
   for the lucrative Massbus peripherals market. This policy is a source
   of never-ending frustration for the diehards who maintain older PDP-10
   or VAX systems. Their CPUs work fine, but they are stuck with dying,
   obsolescent disk and tape drives with low capacity and high power
   requirements.

   (A closely related phenomenon, with a slightly different intent, is
   the habit manufacturers have of inventing new screw heads so that only
   Designated Persons, possessing the magic screwdrivers, can remove
   covers and make repairs or install options. A good 1990s example is
   the use of Torx screws for cable-TV set-top boxes. Older Apple
   Macintoshes took this one step further, requiring not only a long Torx
   screwdriver but a specialized case-cracking tool to open the box.)

   In these latter days of open-systems computing this term has fallen
   somewhat into disuse, to be replaced by the observation that
   "Standards are great! There are so many of them to choose from!"
   Compare [2951]backward combatability.
     _________________________________________________________________

   Node:cons, Next:[2952]considered harmful, Previous:[2953]connector
   conspiracy, Up:[2954]= C =

   cons /konz/ or /kons/

   [from LISP] 1. vt. To add a new element to a specified list, esp. at
   the top. "OK, cons picking a replacement for the console TTY onto the
   agenda." 2. `cons up': vt. To synthesize from smaller pieces: "to cons
   up an example".

   In LISP itself, cons is the most fundamental operation for building
   structures. It takes any two objects and returns a `dot-pair' or
   two-branched tree with one object hanging from each branch. Because
   the result of a cons is an object, it can be used to build binary
   trees of any shape and complexity. Hackers think of it as a sort of
   universal constructor, and that is where the jargon meanings spring
   from.
     _________________________________________________________________

   Node:considered harmful, Next:[2955]console, Previous:[2956]cons,
   Up:[2957]= C =

   considered harmful adj.

   [very common] Edsger W. Dijkstra's note in the March 1968
   "Communications of the ACM", "Goto Statement Considered Harmful",
   fired the first salvo in the structured programming wars (text at
   [2958]http://www.acm.org/classics). Amusingly, the ACM considered the
   resulting acrimony sufficiently harmful that it will (by policy) no
   longer print an article taking so assertive a position against a
   coding practice. (Years afterwards, a contrary view was uttered in a
   CACM letter called, inevitably, "`Goto considered harmful' considered
   harmful'"'. In the ensuing decades, a large number of both serious
   papers and parodies have borne titles of the form "X considered Y".
   The structured-programming wars eventually blew over with the
   realization that both sides were wrong, but use of such titles has
   remained as a persistent minor in-joke (the `considered silly' found
   at various places in this lexicon is related).
     _________________________________________________________________

   Node:console, Next:[2959]console jockey, Previous:[2960]considered
   harmful, Up:[2961]= C =

   console n.

   1. The operator's station of a [2962]mainframe. In times past, this
   was a privileged location that conveyed godlike powers to anyone with
   fingers on its keys. Under Unix and other modern timesharing OSes,
   such privileges are guarded by passwords instead, and the console is
   just the [2963]tty the system was booted from. Some of the mystique
   remains, however, and it is traditional for sysadmins to post urgent
   messages to all users from the console (on Unix, /dev/console). 2. On
   microcomputer Unix boxes, the main screen and keyboard (as opposed to
   character-only terminals talking to a serial port). Typically only the
   console can do real graphics or run [2964]X.
     _________________________________________________________________

   Node:console jockey, Next:[2965]content-free, Previous:[2966]console,
   Up:[2967]= C =

   console jockey n.

   See [2968]terminal junkie.
     _________________________________________________________________

   Node:content-free, Next:[2969]control-C, Previous:[2970]console
   jockey, Up:[2971]= C =

   content-free adj.

   [by analogy with techspeak `context-free'] Used of a message that adds
   nothing to the recipient's knowledge. Though this adjective is
   sometimes applied to [2972]flamage, it more usually connotes derision
   for communication styles that exalt form over substance or are
   centered on concerns irrelevant to the subject ostensibly at hand.
   Perhaps most used with reference to speeches by company presidents and
   other professional manipulators. "Content-free? Uh... that's anything
   printed on glossy paper." (See also [2973]four-color glossies.) "He
   gave a talk on the implications of electronic networks for
   postmodernism and the fin-de-siecle aesthetic. It was content-free."
     _________________________________________________________________

   Node:control-C, Next:[2974]control-O, Previous:[2975]content-free,
   Up:[2976]= C =

   control-C vi.

   1. "Stop whatever you are doing." From the interrupt character used on
   many operating systems to abort a running program. Considered silly.
   2. interj. Among BSD Unix hackers, the canonical humorous response to
   "Give me a break!"
     _________________________________________________________________

   Node:control-O, Next:[2977]control-Q, Previous:[2978]control-C,
   Up:[2979]= C =

   control-O vi.

   "Stop talking." From the character used on some operating systems to
   abort output but allow the program to keep on running. Generally means
   that you are not interested in hearing anything more from that person,
   at least on that topic; a standard response to someone who is flaming.
   Considered silly. Compare [2980]control-S.
     _________________________________________________________________

   Node:control-Q, Next:[2981]control-S, Previous:[2982]control-O,
   Up:[2983]= C =

   control-Q vi.

   "Resume." From the ASCII DC1 or [2984]XON character (the pronunciation
   /X-on/ is therefore also used), used to undo a previous
   [2985]control-S.
     _________________________________________________________________

   Node:control-S, Next:[2986]Conway's Law, Previous:[2987]control-Q,
   Up:[2988]= C =

   control-S vi.

   "Stop talking for a second." From the ASCII DC3 or XOFF character (the
   pronunciation /X-of/ is therefore also used). Control-S differs from
   [2989]control-O in that the person is asked to stop talking (perhaps
   because you are on the phone) but will be allowed to continue when
   you're ready to listen to him -- as opposed to control-O, which has
   more of the meaning of "Shut up." Considered silly.
     _________________________________________________________________

   Node:Conway's Law, Next:[2990]cookbook, Previous:[2991]control-S,
   Up:[2992]= C =

   Conway's Law prov.

   The rule that the organization of the software and the organization of
   the software team will be congruent; commonly stated as "If you have
   four groups working on a compiler, you'll get a 4-pass compiler". The
   original statement was more general, "Organizations which design
   systems are constrained to produce designs which are copies of the
   communication structures of these organizations." This first appeared
   in the April 1968 issue of [2993]Datamation. Compare [2994]SNAFU
   principle.

   The law was named after Melvin Conway, an early proto-hacker who wrote
   an assembler for the Burroughs 220 called SAVE. (The name `SAVE'
   didn't stand for anything; it was just that you lost fewer card decks
   and listings because they all had SAVE written on them.)

   There is also Tom Cheatham's amendment of Conway's Law: "If a group of
   N persons implements a COBOL compiler, there will be N-1 passes.
   Someone in the group has to be the manager."
     _________________________________________________________________

   Node:cookbook, Next:[2995]cooked mode, Previous:[2996]Conway's Law,
   Up:[2997]= C =

   cookbook n.

   [from amateur electronics and radio] A book of small code segments
   that the reader can use to do various [2998]magic things in programs.
   One current example is the "[2999]PostScript Language Tutorial and
   Cookbook" by Adobe Systems, Inc (Addison-Wesley, ISBN 0-201-10179-3),
   also known as the [3000]Blue Book which has recipes for things like
   wrapping text around arbitrary curves and making 3D fonts. Cookbooks,
   slavishly followed, can lead one into [3001]voodoo programming, but
   are useful for hackers trying to [3002]monkey up small programs in
   unknown languages. This function is analogous to the role of
   phrasebooks in human languages.
     _________________________________________________________________

   Node:cooked mode, Next:[3003]cookie, Previous:[3004]cookbook,
   Up:[3005]= C =

   cooked mode n.

   [Unix, by opposition from [3006]raw mode] The normal character-input
   mode, with interrupts enabled and with erase, kill and other
   special-character interpretations performed directly by the tty
   driver. Oppose [3007]raw mode, [3008]rare mode. This term is techspeak
   under Unix but jargon elsewhere; other operating systems often have
   similar mode distinctions, and the raw/rare/cooked way of describing
   them has spread widely along with the C language and other Unix
   exports. Most generally, `cooked mode' may refer to any mode of a
   system that does extensive preprocessing before presenting data to a
   program.
     _________________________________________________________________

   Node:cookie, Next:[3009]cookie bear, Previous:[3010]cooked mode,
   Up:[3011]= C =

   cookie n.

   A handle, transaction ID, or other token of agreement between
   cooperating programs. "I give him a packet, he gives me back a
   cookie." The claim check you get from a dry-cleaning shop is a perfect
   mundane example of a cookie; the only thing it's useful for is to
   relate a later transaction to this one (so you get the same clothes
   back). Compare [3012]magic cookie; see also [3013]fortune cookie. Now
   mainstream in the specific sense of web-browser cookies.
     _________________________________________________________________

   Node:cookie bear, Next:[3014]cookie file, Previous:[3015]cookie,
   Up:[3016]= C =

   cookie bear n. obs.

   Original term, pre-Sesame-Street, for what is now universally called a
   [3017]cookie monster. A correspondent observes "In those days, hackers
   were actually getting their yucks from...sit down now...Andy Williams.
   Yes, that Andy Williams. Seems he had a rather hip (by the standards
   of the day) TV variety show. One of the best parts of the show was the
   recurring `cookie bear' sketch. In these sketches, a guy in a bear
   suit tried all sorts of tricks to get a cookie out of Williams. The
   sketches would always end with Williams shrieking (and I don't mean
   figuratively), `No cookies! Not now, not ever...NEVER!!!' And the bear
   would fall down. Great stuff."
     _________________________________________________________________

   Node:cookie file, Next:[3018]cookie jar, Previous:[3019]cookie bear,
   Up:[3020]= C =

   cookie file n.

   A collection of [3021]fortune cookies in a format that facilitates
   retrieval by a fortune program. There are several different cookie
   files in public distribution, and site admins often assemble their own
   from various sources including this lexicon.
     _________________________________________________________________

   Node:cookie jar, Next:[3022]cookie monster, Previous:[3023]cookie
   file, Up:[3024]= C =

   cookie jar n.

   An area of memory set aside for storing [3025]cookies. Most commonly
   heard in the Atari ST community; many useful ST programs record their
   presence by storing a distinctive [3026]magic number in the jar.
   Programs can inquire after the presence or otherwise of other programs
   by searching the contents of the jar.
     _________________________________________________________________

   Node:cookie monster, Next:[3027]copious free time,
   Previous:[3028]cookie jar, Up:[3029]= C =

   cookie monster n.

   [from the children's TV program "Sesame Street"] Any of a family of
   early (1970s) hacks reported on [3030]TOPS-10, [3031]ITS,
   [3032]Multics, and elsewhere that would lock up either the victim's
   terminal (on a time-sharing machine) or the [3033]console (on a batch
   [3034]mainframe), repeatedly demanding "I WANT A COOKIE". The required
   responses ranged in complexity from "COOKIE" through "HAVE A COOKIE"
   and upward. Folklorist Jan Brunvand (see [3035]FOAF) has described
   these programs as urban legends (implying they probably never existed)
   but they existed, all right, in several different versions. See also
   [3036]wabbit. Interestingly, the term `cookie monster' appears to be a
   [3037]retcon; the original term was [3038]cookie bear.
     _________________________________________________________________

   Node:copious free time, Next:[3039]copper, Previous:[3040]cookie
   monster, Up:[3041]= C =

   copious free time n.

   [Apple; orig. fr. the intro to Tom Lehrer's song "It Makes A Fellow
   Proud To Be A Soldier"] 1. [used ironically to indicate the speaker's
   lack of the quantity in question] A mythical schedule slot for
   accomplishing tasks held to be unlikely or impossible. Sometimes used
   to indicate that the speaker is interested in accomplishing the task,
   but believes that the opportunity will not arise. "I'll implement the
   automatic layout stuff in my copious free time." 2. [Archly] Time
   reserved for bogus or otherwise idiotic tasks, such as implementation
   of [3042]chrome, or the stroking of [3043]suits. "I'll get back to him
   on that feature in my copious free time."
     _________________________________________________________________

   Node:copper, Next:[3044]copy protection, Previous:[3045]copious free
   time, Up:[3046]= C =

   copper n.

   Conventional electron-carrying network cable with a core conductor of
   copper -- or aluminum! Opposed to [3047]light pipe or, say, a
   short-range microwave link.
     _________________________________________________________________

   Node:copy protection, Next:[3048]copybroke, Previous:[3049]copper,
   Up:[3050]= C =

   copy protection n.

   A class of methods for preventing incompetent pirates from stealing
   software and legitimate customers from using it. Considered silly.
     _________________________________________________________________

   Node:copybroke, Next:[3051]copycenter, Previous:[3052]copy protection,
   Up:[3053]= C =

   copybroke /kop'ee-brohk/ adj.

   1. [play on `copyright'] Used to describe an instance of a
   copy-protected program that has been `broken'; that is, a copy with
   the copy-protection scheme disabled. Syn. [3054]copywronged. 2.
   Copy-protected software which is unusable because of some bit-rot or
   bug that has confused the anti-piracy check. See also [3055]copy
   protection.
     _________________________________________________________________

   Node:copycenter, Next:[3056]copyleft, Previous:[3057]copybroke,
   Up:[3058]= C =

   copycenter n.

   [play on `copyright' and `copyleft'] 1. The copyright notice carried
   by the various flavors of freeware BSD. According to Kirk McKusick at
   BSDCon 1999: "The way it was characterized politically, you had
   copyright, which is what the big companies use to lock everything up;
   you had copyleft, which is free software's way of making sure they
   can't lock it up; and then Berkeley had what we called "copycenter",
   which is "take it down to the copy center and make as many copies as
   you want".
     _________________________________________________________________

   Node:copyleft, Next:[3059]copyparty, Previous:[3060]copycenter,
   Up:[3061]= C =

   copyleft /kop'ee-left/ n.

   [play on `copyright'] 1. The copyright notice (`General Public
   License') carried by [3062]GNU [3063]EMACS and other Free Software
   Foundation software, granting reuse and reproduction rights to all
   comers (but see also [3064]General Public Virus). 2. By extension, any
   copyright notice intended to achieve similar aims.
     _________________________________________________________________

   Node:copyparty, Next:[3065]copywronged, Previous:[3066]copyleft,
   Up:[3067]= C =

   copyparty n.

   [C64/amiga [3068]demoscene ]A computer party organized so demosceners
   can meet other in real life, and to facilitate software copying
   (mostly pirated software). The copyparty has become less common as the
   Internet makes communication easier. The demoscene has gradually
   evolved the [3069]demoparty to replace it.
     _________________________________________________________________

   Node:copywronged, Next:[3070]core, Previous:[3071]copyparty,
   Up:[3072]= C =

   copywronged /kop'ee-rongd/ adj.

   [play on `copyright'] Syn. for [3073]copybroke.
     _________________________________________________________________

   Node:core, Next:[3074]core cancer, Previous:[3075]copywronged,
   Up:[3076]= C =

   core n.

   Main storage or RAM. Dates from the days of ferrite-core memory; now
   archaic as techspeak most places outside IBM, but also still used in
   the Unix community and by old-time hackers or those who would sound
   like them. Some derived idioms are quite current; `in core', for
   example, means `in memory' (as opposed to `on disk'), and both
   [3077]core dump and the `core image' or `core file' produced by one
   are terms in favor. Some varieties of Commonwealth hackish prefer
   [3078]store.
     _________________________________________________________________

   Node:core cancer, Next:[3079]core dump, Previous:[3080]core,
   Up:[3081]= C =

   core cancer n.

   [rare] A process that exhibits a slow but inexorable resource
   [3082]leak -- like a cancer, it kills by crowding out productive
   `tissue'.
     _________________________________________________________________

   Node:core dump, Next:[3083]core leak, Previous:[3084]core cancer,
   Up:[3085]= C =

   core dump n.

   [common [3086]Iron Age jargon, preserved by Unix] 1. [techspeak] A
   copy of the contents of [3087]core, produced when a process is aborted
   by certain kinds of internal error. 2. By extension, used for humans
   passing out, vomiting, or registering extreme shock. "He dumped core.
   All over the floor. What a mess." "He heard about X and dumped core."
   3. Occasionally used for a human rambling on pointlessly at great
   length; esp. in apology: "Sorry, I dumped core on you". 4. A
   recapitulation of knowledge (compare [3088]bits, sense 1). Hence,
   spewing all one knows about a topic (syn. [3089]brain dump), esp. in a
   lecture or answer to an exam question. "Short, concise answers are
   better than core dumps" (from the instructions to an exam at
   Columbia). See [3090]core.
     _________________________________________________________________

   Node:core leak, Next:[3091]Core Wars, Previous:[3092]core dump,
   Up:[3093]= C =

   core leak n.

   Syn. [3094]memory leak.
     _________________________________________________________________

   Node:Core Wars, Next:[3095]corge, Previous:[3096]core leak, Up:[3097]=
   C =

   Core Wars n.

   A game between `assembler' programs in a machine or machine simulator,
   where the objective is to kill your opponent's program by overwriting
   it. Popularized in the 1980s by A. K. Dewdney's column in "Scientific
   American" magazine, but described in "Software Practice And
   Experience" a decade earlier. The game was actually devised and played
   by Victor Vyssotsky, Robert Morris Sr., and Doug McIlroy in the early
   1960s (Dennis Ritchie is sometimes incorrectly cited as a co-author,
   but was not involved). Their original game was called `Darwin' and ran
   on a IBM 7090 at Bell Labs. See [3098]core. For information on the
   modern game, do a web search for the `rec.games.corewar FAQ' or surf
   to the [3099]King Of The Hill site.
     _________________________________________________________________

   Node:corge, Next:[3100]cosmic rays, Previous:[3101]Core Wars,
   Up:[3102]= C =

   corge /korj/ n.

   [originally, the name of a cat] Yet another [3103]metasyntactic
   variable, invented by Mike Gallaher and propagated by the
   [3104]GOSMACS documentation. See [3105]grault.
     _________________________________________________________________

   Node:cosmic rays, Next:[3106]cough and die, Previous:[3107]corge,
   Up:[3108]= C =

   cosmic rays n.

   Notionally, the cause of [3109]bit rot. However, this is a
   semi-independent usage that may be invoked as a humorous way to
   [3110]handwave away any minor [3111]randomness that doesn't seem worth
   the bother of investigating. "Hey, Eric -- I just got a burst of
   garbage on my [3112]tube, where did that come from?" "Cosmic rays, I
   guess." Compare [3113]sunspots, [3114]phase of the moon. The British
   seem to prefer the usage `cosmic showers'; `alpha particles' is also
   heard, because stray alpha particles passing through a memory chip can
   cause single-bit errors (this becomes increasingly more likely as
   memory sizes and densities increase).

   Factual note: Alpha particles cause bit rot, cosmic rays do not
   (except occasionally in spaceborne computers). Intel could not explain
   random bit drops in their early chips, and one hypothesis was cosmic
   rays. So they created the World's Largest Lead Safe, using 25 tons of
   the stuff, and used two identical boards for testing. One was placed
   in the safe, one outside. The hypothesis was that if cosmic rays were
   causing the bit drops, they should see a statistically significant
   difference between the error rates on the two boards. They did not
   observe such a difference. Further investigation demonstrated
   conclusively that the bit drops were due to alpha particle emissions
   from thorium (and to a much lesser degree uranium) in the
   encapsulation material. Since it is impossible to eliminate these
   radioactives (they are uniformly distributed through the earth's
   crust, with the statistically insignificant exception of uranium
   lodes) it became obvious that one has to design memories to withstand
   these hits.
     _________________________________________________________________

   Node:cough and die, Next:[3115]courier, Previous:[3116]cosmic rays,
   Up:[3117]= C =

   cough and die v.

   Syn. [3118]barf. Connotes that the program is throwing its hands up by
   design rather than because of a bug or oversight. "The parser saw a
   control-A in its input where it was looking for a printable, so it
   coughed and died." Compare [3119]die, [3120]die horribly, [3121]scream
   and die.
     _________________________________________________________________

   Node:courier, Next:[3122]cow orker, Previous:[3123]cough and die,
   Up:[3124]= C =

   courier

   [BBS & cracker cultures] A person who distributes newly cracked
   [3125]warez, as opposed to a [3126]server who makes them available for
   download or a [3127]leech who merely downloads them. Hackers recognize
   this term but don't use it themselves, as the act is not part of their
   culture. See also [3128]warez d00dz, [3129]cracker, [3130]elite.
     _________________________________________________________________

   Node:cow orker, Next:[3131]cowboy, Previous:[3132]courier, Up:[3133]=
   C =

   cow orker n.

   [Usenet] n. fortuitous typo for co-worker, widely used in Usenet, with
   perhaps a hint that orking cows is illegal. This term was popularized
   by Scott Adams (the creator of [3134]Dilbert) but already appears in
   the January 1996 version of the [3135]scary devil monastery FAQ. There
   are plausible reports that it was in use on talk.bizarre as early as
   1992. Compare [3136]hing, [3137]grilf, [3138]filk, [3139]newsfroup.
     _________________________________________________________________

   Node:cowboy, Next:[3140]CP/M, Previous:[3141]cow orker, Up:[3142]= C =

   cowboy n.

   [Sun, from William Gibson's [3143]cyberpunk SF] Synonym for
   [3144]hacker. It is reported that at Sun this word is often said with
   reverence.
     _________________________________________________________________

   Node:CP/M, Next:[3145]CPU Wars, Previous:[3146]cowboy, Up:[3147]= C =

   CP/M /C-P-M/ n.

   [Control Program/Monitor; later [3148]retconned to Control Program for
   Microcomputers] An early microcomputer [3149]OS written by hacker Gary
   Kildall for 8080- and Z80-based machines, very popular in the late
   1970s but virtually wiped out by MS-DOS after the release of the IBM
   PC in 1981. Legend has it that Kildall's company blew its chance to
   write the OS for the IBM PC because Kildall decided to spend a day
   IBM's reps wanted to meet with him enjoying the perfect flying weather
   in his private plane. Many of CP/M's features and conventions strongly
   resemble those of early [3150]DEC operating systems such as
   [3151]TOPS-10, OS/8, RSTS, and RSX-11. See [3152]MS-DOS,
   [3153]operating system.
     _________________________________________________________________

   Node:CPU Wars, Next:[3154]crack, Previous:[3155]CP/M, Up:[3156]= C =

   CPU Wars /C-P-U worz/ n.

   A 1979 large-format comic by Chas Andres chronicling the attempts of
   the brainwashed androids of IPM (Impossible to Program Machines) to
   conquer and destroy the peaceful denizens of HEC (Human Engineered
   Computers). This rather transparent allegory featured many references
   to [3157]ADVENT and the immortal line "Eat flaming death, minicomputer
   mongrels!" (uttered, of course, by an IPM stormtrooper). The whole
   shebang is now [3158]available on the Web.

   It is alleged that the author subsequently received a letter of
   appreciation on IBM company stationery from the head of IBM's Thomas
   J. Watson Research Laboratories (then, as now, one of the few islands
   of true hackerdom in the IBM archipelago). The lower loop of the B in
   the IBM logo, it is said, had been carefully whited out. See [3159]eat
   flaming death.
     _________________________________________________________________

   Node:crack, Next:[3160]crack root, Previous:[3161]CPU Wars, Up:[3162]=
   C =

   crack

   [warez d00dz] 1. v. To break into a system (compare [3163]cracker). 2.
   v. Action of removing the copy protection from a commercial program.
   People who write cracks consider themselves challenged by the copy
   protection measures. They will often do it as much to show that they
   are smarter than the developper who designed the copy protection
   scheme than to actually copy the program. 3. n. A program,
   instructions or patch used to remove the copy protection of a program
   or to uncripple features from a demo/time limited program. 4. An
   [3164]exploit.
     _________________________________________________________________

   Node:crack root, Next:[3165]cracker, Previous:[3166]crack, Up:[3167]=
   C =

   crack root v.

   [very common] To defeat the security system of a Unix machine and gain
   [3168]root privileges thereby; see [3169]cracking.
     _________________________________________________________________

   Node:cracker, Next:[3170]cracking, Previous:[3171]crack root,
   Up:[3172]= C =

   cracker n.

   One who breaks security on a system. Coined ca. 1985 by hackers in
   defense against journalistic misuse of [3173]hacker (q.v., sense 8).
   An earlier attempt to establish `worm' in this sense around 1981-82 on
   Usenet was largely a failure.

   Use of both these neologisms reflects a strong revulsion against the
   theft and vandalism perpetrated by cracking rings. While it is
   expected that any real hacker will have done some playful cracking and
   knows many of the basic techniques, anyone past [3174]larval stage is
   expected to have outgrown the desire to do so except for immediate,
   benign, practical reasons (for example, if it's necessary to get
   around some security in order to get some work done).

   Thus, there is far less overlap between hackerdom and crackerdom than
   the [3175]mundane reader misled by sensationalistic journalism might
   expect. Crackers tend to gather in small, tight-knit, very secretive
   groups that have little overlap with the huge, open poly-culture this
   lexicon describes; though crackers often like to describe themselves
   as hackers, most true hackers consider them a separate and lower form
   of life.

   Ethical considerations aside, hackers figure that anyone who can't
   imagine a more interesting way to play with their computers than
   breaking into someone else's has to be pretty [3176]losing. Some other
   reasons crackers are looked down on are discussed in the entries on
   [3177]cracking and [3178]phreaking. See also [3179]samurai,
   [3180]dark-side hacker, and [3181]hacker ethic. For a portrait of the
   typical teenage cracker, see [3182]warez d00dz.
     _________________________________________________________________

   Node:cracking, Next:[3183]crank, Previous:[3184]cracker, Up:[3185]= C
   =

   cracking n.

   [very common] The act of breaking into a computer system; what a
   [3186]cracker does. Contrary to widespread myth, this does not usually
   involve some mysterious leap of hackerly brilliance, but rather
   persistence and the dogged repetition of a handful of fairly
   well-known tricks that exploit common weaknesses in the security of
   target systems. Accordingly, most crackers are only mediocre hackers.
     _________________________________________________________________

   Node:crank, Next:[3187]crapplet, Previous:[3188]cracking, Up:[3189]= C
   =

   crank vt.

   [from automotive slang] Verb used to describe the performance of a
   machine, especially sustained performance. "This box cranks (or,
   cranks at) about 6 megaflops, with a burst mode of twice that on
   vectorized operations."
     _________________________________________________________________

   Node:crapplet, Next:[3190]CrApTeX, Previous:[3191]crank, Up:[3192]= C
   =

   crapplet n.

   [portmanteau, crap + applet] A worthless applet, esp. a Java widget
   attached to a web page that doesn't work or even crashes your browser.
   Also spelled `craplet'.
     _________________________________________________________________

   Node:CrApTeX, Next:[3193]crash, Previous:[3194]crapplet, Up:[3195]= C
   =

   CrApTeX /krap'tekh/ n.

   [University of York, England] Term of abuse used to describe TeX and
   LaTeX when they don't work (when used by TeXhackers), or all the time
   (by everyone else). The non-TeX-enthusiasts generally dislike it
   because it is more verbose than other formatters (e.g. [3196]troff)
   and because (particularly if the standard Computer Modern fonts are
   used) it generates vast output files. See [3197]religious issues,
   [3198]TeX.
     _________________________________________________________________

   Node:crash, Next:[3199]crash and burn, Previous:[3200]CrApTeX,
   Up:[3201]= C =

   crash

   1. n. A sudden, usually drastic failure. Most often said of the
   [3202]system (q.v., sense 1), esp. of magnetic disk drives (the term
   originally described what happens when the air gap of a hard disk
   collapses). "Three [3203]lusers lost their files in last night's disk
   crash." A disk crash that involves the read/write heads dropping onto
   the surface of the disks and scraping off the oxide may also be
   referred to as a `head crash', whereas the term `system crash'
   usually, though not always, implies that the operating system or other
   software was at fault. 2. v. To fail suddenly. "Has the system just
   crashed?" "Something crashed the OS!" See [3204]down. Also used
   transitively to indicate the cause of the crash (usually a person or a
   program, or both). "Those idiots playing [3205]SPACEWAR crashed the
   system." 3. vi. Sometimes said of people hitting the sack after a long
   [3206]hacking run; see [3207]gronk out.
     _________________________________________________________________

   Node:crash and burn, Next:[3208]crawling horror, Previous:[3209]crash,
   Up:[3210]= C =

   crash and burn vi.,n.

   A spectacular crash, in the mode of the conclusion of the car-chase
   scene in the movie "Bullitt" and many subsequent imitators (compare
   [3211]die horribly). Sun-3 monitors losing the flyback transformer and
   lightning strikes on VAX-11/780 backplanes are notable crash and burn
   generators. The construction `crash-and-burn machine' is reported for
   a computer used exclusively for alpha or [3212]beta testing, or
   reproducing bugs (i.e., not for development). The implication is that
   it wouldn't be such a disaster if that machine crashed, since only the
   testers would be inconvenienced.
     _________________________________________________________________

   Node:crawling horror, Next:[3213]cray, Previous:[3214]crash and burn,
   Up:[3215]= C =

   crawling horror n.

   Ancient crufty hardware or software that is kept obstinately alive by
   forces beyond the control of the hackers at a site. Like [3216]dusty
   deck or [3217]gonkulator, but connotes that the thing described is not
   just an irritation but an active menace to health and sanity. "Mostly
   we code new stuff in C, but they pay us to maintain one big FORTRAN II
   application from nineteen-sixty-X that's a real crawling horror...."
   Compare [3218]WOMBAT.
     _________________________________________________________________

   Node:cray, Next:[3219]cray instability, Previous:[3220]crawling
   horror, Up:[3221]= C =

   cray /kray/ n.

   1. (properly, capitalized) One of the line of supercomputers designed
   by Cray Research. 2. Any supercomputer at all. 3. The [3222]canonical
   [3223]number-crunching machine.

   The term is actually the lowercased last name of Seymour Cray, a noted
   computer architect and co-founder of the company. Numerous vivid
   legends surround him, some true and some admittedly invented by Cray
   Research brass to shape their corporate culture and image.
     _________________________________________________________________

   Node:cray instability, Next:[3224]crayola, Previous:[3225]cray,
   Up:[3226]= C =

   cray instability n.

   1. A shortcoming of a program or algorithm that manifests itself only
   when a large problem is being run on a powerful machine (see
   [3227]cray). Generally more subtle than bugs that can be detected in
   smaller problems running on a workstation or mini. 2. More
   specifically, a shortcoming of algorithms which are well behaved when
   run on gentle floating point hardware (such as IEEE-standard or
   PDP-series machines) but which break down badly when exposed to a
   Cray's unique `rounding' rules.
     _________________________________________________________________

   Node:crayola, Next:[3228]crayola books, Previous:[3229]cray
   instability, Up:[3230]= C =

   crayola /kray-oh'l*/ n.

   A super-mini or -micro computer that provides some reasonable
   percentage of supercomputer performance for an unreasonably low price.
   Might also be a [3231]killer micro.
     _________________________________________________________________

   Node:crayola books, Next:[3232]crayon, Previous:[3233]crayola,
   Up:[3234]= C =

   crayola books n.

   The [3235]rainbow series of National Computer Security Center (NCSC)
   computer security standards (see [3236]Orange Book). Usage: humorous
   and/or disparaging.
     _________________________________________________________________

   Node:crayon, Next:[3237]creationism, Previous:[3238]crayola books,
   Up:[3239]= C =

   crayon n.

   1. Someone who works on Cray supercomputers. More specifically, it
   implies a programmer, probably of the CDC ilk, probably male, and
   almost certainly wearing a tie (irrespective of gender). Systems types
   who have a Unix background tend not to be described as crayons. 2.
   Formerly, anyone who worked for Cray Research; since the buyout by
   SGI, anyone they inherited from Cray. 3. A [3240]computron (sense 2)
   that participates only in [3241]number-crunching. 4. A unit of
   computational power equal to that of a single Cray-1. There is a
   standard joke about this usage that derives from an old Crayola crayon
   promotional gimmick: When you buy 64 crayons you get a free sharpener.
     _________________________________________________________________

   Node:creationism, Next:[3242]creep, Previous:[3243]crayon, Up:[3244]=
   C =

   creationism n.

   The (false) belief that large, innovative software designs can be
   completely specified in advance and then painlessly magicked out of
   the void by the normal efforts of a team of normally talented
   programmers. In fact, experience has shown repeatedly that good
   designs arise only from evolutionary, exploratory interaction between
   one (or at most a small handful of) exceptionally able designer(s) and
   an active user population -- and that the first try at a big new idea
   is always wrong. Unfortunately, because these truths don't fit the
   planning models beloved of [3245]management, they are generally
   ignored.
     _________________________________________________________________

   Node:creep, Next:[3246]creeping elegance, Previous:[3247]creationism,
   Up:[3248]= C =

   creep v.

   To advance, grow, or multiply inexorably. In hackish usage this verb
   has overtones of menace and silliness, evoking the creeping horrors of
   low-budget monster movies.
     _________________________________________________________________

   Node:creeping elegance, Next:[3249]creeping featurism,
   Previous:[3250]creep, Up:[3251]= C =

   creeping elegance n.

   Describes a tendency for parts of a design to become [3252]elegant
   past the point of diminishing return, something which often happens at
   the expense of the less interesting parts of the design, the schedule,
   and other things deemed important in the [3253]Real World. See also
   [3254]creeping featurism, [3255]second-system effect, [3256]tense.
     _________________________________________________________________

   Node:creeping featurism, Next:[3257]creeping featuritis,
   Previous:[3258]creeping elegance, Up:[3259]= C =

   creeping featurism /kree'ping fee'chr-izm/ n.

   [common] 1. Describes a systematic tendency to load more [3260]chrome
   and [3261]features onto systems at the expense of whatever elegance
   they may have possessed when originally designed. See also
   [3262]feeping creaturism. "You know, the main problem with [3263]BSD
   Unix has always been creeping featurism." 2. More generally, the
   tendency for anything complicated to become even more complicated
   because people keep saying "Gee, it would be even better if it had
   this feature too". (See [3264]feature.) The result is usually a
   patchwork because it grew one ad-hoc step at a time, rather than being
   planned. Planning is a lot of work, but it's easy to add just one
   extra little feature to help someone ... and then another ... and
   another.... When creeping featurism gets out of hand, it's like a
   cancer. Usually this term is used to describe computer programs, but
   it could also be said of the federal government, the IRS 1040 form,
   and new cars. A similar phenomenon sometimes afflicts conscious
   redesigns; see [3265]second-system effect. See also [3266]creeping
   elegance.
     _________________________________________________________________

   Node:creeping featuritis, Next:[3267]cretin, Previous:[3268]creeping
   featurism, Up:[3269]= C =

   creeping featuritis /kree'ping fee'-chr-i:`t*s/ n.

   Variant of [3270]creeping featurism, with its own spoonerization:
   `feeping creaturitis'. Some people like to reserve this form for the
   disease as it actually manifests in software or hardware, as opposed
   to the lurking general tendency in designers' minds. (After all, -ism
   means `condition' or `pursuit of', whereas -itis usually means
   `inflammation of'.)
     _________________________________________________________________

   Node:cretin, Next:[3271]cretinous, Previous:[3272]creeping featuritis,
   Up:[3273]= C =

   cretin /kret'in/ or /kree'tn/ n.

   Congenital [3274]loser; an obnoxious person; someone who can't do
   anything right. It has been observed that many American hackers tend
   to favor the British pronunciation /kret'in/ over standard American
   /kree'tn/; it is thought this may be due to the insidious phonetic
   influence of Monty Python's Flying Circus.
     _________________________________________________________________

   Node:cretinous, Next:[3275]crippleware, Previous:[3276]cretin,
   Up:[3277]= C =

   cretinous /kret'n-*s/ or /kreet'n-*s/ adj.

   Wrong; stupid; non-functional; very poorly designed. Also used
   pejoratively of people. See [3278]dread high-bit disease for an
   example. Approximate synonyms: [3279]bletcherous, [3280]bagbiting
   [3281]losing, [3282]brain-damaged.
     _________________________________________________________________

   Node:crippleware, Next:[3283]critical mass, Previous:[3284]cretinous,
   Up:[3285]= C =

   crippleware n.

   1. [common] Software that has some important functionality
   deliberately removed, so as to entice potential users to pay for a
   working version. 2. [Cambridge] Variety of [3286]guiltware that
   exhorts you to donate to some charity (compare [3287]careware,
   [3288]nagware). 3. Hardware deliberately crippled, which can be
   upgraded to a more expensive model by a trivial change (e.g., cutting
   a jumper).

   An excellent example of crippleware (sense 3) is Intel's 486SX chip,
   which is a standard 486DX chip with the co-processor diked out (in
   some early versions it was present but disabled). To upgrade, you buy
   a complete 486DX chip with working co-processor (its identity thinly
   veiled by a different pinout) and plug it into the board's expansion
   socket. It then disables the SX, which becomes a fancy power sink.
   Don't you love Intel?
     _________________________________________________________________

   Node:critical mass, Next:[3289]crlf, Previous:[3290]crippleware,
   Up:[3291]= C =

   critical mass n.

   In physics, the minimum amount of fissionable material required to
   sustain a chain reaction. Of a software product, describes a condition
   of the software such that fixing one bug introduces one plus
   [3292]epsilon bugs. (This malady has many causes: [3293]creeping
   featurism, ports to too many disparate environments, poor initial
   design, etc.) When software achieves critical mass, it can never be
   fixed; it can only be discarded and rewritten.
     _________________________________________________________________

   Node:crlf, Next:[3294]crock, Previous:[3295]critical mass, Up:[3296]=
   C =

   crlf /ker'l*f/, sometimes /kru'l*f/ or /C-R-L-F/ n.

   (often capitalized as `CRLF') A carriage return (CR, ASCII 0001101)
   followed by a line feed (LF, ASCII 0001010). More loosely, whatever it
   takes to get you from the end of one line of text to the beginning of
   the next line. See [3297]newline, [3298]terpri. Under [3299]Unix
   influence this usage has become less common (Unix uses a bare line
   feed as its `CRLF').
     _________________________________________________________________

   Node:crock, Next:[3300]cross-post, Previous:[3301]crlf, Up:[3302]= C =

   crock n.

   [from the American scatologism `crock of shit'] 1. An awkward feature
   or programming technique that ought to be made cleaner. For example,
   using small integers to represent error codes without the program
   interpreting them to the user (as in, for example, Unix make(1), which
   returns code 139 for a process that dies due to [3303]segfault). 2. A
   technique that works acceptably, but which is quite prone to failure
   if disturbed in the least. For example, a too-clever programmer might
   write an assembler which mapped instruction mnemonics to numeric
   opcodes algorithmically, a trick which depends far too intimately on
   the particular bit patterns of the opcodes. (For another example of
   programming with a dependence on actual opcode values, see [3304]The
   Story of Mel in Appendix A.) Many crocks have a tightly woven, almost
   completely unmodifiable structure. See [3305]kluge, [3306]brittle. The
   adjectives `crockish' and `crocky', and the nouns `crockishness' and
   `crockitude', are also used.
     _________________________________________________________________

   Node:cross-post, Next:[3307]crossload, Previous:[3308]crock,
   Up:[3309]= C =

   cross-post vi.

   [Usenet; very common] To post a single article simultaneously to
   several newsgroups. Distinguished from posting the article repeatedly,
   once to each newsgroup, which causes people to see it multiple times
   (which is very bad form). Gratuitous cross-posting without a
   Followup-To line directing responses to a single followup group is
   frowned upon, as it tends to cause [3310]followup articles to go to
   inappropriate newsgroups when people respond to only one part of the
   original posting.
     _________________________________________________________________

   Node:crossload, Next:[3311]crudware, Previous:[3312]cross-post,
   Up:[3313]= C =

   crossload v.,n.

   [proposed, by analogy with [3314]upload and [3315]download] To move
   files between machines on a peer-to-peer network of nodes that act as
   both servers and clients for a distributed file store. Esp.
   appropriate for ananonymized networks like Gnutella and Freenet.
     _________________________________________________________________

   Node:crudware, Next:[3316]cruft, Previous:[3317]crossload, Up:[3318]=
   C =

   crudware /kruhd'weir/ n.

   Pejorative term for the hundreds of megabytes of low-quality
   [3319]freeware circulated by user's groups and BBS systems in the
   micro-hobbyist world. "Yet another set of disk catalog utilities for
   [3320]MS-DOS? What crudware!"
     _________________________________________________________________

   Node:cruft, Next:[3321]cruft together, Previous:[3322]crudware,
   Up:[3323]= C =

   cruft /kruhft/

   [very common; back-formation from [3324]crufty] 1. n. An unpleasant
   substance. The dust that gathers under your bed is cruft; the TMRC
   Dictionary correctly noted that attacking it with a broom only
   produces more. 2. n. The results of shoddy construction. 3. vt. [from
   `hand cruft', pun on `hand craft'] To write assembler code for
   something normally (and better) done by a compiler (see
   [3325]hand-hacking). 4. n. Excess; superfluous junk; used esp. of
   redundant or superseded code. 5. [University of Wisconsin] n. Cruft is
   to hackers as gaggle is to geese; that is, at UW one properly says "a
   cruft of hackers".
     _________________________________________________________________

   Node:cruft together, Next:[3326]cruftsmanship, Previous:[3327]cruft,
   Up:[3328]= C =

   cruft together vt.

   (also `cruft up') To throw together something ugly but temporarily
   workable. Like vt. [3329]kluge up, but more pejorative. "There isn't
   any program now to reverse all the lines of a file, but I can probably
   cruft one together in about 10 minutes." See [3330]hack together,
   [3331]hack up, [3332]kluge up, [3333]crufty.
     _________________________________________________________________

   Node:cruftsmanship, Next:[3334]crufty, Previous:[3335]cruft together,
   Up:[3336]= C =

   cruftsmanship /kruhfts'm*n-ship / n.

   [from [3337]cruft] The antithesis of craftsmanship.
     _________________________________________________________________

   Node:crufty, Next:[3338]crumb, Previous:[3339]cruftsmanship,
   Up:[3340]= C =

   crufty /kruhf'tee/ adj.

   [very common; origin unknown; poss. from `crusty' or `cruddy'] 1.
   Poorly built, possibly over-complex. The [3341]canonical example is
   "This is standard old crufty [3342]DEC software". In fact, one
   fanciful theory of the origin of `crufty' holds that was originally a
   mutation of `crusty' applied to DEC software so old that the `s'
   characters were tall and skinny, looking more like `f' characters. 2.
   Unpleasant, especially to the touch, often with encrusted junk. Like
   spilled coffee smeared with peanut butter and catsup. 3. Generally
   unpleasant. 4. (sometimes spelled `cruftie') n. A small crufty object
   (see [3343]frob); often one that doesn't fit well into the scheme of
   things. "A LISP property list is a good place to store crufties (or,
   collectively, [3344]random cruft)."

   This term is one of the oldest in the jargon and no one is sure of its
   etymology, but it is suggestive that there is a Cruft Hall at Harvard
   University which is part of the old physics building; it's said to
   have been the physics department's radar lab during WWII. To this day
   (early 1993) the windows appear to be full of random techno-junk. MIT
   or Lincoln Labs people may well have coined the term as a knock on the
   competition.
     _________________________________________________________________

   Node:crumb, Next:[3345]crunch, Previous:[3346]crufty, Up:[3347]= C =

   crumb n.

   Two binary digits; a [3348]quad. Larger than a [3349]bit, smaller than
   a [3350]nybble. Considered silly. Syn. [3351]tayste. General
   discussion of such terms is under [3352]nybble.
     _________________________________________________________________

   Node:crunch, Next:[3353]cryppie, Previous:[3354]crumb, Up:[3355]= C =

   crunch 1. vi.

   To process, usually in a time-consuming or complicated way. Connotes
   an essentially trivial operation that is nonetheless painful to
   perform. The pain may be due to the triviality's being embedded in a
   loop from 1 to 1,000,000,000. "FORTRAN programs do mostly
   [3356]number-crunching." 2. vt. To reduce the size of a file by a
   complicated scheme that produces bit configurations completely
   unrelated to the original data, such as by a Huffman code. (The file
   ends up looking something like a paper document would if somebody
   crunched the paper into a wad.) Since such compression usually takes
   more computations than simpler methods such as run-length encoding,
   the term is doubly appropriate. (This meaning is usually used in the
   construction `file crunch(ing)' to distinguish it from
   [3357]number-crunching.) See [3358]compress. 3. n. The character #.
   Used at XEROX and CMU, among other places. See [3359]ASCII. 4. vt. To
   squeeze program source into a minimum-size representation that will
   still compile or execute. The term came into being specifically for a
   famous program on the BBC micro that crunched BASIC source in order to
   make it run more quickly (it was a wholly interpretive BASIC, so the
   number of characters mattered). [3360]Obfuscated C Contest entries are
   often crunched; see the first example under that entry.
     _________________________________________________________________

   Node:cryppie, Next:[3361]CTSS, Previous:[3362]crunch, Up:[3363]= C =

   cryppie /krip'ee/ n.

   A cryptographer. One who hacks or implements cryptographic software or
   hardware.
     _________________________________________________________________

   Node:CTSS, Next:[3364]cube, Previous:[3365]cryppie, Up:[3366]= C =

   CTSS /C-T-S-S/ n.

   Compatible Time-Sharing System. An early (1963) experiment in the
   design of interactive time-sharing operating systems, ancestral to
   [3367]Multics, [3368]Unix, and [3369]ITS. The name [3370]ITS
   (Incompatible Time-sharing System) was a hack on CTSS, meant both as a
   joke and to express some basic differences in philosophy about the way
   I/O services should be presented to user programs.
     _________________________________________________________________

   Node:cube, Next:[3371]cubing, Previous:[3372]CTSS, Up:[3373]= C =

   cube n.

   1. [short for `cubicle'] A module in the open-plan offices used at
   many programming shops. "I've got the manuals in my cube." 2. A NeXT
   machine (which resembles a matte-black cube).
     _________________________________________________________________

   Node:cubing, Next:[3374]cup holder, Previous:[3375]cube, Up:[3376]= C
   =

   cubing vi.

   [parallel with `tubing'] 1. Hacking on an IPSC (Intel Personal
   SuperComputer) hypercube. "Louella's gone cubing again!!" 2. Hacking
   Rubik's Cube or related puzzles, either physically or mathematically.
   3. An indescribable form of self-torture (see sense 1 or 2).
     _________________________________________________________________

   Node:cup holder, Next:[3377]cursor dipped in X, Previous:[3378]cubing,
   Up:[3379]= C =

   cup holder n.

   The tray of a CD-ROM drive, or by extension the CD drive itself. So
   called because of a common tech support legend about the idiot who
   called to complain that the cup holder on his computer broke. A joke
   program was once distributed around the net called "cupholder.exe",
   which when run simply extended the CD drive tray. The humor of this
   was of course lost on people whose drive had a slot or a caddy
   instead.
     _________________________________________________________________

   Node:cursor dipped in X, Next:[3380]cuspy, Previous:[3381]cup holder,
   Up:[3382]= C =

   cursor dipped in X n.

   There are a couple of metaphors in English of the form `pen dipped in
   X' (perhaps the most common values of X are `acid', `bile', and
   `vitriol'). These map over neatly to this hackish usage (the cursor
   being what moves, leaving letters behind, when one is composing
   on-line). "Talk about a [3383]nastygram! He must've had his cursor
   dipped in acid when he wrote that one!"
     _________________________________________________________________

   Node:cuspy, Next:[3384]cut a tape, Previous:[3385]cursor dipped in X,
   Up:[3386]= C =

   cuspy /kuhs'pee/ adj.

   [WPI: from the [3387]DEC abbreviation CUSP, for `Commonly Used System
   Program', i.e., a utility program used by many people] 1. (of a
   program) Well-written. 2. Functionally excellent. A program that
   performs well and interfaces well to users is cuspy. See [3388]rude.
   3. [NYU] Said of an attractive woman, especially one regarded as
   available. Implies a certain curvaceousness.
     _________________________________________________________________

   Node:cut a tape, Next:[3389]cybercrud, Previous:[3390]cuspy,
   Up:[3391]= C =

   cut a tape vi.

   To write a software or document distribution on magnetic tape for
   shipment. Has nothing to do with physically cutting the medium! Early
   versions of this lexicon claimed that one never analogously speaks of
   `cutting a disk', but this has since been reported as live usage.
   Related slang usages are mainstream business's `cut a check', the
   recording industry's `cut a record', and the military's `cut an
   order'.

   All of these usages reflect physical processes in obsolete recording
   and duplication technologies. The first stage in manufacturing an
   old-style vinyl record involved cutting grooves in a stamping die with
   a precision lathe. More mundanely, the dominant technology for mass
   duplication of paper documents in pre-photocopying days involved
   "cutting a stencil", punching away portions of the wax overlay on a
   silk screen. More directly, paper tape with holes punched in it was an
   important early storage medium.
     _________________________________________________________________

   Node:cybercrud, Next:[3392]cyberpunk, Previous:[3393]cut a tape,
   Up:[3394]= C =

   cybercrud /si:'ber-kruhd/ n.

   1. [coined by Ted Nelson] Obfuscatory tech-talk. Verbiage with a high
   [3395]MEGO factor. The computer equivalent of bureaucratese. 2.
   Incomprehensible stuff embedded in email. First there were the
   "Received" headers that show how mail flows through systems, then MIME
   (Multi-purpose Internet Mail Extensions) headers and part boundaries,
   and now huge blocks of radix-64 for PEM (Privacy Enhanced Mail) or PGP
   (Pretty Good Privacy) digital signatures and certificates of
   authenticity. This stuff all services a purpose and good user
   interfaces should hide it, but all too often users are forced to wade
   through it.
     _________________________________________________________________

   Node:cyberpunk, Next:[3396]cyberspace, Previous:[3397]cybercrud,
   Up:[3398]= C =

   cyberpunk /si:'ber-puhnk/ n.,adj.

   [orig. by SF writer Bruce Bethke and/or editor Gardner Dozois] A
   subgenre of SF launched in 1982 by William Gibson's epoch-making novel
   "Neuromancer" (though its roots go back through Vernor Vinge's "True
   Names" (see the [3399]Bibliography in Appendix C) to John Brunner's
   1975 novel "The Shockwave Rider"). Gibson's near-total ignorance of
   computers and the present-day hacker culture enabled him to speculate
   about the role of computers and hackers in the future in ways hackers
   have since found both irritatingly naïve and tremendously stimulating.
   Gibson's work was widely imitated, in particular by the short-lived
   but innovative "Max Headroom" TV series. See [3400]cyberspace,
   [3401]ice, [3402]jack in, [3403]go flatline.

   Since 1990 or so, popular culture has included a movement or fashion
   trend that calls itself `cyberpunk', associated especially with the
   rave/techno subculture. Hackers have mixed feelings about this. On the
   one hand, self-described cyberpunks too often seem to be shallow
   trendoids in black leather who have substituted enthusiastic
   blathering about technology for actually learning and doing it.
   Attitude is no substitute for competence. On the other hand, at least
   cyberpunks are excited about the right things and properly respectful
   of hacking talent in those who have it. The general consensus is to
   tolerate them politely in hopes that they'll attract people who grow
   into being true hackers.
     _________________________________________________________________

   Node:cyberspace, Next:[3404]cycle, Previous:[3405]cyberpunk,
   Up:[3406]= C =

   cyberspace /si:'br-spays`/ n.

   1. Notional `information-space' loaded with visual cues and navigable
   with brain-computer interfaces called `cyberspace decks'; a
   characteristic prop of [3407]cyberpunk SF. Serious efforts to
   construct [3408]virtual reality interfaces modeled explicitly on
   Gibsonian cyberspace are under way, using more conventional devices
   such as glove sensors and binocular TV headsets. Few hackers are
   prepared to deny outright the possibility of a cyberspace someday
   evolving out of the network (see [3409]the network). 2. The Internet
   or [3410]Matrix (sense #2) as a whole, considered as a crude
   cyberspace (sense 1). Although this usage became widely popular in the
   mainstream press during 1994 when the Internet exploded into public
   awareness, it is strongly deprecated among hackers because the
   Internet does not meet the high, SF-inspired standards they have for
   true cyberspace technology. Thus, this use of the term usually tags a
   [3411]wannabee or outsider. Oppose [3412]meatspace. 3. Occasionally,
   the metaphoric location of the mind of a person in [3413]hack mode.
   Some hackers report experiencing strong eidetic imagery when in hack
   mode; interestingly, independent reports from multiple sources suggest
   that there are common features to the experience. In particular, the
   dominant colors of this subjective `cyberspace' are often gray and
   silver, and the imagery often involves constellations of marching
   dots, elaborate shifting patterns of lines and angles, or moire
   patterns.
     _________________________________________________________________

   Node:cycle, Next:[3414]cycle crunch, Previous:[3415]cyberspace,
   Up:[3416]= C =

   cycle

   1. n. The basic unit of computation. What every hacker wants more of
   (noted hacker Bill Gosper described himself as a "cycle junkie"). One
   can describe an instruction as taking so many `clock cycles'. Often
   the computer can access its memory once on every clock cycle, and so
   one speaks also of `memory cycles'. These are technical meanings of
   [3417]cycle. The jargon meaning comes from the observation that there
   are only so many cycles per second, and when you are sharing a
   computer the cycles get divided up among the users. The more cycles
   the computer spends working on your program rather than someone
   else's, the faster your program will run. That's why every hacker
   wants more cycles: so he can spend less time waiting for the computer
   to respond. 2. By extension, a notional unit of human thought power,
   emphasizing that lots of things compete for the typical hacker's think
   time. "I refused to get involved with the Rubik's Cube back when it
   was big. Knew I'd burn too many cycles on it if I let myself." 3. vt.
   Syn. [3418]bounce (sense 4), [3419]120 reset; from the phrase `cycle
   power'. "Cycle the machine again, that serial port's still hung."
     _________________________________________________________________

   Node:cycle crunch, Next:[3420]cycle drought, Previous:[3421]cycle,
   Up:[3422]= C =

   cycle crunch n.,obs.

   A situation wherein the number of people trying to use a computer
   simultaneously has reached the point where no one can get enough
   cycles because they are spread too thin and the system has probably
   begun to [3423]thrash. This scenario is an inevitable result of
   Parkinson's Law applied to timesharing. Usually the only solution is
   to buy more computer. Happily, this has rapidly become easier since
   the mid-1980s, so much so that the very term `cycle crunch' now has a
   faintly archaic flavor; most hackers now use workstations or personal
   computers as opposed to traditional timesharing systems, and are far
   more likely to complain of `bandwidth crunch' on their shared networks
   rather than cycle crunch.
     _________________________________________________________________

   Node:cycle drought, Next:[3424]cycle of reincarnation,
   Previous:[3425]cycle crunch, Up:[3426]= C =

   cycle drought n.

   A scarcity of cycles. It may be due to a [3427]cycle crunch, but it
   could also occur because part of the computer is temporarily not
   working, leaving fewer cycles to go around. "The [3428]high moby is
   [3429]down, so we're running with only half the usual amount of
   memory. There will be a cycle drought until it's fixed."
     _________________________________________________________________

   Node:cycle of reincarnation, Next:[3430]cycle server,
   Previous:[3431]cycle drought, Up:[3432]= C =

   cycle of reincarnation n.

   See [3433]wheel of reincarnation.
     _________________________________________________________________

   Node:cycle server, Next:[3434]cypherpunk, Previous:[3435]cycle of
   reincarnation, Up:[3436]= C =

   cycle server n.

   A powerful machine that exists primarily for running large compute-,
   disk-, or memory-intensive jobs (more formally called a `compute
   server'). Implies that interactive tasks such as editing are done on
   other machines on the network, such as workstations.
     _________________________________________________________________

   Node:cypherpunk, Next:[3437]C|N>K, Previous:[3438]cycle server,
   Up:[3439]= C =

   cypherpunk n.

   [from [3440]cyberpunk] Someone interested in the uses of encryption
   via electronic ciphers for enhancing personal privacy and guarding
   against tyranny by centralized, authoritarian power structures,
   especially government. There is an active cypherpunks mailing list at
   [3441]cypherpunks-request@toad.com coordinating work on public-key
   encryption freeware, privacy, and digital cash. See also
   [3442]tentacle.
     _________________________________________________________________

   Node:C|N>K, Next:[3443]D. C. Power Lab, Previous:[3444]cypherpunk,
   Up:[3445]= C =

   C|N>K n.

   [Usenet] Coffee through Nose to Keyboard; that is, "I laughed so hard
   I [3446]snarfed my coffee onto my keyboard.". Common on
   alt.fan.pratchett and [3447]scary devil monastery; recognized
   elsewhere. The [3448]Acronymphomania FAQ on alt.fan.pratchett
   recognizes variants such as T|N>K = `Tea through Nose to Keyboard' and
   C|N>S = `Coffee through Nose to Screen'.
     _________________________________________________________________

   Node:= D =, Next:[3449]= E =, Previous:[3450]= C =, Up:[3451]The
   Jargon Lexicon

= D =

     * [3452]D. C. Power Lab:
     * [3453]daemon:
     * [3454]daemon book:
     * [3455]dahmum:
     * [3456]dancing frog:
     * [3457]dangling pointer:
     * [3458]dark-side hacker:
     * [3459]Datamation:
     * [3460]DAU:
     * [3461]Dave the Resurrector:
     * [3462]day mode:
     * [3463]dd:
     * [3464]DDT:
     * [3465]de-rezz:
     * [3466]dead:
     * [3467]dead beef attack:
     * [3468]dead code:
     * [3469]dead link:
     * [3470]DEADBEEF:
     * [3471]deadlock:
     * [3472]deadly embrace:
     * [3473]death code:
     * [3474]Death Square:
     * [3475]Death Star:
     * [3476]DEC:
     * [3477]DEC:
     * [3478]DEC Wars:
     * [3479]decay:
     * [3480]deckle:
     * [3481]DED:
     * [3482]deep hack mode:
     * [3483]deep magic:
     * [3484]deep space:
     * [3485]defenestration:
     * [3486]defined as:
     * [3487]dehose:
     * [3488]deletia:
     * [3489]deliminator:
     * [3490]delint:
     * [3491]delta:
     * [3492]demented:
     * [3493]demigod:
     * [3494]demo:
     * [3495]demo mode:
     * [3496]demoeffect:
     * [3497]demogroup:
     * [3498]demon:
     * [3499]demon dialer:
     * [3500]demoparty:
     * [3501]demoscene:
     * [3502]dentro:
     * [3503]depeditate:
     * [3504]deprecated:
     * [3505]derf:
     * [3506]deserves to lose:
     * [3507]desk check:
     * [3508]despew:
     * [3509]Devil Book:
     * [3510]/dev/null:
     * [3511]dickless workstation:
     * [3512]dictionary flame:
     * [3513]diddle:
     * [3514]die:
     * [3515]die horribly:
     * [3516]diff:
     * [3517]digit:
     * [3518]dike:
     * [3519]Dilbert:
     * [3520]ding:
     * [3521]dink:
     * [3522]dinosaur:
     * [3523]dinosaur pen:
     * [3524]dinosaurs mating:
     * [3525]dirtball:
     * [3526]dirty power:
     * [3527]disclaimer:
     * [3528]Discordianism:
     * [3529]disk farm:
     * [3530]display hack:
     * [3531]dispress:
     * [3532]Dissociated Press:
     * [3533]distribution:
     * [3534]distro:
     * [3535]disusered:
     * [3536]do protocol:
     * [3537]doc:
     * [3538]documentation:
     * [3539]dodgy:
     * [3540]dogcow:
     * [3541]dogfood:
     * [3542]dogpile:
     * [3543]dogwash:
     * [3544]domainist:
     * [3545]Don't do that then!:
     * [3546]dongle:
     * [3547]dongle-disk:
     * [3548]donuts:
     * [3549]doorstop:
     * [3550]DoS attack:
     * [3551]dot file:
     * [3552]double bucky:
     * [3553]doubled sig:
     * [3554]down:
     * [3555]download:
     * [3556]DP:
     * [3557]DPB:
     * [3558]DPer:
     * [3559]Dr. Fred Mbogo:
     * [3560]dragon:
     * [3561]Dragon Book:
     * [3562]drain:
     * [3563]dread high-bit disease:
     * [3564]Dread Questionmark Disease:
     * [3565]DRECNET:
     * [3566]driver:
     * [3567]droid:
     * [3568]drone:
     * [3569]drool-proof paper:
     * [3570]drop on the floor:
     * [3571]drop-ins:
     * [3572]drop-outs:
     * [3573]drugged:
     * [3574]drum:
     * [3575]drunk mouse syndrome:
     * [3576]dub dub dub:
     * [3577]Duff's device:
     * [3578]dumb terminal:
     * [3579]dumbass attack:
     * [3580]dumbed down:
     * [3581]dump:
     * [3582]dumpster diving:
     * [3583]dup killer:
     * [3584]dup loop:
     * [3585]dusty deck:
     * [3586]DWIM:
     * [3587]dynner:
     _________________________________________________________________

   Node:D. C. Power Lab, Next:[3588]daemon, Previous:[3589]C|N>K,
   Up:[3590]= D =

   D. C. Power Lab n.

   The former site of [3591]SAIL. Hackers thought this was very funny
   because the obvious connection to electrical engineering was
   nonexistent -- the lab was named for a Donald C. Power. Compare
   [3592]Marginal Hacks.
     _________________________________________________________________

   Node:daemon, Next:[3593]daemon book, Previous:[3594]D. C. Power Lab,
   Up:[3595]= D =

   daemon /day'mn/ or /dee'mn/ n.

   [from the mythological meaning, later rationalized as the acronym
   `Disk And Execution MONitor'] A program that is not invoked
   explicitly, but lies dormant waiting for some condition(s) to occur.
   The idea is that the perpetrator of the condition need not be aware
   that a daemon is lurking (though often a program will commit an action
   only because it knows that it will implicitly invoke a daemon). For
   example, under [3596]ITS writing a file on the [3597]LPT spooler's
   directory would invoke the spooling daemon, which would then print the
   file. The advantage is that programs wanting (in this example) files
   printed need neither compete for access to nor understand any
   idiosyncrasies of the [3598]LPT. They simply enter their implicit
   requests and let the daemon decide what to do with them. Daemons are
   usually spawned automatically by the system, and may either live
   forever or be regenerated at intervals.

   Daemon and [3599]demon are often used interchangeably, but seem to
   have distinct connotations. The term `daemon' was introduced to
   computing by [3600]CTSS people (who pronounced it /dee'mon/) and used
   it to refer to what ITS called a [3601]dragon; the prototype was a
   program called DAEMON that automatically made tape backups of the file
   system. Although the meaning and the pronunciation have drifted, we
   think this glossary reflects current (2000) usage.
     _________________________________________________________________

   Node:daemon book, Next:[3602]dahmum, Previous:[3603]daemon, Up:[3604]=
   D =

   daemon book n.

   "The Design and Implementation of the 4.3BSD UNIX Operating System",
   by Samuel J. Leffler, Marshall Kirk McKusick, Michael J. Karels, and
   John S. Quarterman (Addison-Wesley Publishers, 1989, ISBN
   0-201-06196-1); or "The Design and Implementation of the 4.4 BSD
   Operating System" by Marshall Kirk McKusick, Keith Bostic, Michael J.
   Karels and John S. Quarterman (Addison-Wesley Longman, 1996, SBN
   0-201-54979-4) Either of the standard reference books on the internals
   of [3605]BSD Unix. So called because the covers have a picture
   depicting a little devil (a visual play on [3606]daemon) in sneakers,
   holding a pitchfork (referring to one of the characteristic features
   of Unix, the fork(2) system call). Also known as the [3607]Devil Book.
     _________________________________________________________________

   Node:dahmum, Next:[3608]dancing frog, Previous:[3609]daemon book,
   Up:[3610]= D =

   dahmum /dah'mum/ n.

   [Usenet] The material of which protracted [3611]flame wars, especially
   those about operating systems, is composed. Homeomorphic to
   [3612]spam. The term `dahmum' is derived from the name of a militant
   [3613]OS/2 advocate, and originated when an extensively crossposted
   OS/2-versus-[3614]Linux debate was fed through [3615]Dissociated
   Press.
     _________________________________________________________________

   Node:dancing frog, Next:[3616]dangling pointer, Previous:[3617]dahmum,
   Up:[3618]= D =

   dancing frog n.

   [Vancouver area] A problem that occurs on a computer that will not
   reappear while anyone else is watching. From the classic Warner
   Brothers cartoon "One Froggy Evening", featuring a dancing and singing
   Michigan J. Frog that just croaks when anyone else is around (now the
   WB network mascot).
     _________________________________________________________________

   Node:dangling pointer, Next:[3619]dark-side hacker,
   Previous:[3620]dancing frog, Up:[3621]= D =

   dangling pointer n.

   [common] A reference that doesn't actually lead anywhere (in C and
   some other languages, a pointer that doesn't actually point at
   anything valid). Usually this happens because it formerly pointed to
   something that has moved or disappeared. Used as jargon in a
   generalization of its techspeak meaning; for example, a local phone
   number for a person who has since moved to the other coast is a
   dangling pointer. Compare [3622]dead link.
     _________________________________________________________________

   Node:dark-side hacker, Next:[3623]Datamation, Previous:[3624]dangling
   pointer, Up:[3625]= D =

   dark-side hacker n.

   A criminal or malicious hacker; a [3626]cracker. From George Lucas's
   Darth Vader, "seduced by the dark side of the Force". The implication
   that hackers form a sort of elite of technological Jedi Knights is
   intended. Oppose [3627]samurai.
     _________________________________________________________________

   Node:Datamation, Next:[3628]DAU, Previous:[3629]dark-side hacker,
   Up:[3630]= D =

   Datamation /day`t*-may'sh*n/ n.

   A magazine that many hackers assume all [3631]suits read. Used to
   question an unbelieved quote, as in "Did you read that in
   `Datamation?'" (But see below; this slur may be dated by the time you
   read this.) It used to publish something hackishly funny every once in
   a while, like the original paper on [3632]COME FROM in 1973, and Ed
   Post's "Real Programmers Don't Use Pascal" ten years later, but for a
   long time after that it was much more exclusively [3633]suit-oriented
   and boring. Following a change of editorship in 1994, Datamation is
   trying for more of the technical content and irreverent humor that
   marked its early days.

   Datamation now has a WWW page at [3634]http://www.datamation.com worth
   visiting for its selection of computer humor, including "Real
   Programmers Don't Use Pascal" and the `Bastard Operator From Hell'
   stories by Simon Travaglia (see [3635]BOFH).
     _________________________________________________________________

   Node:DAU, Next:[3636]Dave the Resurrector, Previous:[3637]Datamation,
   Up:[3638]= D =

   DAU /dow/ n.

   [German FidoNet] German acronym for Dümmster Anzunehmender User
   (stupidest imaginable user). From the engineering-slang GAU for
   Grösster Anzunehmender Unfall, worst assumable accident, esp. of a LNG
   tank farm plant or something with similarly disastrous consequences.
   In popular German, GAU is used only to refer to worst-case nuclear
   acidents such as a core meltdown. See [3639]cretin, [3640]fool,
   [3641]loser and [3642]weasel.
     _________________________________________________________________

   Node:Dave the Resurrector, Next:[3643]day mode, Previous:[3644]DAU,
   Up:[3645]= D =

   Dave the Resurrector n.

   [Usenet; also abbreviated DtR] A [3646]cancelbot that cancels cancels.
   Dave the Resurrector originated when some [3647]spam-spewers decided
   to try to impede spam-fighting by wholesale cancellation of anti-spam
   coordination messages in the news.admin.net-abuse.usenet newsgroup.
     _________________________________________________________________

   Node:day mode, Next:[3648]dd, Previous:[3649]Dave the Resurrector,
   Up:[3650]= D =

   day mode n.

   See [3651]phase (sense 1). Used of people only.
     _________________________________________________________________

   Node:dd, Next:[3652]DDT, Previous:[3653]day mode, Up:[3654]= D =

   dd /dee-dee/ vt.

   [Unix: from IBM [3655]JCL] Equivalent to [3656]cat or [3657]BLT.
   Originally the name of a Unix copy command with special options
   suitable for block-oriented devices; it was often used in heavy-handed
   system maintenance, as in "Let's dd the root partition onto a tape,
   then use the boot PROM to load it back on to a new disk". The Unix
   dd(1) was designed with a weird, distinctly non-Unixy keyword option
   syntax reminiscent of IBM System/360 JCL (which had an elaborate DD
   `Dataset Definition' specification for I/O devices); though the
   command filled a need, the interface design was clearly a prank. The
   jargon usage is now very rare outside Unix sites and now nearly
   obsolete even there, as dd(1) has been [3658]deprecated for a long
   time (though it has no exact replacement). The term has been displaced
   by [3659]BLT or simple English `copy'.
     _________________________________________________________________

   Node:DDT, Next:[3660]de-rezz, Previous:[3661]dd, Up:[3662]= D =

   DDT /D-D-T/ n.

   [from the insecticide para-dichloro-diphenyl-trichloroethene] 1.
   Generic term for a program that assists in debugging other programs by
   showing individual machine instructions in a readable symbolic form
   and letting the user change them. In this sense the term DDT is now
   archaic, having been widely displaced by `debugger' or names of
   individual programs like adb, sdb, dbx, or gdb. 2. [ITS] Under MIT's
   fabled [3663]ITS operating system, DDT (running under the alias
   HACTRN, a six-letterism for `Hack Translator') was also used as the
   [3664]shell or top level command language used to execute other
   programs. 3. Any one of several specific DDTs (sense 1) supported on
   early [3665]DEC hardware and CP/M. The PDP-10 Reference Handbook
   (1969) contained a footnote on the first page of the documentation for
   DDT that illuminates the origin of the term:

     Historical footnote: DDT was developed at MIT for the PDP-1
     computer in 1961. At that time DDT stood for "DEC Debugging Tape".
     Since then, the idea of an on-line debugging program has propagated
     throughout the computer industry. DDT programs are now available
     for all DEC computers. Since media other than tape are now
     frequently used, the more descriptive name "Dynamic Debugging
     Technique" has been adopted, retaining the DDT abbreviation.
     Confusion between DDT-10 and another well known pesticide,
     dichloro-diphenyl-trichloroethane (C14-H9-Cl5) should be minimal
     since each attacks a different, and apparently mutually exclusive,
     class of bugs.

   (The `tape' referred to was, incidentally, not magnetic but paper.)
   Sadly, this quotation was removed from later editions of the handbook
   after the [3666]suits took over and [3667]DEC became much more
   `businesslike'.

   The history above is known to many old-time hackers. But there's more:
   Peter Samson, compiler of the original [3668]TMRC lexicon, reports
   that he named `DDT' after a similar tool on the TX-0 computer, the
   direct ancestor of the PDP-1 built at MIT's Lincoln Lab in 1957. The
   debugger on that ground-breaking machine (the first transistorized
   computer) rejoiced in the name FLIT (FLexowriter Interrogation Tape).
     _________________________________________________________________

   Node:de-rezz, Next:[3669]dead, Previous:[3670]DDT, Up:[3671]= D =

   de-rezz /dee-rez'/

   [from `de-resolve' via the movie "Tron"] (also `derez') 1. vi. To
   disappear or dissolve; the image that goes with it is of an object
   breaking up into raster lines and static and then dissolving.
   Occasionally used of a person who seems to have suddenly `fuzzed out'
   mentally rather than physically. Usage: extremely silly, also rare.
   This verb was actually invented as fictional hacker jargon, and
   adopted in a spirit of irony by real hackers years after the fact. 2.
   vt. The Macintosh resource decompiler. On a Macintosh, many program
   structures (including the code itself) are managed in small segments
   of the program file known as `resources'; `Rez' and `DeRez' are a pair
   of utilities for compiling and decompiling resource files. Thus,
   decompiling a resource is `derezzing'. Usage: very common.
     _________________________________________________________________

   Node:dead, Next:[3672]dead beef attack, Previous:[3673]de-rezz,
   Up:[3674]= D =

   dead adj.

   1. Non-functional; [3675]down; [3676]crashed. Especially used of
   hardware. 2. At XEROX PARC, software that is working but not
   undergoing continued development and support. 3. Useless;
   inaccessible. Antonym: `live'. Compare [3677]dead code.
     _________________________________________________________________

   Node:dead beef attack, Next:[3678]dead code, Previous:[3679]dead,
   Up:[3680]= D =

   dead beef attack n.

   [cypherpunks list, 1996] An attack on a public-key cryptosystem
   consisting of publishing a key having the same ID as another key (thus
   making it possible to spoof a user's identity if recipients aren't
   careful about verifying keys). In PGP and GPG the key ID is the last
   eight hex digits of (for RSA keys) the product of two primes. The
   attack was demonstrated by creating a key whose ID was 0xdeadbeef (see
   [3681]DEADBEEF).
     _________________________________________________________________

   Node:dead code, Next:[3682]dead link, Previous:[3683]dead beef attack,
   Up:[3684]= D =

   dead code n.

   Routines that can never be accessed because all calls to them have
   been removed, or code that cannot be reached because it is guarded by
   a control structure that provably must always transfer control
   somewhere else. The presence of dead code may reveal either logical
   errors due to alterations in the program or significant changes in the
   assumptions and environment of the program (see also [3685]software
   rot); a good compiler should report dead code so a maintainer can
   think about what it means. (Sometimes it simply means that an
   extremely defensive programmer has inserted [3686]can't happen tests
   which really can't happen -- yet.) Syn. [3687]grunge. See also
   [3688]dead, and [3689]The Story of Mel.
     _________________________________________________________________

   Node:dead link, Next:[3690]DEADBEEF, Previous:[3691]dead code,
   Up:[3692]= D =

   dead link n.

   [very common] A World-Wide-Web URL that no longer points to the
   information it was written to reach. Usually this happens because the
   document has been moved or deleted. Lots of dead links make a WWW page
   frustrating and useless and are the #1 sign of poor page maintainance.
   Compare [3693]dangling pointer, [3694]link rot.
     _________________________________________________________________

   Node:DEADBEEF, Next:[3695]deadlock, Previous:[3696]dead link,
   Up:[3697]= D =

   DEADBEEF /ded-beef/ n.

   The hexadecimal word-fill pattern for freshly allocated memory
   (decimal -21524111) under a number of IBM environments, including the
   RS/6000. Some modern debugging tools deliberately fill freed memory
   with this value as a way of converting [3698]heisenbugs into
   [3699]Bohr bugs. As in "Your program is DEADBEEF" (meaning gone,
   aborted, flushed from memory); if you start from an odd half-word
   boundary, of course, you have BEEFDEAD. See also the anecdote under
   [3700]fool and [3701]dead beef attack.
     _________________________________________________________________

   Node:deadlock, Next:[3702]deadly embrace, Previous:[3703]DEADBEEF,
   Up:[3704]= D =

   deadlock n.

   1. [techspeak] A situation wherein two or more processes are unable to
   proceed because each is waiting for one of the others to do something.
   A common example is a program communicating to a server, which may
   find itself waiting for output from the server before sending anything
   more to it, while the server is similarly waiting for more input from
   the controlling program before outputting anything. (It is reported
   that this particular flavor of deadlock is sometimes called a
   `starvation deadlock', though the term `starvation' is more properly
   used for situations where a program can never run simply because it
   never gets high enough priority. Another common flavor is
   `constipation', in which each process is trying to send stuff to the
   other but all buffers are full because nobody is reading anything.)
   See [3705]deadly embrace. 2. Also used of deadlock-like interactions
   between humans, as when two people meet in a narrow corridor, and each
   tries to be polite by moving aside to let the other pass, but they end
   up swaying from side to side without making any progress because they
   always move the same way at the same time.
     _________________________________________________________________

   Node:deadly embrace, Next:[3706]death code, Previous:[3707]deadlock,
   Up:[3708]= D =

   deadly embrace n.

   Same as [3709]deadlock, though usually used only when exactly two
   processes are involved. This is the more popular term in Europe, while
   [3710]deadlock predominates in the United States.
     _________________________________________________________________

   Node:death code, Next:[3711]Death Square, Previous:[3712]deadly
   embrace, Up:[3713]= D =

   death code n.

   A routine whose job is to set everything in the computer -- registers,
   memory, flags, everything -- to zero, including that portion of memory
   where it is running; its last act is to stomp on its own "store zero"
   instruction. Death code isn't very useful, but writing it is an
   interesting hacking challenge on architectures where the instruction
   set makes it possible, such as the PDP-8 (it has also been done on the
   DG Nova).

   Perhaps the ultimate death code is on the TI 990 series, where all
   registers are actually in RAM, and the instruction "store immediate 0"
   has the opcode "0". The PC will immediately wrap around core as many
   times as it can until a user hits HALT. Any empty memory location is
   death code. Worse, the manufacturer recommended use of this
   instruction in startup code (which would be in ROM and therefore
   survive).
     _________________________________________________________________

   Node:Death Square, Next:[3714]Death Star, Previous:[3715]death code,
   Up:[3716]= D =

   Death Square n.

   The corporate logo of Novell, the people who acquired USL after AT&T
   let go of it (Novell eventually sold the Unix group to SCO). Coined by
   analogy with [3717]Death Star, because many people believed Novell was
   bungling the lead in Unix systems exactly as AT&T did for many years.
     _________________________________________________________________

   Node:Death Star, Next:[3718]DEC, Previous:[3719]Death Square,
   Up:[3720]= D =

   Death Star n.

   [from the movie "Star Wars"] 1. The AT&T corporate logo, which appears
   on computers sold by AT&T and bears an uncanny resemblance to the
   Death Star in the movie. This usage is particularly common among
   partisans of [3721]BSD Unix, who tend to regard the AT&T versions as
   inferior and AT&T as a bad guy. Copies still circulate of a poster
   printed by Mt. Xinu showing a starscape with a space fighter labeled
   4.2 BSD streaking away from a broken AT&T logo wreathed in flames. 2.
   AT&T's internal magazine, "Focus", uses `death star' to describe an
   incorrectly done AT&T logo in which the inner circle in the top left
   is dark instead of light -- a frequent result of dark-on-light logo
   images.
     _________________________________________________________________

   Node:DEC, Next:[3722]DEC Wars, Previous:[3723]Death Star, Up:[3724]= D
   =

   DEC /dek/ n.

   1. v. Verbal (and only rarely written) shorthand for decrement, i.e.
   `decrease by one'. Especially used by assembly programmers, as many
   assembly languages have a dec mnemonic. Antonym: [3725]inc. 2. n.
   Commonly used abbreviation for Digital Equipment Corporation, later
   deprecated by DEC itself in favor of "Digital" and now entirely
   obsolete following the buyout by Compaq. Before the [3726]killer micro
   revolution of the late 1980s, hackerdom was closely symbiotic with
   DEC's pioneering timesharing machines. The first of the group of
   cultures described by this lexicon nucleated around the PDP-1 (see
   [3727]TMRC). Subsequently, the PDP-6, [3728]PDP-10, [3729]PDP-20,
   PDP-11 and [3730]VAX were all foci of large and important hackerdoms,
   and DEC machines long dominated the ARPANET and Internet machine
   population. DEC was the technological leader of the minicomputer era
   (roughly 1967 to 1987), but its failure to embrace microcomputers and
   Unix early cost it heavily in profits and prestige after [3731]silicon
   got cheap. Nevertheless, the microprocessor design tradition owes a
   major debt to the PDP-11 instruction set, and every one of the major
   general-purpose microcomputer OSs so far (CP/M, MS-DOS, Unix, OS/2,
   Windows NT) was either genetically descended from a DEC OS, or
   incubated on DEC hardware, or both. Accordingly, DEC was for many
   years still regarded with a certain wry affection even among many
   hackers too young to have grown up on DEC machines.

   DEC reclaimed some of its old reputation among techies in the first
   half of the 1990s. The success of the Alpha, an innovatively-designed
   and very high-performance [3732]killer micro, helped a lot. So did
   DEC's newfound receptiveness to Unix and open systems in general. When
   Compaq acquired DEC at the end of 1998 there was some concern that
   these gains would be lost along with the DEC nameplate, but the merged
   company has so far turned out to be culturally dominated by the ex-DEC
   side.
     _________________________________________________________________

   Node:DEC Wars, Next:[3733]decay, Previous:[3734]DEC, Up:[3735]= D =

   DEC Wars n.

   A 1983 [3736]Usenet posting by Alan Hastings and Steve Tarr spoofing
   the "Star Wars" movies in hackish terms. Some years later, ESR
   (disappointed by Hastings and Tarr's failure to exploit a great
   premise more thoroughly) posted a 3-times-longer complete rewrite
   called [3737]Unix WARS; the two are often confused.
     _________________________________________________________________

   Node:decay, Next:[3738]deckle, Previous:[3739]DEC Wars, Up:[3740]= D =

   decay n.,vi

   [from nuclear physics] An automatic conversion which is applied to
   most array-valued expressions in [3741]C; they `decay into'
   pointer-valued expressions pointing to the array's first element. This
   term is borderline techspeak, but is not used in the official standard
   for the language.
     _________________________________________________________________

   Node:deckle, Next:[3742]DED, Previous:[3743]decay, Up:[3744]= D =

   deckle /dek'l/ n.

   [from dec- and [3745]nybble; the original spelling seems to have been
   `decle'] Two [3746]nickles; 10 bits. Reported among developers for
   Mattel's GI 1600 (the Intellivision games processor), a chip with
   16-bit-wide RAM but 10-bit-wide ROM. See [3747]nybble for other such
   terms.
     _________________________________________________________________

   Node:DED, Next:[3748]deep hack mode, Previous:[3749]deckle, Up:[3750]=
   D =

   DED /D-E-D/ n.

   Dark-Emitting Diode (that is, a burned-out LED). Compare [3751]SED,
   [3752]LER, [3753]write-only memory. In the early 1970s both Signetics
   and Texas instruments released DED spec sheets as [3754]AFJs
   (suggested uses included "as a power-off indicator").
     _________________________________________________________________

   Node:deep hack mode, Next:[3755]deep magic, Previous:[3756]DED,
   Up:[3757]= D =

   deep hack mode n.

   See [3758]hack mode.
     _________________________________________________________________

   Node:deep magic, Next:[3759]deep space, Previous:[3760]deep hack mode,
   Up:[3761]= D =

   deep magic n.

   [poss. from C. S. Lewis's "Narnia" books] An awesomely arcane
   technique central to a program or system, esp. one neither generally
   published nor available to hackers at large (compare [3762]black art);
   one that could only have been composed by a true [3763]wizard.
   Compiler optimization techniques and many aspects of [3764]OS design
   used to be [3765]deep magic; many techniques in cryptography, signal
   processing, graphics, and AI still are. Compare [3766]heavy wizardry.
   Esp. found in comments of the form "Deep magic begins here...".
   Compare [3767]voodoo programming.
     _________________________________________________________________

   Node:deep space, Next:[3768]defenestration, Previous:[3769]deep magic,
   Up:[3770]= D =

   deep space n.

   1. Describes the notional location of any program that has gone
   [3771]off the trolley. Esp. used of programs that just sit there
   silently grinding long after either failure or some output is
   expected. "Uh oh. I should have gotten a prompt ten seconds ago. The
   program's in deep space somewhere." Compare [3772]buzz,
   [3773]catatonic, [3774]hyperspace. 2. The metaphorical location of a
   human so dazed and/or confused or caught up in some esoteric form of
   [3775]bogosity that he or she no longer responds coherently to normal
   communication. Compare [3776]page out.
     _________________________________________________________________

   Node:defenestration, Next:[3777]defined as, Previous:[3778]deep space,
   Up:[3779]= D =

   defenestration n.

   [mythically from a traditional Czech assasination method, via SF
   fandom] 1. Proper karmic retribution for an incorrigible punster. "Oh,
   ghod, that was awful!" "Quick! Defenestrate him!" 2. The act of
   exiting a window system in order to get better response time from a
   full-screen program. This comes from the dictionary meaning of
   `defenestrate', which is to throw something out a window. 3. The act
   of discarding something under the assumption that it will improve
   matters. "I don't have any disk space left." "Well, why don't you
   defenestrate that 100 megs worth of old core dumps?" 4. Under a GUI,
   the act of dragging something out of a window (onto the screen).
   "Next, defenestrate the MugWump icon." 5. The act of completely
   removing Micro$oft Windows from a PC in favor of a better OS
   (typically Linux).
     _________________________________________________________________

   Node:defined as, Next:[3780]dehose, Previous:[3781]defenestration,
   Up:[3782]= D =

   defined as adj.

   In the role of, usually in an organization-chart sense. "Pete is
   currently defined as bug prioritizer." Compare [3783]logical.
     _________________________________________________________________

   Node:dehose, Next:[3784]deletia, Previous:[3785]defined as, Up:[3786]=
   D =

   dehose /dee-hohz/ vt.

   To clear a [3787]hosed condition.
     _________________________________________________________________

   Node:deletia, Next:[3788]deliminator, Previous:[3789]dehose,
   Up:[3790]= D =

   deletia n. /d*-lee'sha/

   [USENET; common] In an email reply, material omitted from the quote of
   the original. Usually written rather than spoken; often appears as a
   pseudo-tag or ellipsis in the body of the reply, as "[deletia]" or
   "<deletia>".
     _________________________________________________________________

   Node:deliminator, Next:[3791]delint, Previous:[3792]deletia,
   Up:[3793]= D =

   deliminator /de-lim'-in-ay-t*r/ n.

   [portmanteau, delimiter + eliminate] A string or pattern used to
   delimit text into fields, but which is itself eliminated from the
   resulting list of fields. This jargon seems to have originated among
   Perl hackers in connection with the Perl split() function; however, it
   has been sighted in live use among Java and even Visual Basic
   programmers.
     _________________________________________________________________

   Node:delint, Next:[3794]delta, Previous:[3795]deliminator, Up:[3796]=
   D =

   delint /dee-lint/ v. obs.

   To modify code to remove problems detected when [3797]linting.
   Confusingly, this process is also referred to as `linting' code. This
   term is no longer in general use because ANSI C compilers typically
   issue compile-time warnings almost as detailed as lint warnings.
     _________________________________________________________________

   Node:delta, Next:[3798]demented, Previous:[3799]delint, Up:[3800]= D =

   delta n.

   1. [techspeak] A quantitative change, especially a small or
   incremental one (this use is general in physics and engineering). "I
   just doubled the speed of my program!" "What was the delta on program
   size?" "About 30 percent." (He doubled the speed of his program, but
   increased its size by only 30 percent.) 2. [Unix] A [3801]diff,
   especially a [3802]diff stored under the set of version-control tools
   called SCCS (Source Code Control System) or RCS (Revision Control
   System). 3. n. A small quantity, but not as small as [3803]epsilon.
   The jargon usage of [3804]delta and [3805]epsilon stems from the
   traditional use of these letters in mathematics for very small
   numerical quantities, particularly in `epsilon-delta' proofs in limit
   theory (as in the differential calculus). The term [3806]delta is
   often used, once [3807]epsilon has been mentioned, to mean a quantity
   that is slightly bigger than [3808]epsilon but still very small. "The
   cost isn't epsilon, but it's delta" means that the cost isn't totally
   negligible, but it is nevertheless very small. Common constructions
   include `within delta of --', `within epsilon of --': that is, `close
   to' and `even closer to'.
     _________________________________________________________________

   Node:demented, Next:[3809]demigod, Previous:[3810]delta, Up:[3811]= D
   =

   demented adj.

   Yet another term of disgust used to describe a malfunctioning program.
   The connotation in this case is that the program works as designed,
   but the design is bad. Said, for example, of a program that generates
   large numbers of meaningless error messages, implying that it is on
   the brink of imminent collapse. Compare [3812]wonky,
   [3813]brain-damaged, [3814]bozotic.
     _________________________________________________________________

   Node:demigod, Next:[3815]demo, Previous:[3816]demented, Up:[3817]= D =

   demigod n.

   A hacker with years of experience, a world-wide reputation, and a
   major role in the development of at least one design, tool, or game
   used by or known to more than half of the hacker community. To qualify
   as a genuine demigod, the person must recognizably identify with the
   hacker community and have helped shape it. Major demigods include Ken
   Thompson and Dennis Ritchie (co-inventors of [3818]Unix and [3819]C),
   Richard M. Stallman (inventor of [3820]EMACS), Larry Wall (inventor of
   [3821]Perl), Linus Torvalds (inventor of [3822]Linux), and most
   recently James Gosling (inventor of Java, [3823]NeWS, and
   [3824]GOSMACS) and Guido van Rossum (inventor of [3825]Python). In
   their hearts of hearts, most hackers dream of someday becoming
   demigods themselves, and more than one major software project has been
   driven to completion by the author's veiled hopes of apotheosis. See
   also [3826]net.god, [3827]true-hacker.
     _________________________________________________________________

   Node:demo, Next:[3828]demo mode, Previous:[3829]demigod, Up:[3830]= D
   =

   demo /de'moh/

   [short for `demonstration'] 1. v. To demonstrate a product or
   prototype. A far more effective way of inducing bugs to manifest than
   any number of [3831]test runs, especially when important people are
   watching. 2. n. The act of demoing. "I've gotta give a demo of the
   drool-proof interface; how does it work again?" 3. n. Esp. as `demo
   version', can refer either to an early, barely-functional version of a
   program which can be used for demonstration purposes as long as the
   operator uses exactly the right commands and skirts its numerous bugs,
   deficiencies, and unimplemented portions, or to a special version of a
   program (frequently with some features crippled) which is distributed
   at little or no cost to the user for enticement purposes. 4.
   [[3832]demoscene] A sequence of [3833]demoeffects (usually) combined
   with self-composed music and hand-drawn ("pixelated") graphics. These
   days (1997) usually built to attend a [3834]compo. Often called
   `eurodemos' outside Europe, as most of the [3835]demoscene activity
   seems to have gathered in northern Europe and especially Scandinavia.
   See also [3836]intro, [3837]dentro.
     _________________________________________________________________

   Node:demo mode, Next:[3838]demoeffect, Previous:[3839]demo, Up:[3840]=
   D =

   demo mode n.

   1. [Sun] The state of being [3841]heads down in order to finish code
   in time for a [3842]demo, usually due yesterday. 2. A mode in which
   video games sit by themselves running through a portion of the game,
   also known as `attract mode'. Some serious [3843]apps have a demo mode
   they use as a screen saver, or may go through a demo mode on startup
   (for example, the Microsoft Windows opening screen -- which lets you
   impress your neighbors without actually having to put up with
   [3844]Microsloth Windows).
     _________________________________________________________________

   Node:demoeffect, Next:[3845]demogroup, Previous:[3846]demo mode,
   Up:[3847]= D =

   demoeffect n.

   [[3848]demoscene] What among hackers is called a [3849]display hack.
   Classical effects include "plasma" (colorful mess), "keftales"
   (x*x+y*y and other similar patterns, usually combined with
   color-cycling), realtime fractals, realtime 3d graphics, etc.
   Historically, demo effects have cheated as much as possible to gain
   more speed and more complexity, using low-precision math and masses of
   assembler code and building animation realtime are three common
   tricks, but use of special hardware to fake effects is a [3850]Good
   Thing on the demoscene (though this is becoming less common as
   platforms like the Amiga fade away).
     _________________________________________________________________

   Node:demogroup, Next:[3851]demon, Previous:[3852]demoeffect,
   Up:[3853]= D =

   demogroup n.

   [[3854]demoscene] A group of [3855]demo (sense 4) composers. Job
   titles within a group include coders (the ones who write programs),
   graphicians (the ones who painstakingly pixelate the fine art),
   musicians (the music composers), [3856]sysops, traders/swappers (the
   ones who do the trading and other PR), and organizers (in larger
   groups). It is not uncommon for one person to do multiple jobs, but it
   has been observed that good coders are rarely good composers and vice
   versa. [How odd. Musical talent seems common among Internet/Unix
   hackers --ESR]
     _________________________________________________________________

   Node:demon, Next:[3857]demon dialer, Previous:[3858]demogroup,
   Up:[3859]= D =

   demon n.

   1. [MIT] A portion of a program that is not invoked explicitly, but
   that lies dormant waiting for some condition(s) to occur. See
   [3860]daemon. The distinction is that demons are usually processes
   within a program, while daemons are usually programs running on an
   operating system. 2. [outside MIT] Often used equivalently to
   [3861]daemon -- especially in the [3862]Unix world, where the latter
   spelling and pronunciation is considered mildly archaic.

   Demons in sense 1 are particularly common in AI programs. For example,
   a knowledge-manipulation program might implement inference rules as
   demons. Whenever a new piece of knowledge was added, various demons
   would activate (which demons depends on the particular piece of data)
   and would create additional pieces of knowledge by applying their
   respective inference rules to the original piece. These new pieces
   could in turn activate more demons as the inferences filtered down
   through chains of logic. Meanwhile, the main program could continue
   with whatever its primary task was.
     _________________________________________________________________

   Node:demon dialer, Next:[3863]demoparty, Previous:[3864]demon,
   Up:[3865]= D =

   demon dialer n.

   A program which repeatedly calls the same telephone number. Demon
   dialing may be benign (as when a number of communications programs
   contend for legitimate access to a [3866]BBS line) or malign (that is,
   used as a prank or denial-of-service attack). This term dates from the
   [3867]blue box days of the 1970s and early 1980s and is now
   semi-obsolescent among [3868]phreakers; see [3869]war dialer for its
   contemporary progeny.
     _________________________________________________________________

   Node:demoparty, Next:[3870]demoscene, Previous:[3871]demon dialer,
   Up:[3872]= D =

   demoparty n.

   [[3873]demoscene] Aboveground descendant of the [3874]copyparty, with
   emphasis shifted away from software piracy and towards [3875]compos.
   Smaller demoparties, for 100 persons or less, are held quite often,
   sometimes even once a month, and usually last for one to two days. On
   the other end of the scale, huge demo parties are held once a year
   (and four of these have grown very large and occur annually - Assembly
   in Finland, The Party in Denmark, The Gathering in Norway, and NAID
   somewhere in north America). These parties usually last for three to
   five days, have room for 3000-5000 people, and have a party network
   with connection to the internet.
     _________________________________________________________________

   Node:demoscene, Next:[3876]dentro, Previous:[3877]demoparty,
   Up:[3878]= D =

   demoscene /dem'oh-seen/

   [also `demo scene'] A culture of multimedia hackers located primarily
   in Scandinavia and northern Europe. Demoscene folklore recounts that
   when old-time [3879]warez d00dz cracked some piece of software they
   often added an advertisement of in the beginning, usually containing
   colorful [3880]display hacks with greetings to other cracking groups.
   The demoscene was born among people who decided building these display
   hacks is more interesting than hacking and began to build
   self-contained display hacks of considerable elaboration and beauty
   (within the culture such a hack is called a [3881]demo). The split
   seems to have happened at the end of the 1980s. As more of these
   [3882]demogroups emerged, they started to have [3883]compos at copying
   parties (see [3884]copyparty), which later evolved to standalone
   events (see [3885]demoparty). The demoscene has retained some traits
   from the [3886]warez d00dz, including their style of handles and group
   names and some of their jargon.

   Traditionally demos were written in assembly language, with lots of
   smart tricks, self-modifying code, undocumented op-codes and the like.
   Some time around 1995, people started coding demos in C, and a couple
   of years after that, they also started using Java.

   Ten years on (in 1998-1999), the demoscene is changing as its original
   platforms (C64, Amiga, Spectrum, Atari ST, IBM PC under DOS) die out
   and activity shifts towards Windows, Linux, and the Internet. While
   deeply underground in the past, demoscene is trying to get into the
   mainstream as accepted art form, and one symptom of this is the
   commercialization of bigger demoparties. Older demosceneers frown at
   this, but the majority think it's a good direction. Many demosceneers
   end up working in the computer game industry. Demoscene resource pages
   are available at [3887]http://www.oldskool.org/demos/explained/ and
   [3888]http://www.scene.org/.
     _________________________________________________________________

   Node:dentro, Next:[3889]depeditate, Previous:[3890]demoscene,
   Up:[3891]= D =

   dentro /den'troh/

   [[3892]demoscene] Combination of [3893]demo (sense 4) and [3894]intro.
   Other name mixings include intmo, dentmo etc. and are used usually
   when the authors are not quite sure whether the program is a
   [3895]demo or an [3896]intro. Special-purpose coinages like wedtro
   (some member of a group got married), invtro (invitation intro) etc.
   have also been sighted.
     _________________________________________________________________

   Node:depeditate, Next:[3897]deprecated, Previous:[3898]dentro,
   Up:[3899]= D =

   depeditate /dee-ped'*-tayt/ n.

   [by (faulty) analogy with `decapitate'] Humorously, to cut off the
   feet of. When one is using some computer-aided typesetting tools,
   careless placement of text blocks within a page or above a rule can
   result in chopped-off letter descenders. Such letters are said to have
   been depeditated.
     _________________________________________________________________

   Node:deprecated, Next:[3900]derf, Previous:[3901]depeditate,
   Up:[3902]= D =

   deprecated adj.

   Said of a program or feature that is considered obsolescent and in the
   process of being phased out, usually in favor of a specified
   replacement. Deprecated features can, unfortunately, linger on for
   many years. This term appears with distressing frequency in standards
   documents when the committees writing the documents realize that large
   amounts of extant (and presumably happily working) code depend on the
   feature(s) that have passed out of favor. See also [3903]dusty deck.

   [Usage note: don't confuse this word with `depreciate', or the verb
   form `deprecate' with `depreciated`. They are different words; see any
   dictionary for discussion.]
     _________________________________________________________________

   Node:derf, Next:[3904]deserves to lose, Previous:[3905]deprecated,
   Up:[3906]= D =

   derf /derf/ v.,n.

   [PLATO] The act of exploiting a terminal which someone else has
   absentmindedly left logged on, to use that person's account,
   especially to post articles intended to make an ass of the victim
   you're impersonating. It has been alleged that the term originated as
   a reversal of the name of the gentleman who most usually left himself
   vulnerable to it, who also happened to be the head of the department
   that handled PLATO at the University of Delaware.
     _________________________________________________________________

   Node:deserves to lose, Next:[3907]desk check, Previous:[3908]derf,
   Up:[3909]= D =

   deserves to lose adj.

   [common] Said of someone who willfully does the [3910]Wrong Thing;
   humorously, if one uses a feature known to be [3911]marginal. What is
   meant is that one deserves the consequences of one's [3912]losing
   actions. "Boy, anyone who tries to use [3913]mess-dos deserves to
   [3914]lose!" ([3915]ITS fans used to say the same thing of [3916]Unix;
   many still do.) See also [3917]screw, [3918]chomp, [3919]bagbiter.
     _________________________________________________________________

   Node:desk check, Next:[3920]despew, Previous:[3921]deserves to lose,
   Up:[3922]= D =

   desk check n.,v.

   To [3923]grovel over hardcopy of source code, mentally simulating the
   control flow; a method of catching bugs. No longer common practice in
   this age of on-screen editing, fast compiles, and sophisticated
   debuggers -- though some maintain stoutly that it ought to be. Compare
   [3924]eyeball search, [3925]vdiff, [3926]vgrep.
     _________________________________________________________________

   Node:despew, Next:[3927]Devil Book, Previous:[3928]desk check,
   Up:[3929]= D =

   despew /d*-spyoo'/ v.

   [Usenet] To automatically generate a large amount of garbage to the
   net, esp. from an automated posting program gone wild. See [3930]ARMM.
     _________________________________________________________________

   Node:Devil Book, Next:[3931]/dev/null, Previous:[3932]despew,
   Up:[3933]= D =

   Devil Book n.

   See [3934]daemon book, the term preferred by its authors.
     _________________________________________________________________

   Node:/dev/null, Next:[3935]dickless workstation, Previous:[3936]Devil
   Book, Up:[3937]= D =

   /dev/null /dev-nuhl/ n.

   [from the Unix null device, used as a data sink] A notional `black
   hole' in any information space being discussed, used, or referred to.
   A controversial posting, for example, might end "Kudos to
   rasputin@kremlin.org, flames to /dev/null". See [3938]bit bucket.
     _________________________________________________________________

   Node:dickless workstation, Next:[3939]dictionary flame,
   Previous:[3940]/dev/null, Up:[3941]= D =

   dickless workstation n.

   Extremely pejorative hackerism for `diskless workstation', a class of
   botches including the Sun 3/50 and other machines designed exclusively
   to network with an expensive central disk server. These combine all
   the disadvantages of time-sharing with all the disadvantages of
   distributed personal computers; typically, they cannot even [3942]boot
   themselves without help (in the form of some kind of
   [3943]breath-of-life packet) from the server.
     _________________________________________________________________

   Node:dictionary flame, Next:[3944]diddle, Previous:[3945]dickless
   workstation, Up:[3946]= D =

   dictionary flame n.

   [Usenet] An attempt to sidetrack a debate away from issues by
   insisting on meanings for key terms that presuppose a desired
   conclusion or smuggle in an implicit premise. A common tactic of
   people who prefer argument over definitions to disputes about reality.
   Compare [3947]spelling flame.
     _________________________________________________________________

   Node:diddle, Next:[3948]die, Previous:[3949]dictionary flame,
   Up:[3950]= D =

   diddle

   1. vt. To work with or modify in a not particularly serious manner. "I
   diddled a copy of [3951]ADVENT so it didn't double-space all the
   time." "Let's diddle this piece of code and see if the problem goes
   away." See [3952]tweak and [3953]twiddle. 2. n. The action or result
   of diddling. See also [3954]tweak, [3955]twiddle, [3956]frob.
     _________________________________________________________________

   Node:die, Next:[3957]die horribly, Previous:[3958]diddle, Up:[3959]= D
   =

   die v.

   Syn. [3960]crash. Unlike [3961]crash, which is used primarily of
   hardware, this verb is used of both hardware and software. See also
   [3962]go flatline, [3963]casters-up mode.
     _________________________________________________________________

   Node:die horribly, Next:[3964]diff, Previous:[3965]die, Up:[3966]= D =

   die horribly v.

   The software equivalent of [3967]crash and burn, and the preferred
   emphatic form of [3968]die. "The converter choked on an FF in its
   input and died horribly".
     _________________________________________________________________

   Node:diff, Next:[3969]digit, Previous:[3970]die horribly, Up:[3971]= D
   =

   diff /dif/ n.

   1. A change listing, especially giving differences between (and
   additions to) source code or documents (the term is often used in the
   plural `diffs'). "Send me your diffs for the Jargon File!" Compare
   [3972]vdiff. 2. Specifically, such a listing produced by the diff(1)
   command, esp. when used as specification input to the patch(1) utility
   (which can actually perform the modifications; see [3973]patch). This
   is a common method of distributing patches and source updates in the
   Unix/C world. 3. v. To compare (whether or not by use of automated
   tools on machine-readable files); see also [3974]vdiff, [3975]mod.
     _________________________________________________________________

   Node:digit, Next:[3976]dike, Previous:[3977]diff, Up:[3978]= D =

   digit n.,obs.

   An employee of Digital Equipment Corporation. See also [3979]VAX,
   [3980]VMS, [3981]PDP-10, [3982]TOPS-10, [3983]field circus.
     _________________________________________________________________

   Node:dike, Next:[3984]Dilbert, Previous:[3985]digit, Up:[3986]= D =

   dike vt.

   To remove or disable a portion of something, as a wire from a computer
   or a subroutine from a program. A standard slogan is "When in doubt,
   dike it out". (The implication is that it is usually more effective to
   attack software problems by reducing complexity than by increasing
   it.) The word `dikes' is widely used among mechanics and engineers to
   mean `diagonal cutters', esp. the heavy-duty metal-cutting version,
   but may also refer to a kind of wire-cutters used by electronics
   techs. To `dike something out' means to use such cutters to remove
   something. Indeed, the TMRC Dictionary defined dike as "to attack with
   dikes". Among hackers this term has been metaphorically extended to
   informational objects such as sections of code.
     _________________________________________________________________

   Node:Dilbert, Next:[3987]ding, Previous:[3988]dike, Up:[3989]= D =

   Dilbert

   n. Name and title character of a comic strip nationally syndicated in
   the U.S. and enormously popular among hackers. Dilbert is an
   archetypical engineer-nerd who works at an anonymous high-technology
   company; the strips present a lacerating satire of insane working
   conditions and idiotic [3990]management practices all too readily
   recognized by hackers. Adams, who spent nine years in [3991]cube
   4S700R at Pacific Bell (not [3992]DEC as often reported), often
   remarks that he has never been able to come up with a fictional
   management blunder that his correspondents didn't quickly either
   report to have actually happened or top with a similar but even more
   bizarre incident. In 1996 Adams distilled his insights into the
   collective psychology of businesses into an even funnier book, "The
   Dilbert Principle" (HarperCollins, ISBN 0-887-30787-6). See also
   [3993]pointy-haired, [3994]rat dance.
     _________________________________________________________________

   Node:ding, Next:[3995]dink, Previous:[3996]Dilbert, Up:[3997]= D =

   ding n.,vi.

   1. Synonym for [3998]feep. Usage: rare among hackers, but more common
   in the [3999]Real World. 2. `dinged': What happens when someone in
   authority gives you a minor bitching about something, esp. something
   trivial. "I was dinged for having a messy desk."
     _________________________________________________________________

   Node:dink, Next:[4000]dinosaur, Previous:[4001]ding, Up:[4002]= D =

   dink /dink/ adj.

   Said of a machine that has the [4003]bitty box nature; a machine too
   small to be worth bothering with -- sometimes the system you're
   currently forced to work on. First heard from an MIT hacker working on
   a CP/M system with 64K, in reference to any 6502 system, then from
   fans of 32-bit architectures about 16-bit machines. "GNUMACS will
   never work on that dink machine." Probably derived from mainstream
   `dinky', which isn't sufficiently pejorative. See [4004]macdink.
     _________________________________________________________________

   Node:dinosaur, Next:[4005]dinosaur pen, Previous:[4006]dink,
   Up:[4007]= D =

   dinosaur n.

   1. Any hardware requiring raised flooring and special power. Used
   especially of old minis and mainframes, in contrast with newer
   microprocessor-based machines. In a famous quote from the 1988 Unix
   EXPO, Bill Joy compared the liquid-cooled mainframe in the massive IBM
   display with a grazing dinosaur "with a truck outside pumping its
   bodily fluids through it". IBM was not amused. Compare [4008]big iron;
   see also [4009]mainframe. 2. [IBM] A very conservative user; a
   [4010]zipperhead.
     _________________________________________________________________

   Node:dinosaur pen, Next:[4011]dinosaurs mating,
   Previous:[4012]dinosaur, Up:[4013]= D =

   dinosaur pen n.

   A traditional [4014]mainframe computer room complete with raised
   flooring, special power, its own ultra-heavy-duty air conditioning,
   and a side order of Halon fire extinguishers. See [4015]boa.
     _________________________________________________________________

   Node:dinosaurs mating, Next:[4016]dirtball, Previous:[4017]dinosaur
   pen, Up:[4018]= D =

   dinosaurs mating n.

   Said to occur when yet another [4019]big iron merger or buyout occurs;
   reflects a perception by hackers that these signal another stage in
   the long, slow dying of the [4020]mainframe industry. In its glory
   days of the 1960s, it was `IBM and the Seven Dwarves': Burroughs,
   Control Data, General Electric, Honeywell, NCR, RCA, and Univac. RCA
   and GE sold out early, and it was `IBM and the Bunch' (Burroughs,
   Univac, NCR, Control Data, and Honeywell) for a while. Honeywell was
   bought out by Bull; Burroughs merged with Univac to form Unisys (in
   1984 -- this was when the phrase `dinosaurs mating' was coined); and
   in 1991 AT&T absorbed NCR (but spat it back out a few years later).
   Control Data still exists but is no longer in the mainframe business.
   More such earth-shaking unions of doomed giants seem inevitable.
     _________________________________________________________________

   Node:dirtball, Next:[4021]dirty power, Previous:[4022]dinosaurs
   mating, Up:[4023]= D =

   dirtball n.

   [XEROX PARC] A small, perhaps struggling outsider; not in the major or
   even the minor leagues. For example, "Xerox is not a dirtball
   company".

   [Outsiders often observe in the PARC culture an institutional
   arrogance which usage of this term exemplifies. The brilliance and
   scope of PARC's contributions to computer science have been such that
   this superior attitude is not much resented. --ESR]
     _________________________________________________________________

   Node:dirty power, Next:[4024]disclaimer, Previous:[4025]dirtball,
   Up:[4026]= D =

   dirty power n.

   Electrical mains voltage that is unfriendly to the delicate innards of
   computers. Spikes, [4027]drop-outs, average voltage significantly
   higher or lower than nominal, or just plain noise can all cause
   problems of varying subtlety and severity (these are collectively
   known as [4028]power hits).
     _________________________________________________________________

   Node:disclaimer, Next:[4029]Discordianism, Previous:[4030]dirty power,
   Up:[4031]= D =

   disclaimer n.

   [Usenet] Statement ritually appended to many Usenet postings
   (sometimes automatically, by the posting software) reiterating the
   fact (which should be obvious, but is easily forgotten) that the
   article reflects its author's opinions and not necessarily those of
   the organization running the machine through which the article entered
   the network.
     _________________________________________________________________

   Node:Discordianism, Next:[4032]disk farm, Previous:[4033]disclaimer,
   Up:[4034]= D =

   Discordianism /dis-kor'di-*n-ism/ n.

   The veneration of [4035]Eris, a.k.a. Discordia; widely popular among
   hackers. Discordianism was popularized by Robert Shea and Robert Anton
   Wilson's novel "Illuminatus!" as a sort of self-subverting Dada-Zen
   for Westerners -- it should on no account be taken seriously but is
   far more serious than most jokes. Consider, for example, the Fifth
   Commandment of the Pentabarf, from "Principia Discordia": "A
   Discordian is Prohibited of Believing What he Reads." Discordianism is
   usually connected with an elaborate conspiracy theory/joke involving
   millennia-long warfare between the anarcho-surrealist partisans of
   Eris and a malevolent, authoritarian secret society called the
   Illuminati. See [4036]Religion in Appendix B, [4037]Church of the
   SubGenius, and [4038]ha ha only serious.
     _________________________________________________________________

   Node:disk farm, Next:[4039]display hack, Previous:[4040]Discordianism,
   Up:[4041]= D =

   disk farm n.

   (also [4042]laundromat) A large room or rooms filled with disk drives
   (esp. [4043]washing machines).
     _________________________________________________________________

   Node:display hack, Next:[4044]dispress, Previous:[4045]disk farm,
   Up:[4046]= D =

   display hack n.

   A program with the same approximate purpose as a kaleidoscope: to make
   pretty pictures. Famous display hacks include [4047]munching squares,
   [4048]smoking clover, the BSD Unix rain(6) program, worms(6) on
   miscellaneous Unixes, and the [4049]X kaleid(1) program. Display hacks
   can also be implemented by creating text files containing numerous
   escape sequences for interpretation by a video terminal; one notable
   example displayed, on any VT100, a Christmas tree with twinkling
   lights and a toy train circling its base. The [4050]hack value of a
   display hack is proportional to the esthetic value of the images times
   the cleverness of the algorithm divided by the size of the code. Syn.
   [4051]psychedelicware.
     _________________________________________________________________

   Node:dispress, Next:[4052]Dissociated Press, Previous:[4053]display
   hack, Up:[4054]= D =

   dispress vt.

   [contraction of `Dissociated Press' due to eight-character MS-DOS
   filenames] To apply the [4055]Dissociated Press algorithm to a block
   of text. The resultant output is also referred to as a 'dispression'.
     _________________________________________________________________

   Node:Dissociated Press, Next:[4056]distribution,
   Previous:[4057]dispress, Up:[4058]= D =

   Dissociated Press n.

   [play on `Associated Press'; perhaps inspired by a reference in the
   1950 Bugs Bunny cartoon "What's Up, Doc?"] An algorithm for
   transforming any text into potentially humorous garbage even more
   efficiently than by passing it through a [4059]marketroid. The
   algorithm starts by printing any N consecutive words (or letters) in
   the text. Then at every step it searches for any random occurrence in
   the original text of the last N words (or letters) already printed and
   then prints the next word or letter. [4060]EMACS has a handy command
   for this. Here is a short example of word-based Dissociated Press
   applied to an earlier version of this Jargon File:

     wart: n. A small, crocky [4061]feature that sticks out of an array
     (C has no checks for this). This is relatively benign and easy to
     spot if the phrase is bent so as to be not worth paying attention
     to the medium in question.

   Here is a short example of letter-based Dissociated Press applied to
   the same source:

     window sysIWYG: n. A bit was named aften /bee't*/ prefer to use the
     other guy's re, especially in every cast a chuckle on neithout
     getting into useful informash speech makes removing a featuring a
     move or usage actual abstractionsidered interj. Indeed spectace
     logic or problem!

   A hackish idle pastime is to apply letter-based Dissociated Press to a
   random body of text and [4062]vgrep the output in hopes of finding an
   interesting new word. (In the preceding example, `window sysIWYG' and
   `informash' show some promise.) Iterated applications of Dissociated
   Press usually yield better results. Similar techniques called
   `travesty generators' have been employed with considerable satirical
   effect to the utterances of Usenet flamers; see [4063]pseudo.
     _________________________________________________________________

   Node:distribution, Next:[4064]distro, Previous:[4065]Dissociated
   Press, Up:[4066]= D =

   distribution n.

   1. A software source tree packaged for distribution; but see
   [4067]kit. Since about 1996 unqualified use of this term often implies
   `[4068]Linux distribution'. The short for [4069]distro is often used
   for this sense. 2. A vague term encompassing mailing lists and Usenet
   newsgroups (but not [4070]BBS [4071]fora); any topic-oriented message
   channel with multiple recipients. 3. An information-space domain
   (usually loosely correlated with geography) to which propagation of a
   Usenet message is restricted; a much-underutilized feature.
     _________________________________________________________________

   Node:distro, Next:[4072]disusered, Previous:[4073]distribution,
   Up:[4074]= D =

   distro n.

   Synonym for [4075]distribution, sense 1.
     _________________________________________________________________

   Node:disusered, Next:[4076]do protocol, Previous:[4077]distro,
   Up:[4078]= D =

   disusered adj.

   [Usenet] Said of a person whose account on a computer has been
   removed, esp. for cause rather than through normal attrition. "He got
   disusered when they found out he'd been cracking through the school's
   Internet access." The verbal form `disuser' is live but less common.
   Both usages probably derive from the DISUSER account status flag on
   VMS; setting it disables the account. Compare [4079]star out.
     _________________________________________________________________

   Node:do protocol, Next:[4080]doc, Previous:[4081]disusered, Up:[4082]=
   D =

   do protocol vi.

   [from network protocol programming] To perform an interaction with
   somebody or something that follows a clearly defined procedure. For
   example, "Let's do protocol with the check" at a restaurant means to
   ask for the check, calculate the tip and everybody's share, collect
   money from everybody, generate change as necessary, and pay the bill.
   See [4083]protocol.
     _________________________________________________________________

   Node:doc, Next:[4084]documentation, Previous:[4085]do protocol,
   Up:[4086]= D =

   doc /dok/ n.

   Common spoken and written shorthand for `documentation'. Often used in
   the plural `docs' and in the construction `doc file' (i.e.,
   documentation available on-line).
     _________________________________________________________________

   Node:documentation, Next:[4087]dodgy, Previous:[4088]doc, Up:[4089]= D
   =

   documentation n.

   The multiple kilograms of macerated, pounded, steamed, bleached, and
   pressed trees that accompany most modern software or hardware products
   (see also [4090]tree-killer). Hackers seldom read paper documentation
   and (too) often resist writing it; they prefer theirs to be terse and
   on-line. A common comment on this predilection is "You can't
   [4091]grep dead trees". See [4092]drool-proof paper, [4093]verbiage,
   [4094]treeware.
     _________________________________________________________________

   Node:dodgy, Next:[4095]dogcow, Previous:[4096]documentation,
   Up:[4097]= D =

   dodgy adj.

   Syn. with [4098]flaky. Preferred outside the U.S.
     _________________________________________________________________

   Node:dogcow, Next:[4099]dogfood, Previous:[4100]dodgy, Up:[4101]= D =

   dogcow /dog'kow/ n.

   See [4102]Moof. The dogcow is a semi-legendary creature that lurks in
   the depths of the Macintosh Technical Notes Hypercard stack V3.1. The
   full story of the dogcow is told in technical note #31 (the particular
   dogcow illustrated is properly named `Clarus'). Option-shift-click
   will cause it to emit a characteristic `Moof!' or `!fooM' sound.
   Getting to tech note 31 is the hard part; to discover how to do that,
   one must needs examine the stack script with a hackerly eye. Clue:
   [4103]rot13 is involved. A dogcow also appears if you choose `Page
   Setup...' with a LaserWriter selected and click on the `Options'
   button. It also lurks in other Mac printer drivers, notably those for
   the now-discontinued Style Writers. Sadly, Apple has removed the pages
   that used to describe the dogcow.
     _________________________________________________________________

   Node:dogfood, Next:[4104]dogpile, Previous:[4105]dogcow, Up:[4106]= D
   =

   dogfood n.

   [Microsoft, Netscape] Interim software used internally for testing.
   "To eat one's own dogfood" (from which the slang noun derives) means
   to use the software one is developing, as part of one's everyday
   development environment (the phrase is used outside Microsoft and
   Netscape). The practice is normal in the Linux community and
   elsewhere, but the term `dogfood' is seldom used as open-source betas
   tend to be quite tasty and nourishing. The idea is that developers who
   are using their own software will quickly learn what's missing or
   broken. Dogfood is typically not even of [4107]beta quality.
     _________________________________________________________________

   Node:dogpile, Next:[4108]dogwash, Previous:[4109]dogfood, Up:[4110]= D
   =

   dogpile v.

   [Usenet: prob. fr. mainstream "puppy pile"] When many people post
   unfriendly responses in short order to a single posting, they are
   sometimes said to "dogpile" or "dogpile on" the person to whom they're
   responding. For example, when a religious missionary posts a
   simplistic appeal to alt.atheism, he can expect to be dogpiled. It has
   been suggested that this derives from U.S, football slang for a tackle
   involving three or more people; among hackers, it seems at least as
   likely do derive from an `autobiographical' Bugs Bunny cartoon in
   which a gang of attacking canines actually yells "Dogpile on the
   rabbit!".
     _________________________________________________________________

   Node:dogwash, Next:[4111]domainist, Previous:[4112]dogpile, Up:[4113]=
   D =

   dogwash /dog'wosh/

   [From a quip in the `urgency' field of a very optional software change
   request, ca. 1982. It was something like "Urgency: Wash your dog
   first".] 1. n. A project of minimal priority, undertaken as an escape
   from more serious work. 2. v. To engage in such a project. Many games
   and much [4114]freeware get written this way.
     _________________________________________________________________

   Node:domainist, Next:[4115]Don't do that then!,
   Previous:[4116]dogwash, Up:[4117]= D =

   domainist /doh-mayn'ist/ adj.

   1. [Usenet, by pointed analogy with "sexist", "racist", etc.] Someone
   who judges people by the domain of their email addresses; esp. someone
   who dismisses anyone who posts from a public internet provider. "What
   do you expect from an article posted from aol.com?" 2. Said of an
   [4118]Internet address (as opposed to a [4119]bang path) because the
   part to the right of the @ specifies a nested series of `domains'; for
   example, [4120]esr@snark.thyrsus.com specifies the machine called
   snark in the subdomain called thyrsus within the top-level domain
   called com. See also [4121]big-endian, sense 2.

   The meaning of this term has drifted. At one time sense 2 was primary.
   In elder days it was also used of a site, mailer, or routing program
   which knew how to handle domainist addresses; or of a person (esp. a
   site admin) who preferred domain addressing, supported a domainist
   mailer, or proselytized for domainist addressing and disdained
   [4122]bang paths. These senses are now (1996) obsolete, as effectively
   all sites have converted.
     _________________________________________________________________

   Node:Don't do that then!, Next:[4123]dongle, Previous:[4124]domainist,
   Up:[4125]= D =

   Don't do that then! imp.

   [from an old doctor's office joke about a patient with a trivial
   complaint] Stock response to a user complaint. "When I type control-S,
   the whole system comes to a halt for thirty seconds." "Don't do that,
   then!" (or "So don't do that!"). Compare [4126]RTFM.

   Here's a classic example of "Don't do that then!" from Neil
   Stephenson's "In The Beginning Was The Command Line". A friend of his
   built a network with a load of Macs and a few high-powered database
   servers. He found that from time to time the whole network would lock
   up for no apparent reason. The problem was eventually tracked down to
   MacOS's cooperative multitasking: when a user held down the mouse
   button for too long, the network stack wouldn't get a chance to run...
     _________________________________________________________________

   Node:dongle, Next:[4127]dongle-disk, Previous:[4128]Don't do that
   then!, Up:[4129]= D =

   dongle /dong'gl/ n.

   1. [now obs.] A security or [4130]copy protection device for
   proprietary software consisting of a serialized EPROM and some drivers
   in a D-25 connector shell, which must be connected to an I/O port of
   the computer while the program is run. Programs that use a dongle
   query the port at startup and at programmed intervals thereafter, and
   terminate if it does not respond with the dongle's programmed
   validation code. Thus, users can make as many copies of the program as
   they want but must pay for each dongle. The idea was clever, but it
   was initially a failure, as users disliked tying up a serial port this
   way. By 1993, dongles would typically pass data through the port and
   monitor for [4131]magic codes (and combinations of status lines) with
   minimal if any interference with devices further down the line -- this
   innovation was necessary to allow daisy-chained dongles for multiple
   pieces of software. These devices have become rare as the industry has
   moved away from copy-protection schemes in general. 2. By extension,
   any physical electronic key or transferable ID required for a program
   to function. Common variations on this theme have used parallel or
   even joystick ports. See [4132]dongle-disk. 3. An adaptor cable mating
   a special edge-type connector on a PCMCIA or on-board Ethernet card to
   a standard RJ45 Ethernet jack. This usage seems to have surfaced in
   1999 and is now dominant. Laptop owners curse these things because
   they're notoriously easy to lose and the vendors commonly charge
   extortionate prices for replacements.

   [Note: in early 1992, advertising copy from Rainbow Technologies (a
   manufacturer of dongles) included a claim that the word derived from
   "Don Gall", allegedly the inventor of the device. The company's
   receptionist will cheerfully tell you that the story is a myth
   invented for the ad copy. Nevertheless, I expect it to haunt my life
   as a lexicographer for at least the next ten years. :-( --ESR]
     _________________________________________________________________

   Node:dongle-disk, Next:[4133]donuts, Previous:[4134]dongle, Up:[4135]=
   D =

   dongle-disk /don'gl disk/ n.

   A special floppy disk that is required in order to perform some task.
   Some contain special coding that allows an application to identify it
   uniquely, others are special code that does something that
   normally-resident programs don't or can't. (For example, AT&T's "Unix
   PC" would only come up in [4136]root mode with a special boot disk.)
   Also called a `key disk'. See [4137]dongle.
     _________________________________________________________________

   Node:donuts, Next:[4138]doorstop, Previous:[4139]dongle-disk,
   Up:[4140]= D =

   donuts n. obs.

   A collective noun for any set of memory bits. This usage is extremely
   archaic and may no longer be live jargon; it dates from the days of
   ferrite-[4141]core memories in which each bit was implemented by a
   doughnut-shaped magnetic flip-flop.
     _________________________________________________________________

   Node:doorstop, Next:[4142]DoS attack, Previous:[4143]donuts,
   Up:[4144]= D =

   doorstop n.

   Used to describe equipment that is non-functional and halfway expected
   to remain so, especially obsolete equipment kept around for political
   reasons or ostensibly as a backup. "When we get another Wyse-50 in
   here, that ADM 3 will turn into a doorstop." Compare [4145]boat
   anchor.
     _________________________________________________________________

   Node:DoS attack, Next:[4146]dot file, Previous:[4147]doorstop,
   Up:[4148]= D =

   DoS attack //

   [Usenet,common; note that it's unrelated to `DOS' as name of an
   operating system] Abbreviation for Denial-Of-Service attack. This
   abbreviation is most often used of attempts to shut down newsgroups
   with floods of [4149]spam, or to flood network links with large
   amounts of traffic, or to flood network links with large amounts of
   traffic, often by abusing network broadcast addresses Compare
   [4150]slashdot effect.
     _________________________________________________________________

   Node:dot file, Next:[4151]double bucky, Previous:[4152]DoS attack,
   Up:[4153]= D =

   dot file [Unix] n.

   A file that is not visible by default to normal directory-browsing
   tools (on Unix, files named with a leading dot are, by convention, not
   normally presented in directory listings). Many programs define one or
   more dot files in which startup or configuration information may be
   optionally recorded; a user can customize the program's behavior by
   creating the appropriate file in the current or home directory.
   (Therefore, dot files tend to [4154]creep -- with every nontrivial
   application program defining at least one, a user's home directory can
   be filled with scores of dot files, of course without the user's
   really being aware of it.) See also [4155]profile (sense 1), [4156]rc
   file.
     _________________________________________________________________

   Node:double bucky, Next:[4157]doubled sig, Previous:[4158]dot file,
   Up:[4159]= D =

   double bucky adj.

   Using both the CTRL and META keys. "The command to burn all LEDs is
   double bucky F."

   This term originated on the Stanford extended-ASCII keyboard, and was
   later taken up by users of the [4160]space-cadet keyboard at MIT. A
   typical MIT comment was that the Stanford [4161]bucky bits (control
   and meta shifting keys) were nice, but there weren't enough of them;
   you could type only 512 different characters on a Stanford keyboard.
   An obvious way to address this was simply to add more shifting keys,
   and this was eventually done; but a keyboard with that many shifting
   keys is hard on touch-typists, who don't like to move their hands away
   from the home position on the keyboard. It was half-seriously
   suggested that the extra shifting keys be implemented as pedals;
   typing on such a keyboard would be very much like playing a full pipe
   organ. This idea is mentioned in a parody of a very fine song by
   Jeffrey Moss called "Rubber Duckie", which was published in "The
   Sesame Street Songbook" (Simon and Schuster 1971, ISBN 0-671-21036-X).
   These lyrics were written on May 27, 1978, in celebration of the
   Stanford keyboard:
                        Double Bucky

        Double bucky, you're the one!
        You make my keyboard lots of fun.
            Double bucky, an additional bit or two:
        (Vo-vo-de-o!)
        Control and meta, side by side,
        Augmented ASCII, nine bits wide!
            Double bucky!  Half a thousand glyphs, plus a few!
                Oh,
                I sure wish that I
                Had a couple of
                    Bits more!
                Perhaps a
                Set of pedals to
                Make the number of
                    Bits four:
                Double double bucky!
        Double bucky, left and right
        OR'd together, outta sight!
            Double bucky, I'd like a whole word of
            Double bucky, I'm happy I heard of
            Double bucky, I'd like a whole word of you!

        --- The Great Quux (with apologies to Jeffrey Moss)

   [This, by the way, is an excellent example of computer [4162]filk
   --ESR] See also [4163]meta bit, [4164]cokebottle, and [4165]quadruple
   bucky.
     _________________________________________________________________

   Node:doubled sig, Next:[4166]down, Previous:[4167]double bucky,
   Up:[4168]= D =

   doubled sig [Usenet] n.

   A [4169]sig block that has been included twice in a [4170]Usenet
   article or, less commonly, in an electronic mail message. An article
   or message with a doubled sig can be caused by improperly configured
   software. More often, however, it reveals the author's lack of
   experience in electronic communication. See [4171]B1FF, [4172]pseudo.
     _________________________________________________________________

   Node:down, Next:[4173]download, Previous:[4174]doubled sig, Up:[4175]=
   D =

   down

   1. adj. Not operating. "The up escalator is down" is considered a
   humorous thing to say (unless of course you were expecting to use it),
   and "The elevator is down" always means "The elevator isn't working"
   and never refers to what floor the elevator is on. With respect to
   computers, this term has passed into the mainstream; the extension to
   other kinds of machine is still confined to techies (e.g. boiler
   mechanics may speak of a boiler being down). 2. `go down' vi. To stop
   functioning; usually said of the [4176]system. The message from the
   [4177]console that every hacker hates to hear from the operator is
   "System going down in 5 minutes". 3. `take down', `bring down' vt. To
   deactivate purposely, usually for repair work or [4178]PM. "I'm taking
   the system down to work on that bug in the tape drive." Occasionally
   one hears the word `down' by itself used as a verb in this vt. sense.
   See [4179]crash; oppose [4180]up.
     _________________________________________________________________

   Node:download, Next:[4181]DP, Previous:[4182]down, Up:[4183]= D =

   download vt.

   To transfer data or (esp.) code from a far-away system (especially a
   larger `host' system) over a digital communications link to a nearby
   system (especially a smaller `client' system. Oppose [4184]upload.

   Historical use of these terms was at one time associated with
   transfers from large timesharing machines to PCs or peripherals
   (download) and vice-versa (upload). The modern usage relative to the
   speaker (rather than as an indicator of the size and role of the
   machines) evolved as machine categories lost most of their former
   functional importance.
     _________________________________________________________________

   Node:DP, Next:[4185]DPB, Previous:[4186]download, Up:[4187]= D =

   DP /D-P/ n.

   1. Data Processing. Listed here because, according to hackers, use of
   the term marks one immediately as a [4188]suit. See [4189]DPer. 2.
   Common abbrev for [4190]Dissociated Press.
     _________________________________________________________________

   Node:DPB, Next:[4191]DPer, Previous:[4192]DP, Up:[4193]= D =

   DPB /d*-pib'/ vt.

   [from the PDP-10 instruction set] To plop something down in the
   middle. Usage: silly. "DPB yourself into that couch there." The
   connotation would be that the couch is full except for one slot just
   big enough for one last person to sit in. DPB means `DePosit Byte',
   and was the name of a PDP-10 instruction that inserts some bits into
   the middle of some other bits. Hackish usage has been kept alive by
   the Common LISP function of the same name.
     _________________________________________________________________

   Node:DPer, Next:[4194]Dr. Fred Mbogo, Previous:[4195]DPB, Up:[4196]= D
   =

   DPer /dee-pee-er/ n.

   Data Processor. Hackers are absolutely amazed that [4197]suits use
   this term self-referentially. Computers process data, not people! See
   [4198]DP.
     _________________________________________________________________

   Node:Dr. Fred Mbogo, Next:[4199]dragon, Previous:[4200]DPer,
   Up:[4201]= D =

   Dr. Fred Mbogo /*m-boh'goh, dok'tr fred/ n.

   [Stanford] The archetypal man you don't want to see about a problem,
   esp. an incompetent professional; a shyster. "Do you know a good eye
   doctor?" "Sure, try Mbogo Eye Care and Professional Dry Cleaning." The
   name comes from synergy between [4202]bogus and the original Dr.
   Mbogo, a witch doctor who was Gomez Addams' physician on the old
   "Addams Family" TV show. Interestingly enough, it turns out that under
   the rules for Swahili noun classes, `m-' is the characteristic prefix
   of "nouns referring to human beings". As such, "mbogo" is quite
   plausible as a Swahili coinage for a person having the nature of a
   [4203]bogon. Compare [4204]Bloggs Family and [4205]J. Random Hacker;
   see also [4206]Fred Foobar and [4207]fred.
     _________________________________________________________________

   Node:dragon, Next:[4208]Dragon Book, Previous:[4209]Dr. Fred Mbogo,
   Up:[4210]= D =

   dragon n.

   [MIT] A program similar to a [4211]daemon, except that it is not
   invoked at all, but is instead used by the system to perform various
   secondary tasks. A typical example would be an accounting program,
   which keeps track of who is logged in, accumulates load-average
   statistics, etc. Under ITS, many terminals displayed a list of people
   logged in, where they were, what they were running, etc., along with
   some random picture (such as a unicorn, Snoopy, or the Enterprise),
   which was generated by the `name dragon'. Usage: rare outside MIT --
   under Unix and most other OSes this would be called a `background
   demon' or [4212]daemon. The best-known Unix example of a dragon is
   cron(1). At SAIL, they called this sort of thing a `phantom'.
     _________________________________________________________________

   Node:Dragon Book, Next:[4213]drain, Previous:[4214]dragon, Up:[4215]=
   D =

   Dragon Book n.

   The classic text "Compilers: Principles, Techniques and Tools", by
   Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman (Addison-Wesley 1986;
   ISBN 0-201-10088-6), so called because of the cover design featuring a
   dragon labeled `complexity of compiler design' and a knight bearing
   the lance `LALR parser generator' among his other trappings. This one
   is more specifically known as the `Red Dragon Book' (1986); an earlier
   edition, sans Sethi and titled "Principles Of Compiler Design" (Alfred
   V. Aho and Jeffrey D. Ullman; Addison-Wesley, 1977; ISBN
   0-201-00022-9), was the `Green Dragon Book' (1977). (Also `New Dragon
   Book', `Old Dragon Book'.) The horsed knight and the Green Dragon were
   warily eying each other at a distance; now the knight is typing
   (wearing gauntlets!) at a terminal showing a video-game representation
   of the Red Dragon's head while the rest of the beast extends back in
   normal space. See also [4216]book titles.
     _________________________________________________________________

   Node:drain, Next:[4217]dread high-bit disease, Previous:[4218]Dragon
   Book, Up:[4219]= D =

   drain v.

   [IBM] Syn. for [4220]flush (sense 2). Has a connotation of finality
   about it; one speaks of draining a device before taking it offline.
     _________________________________________________________________

   Node:dread high-bit disease, Next:[4221]Dread Questionmark Disease,
   Previous:[4222]drain, Up:[4223]= D =

   dread high-bit disease n.

   A condition endemic to some now-obsolete computers and peripherals
   (including ASR-33 teletypes and PRIME minicomputers) that results in
   all characters having their high (0x80) bit forced on. This of course
   makes transporting files to other systems much more difficult, not to
   mention the problems these machines have talking with true 8-bit
   devices.

   This term was originally used specifically of PRIME (a.k.a. PR1ME)
   minicomputers. Folklore has it that PRIME adopted the reversed-8-bit
   convention in order to save 25 cents per serial line per machine;
   PRIME old-timers, on the other hand, claim they inherited the disease
   from Honeywell via customer NASA's compatibility requirements and
   struggled heroically to cure it. Whoever was responsible, this
   probably qualifies as one of the most [4224]cretinous design tradeoffs
   ever made. See [4225]meta bit.
     _________________________________________________________________

   Node:Dread Questionmark Disease, Next:[4226]DRECNET,
   Previous:[4227]dread high-bit disease, Up:[4228]= D =

   Dread Questionmark Disease

   n. The result of saving HTML from Microsoft Word or some other program
   that uses the nonstandard Microsoft variant of Latin-1; the symptom is
   that various of those nonstandard characters in positions 128-160 show
   up as questionmarks. The usual culprit is the misnamed `smart quotes'
   feature in Microsoft Word. For more details (and a program called
   `demoroniser' that cleans up the mess) see
   [4229]http://www.fourmilab.ch/webtools/demoroniser/.
     _________________________________________________________________

   Node:DRECNET, Next:[4230]driver, Previous:[4231]Dread Questionmark
   Disease, Up:[4232]= D =

   DRECNET /drek'net/ n.

   [from Yiddish/German `dreck', meaning filth] Deliberate distortion of
   DECNET, a networking protocol used in the [4233]VMS community. So
   called because [4234]DEC helped write the Ethernet specification and
   then (either stupidly or as a malignant customer-control tactic)
   violated that spec in the design of DRECNET in a way that made it
   incompatible. See also [4235]connector conspiracy.
     _________________________________________________________________

   Node:driver, Next:[4236]droid, Previous:[4237]DRECNET, Up:[4238]= D =

   driver n.

   1. The [4239]main loop of an event-processing program; the code that
   gets commands and dispatches them for execution. 2. [techspeak] In
   `device driver', code designed to handle a particular peripheral
   device such as a magnetic disk or tape unit. 3. In the TeX world and
   the computerized typesetting world in general, a program that
   translates some device-independent or other common format to something
   a real device can actually understand.
     _________________________________________________________________

   Node:droid, Next:[4240]drone, Previous:[4241]driver, Up:[4242]= D =

   droid n.

   [from `android', SF terminology for a humanoid robot of essentially
   biological (as opposed to mechanical/electronic) construction] A
   person (esp. a low-level bureaucrat or service-business employee)
   exhibiting most of the following characteristics: (a) naive trust in
   the wisdom of the parent organization or `the system'; (b) a
   blind-faith propensity to believe obvious nonsense emitted by
   authority figures (or computers!); (c) a rule-governed mentality, one
   unwilling or unable to look beyond the `letter of the law' in
   exceptional situations; (d) a paralyzing fear of official reprimand or
   worse if Procedures are not followed No Matter What; and (e) no
   interest in doing anything above or beyond the call of a very
   narrowly-interpreted duty, or in particular in fixing that which is
   broken; an "It's not my job, man" attitude.

   Typical droid positions include supermarket checkout assistant and
   bank clerk; the syndrome is also endemic in low-level government
   employees. The implication is that the rules and official procedures
   constitute software that the droid is executing; problems arise when
   the software has not been properly debugged. The term `droid
   mentality' is also used to describe the mindset behind this behavior.
   Compare [4243]suit, [4244]marketroid; see [4245]-oid.

   In England there is equivalent mainstream slang; a `jobsworth' is an
   obstructive, rule-following bureaucrat, often of the uniformed or
   suited variety. Named for the habit of denying a reasonable request by
   sucking his teeth and saying "Oh no, guv, sorry I can't help you:
   that's more than my job's worth".
     _________________________________________________________________

   Node:drone, Next:[4246]drool-proof paper, Previous:[4247]droid,
   Up:[4248]= D =

   drone n.

   Ignorant sales or customer service personnel in computer or
   electronics superstores. Characterized by a lack of even superficial
   knowledge about the products they sell, yet possessed of the
   conviction that they are more competent than their hacker customers.
   Usage: "That video board probably sucks, it was recommended by a drone
   at Fry's" In the year 2000, their natural habitats include Fry's
   Electronics, Best Buy, and CompUSA.
     _________________________________________________________________

   Node:drool-proof paper, Next:[4249]drop on the floor,
   Previous:[4250]drone, Up:[4251]= D =

   drool-proof paper n.

   Documentation that has been obsessively [4252]dumbed down, to the
   point where only a [4253]cretin could bear to read it, is said to have
   succumbed to the `drool-proof paper syndrome' or to have been `written
   on drool-proof paper'. For example, this is an actual quote from
   Apple's LaserWriter manual: "Do not expose your LaserWriter to open
   fire or flame." The SGI Indy manual is said to include the line "Do
   not dangle the mouse by the cord or throw it at coworkers.", but this
   sounds like parody.
     _________________________________________________________________

   Node:drop on the floor, Next:[4254]drop-ins,
   Previous:[4255]drool-proof paper, Up:[4256]= D =

   drop on the floor vt.

   To react to an error condition by silently discarding messages or
   other valuable data. "The gateway ran out of memory, so it just
   started dropping packets on the floor." Also frequently used of faulty
   mail and netnews relay sites that lose messages. See also [4257]black
   hole, [4258]bit bucket.
     _________________________________________________________________

   Node:drop-ins, Next:[4259]drop-outs, Previous:[4260]drop on the floor,
   Up:[4261]= D =

   drop-ins n.

   [prob. by analogy with [4262]drop-outs] Spurious characters appearing
   on a terminal or console as a result of line noise or a system
   malfunction of some sort. Esp. used when these are interspersed with
   one's own typed input. Compare [4263]drop-outs, sense 2.
     _________________________________________________________________

   Node:drop-outs, Next:[4264]drugged, Previous:[4265]drop-ins,
   Up:[4266]= D =

   drop-outs n.

   1. A variety of `power glitch' (see [4267]glitch); momentary 0 voltage
   on the electrical mains. 2. Missing characters in typed input due to
   software malfunction or system saturation (one cause of such behavior
   under Unix when a bad connection to a modem swamps the processor with
   spurious character interrupts; see [4268]screaming tty). 3. Mental
   glitches; used as a way of describing those occasions when the mind
   just seems to shut down for a couple of beats. See [4269]glitch,
   [4270]fried.
     _________________________________________________________________

   Node:drugged, Next:[4271]drum, Previous:[4272]drop-outs, Up:[4273]= D
   =

   drugged adj.

   (also `on drugs') 1. Conspicuously stupid, heading toward
   [4274]brain-damaged. Often accompanied by a pantomime of toking a
   joint. 2. Of hardware, very slow relative to normal performance.
     _________________________________________________________________

   Node:drum, Next:[4275]drunk mouse syndrome, Previous:[4276]drugged,
   Up:[4277]= D =

   drum adj, n.

   Ancient techspeak term referring to slow, cylindrical magnetic media
   that were once state-of-the-art storage devices. Under BSD Unix the
   disk partition used for swapping is still called /dev/drum; this has
   led to considerable humor and not a few straight-faced but utterly
   bogus `explanations' getting foisted on [4278]newbies. See also
   "[4279]The Story of Mel" in Appendix A.
     _________________________________________________________________

   Node:drunk mouse syndrome, Next:[4280]dub dub dub,
   Previous:[4281]drum, Up:[4282]= D =

   drunk mouse syndrome n.

   (also `mouse on drugs') A malady exhibited by the mouse pointing
   device of some computers. The typical symptom is for the mouse cursor
   on the screen to move in random directions and not in sync with the
   motion of the actual mouse. Can usually be corrected by unplugging the
   mouse and plugging it back again. Another recommended fix for optical
   mice is to rotate your mouse pad 90 degrees.

   At Xerox PARC in the 1970s, most people kept a can of copier cleaner
   (isopropyl alcohol) at their desks. When the steel ball on the mouse
   had picked up enough [4283]cruft to be unreliable, the mouse was
   doused in cleaner, which restored it for a while. However, this
   operation left a fine residue that accelerated the accumulation of
   cruft, so the dousings became more and more frequent. Finally, the
   mouse was declared `alcoholic' and sent to the clinic to be dried out
   in a CFC ultrasonic bath.
     _________________________________________________________________

   Node:dub dub dub, Next:[4284]Duff's device, Previous:[4285]drunk mouse
   syndrome, Up:[4286]= D =

   dub dub dub

   [common] Spoken-only shorthand for the "www" (double-u double-u
   double-u) in many web host names. Nothing to do with the style of
   reggae music called `dub'.
     _________________________________________________________________

   Node:Duff's device, Next:[4287]dumb terminal, Previous:[4288]dub dub
   dub, Up:[4289]= D =

   Duff's device n.

   The most dramatic use yet seen of [4290]fall through in C, invented by
   Tom Duff when he was at Lucasfilm. Trying to [4291]bum all the
   instructions he could out of an inner loop that copied data serially
   onto an output port, he decided to unroll it. He then realized that
   the unrolled version could be implemented by interlacing the
   structures of a switch and a loop:
   register n = (count + 7) / 8;      /* count > 0 assumed */

   switch (count % 8)
   {
   case 0:        do {  *to = *from++;
   case 7:              *to = *from++;
   case 6:              *to = *from++;
   case 5:              *to = *from++;
   case 4:              *to = *from++;
   case 3:              *to = *from++;
   case 2:              *to = *from++;
   case 1:              *to = *from++;
                      } while (--n > 0);
   }

   Shocking though it appears to all who encounter it for the first time,
   the device is actually perfectly valid, legal C. C's default
   [4292]fall through in case statements has long been its most
   controversial single feature; Duff observed that "This code forms some
   sort of argument in that debate, but I'm not sure whether it's for or
   against." Duff has discussed the device in detail at
   [4293]http://www.lysator.liu.se/c/duffs-device.html. Note that the
   omission of postfix ++ from *to was intentional (though confusing).
   Duff's device can be used to implement memory copy, but the original
   aim was to copy values serially into a magic IO register.

   [For maximal obscurity, the outermost pair of braces above could
   actually be removed -- GLS]
     _________________________________________________________________

   Node:dumb terminal, Next:[4294]dumbass attack, Previous:[4295]Duff's
   device, Up:[4296]= D =

   dumb terminal n.

   A terminal that is one step above a [4297]glass tty, having a
   minimally addressable cursor but no on-screen editing or other
   features normally supported by a [4298]smart terminal. Once upon a
   time, when glass ttys were common and addressable cursors were
   something special, what is now called a dumb terminal could pass for a
   smart terminal.
     _________________________________________________________________

   Node:dumbass attack, Next:[4299]dumbed down, Previous:[4300]dumb
   terminal, Up:[4301]= D =

   dumbass attack /duhm'as *-tak'/ n.

   [Purdue] Notional cause of a novice's mistake made by the experienced,
   especially one made while running as [4302]root under Unix, e.g.,
   typing rm -r * or mkfs on a mounted file system. Compare [4303]adger.
     _________________________________________________________________

   Node:dumbed down, Next:[4304]dump, Previous:[4305]dumbass attack,
   Up:[4306]= D =

   dumbed down adj.

   Simplified, with a strong connotation of oversimplified. Often, a
   [4307]marketroid will insist that the interfaces and documentation of
   software be dumbed down after the designer has burned untold gallons
   of midnight oil making it smart. This creates friction. See
   [4308]user-friendly.
     _________________________________________________________________

   Node:dump, Next:[4309]dumpster diving, Previous:[4310]dumbed down,
   Up:[4311]= D =

   dump n.

   1. An undigested and voluminous mass of information about a problem or
   the state of a system, especially one routed to the slowest available
   output device (compare [4312]core dump), and most especially one
   consisting of hex or octal [4313]runes describing the byte-by-byte
   state of memory, mass storage, or some file. In [4314]elder days,
   debugging was generally done by `groveling over' a dump (see
   [4315]grovel); increasing use of high-level languages and interactive
   debuggers has made such tedium uncommon, and the term `dump' now has a
   faintly archaic flavor. 2. A backup. This usage is typical only at
   large timesharing installations.
     _________________________________________________________________

   Node:dumpster diving, Next:[4316]dup killer, Previous:[4317]dump,
   Up:[4318]= D =

   dumpster diving /dump'-ster di:'-ving/ n.

   1. The practice of sifting refuse from an office or technical
   installation to extract confidential data, especially
   security-compromising information (`dumpster' is an Americanism for
   what is elsewhere called a `skip'). Back in AT&T's monopoly days,
   before paper shredders became common office equipment, phone phreaks
   (see [4319]phreaking) used to organize regular dumpster runs against
   phone company plants and offices. Discarded and damaged copies of AT&T
   internal manuals taught them much. The technique is still rumored to
   be a favorite of crackers operating against careless targets. 2. The
   practice of raiding the dumpsters behind buildings where producers
   and/or consumers of high-tech equipment are located, with the
   expectation (usually justified) of finding discarded but
   still-valuable equipment to be nursed back to health in some hacker's
   den. Experienced dumpster-divers not infrequently accumulate basements
   full of moldering (but still potentially useful) [4320]cruft.
     _________________________________________________________________

   Node:dup killer, Next:[4321]dup loop, Previous:[4322]dumpster diving,
   Up:[4323]= D =

   dup killer /d[y]oop kill'r/ n.

   [FidoNet] Software that is supposed to detect and delete duplicates of
   a message that may have reached the FidoNet system via different
   routes.
     _________________________________________________________________

   Node:dup loop, Next:[4324]dusty deck, Previous:[4325]dup killer,
   Up:[4326]= D =

   dup loop /d[y]oop loop/ (also `dupe loop') n.

   [FidoNet] An infinite stream of duplicated, near-identical messages on
   a FidoNet [4327]echo, the only difference being unique or mangled
   identification information applied by a faulty or incorrectly
   configured system or network gateway, thus rendering [4328]dup killers
   ineffective. If such a duplicate message eventually reaches a system
   through which it has already passed (with the original identification
   information), all systems passed on the way back to that system are
   said to be involved in a [4329]dup loop.
     _________________________________________________________________

   Node:dusty deck, Next:[4330]DWIM, Previous:[4331]dup loop, Up:[4332]=
   D =

   dusty deck n.

   Old software (especially applications) which one is obliged to remain
   compatible with, or to maintain ([4333]DP types call this `legacy
   code', a term hackers consider smarmy and excessively reverent). The
   term implies that the software in question is a holdover from
   card-punch days. Used esp. when referring to old scientific and
   [4334]number-crunching software, much of which was written in FORTRAN
   and very poorly documented but is believed to be too expensive to
   replace. See [4335]fossil; compare [4336]crawling horror.
     _________________________________________________________________

   Node:DWIM, Next:[4337]dynner, Previous:[4338]dusty deck, Up:[4339]= D
   =

   DWIM /dwim/

   [acronym, `Do What I Mean'] 1. adj. Able to guess, sometimes even
   correctly, the result intended when bogus input was provided. 2. n.
   obs. The BBNLISP/INTERLISP function that attempted to accomplish this
   feat by correcting many of the more common errors. See [4340]hairy. 3.
   Occasionally, an interjection hurled at a balky computer, esp. when
   one senses one might be tripping over legalisms (see [4341]legalese).
   4. Of a person, someone whose directions are incomprehensible and
   vague, but who nevertheless has the expectation that you will solve
   the problem using the specific method he/she has in mind.

   Warren Teitelman originally wrote DWIM to fix his typos and spelling
   errors, so it was somewhat idiosyncratic to his style, and would often
   make hash of anyone else's typos if they were stylistically different.
   Some victims of DWIM thus claimed that the acronym stood for `Damn
   Warren's Infernal Machine!'.

   In one notorious incident, Warren added a DWIM feature to the command
   interpreter used at Xerox PARC. One day another hacker there typed
   delete *$ to free up some disk space. (The editor there named backup
   files by appending $ to the original file name, so he was trying to
   delete any backup files left over from old editing sessions.) It
   happened that there weren't any editor backup files, so DWIM helpfully
   reported *$ not found, assuming you meant 'delete *'. It then started
   to delete all the files on the disk! The hacker managed to stop it
   with a [4342]Vulcan nerve pinch after only a half dozen or so files
   were lost.

   The disgruntled victim later said he had been sorely tempted to go to
   Warren's office, tie Warren down in his chair in front of his
   workstation, and then type delete *$ twice.

   DWIM is often suggested in jest as a desired feature for a complex
   program; it is also occasionally described as the single instruction
   the ideal computer would have. Back when proofs of program correctness
   were in vogue, there were also jokes about `DWIMC' (Do What I Mean,
   Correctly). A related term, more often seen as a verb, is DTRT (Do The
   Right Thing); see [4343]Right Thing.
     _________________________________________________________________

   Node:dynner, Next:[4344]earthquake, Previous:[4345]DWIM, Up:[4346]= D
   =

   dynner /din'r/ n.

   32 bits, by analogy with [4347]nybble and [4348]byte. Usage: rare and
   extremely silly. See also [4349]playte, [4350]tayste, [4351]crumb.
   General discussion of such terms is under [4352]nybble.
     _________________________________________________________________

   Node:= E =, Next:[4353]= F =, Previous:[4354]= D =, Up:[4355]The
   Jargon Lexicon

= E =

     * [4356]earthquake:
     * [4357]Easter egg:
     * [4358]Easter egging:
     * [4359]eat flaming death:
     * [4360]EBCDIC:
     * [4361]echo:
     * [4362]ECP:
     * [4363]ed:
     * [4364]egosurf:
     * [4365]eighty-column mind:
     * [4366]El Camino Bignum:
     * [4367]elder days:
     * [4368]elegant:
     * [4369]elephantine:
     * [4370]elevator controller:
     * [4371]elite:
     * [4372]ELIZA effect:
     * [4373]elvish:
     * [4374]EMACS:
     * [4375]email:
     * [4376]emoticon:
     * [4377]EMP:
     * [4378]empire:
     * [4379]engine:
     * [4380]English:
     * [4381]enhancement:
     * [4382]ENQ:
     * [4383]EOF:
     * [4384]EOL:
     * [4385]EOU:
     * [4386]epoch:
     * [4387]epsilon:
     * [4388]epsilon squared:
     * [4389]era the:
     * [4390]Eric Conspiracy:
     * [4391]Eris:
     * [4392]erotics:
     * [4393]error 33:
     * [4394]eurodemo:
     * [4395]evil:
     * [4396]evil and rude:
     * [4397]Evil Empire:
     * [4398]exa-:
     * [4399]examining the entrails:
     * [4400]EXCH:
     * [4401]excl:
     * [4402]EXE:
     * [4403]exec:
     * [4404]exercise left as an:
     * [4405]Exon:
     * [4406]Exploder:
     * [4407]exploit:
     * [4408]external memory:
     * [4409]eye candy:
     * [4410]eyeball search:
     _________________________________________________________________

   Node:earthquake, Next:[4411]Easter egg, Previous:[4412]dynner,
   Up:[4413]= E =

   earthquake n.

   [IBM] The ultimate real-world shock test for computer hardware.
   Hackish sources at IBM deny the rumor that the Bay Area quake of 1989
   was initiated by the company to test quality-assurance procedures at
   its California plants.
     _________________________________________________________________

   Node:Easter egg, Next:[4414]Easter egging, Previous:[4415]earthquake,
   Up:[4416]= E =

   Easter egg n.

   [from the custom of the Easter Egg hunt observed in the U.S. and many
   parts of Europe] 1. A message hidden in the object code of a program
   as a joke, intended to be found by persons disassembling or browsing
   the code. 2. A message, graphic, or sound effect emitted by a program
   (or, on a PC, the BIOS ROM) in response to some undocumented set of
   commands or keystrokes, intended as a joke or to display program
   credits. One well-known early Easter egg found in a couple of OSes
   caused them to respond to the command make love with not war?. Many
   personal computers have much more elaborate eggs hidden in ROM,
   including lists of the developers' names, political exhortations,
   snatches of music, and (in one case) graphics images of the entire
   development team.
     _________________________________________________________________

   Node:Easter egging, Next:[4417]eat flaming death,
   Previous:[4418]Easter egg, Up:[4419]= E =

   Easter egging n.

   [IBM] The act of replacing unrelated components more or less at random
   in hopes that a malfunction will go away. Hackers consider this the
   normal operating mode of [4420]field circus techs and do not love them
   for it. See also the jokes under [4421]field circus. Compare
   [4422]shotgun debugging.
     _________________________________________________________________

   Node:eat flaming death, Next:[4423]EBCDIC, Previous:[4424]Easter
   egging, Up:[4425]= E =

   eat flaming death imp.

   A construction popularized among hackers by the infamous [4426]CPU
   Wars comic; supposedly derive from a famously turgid line in a
   WWII-era anti-Nazi propaganda comic that ran "Eat flaming death,
   non-Aryan mongrels!" or something of the sort (however, it is also
   reported that the Firesign Theatre's 1975 album "In The Next World,
   You're On Your Own" a character won the right to scream "Eat flaming
   death, fascist media pigs" in the middle of Oscar night on a game
   show; this may have been an influence). Used in humorously overblown
   expressions of hostility. "Eat flaming death, [4427]EBCDIC users!"
     _________________________________________________________________

   Node:EBCDIC, Next:[4428]echo, Previous:[4429]eat flaming death,
   Up:[4430]= E =

   EBCDIC /eb's*-dik/, /eb'see`dik/, or /eb'k*-dik/ n.

   [abbreviation, Extended Binary Coded Decimal Interchange Code] An
   alleged character set used on IBM [4431]dinosaurs. It exists in at
   least six mutually incompatible versions, all featuring such delights
   as non-contiguous letter sequences and the absence of several ASCII
   punctuation characters fairly important for modern computer languages
   (exactly which characters are absent varies according to which version
   of EBCDIC you're looking at). IBM adapted EBCDIC from [4432]punched
   card code in the early 1960s and promulgated it as a customer-control
   tactic (see [4433]connector conspiracy), spurning the already
   established ASCII standard. Today, IBM claims to be an open-systems
   company, but IBM's own description of the EBCDIC variants and how to
   convert between them is still internally classified top-secret,
   burn-before-reading. Hackers blanch at the very name of EBCDIC and
   consider it a manifestation of purest [4434]evil. See also [4435]fear
   and loathing.
     _________________________________________________________________

   Node:echo, Next:[4436]ECP, Previous:[4437]EBCDIC, Up:[4438]= E =

   echo [FidoNet] n.

   A [4439]topic group on [4440]FidoNet's echomail system. Compare
   [4441]newsgroup.
     _________________________________________________________________

   Node:ECP, Next:[4442]ed, Previous:[4443]echo, Up:[4444]= E =

   ECP /E-C-P/ n.

   See [4445]spam and [4446]velveeta.
     _________________________________________________________________

   Node:ed, Next:[4447]egosurf, Previous:[4448]ECP, Up:[4449]= E =

   ed n.

   "ed is the standard text editor." Line taken from original the
   [4450]Unix manual page on ed, an ancient line-oriented editor that is
   by now used only by a few [4451]Real Programmers, and even then only
   for batch operations. The original line is sometimes uttered near the
   beginning of an emacs vs. vi holy war on [4452]Usenet, with the (vain)
   hope to quench the discussion before it really takes off. Often
   followed by a standard text describing the many virtues of ed (such as
   the small memory [4453]footprint on a Timex Sinclair, and the
   consistent (because nearly non-existent) user interface).
     _________________________________________________________________

   Node:egosurf, Next:[4454]eighty-column mind, Previous:[4455]ed,
   Up:[4456]= E =

   egosurf vi.

   To search the net for your name or links to your web pages. Perhaps
   connected to long-established SF-fan slang `egoscan', to search for
   one's name in a fanzine.
     _________________________________________________________________

   Node:eighty-column mind, Next:[4457]El Camino Bignum,
   Previous:[4458]egosurf, Up:[4459]= E =

   eighty-column mind n.

   [IBM] The sort said to be possessed by persons for whom the transition
   from [4460]punched card to tape was traumatic (nobody has dared tell
   them about disks yet). It is said that these people, including
   (according to an old joke) the founder of IBM, will be buried `face
   down, 9-edge first' (the 9-edge being the bottom of the card). This
   directive is inscribed on IBM's 1402 and 1622 card readers and is
   referenced in a famous bit of doggerel called "The Last Bug", the
   climactic lines of which are as follows:
   He died at the console
   Of hunger and thirst.
   Next day he was buried,
   Face down, 9-edge first.

   The eighty-column mind was thought by most hackers to dominate IBM's
   customer base and its thinking. This only began to change in the
   mid-1990s when IBM began to reinvent itself after the triumph of the
   [4461]killer micro. See [4462]IBM, [4463]fear and loathing, [4464]card
   walloper. A copy of "The Last Bug" lives on the the GNU site at
   [4465]http://www.gnu.org/fun/jokes/last.bug.html.
     _________________________________________________________________

   Node:El Camino Bignum, Next:[4466]elder days,
   Previous:[4467]eighty-column mind, Up:[4468]= E =

   El Camino Bignum /el' k*-mee'noh big'nuhm/ n.

   The road mundanely called El Camino Real, running along San Francisco
   peninsula. It originally extended all the way down to Mexico City;
   many portions of the old road are still intact. Navigation on the San
   Francisco peninsula is usually done relative to El Camino Real, which
   defines [4469]logical north and south even though it isn't really
   north-south in many places. El Camino Real runs right past Stanford
   University and so is familiar to hackers.

   The Spanish word `real' (which has two syllables: /ray-ahl'/) means
   `royal'; El Camino Real is `the royal road'. In the FORTRAN language,
   a `real' quantity is a number typically precise to seven significant
   digits, and a `double precision' quantity is a larger floating-point
   number, precise to perhaps fourteen significant digits (other
   languages have similar `real' types).

   When a hacker from MIT visited Stanford in 1976, he remarked what a
   long road El Camino Real was. Making a pun on `real', he started
   calling it `El Camino Double Precision' -- but when the hacker was
   told that the road was hundreds of miles long, he renamed it `El
   Camino Bignum', and that name has stuck. (See [4470]bignum.)

   [GLS has since let slip that the unnamed hacker in this story was in
   fact himself --ESR]

   In recent years, the synonym `El Camino Virtual' has been reported as
   an alternate at IBM and Amdahl sites in the Valley. Mathematically
   literate hackers in the Valley have also been heard to refer to some
   major cross-street intersecting El Camino Real as "El Camino
   Imaginary". One popular theory is that the intersection is located
   near Moffett Field - where they keep all those complex planes.
     _________________________________________________________________

   Node:elder days, Next:[4471]elegant, Previous:[4472]El Camino Bignum,
   Up:[4473]= E =

   elder days n.

   The heroic age of hackerdom (roughly, pre-1980); the era of the
   [4474]PDP-10, [4475]TECO, [4476]ITS, and the ARPANET. This term has
   been rather consciously adopted from J. R. R. Tolkien's fantasy epic
   "The Lord of the Rings". Compare [4477]Iron Age; see also [4478]elvish
   and [4479]Great Worm.
     _________________________________________________________________

   Node:elegant, Next:[4480]elephantine, Previous:[4481]elder days,
   Up:[4482]= E =

   elegant adj.

   [common; from mathematical usage] Combining simplicity, power, and a
   certain ineffable grace of design. Higher praise than `clever',
   `winning', or even [4483]cuspy.

   The French aviator, adventurer, and author Antoine de Saint-Exupéry,
   probably best known for his classic children's book "The Little
   Prince", was also an aircraft designer. He gave us perhaps the best
   definition of engineering elegance when he said "A designer knows he
   has achieved perfection not when there is nothing left to add, but
   when there is nothing left to take away."
     _________________________________________________________________

   Node:elephantine, Next:[4484]elevator controller,
   Previous:[4485]elegant, Up:[4486]= E =

   elephantine adj.

   Used of programs or systems that are both conspicuous [4487]hogs
   (owing perhaps to poor design founded on [4488]brute force and
   ignorance) and exceedingly [4489]hairy in source form. An elephantine
   program may be functional and even friendly, but (as in the old joke
   about being in bed with an elephant) it's tough to have around all the
   same (and, like a pachyderm, difficult to maintain). In extreme cases,
   hackers have been known to make trumpeting sounds or perform
   expressive proboscatory mime at the mention of the offending program.
   Usage: semi-humorous. Compare `has the elephant nature' and the
   somewhat more pejorative [4490]monstrosity. See also
   [4491]second-system effect and [4492]baroque.
     _________________________________________________________________

   Node:elevator controller, Next:[4493]elite,
   Previous:[4494]elephantine, Up:[4495]= E =

   elevator controller n.

   An archetypal dumb embedded-systems application, like [4496]toaster
   (which superseded it). During one period (1983-84) in the
   deliberations of ANSI X3J11 (the C standardization committee) this was
   the canonical example of a really stupid, memory-limited computation
   environment. "You can't require printf(3) to be part of the default
   runtime library -- what if you're targeting an elevator controller?"
   Elevator controllers became important rhetorical weapons on both sides
   of several [4497]holy wars.
     _________________________________________________________________

   Node:elite, Next:[4498]ELIZA effect, Previous:[4499]elevator
   controller, Up:[4500]= E =

   elite adj.

   Clueful. Plugged-in. One of the cognoscenti. Also used as a general
   positive adjective. This term is not actually native hacker slang; it
   is used primarily by crackers and [4501]warez d00dz, for which reason
   hackers use it only with heavy irony. The term used to refer to the
   folks allowed in to the "hidden" or "privileged" sections of BBSes in
   the early 1980s (which, typically, contained pirated software).
   Frequently, early boards would only let you post, or even see, a
   certain subset of the sections (or `boards') on a BBS. Those who got
   to the frequently legendary `triple super secret' boards were elite.
   Misspellings of this term in warez d00dz style abound; the forms
   `eleet', and `31337' (among others) have been sighted.

   A true hacker would be more likely to use `wizardly'. Oppose
   [4502]lamer.
     _________________________________________________________________

   Node:ELIZA effect, Next:[4503]elvish, Previous:[4504]elite, Up:[4505]=
   E =

   ELIZA effect /*-li:'z* *-fekt'/ n.

   [AI community] The tendency of humans to attach associations to terms
   from prior experience. For example, there is nothing magic about the
   symbol + that makes it well-suited to indicate addition; it's just
   that people associate it with addition. Using + or `plus' to mean
   addition in a computer language is taking advantage of the ELIZA
   effect.

   This term comes from the famous ELIZA program by Joseph Weizenbaum,
   which simulated a Rogerian psychotherapist by rephrasing many of the
   patient's statements as questions and posing them to the patient. It
   worked by simple pattern recognition and substitution of key words
   into canned phrases. It was so convincing, however, that there are
   many anecdotes about people becoming very emotionally caught up in
   dealing with ELIZA. All this was due to people's tendency to attach to
   words meanings which the computer never put there. The ELIZA effect is
   a [4506]Good Thing when writing a programming language, but it can
   blind you to serious shortcomings when analyzing an Artificial
   Intelligence system. Compare [4507]ad-hockery; see also
   [4508]AI-complete. Sources for a clone of the original Eliza are
   available at
   [4509]ftp://ftp.cc.utexas.edu/pub/AI_ATTIC/Programs/Classic/Eliza/Eliz
   a.c.
     _________________________________________________________________

   Node:elvish, Next:[4510]EMACS, Previous:[4511]ELIZA effect, Up:[4512]=
   E =

   elvish n.

   1. The Tengwar of Feanor, a table of letterforms resembling the
   beautiful Celtic half-uncial hand of the "Book of Kells". Invented and
   described by J. R. R. Tolkien in "The Lord of The Rings" as an
   orthography for his fictional `elvish' languages, this system (which
   is both visually and phonetically [4513]elegant) has long fascinated
   hackers (who tend to be intrigued by artificial languages in general).
   It is traditional for graphics printers, plotters, window systems, and
   the like to support a Feanorian typeface as one of their demo items.
   See also [4514]elder days. 2. By extension, any odd or unreadable
   typeface produced by a graphics device. 3. The typeface mundanely
   called `Böcklin', an art-Noveau display font.
     _________________________________________________________________

   Node:EMACS, Next:[4515]email, Previous:[4516]elvish, Up:[4517]= E =

   EMACS /ee'maks/ n.

   [from Editing MACroS] The ne plus ultra of hacker editors, a
   programmable text editor with an entire LISP system inside it. It was
   originally written by Richard Stallman in [4518]TECO under [4519]ITS
   at the MIT AI lab; AI Memo 554 described it as "an advanced,
   self-documenting, customizable, extensible real-time display editor".
   It has since been reimplemented any number of times, by various
   hackers, and versions exist that run under most major operating
   systems. Perhaps the most widely used version, also written by
   Stallman and now called "[4520]GNU EMACS" or [4521]GNUMACS, runs
   principally under Unix. (Its close relative XEmacs is the second most
   popular version.) It includes facilities to run compilation
   subprocesses and send and receive mail or news; many hackers spend up
   to 80% of their [4522]tube time inside it. Other variants include
   [4523]GOSMACS, CCA EMACS, UniPress EMACS, Montgomery EMACS, jove,
   epsilon, and MicroEMACS. (Though we use the original all-caps spelling
   here, it is nowadays very commonly `Emacs'.)

   Some EMACS versions running under window managers iconify as an
   overflowing kitchen sink, perhaps to suggest the one feature the
   editor does not (yet) include. Indeed, some hackers find EMACS too
   [4524]heavyweight and [4525]baroque for their taste, and expand the
   name as `Escape Meta Alt Control Shift' to spoof its heavy reliance on
   keystrokes decorated with [4526]bucky bits. Other spoof expansions
   include `Eight Megabytes And Constantly Swapping' (from when that was
   a lot of [4527]core), `Eventually malloc()s All Computer Storage', and
   `EMACS Makes A Computer Slow' (see [4528]recursive acronym). See also
   [4529]vi.
     _________________________________________________________________

   Node:email, Next:[4530]emoticon, Previous:[4531]EMACS, Up:[4532]= E =

   email /ee'mayl/

   (also written `e-mail' and `E-mail') 1. n. Electronic mail
   automatically passed through computer networks and/or via modems over
   common-carrier lines. Contrast [4533]snail-mail, [4534]paper-net,
   [4535]voice-net. See [4536]network address. 2. vt. To send electronic
   mail.

   Oddly enough, the word `emailed' is actually listed in the OED; it
   means "embossed (with a raised pattern) or perh. arranged in a net or
   open work". A use from 1480 is given. The word is probably derived
   from French `émaillé' (enameled) and related to Old French
   `emmailleüre' (network). A French correspondent tells us that in
   modern French, `email' is a hard enamel obtained by heating special
   paints in a furnace; an `emailleur' (no final e) is a craftsman who
   makes email (he generally paints some objects (like, say, jewelry) and
   cooks them in a furnace).

   There are numerous spelling variants of this word. In Internet traffic
   up to 1995, `email' predominates, `e-mail' runs a not-too-distant
   second, and `E-mail' and `Email' are a distant third and fourth.
     _________________________________________________________________

   Node:emoticon, Next:[4537]EMP, Previous:[4538]email, Up:[4539]= E =

   emoticon /ee-moh'ti-kon/ n.

   [common] An ASCII glyph used to indicate an emotional state in email
   or news. Although originally intended mostly as jokes, emoticons (or
   some other explicit humor indication) are virtually required under
   certain circumstances in high-volume text-only communication forums
   such as Usenet; the lack of verbal and visual cues can otherwise cause
   what were intended to be humorous, sarcastic, ironic, or otherwise
   non-100%-serious comments to be badly misinterpreted (not always even
   by [4540]newbies), resulting in arguments and [4541]flame wars.

   Hundreds of emoticons have been proposed, but only a few are in common
   use. These include:

   :-)
          `smiley face' (for humor, laughter, friendliness, occasionally
          sarcasm)

   :-(
          `frowney face' (for sadness, anger, or upset)

   ;-)
          `half-smiley' ([4542]ha ha only serious); also known as
          `semi-smiley' or `winkey face'.

   :-/
          `wry face'

   (These may become more comprehensible if you tilt your head sideways,
   to the left.)

   The first two listed are by far the most frequently encountered.
   Hyphenless forms of them are common on CompuServe, GEnie, and BIX; see
   also [4543]bixie. On [4544]Usenet, `smiley' is often used as a generic
   term synonymous with [4545]emoticon, as well as specifically for the
   happy-face emoticon.

   It appears that the emoticon was invented by one Scott Fahlman on the
   CMU [4546]bboard systems sometime between early 1981 and mid-1982. He
   later wrote: "I wish I had saved the original post, or at least
   recorded the date for posterity, but I had no idea that I was starting
   something that would soon pollute all the world's communication
   channels." [GLS confirms that he remembers this original posting].

   Note for the [4547]newbie: Overuse of the smiley is a mark of
   loserhood! More than one per paragraph is a fairly sure sign that
   you've gone over the line.
     _________________________________________________________________

   Node:EMP, Next:[4548]empire, Previous:[4549]emoticon, Up:[4550]= E =

   EMP /E-M-P/

   See [4551]spam.
     _________________________________________________________________

   Node:empire, Next:[4552]engine, Previous:[4553]EMP, Up:[4554]= E =

   empire n.

   Any of a family of military simulations derived from a game written by
   Peter Langston many years ago. A number of multi-player variants of
   varying degrees of sophistication exist, and one single-player version
   implemented for both Unix and VMS; the latter is even available as
   MS-DOS freeware. All are notoriously addictive. Of various commercial
   derivatives the best known is probably "Empire Deluxe" on PCs and
   Amigas.

   Modern empire is a real-time wargame played over the internet by up to
   120 players. Typical games last from 24 hours (blitz) to a couple of
   months (long term). The amount of sleep you can get while playing is a
   function of the rate at which updates occur and the number of
   co-rulers of your country. Empire server software is available for
   unix-like machines, and clients for Unix and other platforms. A
   comprehensive history of the game is available at
   [4555]http://www.empire.cx/infopages/History.html. The Empire resource
   site is at [4556]http://www.empire.cx/.
     _________________________________________________________________

   Node:engine, Next:[4557]English, Previous:[4558]empire, Up:[4559]= E =

   engine n.

   1. A piece of hardware that encapsulates some function but can't be
   used without some kind of [4560]front end. Today we have, especially,
   `print engine': the guts of a laser printer. 2. An analogous piece of
   software; notionally, one that does a lot of noisy crunching, such as
   a `database engine'.

   The hacker senses of `engine' are actually close to its original,
   pre-Industrial-Revolution sense of a skill, clever device, or
   instrument (the word is cognate to `ingenuity'). This sense had not
   been completely eclipsed by the modern connotation of
   power-transducing machinery in Charles Babbage's time, which explains
   why he named the stored-program computer that he designed in 1844 the
   `Analytical Engine'.
     _________________________________________________________________

   Node:English, Next:[4561]enhancement, Previous:[4562]engine,
   Up:[4563]= E =

   English

   1. n. obs. The source code for a program, which may be in any
   language, as opposed to the linkable or executable binary produced
   from it by a compiler. The idea behind the term is that to a real
   hacker, a program written in his favorite programming language is at
   least as readable as English. Usage: mostly by old-time hackers,
   though recognizable in context. Today the prefereed shorthand is
   sinply [4564]source. 2. The official name of the database language
   used by the old Pick Operating System, actually a sort of crufty,
   brain-damaged SQL with delusions of grandeur. The name permitted
   [4565]marketroids to say "Yes, and you can program our computers in
   English!" to ignorant [4566]suits without quite running afoul of the
   truth-in-advertising laws.
     _________________________________________________________________

   Node:enhancement, Next:[4567]ENQ, Previous:[4568]English, Up:[4569]= E
   =

   enhancement n.

   Common [4570]marketroid-speak for a bug [4571]fix. This abuse of
   language is a popular and time-tested way to turn incompetence into
   increased revenue. A hacker being ironic would instead call the fix a
   [4572]feature -- or perhaps save some effort by declaring the bug
   itself to be a feature.
     _________________________________________________________________

   Node:ENQ, Next:[4573]EOF, Previous:[4574]enhancement, Up:[4575]= E =

   ENQ /enkw/ or /enk/

   [from the ASCII mnemonic ENQuire for 0000101] An on-line convention
   for querying someone's availability. After opening a [4576]talk mode
   connection to someone apparently in heavy hack mode, one might type
   SYN SYN ENQ? (the SYNs representing notional synchronization bytes),
   and expect a return of [4577]ACK or [4578]NAK depending on whether or
   not the person felt interruptible. Compare [4579]ping, [4580]finger,
   and the usage of FOO? listed under [4581]talk mode.
     _________________________________________________________________

   Node:EOF, Next:[4582]EOL, Previous:[4583]ENQ, Up:[4584]= E =

   EOF /E-O-F/ n.

   [abbreviation, `End Of File'] 1. [techspeak] The [4585]out-of-band
   value returned by C's sequential character-input functions (and their
   equivalents in other environments) when end of file has been reached.
   This value is usually -1 under C libraries postdating V6 Unix, but was
   originally 0. DOS hackers think EOF is ^Z, and a few Amiga hackers
   think it's ^\. 2. [Unix] The keyboard character (usually control-D,
   the ASCII EOT (End Of Transmission) character) that is mapped by the
   terminal driver into an end-of-file condition. 3. Used by extension in
   non-computer contexts when a human is doing something that can be
   modeled as a sequential read and can't go further. "Yeah, I looked for
   a list of 360 mnemonics to post as a joke, but I hit EOF pretty fast;
   all the library had was a [4586]JCL manual." See also [4587]EOL.
     _________________________________________________________________

   Node:EOL, Next:[4588]EOU, Previous:[4589]EOF, Up:[4590]= E =

   EOL /E-O-L/ n.

   [End Of Line] Syn. for [4591]newline, derived perhaps from the
   original CDC6600 Pascal. Now rare, but widely recognized and
   occasionally used for brevity. Used in the example entry under
   [4592]BNF. See also [4593]EOF.
     _________________________________________________________________

   Node:EOU, Next:[4594]epoch, Previous:[4595]EOL, Up:[4596]= E =

   EOU /E-O-U/ n.

   The mnemonic of a mythical ASCII control character (End Of User) that
   would make an ASR-33 Teletype explode on receipt. This construction
   parodies the numerous obscure delimiter and control characters left in
   ASCII from the days when it was associated more with wire-service
   teletypes than computers (e.g., FS, GS, RS, US, EM, SUB, ETX, and esp.
   EOT). It is worth remembering that ASR-33s were big, noisy mechanical
   beasts with a lot of clattering parts; the notion that one might
   explode was nowhere near as ridiculous as it might seem to someone
   sitting in front of a [4597]tube or flatscreen today.
     _________________________________________________________________

   Node:epoch, Next:[4598]epsilon, Previous:[4599]EOU, Up:[4600]= E =

   epoch n.

   [Unix: prob. from astronomical timekeeping] The time and date
   corresponding to 0 in an operating system's clock and timestamp
   values. Under most Unix versions the epoch is 00:00:00 GMT, January 1,
   1970; under VMS, it's 00:00:00 of November 17, 1858 (base date of the
   U.S. Naval Observatory's ephemerides); on a Macintosh, it's the
   midnight beginning January 1 1904. System time is measured in seconds
   or [4601]ticks past the epoch. Weird problems may ensue when the clock
   wraps around (see [4602]wrap around), which is not necessarily a rare
   event; on systems counting 10 ticks per second, a signed 32-bit count
   of ticks is good only for 6.8 years. The 1-tick-per-second clock of
   Unix is good only until January 18, 2038, assuming at least some
   software continues to consider it signed and that word lengths don't
   increase by then. See also [4603]wall time. Microsoft Windows, on the
   other hand, has an epoch problem every 49.7 days - but this is seldom
   noticed as Windows is almost incapable of staying up continuously for
   that long.
     _________________________________________________________________

   Node:epsilon, Next:[4604]epsilon squared, Previous:[4605]epoch,
   Up:[4606]= E =

   epsilon

   [see [4607]delta] 1. n. A small quantity of anything. "The cost is
   epsilon." 2. adj. Very small, negligible; less than [4608]marginal.
   "We can get this feature for epsilon cost." 3. `within epsilon of':
   close enough to be indistinguishable for all practical purposes, even
   closer than being `within delta of'. "That's not what I asked for, but
   it's within epsilon of what I wanted." Alternatively, it may mean not
   close enough, but very little is required to get it there: "My program
   is within epsilon of working."
     _________________________________________________________________

   Node:epsilon squared, Next:[4609]era the, Previous:[4610]epsilon,
   Up:[4611]= E =

   epsilon squared n.

   A quantity even smaller than [4612]epsilon, as small in comparison to
   epsilon as epsilon is to something normal; completely negligible. If
   you buy a supercomputer for a million dollars, the cost of the
   thousand-dollar terminal to go with it is [4613]epsilon, and the cost
   of the ten-dollar cable to connect them is epsilon squared. Compare
   [4614]lost in the underflow, [4615]lost in the noise.
     _________________________________________________________________

   Node:era the, Next:[4616]Eric Conspiracy, Previous:[4617]epsilon
   squared, Up:[4618]= E =

   era n.

   Syn. [4619]epoch. Webster's Unabridged makes these words almost
   synonymous, but `era' more often connotes a span of time rather than a
   point in time, whereas the reverse is true for [4620]epoch. The
   [4621]epoch usage is recommended.
     _________________________________________________________________

   Node:Eric Conspiracy, Next:[4622]Eris, Previous:[4623]era the,
   Up:[4624]= E =

   Eric Conspiracy n.

   A shadowy group of mustachioed hackers named Eric first pinpointed as
   a sinister conspiracy by an infamous talk.bizarre posting ca. 1987;
   this was doubtless influenced by the numerous `Eric' jokes in the
   Monty Python oeuvre. There do indeed seem to be considerably more
   mustachioed Erics in hackerdom than the frequency of these three
   traits can account for unless they are correlated in some arcane way.
   Well-known examples include Eric Allman (he of the `Allman style'
   described under [4625]indent style) and Erik Fair (co-author of NNTP);
   your editor has heard from more than sixty others by email, and the
   organization line `Eric Conspiracy Secret Laboratories' now emanates
   regularly from more than one site. See the Eric Conspiracy Web Page at
   [4626]http://www.ccil.org/~esr/ecsl/ for full details.
     _________________________________________________________________

   Node:Eris, Next:[4627]erotics, Previous:[4628]Eric Conspiracy,
   Up:[4629]= E =

   Eris /e'ris/ n.

   The Greek goddess of Chaos, Discord, Confusion, and Things You Know
   Not Of; her name was latinized to Discordia and she was worshiped by
   that name in Rome. Not a very friendly deity in the Classical
   original, she was reinvented as a more benign personification of
   creative anarchy starting in 1959 by the adherents of
   [4630]Discordianism and has since been a semi-serious subject of
   veneration in several `fringe' cultures, including hackerdom. See
   [4631]Discordianism, [4632]Church of the SubGenius.
     _________________________________________________________________

   Node:erotics, Next:[4633]error 33, Previous:[4634]Eris, Up:[4635]= E =

   erotics /ee-ro'tiks/ n.

   [Helsinki University of Technology, Finland] n. English-language
   university slang for electronics. Often used by hackers in Helsinki,
   maybe because good electronics excites them and makes them warm.
     _________________________________________________________________

   Node:error 33, Next:[4636]eurodemo, Previous:[4637]erotics, Up:[4638]=
   E =

   error 33 [XEROX PARC] n.

   1. Predicating one research effort upon the success of another. 2.
   Allowing your own research effort to be placed on the critical path of
   some other project (be it a research effort or not).
     _________________________________________________________________

   Node:eurodemo, Next:[4639]evil, Previous:[4640]error 33, Up:[4641]= E
   =

   eurodemo /yoor'o-dem`-o/

   a [4642]demo, sense 4
     _________________________________________________________________

   Node:evil, Next:[4643]evil and rude, Previous:[4644]eurodemo,
   Up:[4645]= E =

   evil adj.

   As used by hackers, implies that some system, program, person, or
   institution is sufficiently maldesigned as to be not worth the bother
   of dealing with. Unlike the adjectives in the
   [4646]cretinous/[4647]losing/[4648]brain-damaged series, `evil' does
   not imply incompetence or bad design, but rather a set of goals or
   design criteria fatally incompatible with the speaker's. This usage is
   more an esthetic and engineering judgment than a moral one in the
   mainstream sense. "We thought about adding a [4649]Blue Glue interface
   but decided it was too evil to deal with." "[4650]TECO is neat, but it
   can be pretty evil if you're prone to typos." Often pronounced with
   the first syllable lengthened, as /eeee'vil/. Compare [4651]evil and
   rude.
     _________________________________________________________________

   Node:evil and rude, Next:[4652]Evil Empire, Previous:[4653]evil,
   Up:[4654]= E =

   evil and rude adj.

   Both [4655]evil and [4656]rude, but with the additional connotation
   that the rudeness was due to malice rather than incompetence. Thus,
   for example: Microsoft's Windows NT is evil because it's a competent
   implementation of a bad design; it's rude because it's gratuitously
   incompatible with Unix in places where compatibility would have been
   as easy and effective to do; but it's evil and rude because the
   incompatibilities are apparently there not to fix design bugs in Unix
   but rather to lock hapless customers and developers into the Microsoft
   way. Hackish evil and rude is close to the mainstream sense of `evil'.
     _________________________________________________________________

   Node:Evil Empire, Next:[4657]exa-, Previous:[4658]evil and rude,
   Up:[4659]= E =

   Evil Empire n.

   [from Ronald Reagan's famous characterization of the communist Soviet
   Union] Formerly [4660]IBM, now [4661]Microsoft. Functionally, the
   company most hackers love to hate at any given time. Hackers like to
   see themselves as romantic rebels against the Evil Empire, and
   frequently adopt this role to the point of ascribing rather more power
   and malice to the Empire than it actually has. See also [4662]Borg and
   search for [4663]Evil Empire pages on the Web.
     _________________________________________________________________

   Node:exa-, Next:[4664]examining the entrails, Previous:[4665]Evil
   Empire, Up:[4666]= E =

   exa- /ek's*/ pref.

   [SI] See [4667]quantifiers.
     _________________________________________________________________

   Node:examining the entrails, Next:[4668]EXCH, Previous:[4669]exa-,
   Up:[4670]= E =

   examining the entrails n.

   The process of [4671]grovelling through a [4672]core dump or hex image
   in an attempt to discover the bug that brought a program or system
   down. The reference is to divination from the entrails of a sacrified
   animal. Compare [4673]runes, [4674]incantation, [4675]black art,
   [4676]desk check.
     _________________________________________________________________

   Node:EXCH, Next:[4677]excl, Previous:[4678]examining the entrails,
   Up:[4679]= E =

   EXCH /eks'ch*/ or /eksch/ vt.

   To exchange two things, each for the other; to swap places. If you
   point to two people sitting down and say "Exch!", you are asking them
   to trade places. EXCH, meaning EXCHange, was originally the name of a
   PDP-10 instruction that exchanged the contents of a register and a
   memory location. Many newer hackers are probably thinking instead of
   the [4680]PostScript exchange operator (which is usually written in
   lowercase).
     _________________________________________________________________

   Node:excl, Next:[4681]EXE, Previous:[4682]EXCH, Up:[4683]= E =

   excl /eks'kl/ n.

   Abbreviation for `exclamation point'. See [4684]bang, [4685]shriek,
   [4686]ASCII.
     _________________________________________________________________

   Node:EXE, Next:[4687]exec, Previous:[4688]excl, Up:[4689]= E =

   EXE /eks'ee/ or /eek'see/ or /E-X-E/ n.

   An executable binary file. Some operating systems (notably MS-DOS,
   VMS, and TWENEX) use the extension .EXE to mark such files. This usage
   is also occasionally found among Unix programmers even though Unix
   executables don't have any required suffix.
     _________________________________________________________________

   Node:exec, Next:[4690]exercise left as an, Previous:[4691]EXE,
   Up:[4692]= E =

   exec /eg-zek'/ or /eks'ek/ vt., n.

   1. [Unix: from `execute'] Synonym for [4693]chain, derives from the
   exec(2) call. 2. [from `executive'] obs. The command interpreter for
   an [4694]OS (see [4695]shell); term esp. used around mainframes, and
   prob. derived from UNIVAC's archaic EXEC 2 and EXEC 8 operating
   systems. 3. At IBM and VM/CMS shops, the equivalent of a shell command
   file (among VM/CMS users).

   The mainstream `exec' as an abbreviation for (human) executive is not
   used. To a hacker, an `exec' is a always a program, never a person.
     _________________________________________________________________

   Node:exercise left as an, Next:[4696]Exon, Previous:[4697]exec,
   Up:[4698]= E =

   exercise, left as an adj.

   [from technical books] Used to complete a proof when one doesn't mind
   a [4699]handwave, or to avoid one entirely. The complete phrase is:
   "The proof [or `the rest'] is left as an exercise for the reader."
   This comment has occasionally been attached to unsolved research
   problems by authors possessed of either an evil sense of humor or a
   vast faith in the capabilities of their audiences.
     _________________________________________________________________

   Node:Exon, Next:[4700]Exploder, Previous:[4701]exercise left as an,
   Up:[4702]= E =

   Exon /eks'on/ excl.

   A generic obscenity that quickly entered wide use on the Internet and
   Usenet after [4703]Black Thursday. From the last name of Senator James
   Exon (Democrat-Nebraska), primary author of the [4704]CDA.
     _________________________________________________________________

   Node:Exploder, Next:[4705]exploit, Previous:[4706]Exon, Up:[4707]= E =

   Exploder n.

   Used within Microsoft to refer to the Windows Explorer, the interface
   component of Windows 95 and WinNT 4. Our spies report that most of the
   heavy guns at MS came from a Unix background and use command line
   utilities; even they are scornful of the over-gingerbreaded [4708]WIMP
   environments that they have been called upon to create.
     _________________________________________________________________

   Node:exploit, Next:[4709]external memory, Previous:[4710]Exploder,
   Up:[4711]= E =

   exploit n.

   [originally cracker slang] 1. A vulnerability in software that can be
   used for breaking security or otherwise attacking an Internet host
   over the network. The [4712]Ping O' Death is a famous exploit. 2. More
   grammatically, a program that exploits an exploit in sense 1,
     _________________________________________________________________

   Node:external memory, Next:[4713]eye candy, Previous:[4714]exploit,
   Up:[4715]= E =

   external memory n.

   A memo pad, palmtop computer, or written notes. "Hold on while I write
   that to external memory". The analogy is with store or DRAM versus
   nonvolatile disk storage on computers.
     _________________________________________________________________

   Node:eye candy, Next:[4716]eyeball search, Previous:[4717]external
   memory, Up:[4718]= E =

   eye candy /i:' kand`ee/ n.

   [from mainstream slang "ear candy"] A display of some sort that's
   presented to [4719]lusers to keep them distracted while the program
   performs necessary background tasks. "Give 'em some eye candy while
   the back-end [4720]slurps that [4721]BLOB into core." Reported as
   mainstream usage among players of graphics-heavy computer games. We're
   also told this term is mainstream slang for soft pornography, but that
   sense does not appear to be live among hackers.
     _________________________________________________________________

   Node:eyeball search, Next:[4722]face time, Previous:[4723]eye candy,
   Up:[4724]= E =

   eyeball search n.,v.

   To look for something in a mass of code or data with one's own native
   optical sensors, as opposed to using some sort of pattern matching
   software like [4725]grep or any other automated search tool. Also
   called a [4726]vgrep; compare [4727]vdiff, [4728]desk check.
     _________________________________________________________________

   Node:= F =, Next:[4729]= G =, Previous:[4730]= E =, Up:[4731]The
   Jargon Lexicon

= F =

     * [4732]face time:
     * [4733]factor:
     * [4734]fairings:
     * [4735]fall over:
     * [4736]fall through:
     * [4737]fan:
     * [4738]fandango on core:
     * [4739]FAQ:
     * [4740]FAQ list:
     * [4741]FAQL:
     * [4742]faradize:
     * [4743]farkled:
     * [4744]farming:
     * [4745]fascist:
     * [4746]fat electrons:
     * [4747]fat-finger:
     * [4748]faulty:
     * [4749]fd leak:
     * [4750]fear and loathing:
     * [4751]feature:
     * [4752]feature creature:
     * [4753]feature creep:
     * [4754]feature key:
     * [4755]feature shock:
     * [4756]featurectomy:
     * [4757]feep:
     * [4758]feeper:
     * [4759]feeping creature:
     * [4760]feeping creaturism:
     * [4761]feetch feetch:
     * [4762]fence:
     * [4763]fencepost error:
     * [4764]fiber-seeking backhoe:
     * [4765]FidoNet:
     * [4766]field circus:
     * [4767]field servoid:
     * [4768]Fight-o-net:
     * [4769]File Attach:
     * [4770]File Request:
     * [4771]file signature:
     * [4772]filk:
     * [4773]film at 11:
     * [4774]filter:
     * [4775]Finagle's Law:
     * [4776]fine:
     * [4777]finger:
     * [4778]finger trouble:
     * [4779]finger-pointing syndrome:
     * [4780]finn:
     * [4781]firebottle:
     * [4782]firefighting:
     * [4783]firehose syndrome:
     * [4784]firewall code:
     * [4785]firewall machine:
     * [4786]fireworks mode:
     * [4787]firmware:
     * [4788]firmy:
     * [4789]fish:
     * [4790]FISH queue:
     * [4791]FITNR:
     * [4792]fix:
     * [4793]FIXME:
     * [4794]flag:
     * [4795]flag day:
     * [4796]flaky:
     * [4797]flamage:
     * [4798]flame:
     * [4799]flame bait:
     * [4800]flame on:
     * [4801]flame war:
     * [4802]flamer:
     * [4803]flap:
     * [4804]flarp:
     * [4805]flash crowd:
     * [4806]flat:
     * [4807]flat-ASCII:
     * [4808]flat-file:
     * [4809]flatten:
     * [4810]flavor:
     * [4811]flavorful:
     * [4812]flippy:
     * [4813]flood:
     * [4814]flowchart:
     * [4815]flower key:
     * [4816]flush:
     * [4817]flypage:
     * [4818]Flyspeck 3:
     * [4819]flytrap:
     * [4820]FM:
     * [4821]fnord:
     * [4822]FOAF:
     * [4823]FOD:
     * [4824]fold case:
     * [4825]followup:
     * [4826]fontology:
     * [4827]foo:
     * [4828]foobar:
     * [4829]fool:
     * [4830]fool file:
     * [4831]Foonly:
     * [4832]footprint:
     * [4833]for free:
     * [4834]for the rest of us:
     * [4835]for values of:
     * [4836]fora:
     * [4837]foreground:
     * [4838]fork:
     * [4839]fork bomb:
     * [4840]forked:
     * [4841]Fortrash:
     * [4842]fortune cookie:
     * [4843]forum:
     * [4844]fossil:
     * [4845]four-color glossies:
     * [4846]frag:
     * [4847]fragile:
     * [4848]fred:
     * [4849]Fred Foobar:
     * [4850]frednet:
     * [4851]free software:
     * [4852]freeware:
     * [4853]freeze:
     * [4854]fried:
     * [4855]frink:
     * [4856]friode:
     * [4857]fritterware:
     * [4858]frob:
     * [4859]frobnicate:
     * [4860]frobnitz:
     * [4861]frog:
     * [4862]frogging:
     * [4863]front end:
     * [4864]frotz:
     * [4865]frotzed:
     * [4866]frowney:
     * [4867]FRS:
     * [4868]fry:
     * [4869]fscking:
     * [4870]FSF:
     * [4871]FTP:
     * [4872]-fu:
     * [4873]FUBAR:
     * [4874]fuck me harder:
     * [4875]FUD:
     * [4876]FUD wars:
     * [4877]fudge:
     * [4878]fudge factor:
     * [4879]fuel up:
     * [4880]Full Monty:
     * [4881]fum:
     * [4882]functino:
     * [4883]funky:
     * [4884]funny money:
     * [4885]furrfu:
     * [4886]fuzzball:
     _________________________________________________________________

   Node:face time, Next:[4887]factor, Previous:[4888]eyeball search,
   Up:[4889]= F =

   face time n.

   [common] Time spent interacting with somebody face-to-face (as opposed
   to via electronic links). "Oh, yeah, I spent some face time with him
   at the last Usenix."
     _________________________________________________________________

   Node:factor, Next:[4890]fairings, Previous:[4891]face time, Up:[4892]=
   F =

   factor n.

   See [4893]coefficient of X.
     _________________________________________________________________

   Node:fairings, Next:[4894]fall over, Previous:[4895]factor, Up:[4896]=
   F =

   fairings n. /fer'ingz/

   [FreeBSD; orig. a typo for `fairness'] A term thrown out in discussion
   whenever a completely and transparently nonsensical argument in one's
   favor(?) seems called for, e,g. at the end of a really long thread for
   which the outcome is no longer even cared about since everyone is now
   so sick of it; or in rebuttal to another nonsensical argument ("Change
   the loader to look for /kernel.pl? What about fairings?")
     _________________________________________________________________

   Node:fall over, Next:[4897]fall through, Previous:[4898]fairings,
   Up:[4899]= F =

   fall over vi.

   [IBM] Yet another synonym for [4900]crash or [4901]lose. `Fall over
   hard' equates to [4902]crash and burn.
     _________________________________________________________________

   Node:fall through, Next:[4903]fan, Previous:[4904]fall over,
   Up:[4905]= F =

   fall through v.

   (n. `fallthrough', var. `fall-through') 1. To exit a loop by
   exhaustion, i.e., by having fulfilled its exit condition rather than
   via a break or exception condition that exits from the middle of it.
   This usage appears to be really old, dating from the 1940s and 1950s.
   2. To fail a test that would have passed control to a subroutine or
   some other distant portion of code. 3. In C, `fall-through' occurs
   when the flow of execution in a switch statement reaches a case label
   other than by jumping there from the switch header, passing a point
   where one would normally expect to find a break. A trivial example:
switch (color)
{
case GREEN:
   do_green();
   break;
case PINK:
   do_pink();
   /* FALL THROUGH */
case RED:
   do_red();
   break;
default:
   do_blue();
   break;
}

   The variant spelling /* FALL THRU */ is also common.

   The effect of the above code is to do_green() when color is GREEN,
   do_red() when color is RED, do_blue() on any other color other than
   PINK, and (and this is the important part) do_pink() and then do_red()
   when color is PINK. Fall-through is [4906]considered harmful by some,
   though there are contexts (such as the coding of state machines) in
   which it is natural; it is generally considered good practice to
   include a comment highlighting the fall-through where one would
   normally expect a break. See also [4907]Duff's device.
     _________________________________________________________________

   Node:fan, Next:[4908]fandango on core, Previous:[4909]fall through,
   Up:[4910]= F =

   fan n.

   Without qualification, indicates a fan of science fiction, especially
   one who goes to [4911]cons and tends to hang out with other fans. Many
   hackers are fans, so this term has been imported from fannish slang;
   however, unlike much fannish slang it is recognized by most
   non-fannish hackers. Among SF fans the plural is correctly `fen', but
   this usage is not automatic to hackers. "Laura reads the stuff
   occasionally but isn't really a fan."
     _________________________________________________________________

   Node:fandango on core, Next:[4912]FAQ, Previous:[4913]fan, Up:[4914]=
   F =

   fandango on core n.

   [Unix/C hackers, from the Iberian dance] In C, a wild pointer that
   runs out of bounds, causing a [4915]core dump, or corrupts the
   malloc(3) [4916]arena in such a way as to cause mysterious failures
   later on, is sometimes said to have `done a fandango on core'. On
   low-end personal machines without an MMU (or Windows boxes, which have
   an MMU but use it incompetently), this can corrupt the OS itself,
   causing massive lossage. Other frenetic dances such as the cha-cha or
   the watusi, may be substituted. See [4917]aliasing bug,
   [4918]precedence lossage, [4919]smash the stack, [4920]memory leak,
   [4921]memory smash, [4922]overrun screw, [4923]core.
     _________________________________________________________________

   Node:FAQ, Next:[4924]FAQ list, Previous:[4925]fandango on core,
   Up:[4926]= F =

   FAQ /F-A-Q/ or /fak/ n.

   [Usenet] 1. A Frequently Asked Question. 2. A compendium of
   accumulated lore, posted periodically to high-volume newsgroups in an
   attempt to forestall such questions. Some people prefer the term `FAQ
   list' or `FAQL' /fa'kl/, reserving `FAQ' for sense 1.

   This lexicon itself serves as a good example of a collection of one
   kind of lore, although it is far too big for a regular FAQ posting.
   Examples: "What is the proper type of NULL?" and "What's that funny
   name for the # character?" are both Frequently Asked Questions.
   Several FAQs refer readers to this file.
     _________________________________________________________________

   Node:FAQ list, Next:[4927]FAQL, Previous:[4928]FAQ, Up:[4929]= F =

   FAQ list /F-A-Q list/ or /fak list/ n.

   [common; Usenet] Syn [4930]FAQ, sense 2.
     _________________________________________________________________

   Node:FAQL, Next:[4931]faradize, Previous:[4932]FAQ list, Up:[4933]= F
   =

   FAQL /fa'kl/ n.

   Syn. [4934]FAQ list.
     _________________________________________________________________

   Node:faradize, Next:[4935]farkled, Previous:[4936]FAQL, Up:[4937]= F =

   faradize /far'*-di:z/ v.

   [US Geological Survey] To start any hyper-addictive process or trend,
   or to continue adding current to such a trend. Telling one user about
   a new octo-tetris game you compiled would be a faradizing act -- in
   two weeks you might find your entire department playing the faradic
   game.
     _________________________________________________________________

   Node:farkled, Next:[4938]farming, Previous:[4939]faradize, Up:[4940]=
   F =

   farkled /far'kld/ adj.

   [DeVry Institute of Technology, Atlanta] Syn. [4941]hosed. Poss. owes
   something to Yiddish `farblondjet' and/or the `Farkle Family' skits on
   "Rowan and Martin's Laugh-In", a popular comedy show of the late
   1960s.
     _________________________________________________________________

   Node:farming, Next:[4942]fascist, Previous:[4943]farkled, Up:[4944]= F
   =

   farming n.

   [Adelaide University, Australia] What the heads of a disk drive are
   said to do when they plow little furrows in the magnetic media.
   Associated with a [4945]crash. Typically used as follows: "Oh no, the
   machine has just crashed; I hope the hard drive hasn't gone
   [4946]farming again." No longer common; modern drives automatically
   park their heads in a safe zone on power-down, so it takes a real
   mechanical problem to induce this.
     _________________________________________________________________

   Node:fascist, Next:[4947]fat electrons, Previous:[4948]farming,
   Up:[4949]= F =

   fascist adj.

   1. [common] Said of a computer system with excessive or annoying
   security barriers, usage limits, or access policies. The implication
   is that said policies are preventing hackers from getting interesting
   work done. The variant `fascistic' seems to have been preferred at
   MIT, poss. by analogy with `touristic' (see [4950]tourist or under the
   influence of German/Yiddish `faschistisch'). 2. In the design of
   languages and other software tools, `the fascist alternative' is the
   most restrictive and structured way of capturing a particular
   function; the implication is that this may be desirable in order to
   simplify the implementation or provide tighter error checking. Compare
   [4951]bondage-and-discipline language, although that term is global
   rather than local.
     _________________________________________________________________

   Node:fat electrons, Next:[4952]fat-finger, Previous:[4953]fascist,
   Up:[4954]= F =

   fat electrons n.

   Old-time hacker David Cargill's theory on the causation of computer
   glitches. Your typical electric utility draws its line current out of
   the big generators with a pair of coil taps located near the top of
   the dynamo. When the normal tap brushes get dirty, they take them off
   line to clean them up, and use special auxiliary taps on the bottom of
   the coil. Now, this is a problem, because when they do that they get
   not ordinary or `thin' electrons, but the fat'n'sloppy electrons that
   are heavier and so settle to the bottom of the generator. These flow
   down ordinary wires just fine, but when they have to turn a sharp
   corner (as in an integrated-circuit via), they're apt to get stuck.
   This is what causes computer glitches. [Fascinating. Obviously, fat
   electrons must gain mass by [4955]bogon absorption --ESR] Compare
   [4956]bogon, [4957]magic smoke.
     _________________________________________________________________

   Node:fat-finger, Next:[4958]faulty, Previous:[4959]fat electrons,
   Up:[4960]= F =

   fat-finger vt.

   1. To introduce a typo while editing in such a way that the resulting
   manglification of a configuration file does something useless,
   damaging, or wildly unexpected. "NSI fat-fingered their DNS zone file
   and took half the net down again." 2. More generally, any typo that
   produces dramatically bad results.
     _________________________________________________________________

   Node:faulty, Next:[4961]fd leak, Previous:[4962]fat-finger, Up:[4963]=
   F =

   faulty adj.

   Non-functional; buggy. Same denotation as [4964]bletcherous,
   [4965]losing, q.v., but the connotation is much milder.
     _________________________________________________________________

   Node:fd leak, Next:[4966]fear and loathing, Previous:[4967]faulty,
   Up:[4968]= F =

   fd leak /F-D leek/ n.

   A kind of programming bug analogous to a [4969]core leak, in which a
   program fails to close file descriptors (`fd's) after file operations
   are completed, and thus eventually runs out of them. See [4970]leak.
     _________________________________________________________________

   Node:fear and loathing, Next:[4971]feature, Previous:[4972]fd leak,
   Up:[4973]= F =

   fear and loathing n.

   [from Hunter S. Thompson] A state inspired by the prospect of dealing
   with certain real-world systems and standards that are totally
   [4974]brain-damaged but ubiquitous -- Intel 8086s, or [4975]COBOL, or
   [4976]EBCDIC, or any [4977]IBM machine bigger than a workstation.
   "Ack! They want PCs to be able to talk to the AI machine. Fear and
   loathing time!"
     _________________________________________________________________

   Node:feature, Next:[4978]feature creature, Previous:[4979]fear and
   loathing, Up:[4980]= F =

   feature n.

   1. [common] A good property or behavior (as of a program). Whether it
   was intended or not is immaterial. 2. [common] An intended property or
   behavior (as of a program). Whether it is good or not is immaterial
   (but if bad, it is also a [4981]misfeature). 3. A surprising property
   or behavior; in particular, one that is purposely inconsistent because
   it works better that way -- such an inconsistency is therefore a
   [4982]feature and not a [4983]bug. This kind of feature is sometimes
   called a [4984]miswart; see that entry for a classic example. 4. A
   property or behavior that is gratuitous or unnecessary, though perhaps
   also impressive or cute. For example, one feature of Common LISP's
   format function is the ability to print numbers in two different
   Roman-numeral formats (see [4985]bells whistles and gongs). 5. A
   property or behavior that was put in to help someone else but that
   happens to be in your way. 6. [common] A bug that has been documented.
   To call something a feature sometimes means the author of the program
   did not consider the particular case, and that the program responded
   in a way that was unexpected but not strictly incorrect. A standard
   joke is that a bug can be turned into a [4986]feature simply by
   documenting it (then theoretically no one can complain about it
   because it's in the manual), or even by simply declaring it to be
   good. "That's not a bug, that's a feature!" is a common catchphrase.
   See also [4987]feetch feetch, [4988]creeping featurism, [4989]wart,
   [4990]green lightning.

   The relationship among bugs, features, misfeatures, warts, and
   miswarts might be clarified by the following hypothetical exchange
   between two hackers on an airliner:

   A: "This seat doesn't recline."

   B: "That's not a bug, that's a feature. There is an emergency exit
   door built around the window behind you, and the route has to be kept
   clear."

   A: "Oh. Then it's a misfeature; they should have increased the spacing
   between rows here."

   B: "Yes. But if they'd increased spacing in only one section it would
   have been a wart -- they would've had to make nonstandard-length
   ceiling panels to fit over the displaced seats."

   A: "A miswart, actually. If they increased spacing throughout they'd
   lose several rows and a chunk out of the profit margin. So unequal
   spacing would actually be the Right Thing."

   B: "Indeed."

   `Undocumented feature' is a common, allegedly humorous euphemism for a
   [4991]bug. There's a related joke that is sometimes referred to as the
   "one-question geek test". You say to someone "I saw a Volkswagen
   Beetle today with a vanity license plate that read FEATURE". If he/she
   laughs, he/she is a geek (see [4992]computer geek, sense 2).
     _________________________________________________________________

   Node:feature creature, Next:[4993]feature creep,
   Previous:[4994]feature, Up:[4995]= F =

   feature creature n.

   [poss. fr. slang `creature feature' for a horror movie] 1. One who
   loves to add features to designs or programs, perhaps at the expense
   of coherence, concision, or [4996]taste. 2. Alternately, a mythical
   being that induces otherwise rational programmers to perpetrate such
   crocks. See also [4997]feeping creaturism, [4998]creeping featurism.
     _________________________________________________________________

   Node:feature creep, Next:[4999]feature key, Previous:[5000]feature
   creature, Up:[5001]= F =

   feature creep n.

   [common] The result of [5002]creeping featurism, as in "Emacs has a
   bad case of feature creep".
     _________________________________________________________________

   Node:feature key, Next:[5003]feature shock, Previous:[5004]feature
   creep, Up:[5005]= F =

   feature key n.

   [common] The Macintosh key with the cloverleaf graphic on its keytop;
   sometimes referred to as `flower', `pretzel', `clover', `propeller',
   `beanie' (an apparent reference to the major feature of a propeller
   beanie), [5006]splat, `open-apple' or (officially, in Mac
   documentation) the `command key'. In French, the term `papillon'
   (butterfly) has been reported. The proliferation of terms for this
   creature may illustrate one subtle peril of iconic interfaces.

   Many people have been mystified by the cloverleaf-like symbol that
   appears on the feature key. Its oldest name is `cross of St. Hannes',
   but it occurs in pre-Christian Viking art as a decorative motif.
   Throughout Scandinavia today the road agencies use it to mark sites of
   historical interest. Apple picked up the symbol from an early Mac
   developer who happened to be Swedish. Apple documentation gives the
   translation "interesting feature"!

   There is some dispute as to the proper (Swedish) name of this symbol.
   It technically stands for the word `sevärdhet' (thing worth seeing);
   many of these are old churches. Some Swedes report as an idiom for the
   sign the word `kyrka', cognate to English `church' and pronounced
   (roughly) /chur'ka/ in modern Swedish. Others say this is nonsense.
   Other idioms reported for the sign are `runa' (rune) or `runsten'
   /roon'stn/ (runestone), derived from the fact that many of the
   interesting features are Viking rune-stones. The term `fornminne'
   /foorn'min'*/ (relic of antiquity, ancient monument) is also reported,
   especially among those who think that the Mac itself is a relic of
   antiquity.
     _________________________________________________________________

   Node:feature shock, Next:[5007]featurectomy, Previous:[5008]feature
   key, Up:[5009]= F =

   feature shock n.

   [from Alvin Toffler's book title "Future Shock"] A user's (or
   programmer's!) confusion when confronted with a package that has too
   many features and poor introductory material.
     _________________________________________________________________

   Node:featurectomy, Next:[5010]feep, Previous:[5011]feature shock,
   Up:[5012]= F =

   featurectomy /fee`ch*r-ek't*-mee/ n.

   The act of removing a feature from a program. Featurectomies come in
   two flavors, the `righteous' and the `reluctant'. Righteous
   featurectomies are performed because the remover believes the program
   would be more elegant without the feature, or there is already an
   equivalent and better way to achieve the same end. (Doing so is not
   quite the same thing as removing a [5013]misfeature.) Reluctant
   featurectomies are performed to satisfy some external constraint such
   as code size or execution speed.
     _________________________________________________________________

   Node:feep, Next:[5014]feeper, Previous:[5015]featurectomy, Up:[5016]=
   F =

   feep /feep/

   1. n. The soft electronic `bell' sound of a display terminal (except
   for a VT-52); a beep (in fact, the microcomputer world seems to prefer
   [5017]beep). 2. vi. To cause the display to make a feep sound. ASR-33s
   (the original TTYs) do not feep; they have mechanical bells that ring.
   Alternate forms: [5018]beep, `bleep', or just about anything suitably
   onomatopoeic. (Jeff MacNelly, in his comic strip "Shoe", uses the word
   `eep' for sounds made by computer terminals and video games; this is
   perhaps the closest written approximation yet.) The term `breedle' was
   sometimes heard at SAIL, where the terminal bleepers are not
   particularly soft (they sound more like the musical equivalent of a
   raspberry or Bronx cheer; for a close approximation, imagine the sound
   of a Star Trek communicator's beep lasting for five seconds). The
   `feeper' on a VT-52 has been compared to the sound of a '52 Chevy
   stripping its gears. See also [5019]ding.
     _________________________________________________________________

   Node:feeper, Next:[5020]feeping creature, Previous:[5021]feep,
   Up:[5022]= F =

   feeper /fee'pr/ n.

   The device in a terminal or workstation (usually a loudspeaker of some
   kind) that makes the [5023]feep sound.
     _________________________________________________________________

   Node:feeping creature, Next:[5024]feeping creaturism,
   Previous:[5025]feeper, Up:[5026]= F =

   feeping creature n.

   [from [5027]feeping creaturism] An unnecessary feature; a bit of
   [5028]chrome that, in the speaker's judgment, is the camel's nose for
   a whole horde of new features.
     _________________________________________________________________

   Node:feeping creaturism, Next:[5029]feetch feetch,
   Previous:[5030]feeping creature, Up:[5031]= F =

   feeping creaturism /fee'ping kree`ch*r-izm/ n.

   A deliberate spoonerism for [5032]creeping featurism, meant to imply
   that the system or program in question has become a misshapen creature
   of hacks. This term isn't really well defined, but it sounds so neat
   that most hackers have said or heard it. It is probably reinforced by
   an image of terminals prowling about in the dark making their
   customary noises.
     _________________________________________________________________

   Node:feetch feetch, Next:[5033]fence, Previous:[5034]feeping
   creaturism, Up:[5035]= F =

   feetch feetch /feech feech/ interj.

   If someone tells you about some new improvement to a program, you
   might respond: "Feetch, feetch!" The meaning of this depends
   critically on vocal inflection. With enthusiasm, it means something
   like "Boy, that's great! What a great hack!" Grudgingly or with
   obvious doubt, it means "I don't know; it sounds like just one more
   unnecessary and complicated thing". With a tone of resignation, it
   means, "Well, I'd rather keep it simple, but I suppose it has to be
   done".
     _________________________________________________________________

   Node:fence, Next:[5036]fencepost error, Previous:[5037]feetch feetch,
   Up:[5038]= F =

   fence n. 1.

   A sequence of one or more distinguished ([5039]out-of-band) characters
   (or other data items), used to delimit a piece of data intended to be
   treated as a unit (the computer-science literature calls this a
   `sentinel'). The NUL (ASCII 0000000) character that terminates strings
   in C is a fence. Hex FF is also (though slightly less frequently) used
   this way. See [5040]zigamorph. 2. An extra data value inserted in an
   array or other data structure in order to allow some normal test on
   the array's contents also to function as a termination test. For
   example, a highly optimized routine for finding a value in an array
   might artificially place a copy of the value to be searched for after
   the last slot of the array, thus allowing the main search loop to
   search for the value without having to check at each pass whether the
   end of the array had been reached. 3. [among users of optimizing
   compilers] Any technique, usually exploiting knowledge about the
   compiler, that blocks certain optimizations. Used when explicit
   mechanisms are not available or are overkill. Typically a hack: "I
   call a dummy procedure there to force a flush of the optimizer's
   register-coloring info" can be expressed by the shorter "That's a
   fence procedure".
     _________________________________________________________________

   Node:fencepost error, Next:[5041]fiber-seeking backhoe,
   Previous:[5042]fence, Up:[5043]= F =

   fencepost error n.

   1. [common] A problem with the discrete equivalent of a boundary
   condition, often exhibited in programs by iterative loops. From the
   following problem: "If you build a fence 100 feet long with posts 10
   feet apart, how many posts do you need?" (Either 9 or 11 is a better
   answer than the obvious 10.) For example, suppose you have a long list
   or array of items, and want to process items m through n; how many
   items are there? The obvious answer is n - m, but that is off by one;
   the right answer is n - m + 1. A program that used the `obvious'
   formula would have a fencepost error in it. See also [5044]zeroth and
   [5045]off-by-one error, and note that not all off-by-one errors are
   fencepost errors. The game of Musical Chairs involves a catastrophic
   off-by-one error where N people try to sit in N - 1 chairs, but it's
   not a fencepost error. Fencepost errors come from counting things
   rather than the spaces between them, or vice versa, or by neglecting
   to consider whether one should count one or both ends of a row. 2.
   [rare] An error induced by unexpected regularities in input values,
   which can (for instance) completely thwart a theoretically efficient
   binary tree or hash table implementation. (The error here involves the
   difference between expected and worst case behaviors of an algorithm.)
     _________________________________________________________________

   Node:fiber-seeking backhoe, Next:[5046]FidoNet,
   Previous:[5047]fencepost error, Up:[5048]= F =

   fiber-seeking backhoe

   [common among backbone ISP personnel] Any of a genus of large,
   disruptive machines which routinely cut critical backbone links,
   creating Internet outages and [5049]packet over air problems.
     _________________________________________________________________

   Node:FidoNet, Next:[5050]field circus, Previous:[5051]fiber-seeking
   backhoe, Up:[5052]= F =

   FidoNet n.

   A worldwide hobbyist network of personal computers which exchanges
   mail, discussion groups, and files. Founded in 1984 and originally
   consisting only of IBM PCs and compatibles, FidoNet now includes such
   diverse machines as Apple ][s, Ataris, Amigas, and Unix systems. For
   years FidoNet actually grew faster than Usenet, but the advent of
   cheap Internet access probably means its days are numbered. In early
   1999 Fidonet has approximately 30,000 nodes, down from 38K in 1996.
     _________________________________________________________________

   Node:field circus, Next:[5053]field servoid, Previous:[5054]FidoNet,
   Up:[5055]= F =

   field circus n.

   [a derogatory pun on `field service'] The field service organization
   of any hardware manufacturer, but originally [5056]DEC. There is an
   entire genre of jokes about field circus engineers:
Q: How can you recognize a field circus engineer
   with a flat tire?
A: He's changing one tire at a time to see which one is flat.

Q: How can you recognize a field circus engineer
   who is out of gas?
A: He's changing one tire at a time to see which one is flat.

Q: How can you tell it's your field circus engineer?
A: The spare is flat, too.

   [See [5057]Easter egging for additional insight on these jokes.]

   There is also the `Field Circus Cheer' (from the old [5058]plan file
   for DEC on MIT-AI):
Maynard! Maynard!
Don't mess with us!
We're mean and we're tough!
If you get us confused
We'll screw up your stuff.

   (DEC's service HQ, still extant under the Compaq regime, is located in
   Maynard, Massachusetts.)
     _________________________________________________________________

   Node:field servoid, Next:[5059]Fight-o-net, Previous:[5060]field
   circus, Up:[5061]= F =

   field servoid [play on `android'] /fee'ld ser'voyd/ n.

   Representative of a field service organization (see [5062]field
   circus). This has many of the implications of [5063]droid.
     _________________________________________________________________

   Node:Fight-o-net, Next:[5064]File Attach, Previous:[5065]field
   servoid, Up:[5066]= F =

   Fight-o-net n.

   [FidoNet] Deliberate distortion of [5067]FidoNet, often applied after
   a flurry of [5068]flamage in a particular [5069]echo, especially the
   SYSOP echo or Fidonews (see [5070]'Snooze).
     _________________________________________________________________

   Node:File Attach, Next:[5071]File Request, Previous:[5072]Fight-o-net,
   Up:[5073]= F =

   File Attach [FidoNet]

   1. n. A file sent along with a mail message from one FidoNet to
   another. 2. vt. Sending someone a file by using the File Attach option
   in a FidoNet mailer.
     _________________________________________________________________

   Node:File Request, Next:[5074]file signature, Previous:[5075]File
   Attach, Up:[5076]= F =

   File Request [FidoNet]

   1. n. The [5077]FidoNet equivalent of [5078]FTP, in which one FidoNet
   system automatically dials another and [5079]snarfs one or more files.
   Often abbreviated `FReq'; files are often announced as being
   "available for FReq" in the same way that files are announced as being
   "available for/by anonymous FTP" on the Internet. 2. vt. The act of
   getting a copy of a file by using the File Request option of the
   FidoNet mailer.
     _________________________________________________________________

   Node:file signature, Next:[5080]filk, Previous:[5081]File Request,
   Up:[5082]= F =

   file signature n.

   A [5083]magic number, sense 3.
     _________________________________________________________________

   Node:filk, Next:[5084]film at 11, Previous:[5085]file signature,
   Up:[5086]= F =

   filk /filk/ n.,v.

   [from SF fandom, where a typo for `folk' was adopted as a new word] A
   popular or folk song with lyrics revised or completely new lyrics
   and/or music, intended for humorous effect when read, and/or to be
   sung late at night at SF conventions. There is a flourishing subgenre
   of these called `computer filks', written by hackers and often
   containing rather sophisticated technical humor. See [5087]double
   bucky for an example. Compare [5088]grilf, [5089]hing, [5090]pr0n, and
   [5091]newsfroup.
     _________________________________________________________________

   Node:film at 11, Next:[5092]filter, Previous:[5093]filk, Up:[5094]= F
   =

   film at 11

   [MIT: in parody of TV newscasters] 1. Used in conversation to announce
   ordinary events, with a sarcastic implication that these events are
   earth-shattering. "[5095]ITS crashes; film at 11." "Bug found in
   scheduler; film at 11." 2. Also widely used outside MIT to indicate
   that additional information will be available at some future time,
   without the implication of anything particularly ordinary about the
   referenced event. For example, "The mail file server died this
   morning; we found garbage all over the root directory. Film at 11."
   would indicate that a major failure had occurred but that the people
   working on it have no additional information about it as yet; use of
   the phrase in this way suggests gently that the problem is liable to
   be fixed more quickly if the people doing the fixing can spend time
   doing the fixing rather than responding to questions, the answers to
   which will appear on the normal "11:00 news", if people will just be
   patient.

   The variant "MPEGs at 11" has recently been cited (MPEG is a
   digital-video format.)
     _________________________________________________________________

   Node:filter, Next:[5096]Finagle's Law, Previous:[5097]film at 11,
   Up:[5098]= F =

   filter n.

   [very common; orig. [5099]Unix, now also in [5100]MS-DOS] A program
   that processes an input data stream into an output data stream in some
   well-defined way, and does no I/O to anywhere else except possibly on
   error conditions; one designed to be used as a stage in a `pipeline'
   (see [5101]plumbing). Compare [5102]sponge.
     _________________________________________________________________

   Node:Finagle's Law, Next:[5103]fine, Previous:[5104]filter, Up:[5105]=
   F =

   Finagle's Law n.

   The generalized or `folk' version of [5106]Murphy's Law, fully named
   "Finagle's Law of Dynamic Negatives" and usually rendered "Anything
   that can go wrong, will". One variant favored among hackers is "The
   perversity of the Universe tends towards a maximum" (but see also
   [5107]Hanlon's Razor). The label `Finagle's Law' was popularized by SF
   author Larry Niven in several stories depicting a frontier culture of
   asteroid miners; this `Belter' culture professed a religion and/or
   running joke involving the worship of the dread god Finagle and his
   mad prophet Murphy. Some technical and scientific cultures (e.g.,
   paleontologists) know it under the name `Sod's Law'; this usage may be
   more common in Great Britain.
     _________________________________________________________________

   Node:fine, Next:[5108]finger, Previous:[5109]Finagle's Law, Up:[5110]=
   F =

   fine adj.

   [WPI] Good, but not good enough to be [5111]cuspy. The word `fine' is
   used elsewhere, of course, but without the implicit comparison to the
   higher level implied by [5112]cuspy.
     _________________________________________________________________

   Node:finger, Next:[5113]finger trouble, Previous:[5114]fine,
   Up:[5115]= F =

   finger

   [WAITS, via BSD Unix] 1. n. A program that displays information about
   a particular user or all users logged on the system, or a remote
   system. Typically shows full name, last login time, idle time,
   terminal line, and terminal location (where applicable). May also
   display a [5116]plan file left by the user (see also [5117]Hacking X
   for Y). 2. vt. To apply finger to a username. 3. vt. By extension, to
   check a human's current state by any means. "Foodp?" "T!" "OK, finger
   Lisa and see if she's idle." 4. Any picture (composed of ASCII
   characters) depicting `the finger'. Originally a humorous component of
   one's plan file to deter the curious fingerer (sense 2), it has
   entered the arsenal of some [5118]flamers.
     _________________________________________________________________

   Node:finger trouble, Next:[5119]finger-pointing syndrome,
   Previous:[5120]finger, Up:[5121]= F =

   finger trouble n.

   Mistyping, typos, or generalized keyboard incompetence (this is
   surprisingly common among hackers, given the amount of time they spend
   at keyboards). "I keep putting colons at the end of statements instead
   of semicolons", "Finger trouble again, eh?".
     _________________________________________________________________

   Node:finger-pointing syndrome, Next:[5122]finn, Previous:[5123]finger
   trouble, Up:[5124]= F =

   finger-pointing syndrome n.

   All-too-frequent result of bugs, esp. in new or experimental
   configurations. The hardware vendor points a finger at the software.
   The software vendor points a finger at the hardware. All the poor
   users get is the finger.
     _________________________________________________________________

   Node:finn, Next:[5125]firebottle, Previous:[5126]finger-pointing
   syndrome, Up:[5127]= F =

   finn v.

   [IRC] To pull rank on somebody based on the amount of time one has
   spent on [5128]IRC. The term derives from the fact that IRC was
   originally written in Finland in 1987. There may be some influence
   from the `Finn' character in William Gibson's seminal cyberpunk novel
   "Count Zero", who at one point says to another (much younger)
   character "I have a pair of shoes older than you are, so shut up!"
     _________________________________________________________________

   Node:firebottle, Next:[5129]firefighting, Previous:[5130]finn,
   Up:[5131]= F =

   firebottle n.obs.

   A large, primitive, power-hungry active electrical device, similar in
   function to a FET but constructed out of glass, metal, and vacuum.
   Characterized by high cost, low density, low reliability,
   high-temperature operation, and high power dissipation. Sometimes
   mistakenly called a `tube' in the U.S. or a `valve' in England;
   another hackish term is [5132]glassfet.
     _________________________________________________________________

   Node:firefighting, Next:[5133]firehose syndrome,
   Previous:[5134]firebottle, Up:[5135]= F =

   firefighting n.

   1. What sysadmins have to do to correct sudden operational problems.
   An opposite of hacking. "Been hacking your new newsreader?" "No, a
   power glitch hosed the network and I spent the whole afternoon
   fighting fires." 2. The act of throwing lots of manpower and late
   nights at a project, esp. to get it out before deadline. See also
   [5136]gang bang, [5137]Mongolian Hordes technique; however, the term
   `firefighting' connotes that the effort is going into chasing bugs
   rather than adding features.
     _________________________________________________________________

   Node:firehose syndrome, Next:[5138]firewall code,
   Previous:[5139]firefighting, Up:[5140]= F =

   firehose syndrome n.

   In mainstream folklore it is observed that trying to drink from a
   firehose can be a good way to rip your lips off. On computer networks,
   the absence or failure of flow control mechanisms can lead to
   situations in which the sending system sprays a massive flood of
   packets at an unfortunate receiving system, more than it can handle.
   Compare [5141]overrun, [5142]buffer overflow.
     _________________________________________________________________

   Node:firewall code, Next:[5143]firewall machine,
   Previous:[5144]firehose syndrome, Up:[5145]= F =

   firewall code n.

   1. The code you put in a system (say, a telephone switch) to make sure
   that the users can't do any damage. Since users always want to be able
   to do everything but never want to suffer for any mistakes, the
   construction of a firewall is a question not only of defensive coding
   but also of interface presentation, so that users don't even get
   curious about those corners of a system where they can burn
   themselves. 2. Any sanity check inserted to catch a [5146]can't happen
   error. Wise programmers often change code to fix a bug twice: once to
   fix the bug, and once to insert a firewall which would have arrested
   the bug before it did quite as much damage.
     _________________________________________________________________

   Node:firewall machine, Next:[5147]fireworks mode,
   Previous:[5148]firewall code, Up:[5149]= F =

   firewall machine n.

   A dedicated gateway machine with special security precautions on it,
   used to service outside network connections and dial-in lines. The
   idea is to protect a cluster of more loosely administered machines
   hidden behind it from [5150]crackers. The typical firewall is an
   inexpensive micro-based Unix box kept clean of critical data, with a
   bunch of modems and public network ports on it but just one carefully
   watched connection back to the rest of the cluster. The special
   precautions may include threat monitoring, callback, and even a
   complete [5151]iron box keyable to particular incoming IDs or activity
   patterns. Syn. [5152]flytrap, [5153]Venus flytrap.

   [When first coined in the mid-1980s this term was pure jargon. Now
   (1999) it is techspeak, and has been retained only as an example of
   uptake --ESR]
     _________________________________________________________________

   Node:fireworks mode, Next:[5154]firmware, Previous:[5155]firewall
   machine, Up:[5156]= F =

   fireworks mode n.

   1. The mode a machine is sometimes said to be in when it is performing
   a [5157]crash and burn operation. 2. There is (or was) a more specific
   meaning of this term in the Amiga community. The word fireworks
   described the effects of a particularly serious crash which prevented
   the video pointer(s) from getting reset at the start of the vertical
   blank. This caused the DAC to scroll through the entire contents of
   CHIP (video or video+CPU) memory. Since each bit plane would scroll
   separately this was quite a spectacular effect.
     _________________________________________________________________

   Node:firmware, Next:[5158]firmy, Previous:[5159]fireworks mode,
   Up:[5160]= F =

   firmware /ferm'weir/ n.

   Embedded software contained in EPROM or flash memory. It isn't quite
   hardware, but at least doesn't have to be loaded from a disk like
   regular software. Hacker usage differs from straight techspeak in that
   hackers don't normally apply it to stuff that you can't possibly get
   at, such as the program that runs a pocket calculator. Instead, it
   implies that the firmware could be changed, even if doing so would
   mean opening a box and plugging in a new chip. A computer's BIOS is
   the classic example, although nowadays there is firmware in disk
   controllers, modems, video cards and even CD-ROM drives.
     _________________________________________________________________

   Node:firmy, Next:[5161]fish, Previous:[5162]firmware, Up:[5163]= F =

   firmy /fer'mee/ n.

   Syn. [5164]stiffy (a 3.5-inch floppy disk).
     _________________________________________________________________

   Node:fish, Next:[5165]FISH queue, Previous:[5166]firmy, Up:[5167]= F =

   fish n.

   [Adelaide University, Australia] 1. Another [5168]metasyntactic
   variable. See [5169]foo. Derived originally from the Monty Python skit
   in the middle of "The Meaning of Life" entitled "Find the Fish". 2. A
   pun for `microfiche'. A microfiche file cabinet may be referred to as
   a `fish tank'.
     _________________________________________________________________

   Node:FISH queue, Next:[5170]FITNR, Previous:[5171]fish, Up:[5172]= F =

   FISH queue n.

   [acronym, by analogy with FIFO (First In, First Out)] `First In, Still
   Here'. A joking way of pointing out that processing of a particular
   sequence of events or requests has stopped dead. Also `FISH mode' and
   `FISHnet'; the latter may be applied to any network that is running
   really slowly or exhibiting extreme flakiness.
     _________________________________________________________________

   Node:FITNR, Next:[5173]fix, Previous:[5174]FISH queue, Up:[5175]= F =

   FITNR // adj.

   [Thinking Machines, Inc.] Fixed In The Next Release. A written-only
   notation attached to bug reports. Often wishful thinking.
     _________________________________________________________________

   Node:fix, Next:[5176]FIXME, Previous:[5177]FITNR, Up:[5178]= F =

   fix n.,v.

   What one does when a problem has been reported too many times to be
   ignored.
     _________________________________________________________________

   Node:FIXME, Next:[5179]flag, Previous:[5180]fix, Up:[5181]= F =

   FIXME imp.

   [common] A standard tag often put in C comments near a piece of code
   that needs work. The point of doing so is that a grep or a similar
   pattern-matching tool can find all such places quickly.
/* FIXME: note this is common in [5182]GNU code. */

   Compare [5183]XXX.
     _________________________________________________________________

   Node:flag, Next:[5184]flag day, Previous:[5185]FIXME, Up:[5186]= F =

   flag n.

   [very common] A variable or quantity that can take on one of two
   values; a bit, particularly one that is used to indicate one of two
   outcomes or is used to control which of two things is to be done.
   "This flag controls whether to clear the screen before printing the
   message." "The program status word contains several flag bits." Used
   of humans analogously to [5187]bit. See also [5188]hidden flag,
   [5189]mode bit.
     _________________________________________________________________

   Node:flag day, Next:[5190]flaky, Previous:[5191]flag, Up:[5192]= F =

   flag day n.

   A software change that is neither forward- nor backward-compatible,
   and which is costly to make and costly to reverse. "Can we install
   that without causing a flag day for all users?" This term has nothing
   to do with the use of the word [5193]flag to mean a variable that has
   two values. It came into use when a massive change was made to the
   [5194]Multics timesharing system to convert from the short-lived 1965
   version of the ASCII code to the 1967 version (in draft at the time);
   this was scheduled for Flag Day (a U.S. holiday), June 14, 1966. The
   actual change moved the code point for the ASCII newline character;
   this required that all of the Multics source code, documentation, and
   device drivers be changed simultaneously. See also [5195]backward
   combatability.
     _________________________________________________________________

   Node:flaky, Next:[5196]flamage, Previous:[5197]flag day, Up:[5198]= F
   =

   flaky adj.

   (var sp. `flakey') Subject to frequent [5199]lossage. This use is of
   course related to the common slang use of the word to describe a
   person as eccentric, crazy, or just unreliable. A system that is flaky
   is working, sort of -- enough that you are tempted to try to use it --
   but fails frequently enough that the odds in favor of finishing what
   you start are low. Commonwealth hackish prefers [5200]dodgy or
   [5201]wonky.
     _________________________________________________________________

   Node:flamage, Next:[5202]flame, Previous:[5203]flaky, Up:[5204]= F =

   flamage /flay'm*j/ n.

   [very common] Flaming verbiage, esp. high-noise, low-signal postings
   to [5205]Usenet or other electronic [5206]fora. Often in the phrase
   `the usual flamage'. `Flaming' is the act itself; `flamage' the
   content; a `flame' is a single flaming message. See [5207]flame, also
   [5208]dahmum.
     _________________________________________________________________

   Node:flame, Next:[5209]flame bait, Previous:[5210]flamage, Up:[5211]=
   F =

   flame

   [at MIT, orig. from the phrase `flaming asshole'] 1. vi. To post an
   email message intended to insult and provoke. 2. vi. To speak
   incessantly and/or rabidly on some relatively uninteresting subject or
   with a patently ridiculous attitude. 3. vt. Either of senses 1 or 2,
   directed with hostility at a particular person or people. 4. n. An
   instance of flaming. When a discussion degenerates into useless
   controversy, one might tell the participants "Now you're just flaming"
   or "Stop all that flamage!" to try to get them to cool down (so to
   speak).

   The term may have been independently invented at several different
   places. It has been reported from MIT, Carleton College and RPI (among
   many other places) from as far back as 1969, and from the University
   of Virginia in the early 1960s.

   It is possible that the hackish sense of `flame' is much older than
   that. The poet Chaucer was also what passed for a wizard hacker in his
   time; he wrote a treatise on the astrolabe, the most advanced
   computing device of the day. In Chaucer's "Troilus and Cressida",
   Cressida laments her inability to grasp the proof of a particular
   mathematical theorem; her uncle Pandarus then observes that it's
   called "the fleminge of wrecches." This phrase seems to have been
   intended in context as "that which puts the wretches to flight" but
   was probably just as ambiguous in Middle English as "the flaming of
   wretches" would be today. One suspects that Chaucer would feel right
   at home on Usenet.
     _________________________________________________________________

   Node:flame bait, Next:[5212]flame on, Previous:[5213]flame, Up:[5214]=
   F =

   flame bait n.

   [common] A posting intended to trigger a [5215]flame war, or one that
   invites flames in reply. See also [5216]troll.
     _________________________________________________________________

   Node:flame on, Next:[5217]flame war, Previous:[5218]flame bait,
   Up:[5219]= F =

   flame on vi.,interj.

   1. To begin to [5220]flame. The punning reference to Marvel Comics's
   Human Torch is no longer widely recognized. 2. To continue to flame.
   See [5221]rave, [5222]burble.
     _________________________________________________________________

   Node:flame war, Next:[5223]flamer, Previous:[5224]flame on, Up:[5225]=
   F =

   flame war n.

   [common] (var. `flamewar') An acrimonious dispute, especially when
   conducted on a public electronic forum such as [5226]Usenet.
     _________________________________________________________________

   Node:flamer, Next:[5227]flap, Previous:[5228]flame war, Up:[5229]= F =

   flamer n.

   [common] One who habitually [5230]flames. Said esp. of obnoxious
   [5231]Usenet personalities.
     _________________________________________________________________

   Node:flap, Next:[5232]flarp, Previous:[5233]flamer, Up:[5234]= F =

   flap vt.

   1. [obs.] To unload a DECtape (so it goes flap, flap, flap...).
   Old-time hackers at MIT tell of the days when the disk was device 0
   and DEC microtapes were 1, 2,... and attempting to flap device 0 would
   instead start a motor banging inside a cabinet near the disk. 2. By
   extension, to unload any magnetic tape. See also [5235]macrotape.
   Modern cartridge tapes no longer actually flap, but the usage has
   remained. (The term could well be re-applied to DEC's TK50 cartridge
   tape drive, a spectacularly misengineered contraption which makes a
   loud flapping sound, almost like an old reel-type lawnmower, in one of
   its many tape-eating failure modes.)
     _________________________________________________________________

   Node:flarp, Next:[5236]flash crowd, Previous:[5237]flap, Up:[5238]= F
   =

   flarp /flarp/ n.

   [Rutgers University] Yet another [5239]metasyntactic variable (see
   [5240]foo). Among those who use it, it is associated with a legend
   that any program not containing the word `flarp' somewhere will not
   work. The legend is discreetly silent on the reliability of programs
   which do contain the magic word.
     _________________________________________________________________

   Node:flash crowd, Next:[5241]flat, Previous:[5242]flarp, Up:[5243]= F
   =

   flash crowd

   Larry Niven's 1973 SF short story "Flash Crowd" predicted that one
   consequence of cheap teleportation would be huge crowds materializing
   almost instantly at the sites of interesting news stories. Twenty
   years later the term passed into common use on the Internet to
   describe exponential spikes in website or server usage when one passes
   a certain threshold of popular interest (this may also be called
   [5244]slashdot effect).
     _________________________________________________________________

   Node:flat, Next:[5245]flat-ASCII, Previous:[5246]flash crowd,
   Up:[5247]= F =

   flat adj.

   1. [common] Lacking any complex internal structure. "That [5248]bitty
   box has only a flat filesystem, not a hierarchical one." The verb form
   is [5249]flatten. 2. Said of a memory architecture (like that of the
   VAX or 680x0) that is one big linear address space (typically with
   each possible value of a processor register corresponding to a unique
   core address), as opposed to a `segmented' architecture (like that of
   the 80x86) in which addresses are composed from a base-register/offset
   pair (segmented designs are generally considered [5250]cretinous).

   Note that sense 1 (at least with respect to filesystems) is usually
   used pejoratively, while sense 2 is a [5251]Good Thing.
     _________________________________________________________________

   Node:flat-ASCII, Next:[5252]flat-file, Previous:[5253]flat, Up:[5254]=
   F =

   flat-ASCII adj.

   [common] Said of a text file that contains only 7-bit ASCII characters
   and uses only ASCII-standard control characters (that is, has no
   embedded codes specific to a particular text formatter markup
   language, or output device, and no [5255]meta-characters). Syn.
   [5256]plain-ASCII. Compare [5257]flat-file.
     _________________________________________________________________

   Node:flat-file, Next:[5258]flatten, Previous:[5259]flat-ASCII,
   Up:[5260]= F =

   flat-file adj.

   A [5261]flattened representation of some database or tree or network
   structure as a single file from which the structure could implicitly
   be rebuilt, esp. one in [5262]flat-ASCII form. See also
   [5263]sharchive.
     _________________________________________________________________

   Node:flatten, Next:[5264]flavor, Previous:[5265]flat-file, Up:[5266]=
   F =

   flatten vt.

   [common] To remove structural information, esp. to filter something
   with an implicit tree structure into a simple sequence of leaves; also
   tends to imply mapping to [5267]flat-ASCII. "This code flattens an
   expression with parentheses into an equivalent [5268]canonical form."
     _________________________________________________________________

   Node:flavor, Next:[5269]flavorful, Previous:[5270]flatten, Up:[5271]=
   F =

   flavor n.

   1. [common] Variety, type, kind. "DDT commands come in two flavors."
   "These lights come in two flavors, big red ones and small green ones."
   "Linux is a flavor of Unix" See [5272]vanilla. 2. The attribute that
   causes something to be [5273]flavorful. Usually used in the phrase
   "yields additional flavor". "This convention yields additional flavor
   by allowing one to print text either right-side-up or upside-down."
   See [5274]vanilla. This usage was certainly reinforced by the
   terminology of quantum chromodynamics, in which quarks (the
   constituents of, e.g., protons) come in six flavors (up, down,
   strange, charm, top, bottom) and three colors (red, blue, green) --
   however, hackish use of `flavor' at MIT predated QCD. 3. The term for
   `class' (in the object-oriented sense) in the LISP Machine Flavors
   system. Though the Flavors design has been superseded (notably by the
   Common LISP CLOS facility), the term `flavor' is still used as a
   general synonym for `class' by some LISP hackers.
     _________________________________________________________________

   Node:flavorful, Next:[5275]flippy, Previous:[5276]flavor, Up:[5277]= F
   =

   flavorful adj.

   Full of [5278]flavor (sense 2); esthetically pleasing. See
   [5279]random and [5280]losing for antonyms. See also the entries for
   [5281]taste and [5282]elegant.
     _________________________________________________________________

   Node:flippy, Next:[5283]flood, Previous:[5284]flavorful, Up:[5285]= F
   =

   flippy /flip'ee/ n.

   A single-sided floppy disk altered for double-sided use by addition of
   a second write-notch, so called because it must be flipped over for
   the second side to be accessible. No longer common.
     _________________________________________________________________

   Node:flood, Next:[5286]flowchart, Previous:[5287]flippy, Up:[5288]= F
   =

   flood v.

   [common] 1. To overwhelm a network channel with mechanically-generated
   traffic; especially used of IP, TCP/IP, UDP, or ICMP denial-of-service
   attacks. 2. To dump large amounts of text onto an [5289]IRC channel.
   This is especially rude when the text is uninteresting and the other
   users are trying to carry on a serious conversation. Also used in a
   similar sense on Usenet. 3. [Usenet] To post an unusually large number
   or volume of files on a related topic.
     _________________________________________________________________

   Node:flowchart, Next:[5290]flower key, Previous:[5291]flood,
   Up:[5292]= F =

   flowchart n.

   [techspeak] An archaic form of visual control-flow specification
   employing arrows and `speech balloons' of various shapes. Hackers
   never use flowcharts, consider them extremely silly, and associate
   them with [5293]COBOL programmers, [5294]card wallopers, and other
   lower forms of life. This attitude follows from the observations that
   flowcharts (at least from a hacker's point of view) are no easier to
   read than code, are less precise, and tend to fall out of sync with
   the code (so that they either obfuscate it rather than explaining it,
   or require extra maintenance effort that doesn't improve the code).
   See also [5295]PDL, sense 1.
     _________________________________________________________________

   Node:flower key, Next:[5296]flush, Previous:[5297]flowchart,
   Up:[5298]= F =

   flower key n.

   [Mac users] See [5299]feature key.
     _________________________________________________________________

   Node:flush, Next:[5300]flypage, Previous:[5301]flower key, Up:[5302]=
   F =

   flush v.

   1. [common] To delete something, usually superfluous, or to abort an
   operation. "All that nonsense has been flushed." 2. [Unix/C] To force
   buffered I/O to disk, as with an fflush(3) call. This is not an abort
   or deletion as in sense 1, but a demand for early completion! 3. To
   leave at the end of a day's work (as opposed to leaving for a meal).
   "I'm going to flush now." "Time to flush." 4. To exclude someone from
   an activity, or to ignore a person.

   `Flush' was standard ITS terminology for aborting an output operation;
   one spoke of the text that would have been printed, but was not, as
   having been flushed. It is speculated that this term arose from a
   vivid image of flushing unwanted characters by hosing down the
   internal output buffer, washing the characters away before they could
   be printed. The Unix/C usage, on the other hand, was propagated by the
   fflush(3) call in C's standard I/O library (though it is reported to
   have been in use among BLISS programmers at [5303]DEC and on Honeywell
   and IBM machines as far back as 1965). Unix/C hackers found the ITS
   usage confusing, and vice versa.
     _________________________________________________________________

   Node:flypage, Next:[5304]Flyspeck 3, Previous:[5305]flush, Up:[5306]=
   F =

   flypage /fli:'payj/ n.

   (alt. `fly page') A [5307]banner, sense 1.
     _________________________________________________________________

   Node:Flyspeck 3, Next:[5308]flytrap, Previous:[5309]flypage,
   Up:[5310]= F =

   Flyspeck 3 n.

   Standard name for any font that is so tiny as to be unreadable (by
   analogy with names like `Helvetica 10' for 10-point Helvetica). Legal
   boilerplate is usually printed in Flyspeck 3.
     _________________________________________________________________

   Node:flytrap, Next:[5311]FM, Previous:[5312]Flyspeck 3, Up:[5313]= F =

   flytrap n.

   [rare] See [5314]firewall machine.
     _________________________________________________________________

   Node:FM, Next:[5315]fnord, Previous:[5316]flytrap, Up:[5317]= F =

   FM /F-M/ n.

   1. [common] Not `Frequency Modulation' but rather an abbreviation for
   `Fucking Manual', the back-formation from [5318]RTFM. Used to refer to
   the manual itself in the [5319]RTFM. "Have you seen the Networking FM
   lately?" 2. Abbreviation for "Fucking Magic", used in the sense of
   [5320]black magic.
     _________________________________________________________________

   Node:fnord, Next:[5321]FOAF, Previous:[5322]FM, Up:[5323]= F =

   fnord n.

   [from the "Illuminatus Trilogy"] 1. A word used in email and news
   postings to tag utterances as surrealist mind-play or humor, esp. in
   connection with [5324]Discordianism and elaborate conspiracy theories.
   "I heard that David Koresh is sharing an apartment in Argentina with
   Hitler. (Fnord.)" "Where can I fnord get the Principia Discordia
   from?" 2. A [5325]metasyntactic variable, commonly used by hackers
   with ties to [5326]Discordianism or the [5327]Church of the SubGenius.
     _________________________________________________________________

   Node:FOAF, Next:[5328]FOD, Previous:[5329]fnord, Up:[5330]= F =

   FOAF // n.

   [Usenet; common] Acronym for `Friend Of A Friend'. The source of an
   unverified, possibly untrue story. This term was not originated by
   hackers (it is used in Jan Brunvand's books on urban folklore), but is
   much better recognized on Usenet and elsewhere than in mainstream
   English.
     _________________________________________________________________

   Node:FOD, Next:[5331]fold case, Previous:[5332]FOAF, Up:[5333]= F =

   FOD /fod/ v.

   [Abbreviation for `Finger of Death', originally a spell-name from
   fantasy gaming] To terminate with extreme prejudice and with no regard
   for other people. From [5334]MUDs where the wizard command `FOD
   <player>' results in the immediate and total death of <player>,
   usually as punishment for obnoxious behavior. This usage migrated to
   other circumstances, such as "I'm going to fod the process that is
   burning all the cycles." Compare [5335]gun.

   In aviation, FOD means Foreign Object Damage, e.g., what happens when
   a jet engine sucks up a rock on the runway or a bird in flight. Finger
   of Death is a distressingly apt description of what this generally
   does to the engine.
     _________________________________________________________________

   Node:fold case, Next:[5336]followup, Previous:[5337]FOD, Up:[5338]= F
   =

   fold case v.

   See [5339]smash case. This term tends to be used more by people who
   don't mind that their tools smash case. It also connotes that case is
   ignored but case distinctions in data processed by the tool in
   question aren't destroyed.
     _________________________________________________________________

   Node:followup, Next:[5340]fontology, Previous:[5341]fold case,
   Up:[5342]= F =

   followup n.

   [common] On Usenet, a [5343]posting generated in response to another
   posting (as opposed to a [5344]reply, which goes by email rather than
   being broadcast). Followups include the ID of the [5345]parent message
   in their headers; smart news-readers can use this information to
   present Usenet news in `conversation' sequence rather than
   order-of-arrival. See [5346]thread.
     _________________________________________________________________

   Node:fontology, Next:[5347]foo, Previous:[5348]followup, Up:[5349]= F
   =

   fontology n.

   [XEROX PARC] The body of knowledge dealing with the construction and
   use of new fonts (e.g., for window systems and typesetting software).
   It has been said that fontology recapitulates file-ogeny.

   [Unfortunately, this reference to the embryological dictum that
   "Ontogeny recapitulates phylogeny" is not merely a joke. On the
   Macintosh, for example, System 7 has to go through contortions to
   compensate for an earlier design error that created a whole different
   set of abstractions for fonts parallel to `files' and `folders' --ESR]
     _________________________________________________________________

   Node:foo, Next:[5350]foobar, Previous:[5351]fontology, Up:[5352]= F =

   foo /foo/

   1. interj. Term of disgust. 2. [very common] Used very generally as a
   sample name for absolutely anything, esp. programs and files (esp.
   scratch files). 3. First on the standard list of [5353]metasyntactic
   variables used in syntax examples. See also [5354]bar, [5355]baz,
   [5356]qux, [5357]quux, [5358]corge, [5359]grault, [5360]garply,
   [5361]waldo, [5362]fred, [5363]plugh, [5364]xyzzy, [5365]thud.

   When `foo' is used in connection with `bar' it has generally traced to
   the WWII-era Army slang acronym [5366]FUBAR (`Fucked Up Beyond All
   Repair'), later modified to [5367]foobar. Early versions of the Jargon
   File interpreted this change as a post-war bowdlerization, but it it
   now seems more likely that FUBAR was itself a derivative of `foo'
   perhaps influenced by German `furchtbar' (terrible) - `foobar' may
   actually have been the original form.

   For, it seems, the word `foo' itself had an immediate prewar history
   in comic strips and cartoons. The earliest documented uses were in the
   "Smokey Stover" comic strip popular in the 1930s, which frequently
   included the word "foo". Bill Holman, the author of the strip, filled
   it with odd jokes and personal contrivances, including other nonsense
   phrases such as "Notary Sojac" and "1506 nix nix". According to the
   [5368]Warner Brothers Cartoon Companion Holman claimed to have found
   the word "foo" on the bottom of a Chinese figurine. This is plausible;
   Chinese statuettes often have apotropaic inscriptions, and this may
   have been the Chinese word `fu' (sometimes transliterated `foo'),
   which can mean "happiness" when spoken with the proper tone (the
   lion-dog guardians flanking the steps of many Chinese restaurants are
   properly called "fu dogs"). English speakers' reception of Holman's
   `foo' nonsense word was undoubtedly influenced by Yiddish `feh' and
   English `fooey' and `fool'.

   Holman's strip featured a firetruck called the Foomobile that rode on
   two wheels. The comic strip was tremendously popular in the late
   1930s, and legend has it that a manufacturer in Indiana even produced
   an operable version of Holman's Foomobile. According to the
   Encyclopedia of American Comics, `Foo' fever swept the U.S., finding
   its way into popular songs and generating over 500 `Foo Clubs.' The
   fad left `foo' references embedded in popular culture (including a
   couple of appearances in Warner Brothers cartoons of 1938-39) but with
   their origins rapidly forgotten.

   One place they are known to have remained live is in the U.S. military
   during the WWII years. In 1944-45, the term `foo fighters' was in use
   by radar operators for the kind of mysterious or spurious trace that
   would later be called a UFO (the older term resurfaced in popular
   American usage in 1995 via the name of one of the better grunge-rock
   bands). Informants connected the term to the Smokey Stover strip.

   The U.S. and British militaries frequently swapped slang terms during
   the war (see [5369]kluge and [5370]kludge for another important
   example) Period sources reported that `FOO' became a semi-legendary
   subject of WWII British-army graffiti more or less equivalent to the
   American Kilroy. Where British troops went, the graffito "FOO was
   here" or something similar showed up. Several slang dictionaries aver
   that FOO probably came from Forward Observation Officer, but this
   (like the contemporaneous "FUBAR") was probably a [5371]backronym .
   Forty years later, Paul Dickson's excellent book "Words" (Dell, 1982,
   ISBN 0-440-52260-7) traced "Foo" to an unspecified British naval
   magazine in 1946, quoting as follows: "Mr. Foo is a mysterious Second
   World War product, gifted with bitter omniscience and sarcasm."

   Earlier versions of this entry suggested the possibility that hacker
   usage actually sprang from "FOO, Lampoons and Parody", the title of a
   comic book first issued in September 1958, a joint project of Charles
   and Robert Crumb. Though Robert Crumb (then in his mid-teens) later
   became one of the most important and influential artists in
   underground comics, this venture was hardly a success; indeed, the
   brothers later burned most of the existing copies in disgust. The
   title FOO was featured in large letters on the front cover. However,
   very few copies of this comic actually circulated, and students of
   Crumb's `oeuvre' have established that this title was a reference to
   the earlier Smokey Stover comics. The Crumbs may also have been
   influenced by a short-lived Canadian parody magazine named `Foo'
   published in 1951-52.

   An old-time member reports that in the 1959 "Dictionary of the TMRC
   Language", compiled at [5372]TMRC, there was an entry that went
   something like this:

     FOO: The first syllable of the sacred chant phrase "FOO MANE PADME
     HUM." Our first obligation is to keep the foo counters turning.

   (For more about the legendary foo counters, see [5373]TMRC.) This
   definition used Bill Holman's nonsense word, only then two decades old
   and demonstrably still live in popular culture and slang, to a
   [5374]ha ha only serious analogy with esoteric Tibetan Buddhism.
   Today's hackers would find it difficult to resist elaborating a joke
   like that, and it is not likely 1959's were any less susceptible.
   Almost the entire staff of what later became the MIT AI Lab was
   involved with TMRC, and the word spread from there.
     _________________________________________________________________

   Node:foobar, Next:[5375]fool, Previous:[5376]foo, Up:[5377]= F =

   foobar n.

   [very common] Another widely used [5378]metasyntactic variable; see
   [5379]foo for etymology. Probably originally propagated through
   DECsystem manuals by Digital Equipment Corporation ([5380]DEC) in
   1960s and early 1970s; confirmed sightings there go back to 1972.
   Hackers do not generally use this to mean [5381]FUBAR in either the
   slang or jargon sense. See also [5382]Fred Foobar. In RFC1639,
   "FOOBAR" was made an abbreviation for "FTP Operation Over Big Address
   Records", but this was an obvious [5383]backronym.
     _________________________________________________________________

   Node:fool, Next:[5384]fool file, Previous:[5385]foobar, Up:[5386]= F =

   fool n.

   As used by hackers, specifically describes a person who habitually
   reasons from obviously or demonstrably incorrect premises and cannot
   be persuaded by evidence to do otherwise; it is not generally used in
   its other senses, i.e., to describe a person with a native incapacity
   to reason correctly, or a clown. Indeed, in hackish experience many
   fools are capable of reasoning all too effectively in executing their
   errors. See also [5387]cretin, [5388]loser, [5389]fool file.

   The Algol 68-R compiler used to initialize its storage to the
   character string "F00LF00LF00LF00L..." because as a pointer or as a
   floating point number it caused a crash, and as an integer or a
   character string it was very recognizable in a dump. Sadly, one day a
   very senior professor at Nottingham University wrote a program that
   called him a fool. He proceeded to demonstrate the correctness of this
   assertion by lobbying the university (not quite successfully) to
   forbid the use of Algol on its computers. See also [5390]DEADBEEF.
     _________________________________________________________________

   Node:fool file, Next:[5391]Foonly, Previous:[5392]fool, Up:[5393]= F =

   fool file n.

   [Usenet] A notional repository of all the most dramatically and
   abysmally stupid utterances ever. An entire subgenre of [5394]sig
   blocks consists of the header "From the fool file:" followed by some
   quote the poster wishes to represent as an immortal gem of dimwittery;
   for this usage to be really effective, the quote has to be so
   obviously wrong as to be laughable. More than one Usenetter has
   achieved an unwanted notoriety by being quoted in this way.
     _________________________________________________________________

   Node:Foonly, Next:[5395]footprint, Previous:[5396]fool file,
   Up:[5397]= F =

   Foonly n.

   1. The [5398]PDP-10 successor that was to have been built by the Super
   Foonly project at the Stanford Artificial Intelligence Laboratory
   along with a new operating system. (The name itself came from FOO NLI,
   an error message emitted by a PDP-10 assembler at SAIL meaning "FOO is
   Not a Legal Identifier". The intention was to leapfrog from the old
   [5399]DEC timesharing system SAIL was then running to a new
   generation, bypassing TENEX which at that time was the ARPANET
   standard. ARPA funding for both the Super Foonly and the new operating
   system was cut in 1974. Most of the design team went to DEC and
   contributed greatly to the design of the PDP-10 model KL10. 2. The
   name of the company formed by Dave Poole, one of the principal Super
   Foonly designers, and one of hackerdom's more colorful personalities.
   Many people remember the parrot which sat on Poole's shoulder and was
   a regular companion. 3. Any of the machines built by Poole's company.
   The first was the F-1 (a.k.a. Super Foonly), which was the
   computational engine used to create the graphics in the movie "TRON".
   The F-1 was the fastest PDP-10 ever built, but only one was ever made.
   The effort drained Foonly of its financial resources, and the company
   turned towards building smaller, slower, and much less expensive
   machines. Unfortunately, these ran not the popular [5400]TOPS-20 but a
   TENEX variant called Foonex; this seriously limited their market.
   Also, the machines shipped were actually wire-wrapped engineering
   prototypes requiring individual attention from more than usually
   competent site personnel, and thus had significant reliability
   problems. Poole's legendary temper and unwillingness to suffer fools
   gladly did not help matters. By the time of the Jupiter project
   cancellation in 1983, Foonly's proposal to build another F-1 was
   eclipsed by the [5401]Mars, and the company never quite recovered. See
   the [5402]Mars entry for the continuation and moral of this story.
     _________________________________________________________________

   Node:footprint, Next:[5403]for free, Previous:[5404]Foonly, Up:[5405]=
   F =

   footprint n.

   1. The floor or desk area taken up by a piece of hardware. 2. [IBM]
   The audit trail (if any) left by a crashed program (often in plural,
   `footprints'). See also [5406]toeprint. 3. RAM footprint: The minimum
   amount of RAM which an OS or other program takes; this figure gives
   one an idea of how much will be left for other applications. How
   actively this RAM is used is another matter entirely. Recent
   tendencies to featuritis and software bloat can expand the RAM
   footprint of an OS to the point of making it nearly unusable in
   practice. [This problem is, thankfully, limited to operating systems
   so stupid that they don't do virtual memory - ESR]
     _________________________________________________________________

   Node:for free, Next:[5407]for the rest of us,
   Previous:[5408]footprint, Up:[5409]= F =

   for free adj.

   [common] Said of a capability of a programming language or hardware
   that is available by its design without needing cleverness to
   implement: "In APL, we get the matrix operations for free." "And owing
   to the way revisions are stored in this system, you get revision trees
   for free." The term usually refers to a serendipitous feature of doing
   things a certain way (compare [5410]big win), but it may refer to an
   intentional but secondary feature.
     _________________________________________________________________

   Node:for the rest of us, Next:[5411]for values of, Previous:[5412]for
   free, Up:[5413]= F =

   for the rest of us adj.

   [from the Mac slogan "The computer for the rest of us"] 1. Used to
   describe a [5414]spiffy product whose affordability shames other
   comparable products, or (more often) used sarcastically to describe
   [5415]spiffy but very overpriced products. 2. Describes a program with
   a limited interface, deliberately limited capabilities,
   non-orthogonality, inability to compose primitives, or any other
   limitation designed to not `confuse' a naive user. This places an
   upper bound on how far that user can go before the program begins to
   get in the way of the task instead of helping accomplish it. Used in
   reference to Macintosh software which doesn't provide obvious
   capabilities because it is thought that the poor lusers might not be
   able to handle them. Becomes `the rest of them' when used in
   third-party reference; thus, "Yes, it is an attractive program, but
   it's designed for The Rest Of Them" means a program that superficially
   looks neat but has no depth beyond the surface flash. See also
   [5416]WIMP environment, [5417]Macintrash, [5418]point-and-drool
   interface, [5419]user-friendly.
     _________________________________________________________________

   Node:for values of, Next:[5420]fora, Previous:[5421]for the rest of
   us, Up:[5422]= F =

   for values of

   [MIT] A common rhetorical maneuver at MIT is to use any of the
   canonical [5423]random numbers as placeholders for variables. "The max
   function takes 42 arguments, for arbitrary values of 42." "There are
   69 ways to leave your lover, for 69 = 50." This is especially likely
   when the speaker has uttered a random number and realizes that it was
   not recognized as such, but even `non-random' numbers are occasionally
   used in this fashion. A related joke is that pi equals 3 -- for small
   values of pi and large values of 3.

   Historical note: at MIT this usage has traditionally been traced to
   the programming language MAD (Michigan Algorithm Decoder), an
   Algol-58-like language that was the most common choice among
   mainstream (non-hacker) users at MIT in the mid-60s. It inherited from
   Algol-58 a control structure FOR VALUES OF X = 3, 7, 99 DO ... that
   would repeat the indicated instructions for each value in the list
   (unlike the usual FOR that only works for arithmetic sequences of
   values). MAD is long extinct, but similar for-constructs still
   flourish (e.g., in Unix's shell languages).
     _________________________________________________________________

   Node:fora, Next:[5424]foreground, Previous:[5425]for values of,
   Up:[5426]= F =

   fora pl.n.

   Plural of [5427]forum.
     _________________________________________________________________

   Node:foreground, Next:[5428]fork, Previous:[5429]fora, Up:[5430]= F =

   foreground vt.

   [Unix; common] To bring a task to the top of one's [5431]stack for
   immediate processing, and hackers often use it in this sense for
   non-computer tasks. "If your presentation is due next week, I guess
   I'd better foreground writing up the design document."

   Technically, on a time-sharing system, a task executing in foreground
   is one able to accept input from and return output to the user; oppose
   [5432]background. Nowadays this term is primarily associated with
   [5433]Unix, but it appears first to have been used in this sense on
   OS/360. Normally, there is only one foreground task per terminal (or
   terminal window); having multiple processes simultaneously reading the
   keyboard is a good way to [5434]lose.
     _________________________________________________________________

   Node:fork, Next:[5435]fork bomb, Previous:[5436]foreground, Up:[5437]=
   F =

   fork

   In the open-source community, a fork is what occurs when two (or more)
   versions of a software package's source code are being developed in
   parallel which once shared a common code base, and these multiple
   versions of the source code have irreconcilable differences between
   them. This should not be confused with a development branch, which may
   later be folded back into the original source code base. Nor should it
   be confused with what happens when a new distribution of Linux or some
   other distribution is created, because that largely assembles pieces
   than can and will be used in other distributions without conflict.

   Forking is uncommon; in fact, it is so uncommon that individual
   instances loom large in hacker folklore. Notable in this class were
   the [5438]http://www.xemacs.org/About/XEmacsVsGNUemacs.html, the
   GCC/EGCS fork (later healed by a merger) and the forks among the
   FreeBSD, NetBSD, and OpenBSD operating systems.
     _________________________________________________________________

   Node:fork bomb, Next:[5439]forked, Previous:[5440]fork, Up:[5441]= F =

   fork bomb n.

   [Unix] A particular species of [5442]wabbit that can be written in one
   line of C (main() {for(;;)fork();}) or shell ($0 & $0 &) on any Unix
   system, or occasionally created by an egregious coding bug. A fork
   bomb process `explodes' by recursively spawning copies of itself
   (using the Unix system call fork(2)). Eventually it eats all the
   process table entries and effectively wedges the system. Fortunately,
   fork bombs are relatively easy to spot and kill, so creating one
   deliberately seldom accomplishes more than to bring the just wrath of
   the gods down upon the perpetrator. See also [5443]logic bomb.
     _________________________________________________________________

   Node:forked, Next:[5444]Fortrash, Previous:[5445]fork bomb, Up:[5446]=
   F =

   forked adj.,vi.

   1. [common after 1997, esp. in the Linux community] An open-source
   software project is said to have forked or be forked when the project
   group fissions into two or more parts pursuing separate lines of
   development (or, less commonly, when a third party unconnected to the
   project group ). Forking is considered a [5447]Bad Thing - not merely
   because it implies a lot of wasted effort in the future, but because
   forks tend to be accompanied by a great deal of strife and acrimony
   between the successor groups over issues of legitimacy, succession,
   and design direction. There is serious social pressure against
   forking. As a result, major forks (such as the Gnu-Emacs/XEmacs split,
   the fissionings of the 386BSD group into three daughter project, and
   the short-lived GCC/EGCS split) are rare enough that they are
   remembered individually in hacker folklore. 2. [Unix; uncommon; prob.
   influenced by a mainstream expletive] Terminally slow, or dead.
   Originated when one system was slowed to a snail's pace by an
   inadvertent [5448]fork bomb.
     _________________________________________________________________

   Node:Fortrash, Next:[5449]fortune cookie, Previous:[5450]forked,
   Up:[5451]= F =

   Fortrash /for'trash/ n.

   Hackerism for the FORTRAN (FORmula TRANslator) language, referring to
   its primitive design, gross and irregular syntax, limited control
   constructs, and slippery, exception-filled semantics.
     _________________________________________________________________

   Node:fortune cookie, Next:[5452]forum, Previous:[5453]Fortrash,
   Up:[5454]= F =

   fortune cookie n.

   [WAITS, via Unix; common] A random quote, item of trivia, joke, or
   maxim printed to the user's tty at login time or (less commonly) at
   logout time. Items from this lexicon have often been used as fortune
   cookies. See [5455]cookie file.
     _________________________________________________________________

   Node:forum, Next:[5456]fossil, Previous:[5457]fortune cookie,
   Up:[5458]= F =

   forum n.

   [Usenet, GEnie, CI$; pl. `fora' or `forums'] Any discussion group
   accessible through a dial-in [5459]BBS, a [5460]mailing list, or a
   [5461]newsgroup (see [5462]the network). A forum functions much like a
   bulletin board; users submit [5463]postings for all to read and
   discussion ensues. Contrast real-time chat via [5464]talk mode or
   point-to-point personal [5465]email.
     _________________________________________________________________

   Node:fossil, Next:[5466]four-color glossies, Previous:[5467]forum,
   Up:[5468]= F =

   fossil n.

   1. In software, a misfeature that becomes understandable only in
   historical context, as a remnant of times past retained so as not to
   break compatibility. Example: the retention of octal as default base
   for string escapes in [5469]C, in spite of the better match of
   hexadecimal to ASCII and modern byte-addressable architectures. See
   [5470]dusty deck. 2. More restrictively, a feature with past but no
   present utility. Example: the force-all-caps (LCASE) bits in the V7
   and [5471]BSD Unix tty driver, designed for use with monocase
   terminals. (In a perversion of the usual backward-compatibility goal,
   this functionality has actually been expanded and renamed in some
   later [5472]USG Unix releases as the IUCLC and OLCUC bits.) 3. The
   FOSSIL (Fido/Opus/Seadog Standard Interface Level) driver
   specification for serial-port access to replace the [5473]brain-dead
   routines in the IBM PC ROMs. Fossils are used by most MS-DOS [5474]BBS
   software in preference to the `supported' ROM routines, which do not
   support interrupt-driven operation or setting speeds above 9600; the
   use of a semistandard FOSSIL library is preferable to the [5475]bare
   metal serial port programming otherwise required. Since the FOSSIL
   specification allows additional functionality to be hooked in, drivers
   that use the [5476]hook but do not provide serial-port access
   themselves are named with a modifier, as in `video fossil'.
     _________________________________________________________________

   Node:four-color glossies, Next:[5477]frag, Previous:[5478]fossil,
   Up:[5479]= F =

   four-color glossies n.

   1. Literature created by [5480]marketroids that allegedly contains
   technical specs but which is in fact as superficial as possible
   without being totally [5481]content-free. "Forget the four-color
   glossies, give me the tech ref manuals." Often applied as an
   indication of superficiality even when the material is printed on
   ordinary paper in black and white. Four-color-glossy manuals are never
   useful for solving a problem. 2. [rare] Applied by extension to manual
   pages that don't contain enough information to diagnose why the
   program doesn't produce the expected or desired output.
     _________________________________________________________________

   Node:frag, Next:[5482]fragile, Previous:[5483]four-color glossies,
   Up:[5484]= F =

   frag n.,v.

   [from Vietnam-era U.S. military slang via the games Doom and Quake] 1.
   To kill another player's [5485]avatar in a multiuser game. "I hold the
   office Quake record with 40 frags." 2. To completely ruin something.
   "Forget that power supply, the lightning strike fragged it. See also
   [5486]gib.
     _________________________________________________________________

   Node:fragile, Next:[5487]fred, Previous:[5488]frag, Up:[5489]= F =

   fragile adj.

   Syn [5490]brittle.
     _________________________________________________________________

   Node:fred, Next:[5491]Fred Foobar, Previous:[5492]fragile, Up:[5493]=
   F =

   fred n.

   1. The personal name most frequently used as a [5494]metasyntactic
   variable (see [5495]foo). Allegedly popular because it's easy for a
   non-touch-typist to type on a standard QWERTY keyboard. In Great
   Britain, `fred', `jim' and `sheila' are common metasyntactic variables
   because their uppercase versions were official names given to the 3
   memory areas that held I/O status registers on the lovingly-remembered
   BBC Microcomputer! (It is reported that SHEILA was poked the most
   often.) Unlike [5496]J. Random Hacker or `J. Random Loser', the name
   `fred' has no positive or negative loading (but see [5497]Dr. Fred
   Mbogo). See also [5498]barney. 2. An acronym for `Flipping Ridiculous
   Electronic Device'; other F-verbs may be substituted for `flipping'.
     _________________________________________________________________

   Node:Fred Foobar, Next:[5499]frednet, Previous:[5500]fred, Up:[5501]=
   F =

   Fred Foobar n.

   [5502]J. Random Hacker's cousin. Any typical human being, more or less
   synomous with `someone' except that Fred Foobar can be
   [5503]backreferenced by name later on. "So Fred Foobar will enter his
   phone number into the database, and it'll be archived with the others.
   Months later, when Fred searches..." See also [5504]Bloggs Family and
   [5505]Dr. Fred Mbogo
     _________________________________________________________________

   Node:frednet, Next:[5506]free software, Previous:[5507]Fred Foobar,
   Up:[5508]= F =

   frednet /fred'net/ n.

   Used to refer to some [5509]random and uncommon protocol encountered
   on a network. "We're implementing bridging in our router to solve the
   frednet problem."
     _________________________________________________________________

   Node:free software, Next:[5510]freeware, Previous:[5511]frednet,
   Up:[5512]= F =

   free software n.

   As defined by Richard M. Stallman and used by the Free Software
   movement, this means software that gives users enough freedom to be
   used by the free software community. Specifically, users must be free
   to modify the software for their private use, and free to redistribute
   it either with or without modifications, either commercially or
   noncommercially, either gratis or charging a distribution fee. Free
   software has existed since the dawn of computing; Free Software as a
   movement began in 1984 with the GNU Project. See also [5513]open
   source.
     _________________________________________________________________

   Node:freeware, Next:[5514]freeze, Previous:[5515]free software,
   Up:[5516]= F =

   freeware n.

   [common] Free software, often written by enthusiasts and distributed
   by users' groups, or via electronic mail, local bulletin boards,
   [5517]Usenet, or other electronic media. At one time, `freeware' was a
   trademark of Andrew Fluegelman, the author of the well-known MS-DOS
   comm program PC-TALK III. It wasn't enforced after his mysterious
   disappearance and presumed death in 1984. See [5518]shareware,
   [5519]FRS.
     _________________________________________________________________

   Node:freeze, Next:[5520]fried, Previous:[5521]freeware, Up:[5522]= F =

   freeze v.

   To lock an evolving software distribution or document against changes
   so it can be released with some hope of stability. Carries the strong
   implication that the item in question will `unfreeze' at some future
   date. "OK, fix that bug and we'll freeze for release."

   There are more specific constructions on this term. A `feature
   freeze', for example, locks out modifications intended to introduce
   new features but still allows bugfixes and completion of existing
   features; a `code freeze' connotes no more changes at all. At Sun
   Microsystems and elsewhere, one may also hear references to `code
   slush' -- that is, an almost-but-not-quite frozen state.
     _________________________________________________________________

   Node:fried, Next:[5523]frink, Previous:[5524]freeze, Up:[5525]= F =

   fried adj.

   1. [common] Non-working due to hardware failure; burnt out. Especially
   used of hardware brought down by a `power glitch' (see [5526]glitch),
   [5527]drop-outs, a short, or some other electrical event. (Sometimes
   this literally happens to electronic circuits! In particular,
   resistors can burn out and transformers can melt down, emitting
   noxious smoke -- see [5528]friode, [5529]SED and [5530]LER. However,
   this term is also used metaphorically.) Compare [5531]frotzed. 2.
   [common] Of people, exhausted. Said particularly of those who continue
   to work in such a state. Often used as an explanation or excuse.
   "Yeah, I know that fix destroyed the file system, but I was fried when
   I put it in." Esp. common in conjunction with `brain': "My brain is
   fried today, I'm very short on sleep."
     _________________________________________________________________

   Node:frink, Next:[5532]friode, Previous:[5533]fried, Up:[5534]= F =

   frink /frink/ v.

   The unknown ur-verb, fill in your own meaning. Found esp. on the
   Usenet newsgroup alt.fan.lemurs, where it is said that the lemurs know
   what `frink' means, but they aren't telling. Compare [5535]gorets.
     _________________________________________________________________

   Node:friode, Next:[5536]fritterware, Previous:[5537]frink, Up:[5538]=
   F =

   friode /fri:'ohd/ n.

   [TMRC] A reversible (that is, fused or blown) diode. Compare
   [5539]fried; see also [5540]SED, [5541]LER.
     _________________________________________________________________

   Node:fritterware, Next:[5542]frob, Previous:[5543]friode, Up:[5544]= F
   =

   fritterware n.

   An excess of capability that serves no productive end. The canonical
   example is font-diddling software on the Mac (see [5545]macdink); the
   term describes anything that eats huge amounts of time for quite
   marginal gains in function but seduces people into using it anyway.
   See also [5546]window shopping.
     _________________________________________________________________

   Node:frob, Next:[5547]frobnicate, Previous:[5548]fritterware,
   Up:[5549]= F =

   frob /frob/ 1. n.

   [MIT; very common] The [5550]TMRC definition was "FROB = a protruding
   arm or trunnion"; by metaphoric extension, a `frob' is any random
   small thing; an object that you can comfortably hold in one hand;
   something you can frob (sense 2). See [5551]frobnitz. 2. vt.
   Abbreviated form of [5552]frobnicate. 3. [from the [5553]MUD world] A
   command on some MUDs that changes a player's experience level (this
   can be used to make wizards); also, to request [5554]wizard privileges
   on the `professional courtesy' grounds that one is a wizard elsewhere.
   The command is actually `frobnicate' but is universally abbreviated to
   the shorter form.
     _________________________________________________________________

   Node:frobnicate, Next:[5555]frobnitz, Previous:[5556]frob, Up:[5557]=
   F =

   frobnicate /frob'ni-kayt/ vt.

   [Poss. derived from [5558]frobnitz, and usually abbreviated to
   [5559]frob, but `frobnicate' is recognized as the official full form.]
   To manipulate or adjust, to tweak. One frequently frobs bits or other
   2-state devices. Thus: "Please frob the light switch" (that is, flip
   it), but also "Stop frobbing that clasp; you'll break it". One also
   sees the construction `to frob a frob'. See [5560]tweak and
   [5561]twiddle.

   Usage: frob, twiddle, and tweak sometimes connote points along a
   continuum. `Frob' connotes aimless manipulation; `twiddle' connotes
   gross manipulation, often a coarse search for a proper setting;
   `tweak' connotes fine-tuning. If someone is turning a knob on an
   oscilloscope, then if he's carefully adjusting it, he is probably
   tweaking it; if he is just turning it but looking at the screen, he is
   probably twiddling it; but if he's just doing it because turning a
   knob is fun, he's frobbing it. The variant `frobnosticate' has been
   recently reported.
     _________________________________________________________________

   Node:frobnitz, Next:[5562]frog, Previous:[5563]frobnicate, Up:[5564]=
   F =

   frobnitz /frob'nits/, pl. `frobnitzem' /frob'nit-zm/ or `frobni'
   /frob'ni:/ n.

   [TMRC] An unspecified physical object, a widget. Also refers to
   electronic black boxes. This rare form is usually abbreviated to
   `frotz', or more commonly to [5565]frob. Also used are `frobnule'
   (/frob'n[y]ool/) and `frobule' (/frob'yool/). Starting perhaps in
   1979, `frobozz' /fr*-boz'/ (plural: `frobbotzim' /fr*-bot'zm/) has
   also become very popular, largely through its exposure as a name via
   [5566]Zork. These variants can also be applied to nonphysical objects,
   such as data structures.

   Pete Samson, compiler of the original [5567]TMRC lexicon, adds, "Under
   the TMRC [railroad] layout were many storage boxes, managed (in 1958)
   by David R. Sawyer. Several had fanciful designations written on them,
   such as `Frobnitz Coil Oil'. Perhaps DRS intended Frobnitz to be a
   proper name, but the name was quickly taken for the thing". This was
   almost certainly the origin of the term.
     _________________________________________________________________

   Node:frog, Next:[5568]frogging, Previous:[5569]frobnitz, Up:[5570]= F
   =

   frog alt. `phrog'

   1. interj. Term of disgust (we seem to have a lot of them). 2. Used as
   a name for just about anything. See [5571]foo. 3. n. Of things, a
   crock. 4. n. Of people, somewhere in between a turkey and a toad. 5.
   `froggy': adj. Similar to [5572]bagbiting, but milder. "This froggy
   program is taking forever to run!"
     _________________________________________________________________

   Node:frogging, Next:[5573]front end, Previous:[5574]frog, Up:[5575]= F
   =

   frogging [University of Waterloo] v.

   1. Partial corruption of a text file or input stream by some bug or
   consistent glitch, as opposed to random events like line noise or
   media failures. Might occur, for example, if one bit of each incoming
   character on a tty were stuck, so that some characters were correct
   and others were not. See [5576]terminak for a historical example and
   compare [5577]dread high-bit disease. 2. By extension, accidental
   display of text in a mode where the output device emits special
   symbols or mnemonics rather than conventional ASCII. This often
   happens, for example, when using a terminal or comm program on a
   device like an IBM PC with a special `high-half' character set and
   with the bit-parity assumption wrong. A hacker sufficiently familiar
   with ASCII bit patterns might be able to read the display anyway.
     _________________________________________________________________

   Node:front end, Next:[5578]frotz, Previous:[5579]frogging, Up:[5580]=
   F =

   front end n.

   1. An intermediary computer that does set-up and filtering for another
   (usually more powerful but less friendly) machine (a `back end'). 2.
   What you're talking to when you have a conversation with someone who
   is making replies without paying attention. "Look at the dancing
   elephants!" "Uh-huh." "Do you know what I just said?" "Sorry, you were
   talking to the front end." 3. Software that provides an interface to
   another program `behind' it, which may not be as user-friendly.
   Probably from analogy with hardware front-ends (see sense 1) that
   interfaced with mainframes.
     _________________________________________________________________

   Node:frotz, Next:[5581]frotzed, Previous:[5582]front end, Up:[5583]= F
   =

   frotz /frots/

   1. n. See [5584]frobnitz. 2. `mumble frotz': An interjection of
   mildest disgust.
     _________________________________________________________________

   Node:frotzed, Next:[5585]frowney, Previous:[5586]frotz, Up:[5587]= F =

   frotzed /frotst/ adj.

   [5588]down because of hardware problems. Compare [5589]fried. A
   machine that is merely frotzed may be fixable without replacing parts,
   but a fried machine is more seriously damaged.
     _________________________________________________________________

   Node:frowney, Next:[5590]FRS, Previous:[5591]frotzed, Up:[5592]= F =

   frowney n.

   (alt. `frowney face') See [5593]emoticon.
     _________________________________________________________________

   Node:FRS, Next:[5594]fry, Previous:[5595]frowney, Up:[5596]= F =

   FRS // n.,obs.

   Abbreviation for "Freely Redistributable Software" which entered
   general use on the Internet in 1995 after years of low-level confusion
   over what exactly to call software written to be passed around and
   shared (contending terms including [5597]freeware, [5598]shareware,
   and `sourceware' were never universally felt to be satisfactory for
   various subtle reasons). The first formal conference on freely
   redistributable software was held in Cambridge, Massachussetts, in
   February 1996 (sponsored by the Free Software Foundation). The
   conference organizers used the FRS abbreviation heavily in its calls
   for papers and other literature during 1995. The term was in steady
   though not common use until 1998 and the invention of [5599]open
   source.
     _________________________________________________________________

   Node:fry, Next:[5600]fscking, Previous:[5601]FRS, Up:[5602]= F =

   fry

   1. vi. To fail. Said especially of smoke-producing hardware failures.
   More generally, to become non-working. Usage: never said of software,
   only of hardware and humans. See [5603]fried, [5604]magic smoke. 2.
   vt. To cause to fail; to [5605]roach, [5606]toast, or [5607]hose a
   piece of hardware. Never used of software or humans, but compare
   [5608]fried.
     _________________________________________________________________

   Node:fscking, Next:[5609]FSF, Previous:[5610]fry, Up:[5611]= F =

   fscking /fus'-king/ or /eff'-seek-ing/ adj.

   [Usenet; common] Fucking, in the expletive sense (it refers to the
   Unix filesystem-repair command fsck(1), of which it can be said that
   if you have to use it at all you are having a bad day). Originated on
   [5612]scary devil monastery and the bofh.net newsgroups, but became
   much more widespread following the passage of [5613]CDA. Also
   occasionally seen in the variant "What the fsck?"
     _________________________________________________________________

   Node:FSF, Next:[5614]FTP, Previous:[5615]fscking, Up:[5616]= F =

   FSF /F-S-F/ abbrev.

   Common abbreviation (both spoken and written) for the name of the Free
   Software Foundation, a nonprofit educational association formed to
   support the [5617]GNU project.
     _________________________________________________________________

   Node:FTP, Next:[5618]-fu, Previous:[5619]FSF, Up:[5620]= F =

   FTP /F-T-P/, not /fit'ip/

   1. [techspeak] n. The File Transfer Protocol for transmitting files
   between systems on the Internet. 2. vt. To [5621]beam a file using the
   File Transfer Protocol. 3. Sometimes used as a generic even for file
   transfers not using [5622]FTP. "Lemme get a copy of "Wuthering
   Heights" ftp'd from uunet."
     _________________________________________________________________

   Node:-fu, Next:[5623]FUBAR, Previous:[5624]FTP, Up:[5625]= F =

   -fu

   [common; generalized from `kung-fu'] Combining form denoting expert
   practice of a skill. "That's going to take some serious code-fu."
   First sighted in connection with the GIMP's remote-scripting facility,
   script-fu, in 1998.
     _________________________________________________________________

   Node:FUBAR, Next:[5626]fuck me harder, Previous:[5627]-fu, Up:[5628]=
   F =

   FUBAR n.

   The Failed UniBus Address Register in a VAX. A good example of how
   jargon can occasionally be snuck past the [5629]suits; see
   [5630]foobar, and [5631]foo for a fuller etymology.
     _________________________________________________________________

   Node:fuck me harder, Next:[5632]FUD, Previous:[5633]FUBAR, Up:[5634]=
   F =

   fuck me harder excl.

   Sometimes uttered in response to egregious misbehavior, esp. in
   software, and esp. of misbehaviors which seem unfairly persistent (as
   though designed in by the imp of the perverse). Often theatrically
   elaborated: "Aiighhh! Fuck me with a piledriver and 16 feet of
   curare-tipped wrought-iron fence and no lubricants!" The phrase is
   sometimes heard abbreviated `FMH' in polite company.

   [This entry is an extreme example of the hackish habit of coining
   elaborate and evocative terms for lossage. Here we see a quite
   self-conscious parody of mainstream expletives that has become a
   running gag in part of the hacker culture; it illustrates the hackish
   tendency to turn any situation, even one of extreme frustration, into
   an intellectual game (the point being, in this case, to creatively
   produce a long-winded description of the most anatomically absurd
   mental image possible -- the short forms implicitly allude to all the
   ridiculous long forms ever spoken). Scatological language is actually
   relatively uncommon among hackers, and there was some controversy over
   whether this entry ought to be included at all. As it reflects a live
   usage recognizably peculiar to the hacker culture, we feel it is in
   the hackish spirit of truthfulness and opposition to all forms of
   censorship to record it here. --ESR & GLS]
     _________________________________________________________________

   Node:FUD, Next:[5635]FUD wars, Previous:[5636]fuck me harder,
   Up:[5637]= F =

   FUD /fuhd/ n.

   Defined by Gene Amdahl after he left IBM to found his own company:
   "FUD is the fear, uncertainty, and doubt that IBM sales people instill
   in the minds of potential customers who might be considering [Amdahl]
   products." The idea, of course, was to persuade them to go with safe
   IBM gear rather than with competitors' equipment. This implicit
   coercion was traditionally accomplished by promising that Good Things
   would happen to people who stuck with IBM, but Dark Shadows loomed
   over the future of competitors' equipment or software. See [5638]IBM.
   After 1990 the term FUD was associated increasingly frequently with
   [5639]Microsoft, and has become generalized to refer to any kind of
   disinformation used as a competitive weapon.
     _________________________________________________________________

   Node:FUD wars, Next:[5640]fudge, Previous:[5641]FUD, Up:[5642]= F =

   FUD wars /fuhd worz/ n.

   [from [5643]FUD] Political posturing engaged in by hardware and
   software vendors ostensibly committed to standardization but actually
   willing to fragment the market to protect their own shares. The Unix
   International vs. OSF conflict about Unix standards was one
   outstanding example; Microsoft vs. Netscape vs. W3C about HTML
   standards is another.
     _________________________________________________________________

   Node:fudge, Next:[5644]fudge factor, Previous:[5645]FUD wars,
   Up:[5646]= F =

   fudge

   1. vt. To perform in an incomplete but marginally acceptable way,
   particularly with respect to the writing of a program. "I didn't feel
   like going through that pain and suffering, so I fudged it -- I'll fix
   it later." 2. n. The resulting code.
     _________________________________________________________________

   Node:fudge factor, Next:[5647]fuel up, Previous:[5648]fudge,
   Up:[5649]= F =

   fudge factor n.

   [common] A value or parameter that is varied in an ad hoc way to
   produce the desired result. The terms `tolerance' and [5650]slop are
   also used, though these usually indicate a one-sided leeway, such as a
   buffer that is made larger than necessary because one isn't sure
   exactly how large it needs to be, and it is better to waste a little
   space than to lose completely for not having enough. A fudge factor,
   on the other hand, can often be tweaked in more than one direction. A
   good example is the `fuzz' typically allowed in floating-point
   calculations: two numbers being compared for equality must be allowed
   to differ by a small amount; if that amount is too small, a
   computation may never terminate, while if it is too large, results
   will be needlessly inaccurate. Fudge factors are frequently adjusted
   incorrectly by programmers who don't fully understand their import.
   See also [5651]coefficient of X.
     _________________________________________________________________

   Node:fuel up, Next:[5652]Full Monty, Previous:[5653]fudge factor,
   Up:[5654]= F =

   fuel up vi.

   To eat or drink hurriedly in order to get back to hacking. "Food-p?"
   "Yeah, let's fuel up." "Time for a [5655]great-wall!" See also
   [5656]oriental food.
     _________________________________________________________________

   Node:Full Monty, Next:[5657]fum, Previous:[5658]fuel up, Up:[5659]= F
   =

   Full Monty n.

   See [5660]monty, sense 2.
     _________________________________________________________________

   Node:fum, Next:[5661]functino, Previous:[5662]Full Monty, Up:[5663]= F
   =

   fum n.

   [XEROX PARC] At PARC, often the third of the standard
   [5664]metasyntactic variables (after [5665]foo and [5666]bar).
   Competes with [5667]baz, which is more common outside PARC.
     _________________________________________________________________

   Node:functino, Next:[5668]funky, Previous:[5669]fum, Up:[5670]= F =

   functino n.

   [uncommon, U.K.; originally a serendipitous typo in 1994] A pointer to
   a function in C and C++. By association with sub-atomic particles such
   as the neutrino, it accurately conveys an impression of smallness (one
   pointer is four bytes on most systems) and speed (hackers can and do
   use arrays of functinos to replace a switch() statement).
     _________________________________________________________________

   Node:funky, Next:[5671]funny money, Previous:[5672]functino,
   Up:[5673]= F =

   funky adj.

   Said of something that functions, but in a slightly strange, klugey
   way. It does the job and would be difficult to change, so its obvious
   non-optimality is left alone. Often used to describe interfaces. The
   more bugs something has that nobody has bothered to fix because
   workarounds are easier, the funkier it is. [5674]TECO and UUCP are
   funky. The Intel i860's exception handling is extraordinarily funky.
   Most standards acquire funkiness as they age. "The new mailer is
   installed, but is still somewhat funky; if it bounces your mail for no
   reason, try resubmitting it." "This UART is pretty funky. The data
   ready line is active-high in interrupt mode and active-low in DMA
   mode."
     _________________________________________________________________

   Node:funny money, Next:[5675]furrfu, Previous:[5676]funky, Up:[5677]=
   F =

   funny money n.

   1. Notional `dollar' units of computing time and/or storage handed to
   students at the beginning of a computer course; also called `play
   money' or `purple money' (in implicit opposition to real or `green'
   money). In New Zealand and Germany the odd usage `paper money' has
   been recorded; in Germany, the particularly amusing synonym `transfer
   ruble' commemmorates the funny money used for trade between COMECON
   countries back when the Soviet Bloc still existed. When your funny
   money ran out, your account froze and you needed to go to a professor
   to get more. Fortunately, the plunging cost of timesharing cycles has
   made this less common. The amounts allocated were almost invariably
   too small, even for the non-hackers who wanted to slide by with
   minimum work. In extreme cases, the practice led to small-scale black
   markets in bootlegged computer accounts. 2. By extension, phantom
   money or quantity tickets of any kind used as a resource-allocation
   hack within a system. Antonym: `real money'.
     _________________________________________________________________

   Node:furrfu, Next:[5678]fuzzball, Previous:[5679]funny money,
   Up:[5680]= F =

   furrfu excl.

   [Usenet; written, only rarely spoken] Written-only equivalent of
   "Sheesh!"; it is, in fact, "sheesh" modified by [5681]rot13. Evolved
   in mid-1992 as a response to notably silly postings repeating urban
   myths on the Usenet newsgroup alt.folklore.urban, after some posters
   complained that "Sheesh!" as a response to [5682]newbies was being
   overused. See also [5683]FOAF.
     _________________________________________________________________

   Node:fuzzball, Next:[5684]G, Previous:[5685]furrfu, Up:[5686]= F =

   fuzzball n.

   [TCP/IP hackers] A DEC LSI-11 running a particular suite of homebrewed
   software written by Dave Mills and assorted co-conspirators, used in
   the early 1980s for Internet protocol testbedding and experimentation.
   These were used as NSFnet backbone sites in its early 56kb-line days;
   a few were still active on the Internet as late as mid-1993, doing odd
   jobs such as network time service.
     _________________________________________________________________

   Node:= G =, Next:[5687]= H =, Previous:[5688]= F =, Up:[5689]The
   Jargon Lexicon

= G =

     * [5690]G:
     * [5691]g-file:
     * [5692]gabriel:
     * [5693]gag:
     * [5694]gang bang:
     * [5695]garbage collect:
     * [5696]garply:
     * [5697]gas:
     * [5698]gaseous:
     * [5699]Gates's Law:
     * [5700]gawble:
     * [5701]GC:
     * [5702]GCOS:
     * [5703]GECOS:
     * [5704]gedanken:
     * [5705]geef:
     * [5706]geek code:
     * [5707]geek out:
     * [5708]gen:
     * [5709]gender mender:
     * [5710]General Public Virus:
     * [5711]generate:
     * [5712]Genius From Mars Technique:
     * [5713]gensym:
     * [5714]Get a life!:
     * [5715]Get a real computer!:
     * [5716]GFR:
     * [5717]gib:
     * [5718]GIFs at 11:
     * [5719]gig:
     * [5720]giga-:
     * [5721]GIGO:
     * [5722]gilley:
     * [5723]gillion:
     * [5724]ginger:
     * [5725]GIPS:
     * [5726]glark:
     * [5727]glass:
     * [5728]glass tty:
     * [5729]glassfet:
     * [5730]glitch:
     * [5731]glob:
     * [5732]glork:
     * [5733]glue:
     * [5734]gnarly:
     * [5735]GNU:
     * [5736]gnubie:
     * [5737]GNUMACS:
     * [5738]go flatline:
     * [5739]go root:
     * [5740]go-faster stripes:
     * [5741]GoAT:
     * [5742]gobble:
     * [5743]Godwin's Law:
     * [5744]Godzillagram:
     * [5745]golden:
     * [5746]golf-ball printer:
     * [5747]gonk:
     * [5748]gonkulator:
     * [5749]gonzo:
     * [5750]Good Thing:
     * [5751]gopher:
     * [5752]gopher hole:
     * [5753]gorets:
     * [5754]gorilla arm:
     * [5755]gorp:
     * [5756]GOSMACS:
     * [5757]Gosperism:
     * [5758]gotcha:
     * [5759]GPL:
     * [5760]GPV:
     * [5761]grault:
     * [5762]gray goo:
     * [5763]Great Renaming:
     * [5764]Great Runes:
     * [5765]Great Worm:
     * [5766]great-wall:
     * [5767]Green Book:
     * [5768]green bytes:
     * [5769]green card:
     * [5770]green lightning:
     * [5771]green machine:
     * [5772]Green's Theorem:
     * [5773]greenbar:
     * [5774]grep:
     * [5775]gribble:
     * [5776]grilf:
     * [5777]grind:
     * [5778]grind crank:
     * [5779]gripenet:
     * [5780]gritch:
     * [5781]grok:
     * [5782]gronk:
     * [5783]gronk out:
     * [5784]gronked:
     * [5785]grovel:
     * [5786]grue:
     * [5787]grunge:
     * [5788]gubbish:
     * [5789]Guido:
     * [5790]guiltware:
     * [5791]gumby:
     * [5792]gun:
     * [5793]gunch:
     * [5794]gunpowder chicken:
     * [5795]gurfle:
     * [5796]guru:
     * [5797]guru meditation:
     * [5798]gweep:
     _________________________________________________________________

   Node:G, Next:[5799]g-file, Previous:[5800]fuzzball, Up:[5801]= G =

   G pref.,suff.

   [SI] See [5802]quantifiers.
     _________________________________________________________________

   Node:g-file, Next:[5803]gabriel, Previous:[5804]G, Up:[5805]= G =

   g-file n.

   [Commodore BBS culture] Any file that is written with the intention of
   being read by a human rather than a machine, such as the Jargon File,
   documentation, humor files, hacker lore, and technical materials.

   This term survives from the nearly forgotten Commodore 64 underground
   and BBS community. In the early 80s, C-Net had emerged as the most
   popular C64 BBS software for systems which encouraged messaging (as
   opposed to file transfer). There were three main options for files:
   Program files (p-files), which served the same function as `doors' in
   today's systems, UD files (the user upload/download section), and
   g-files. Anything that was meant to be read was included in g-files.
     _________________________________________________________________

   Node:gabriel, Next:[5806]gag, Previous:[5807]g-file, Up:[5808]= G =

   gabriel /gay'bree-*l/ n.

   [for Dick Gabriel, SAIL LISP hacker and volleyball fanatic] An
   unnecessary (in the opinion of the opponent) stalling tactic, e.g.,
   tying one's shoelaces or combing one's hair repeatedly, asking the
   time, etc. Also used to refer to the perpetrator of such tactics.
   Also, `pulling a Gabriel', `Gabriel mode'.
     _________________________________________________________________

   Node:gag, Next:[5809]gang bang, Previous:[5810]gabriel, Up:[5811]= G =

   gag vi.

   Equivalent to [5812]choke, but connotes more disgust. "Hey, this is
   FORTRAN code. No wonder the C compiler gagged." See also [5813]barf.
     _________________________________________________________________

   Node:gang bang, Next:[5814]garbage collect, Previous:[5815]gag,
   Up:[5816]= G =

   gang bang n.

   The use of large numbers of loosely coupled programmers in an attempt
   to wedge a great many features into a product in a short time. Though
   there have been memorable gang bangs (e.g., that over-the-weekend
   assembler port mentioned in Steven Levy's "Hackers"), most are
   perpetrated by large companies trying to meet deadlines; the
   inevitable result is enormous buggy masses of code entirely lacking in
   [5817]orthogonality. When market-driven managers make a list of all
   the features the competition has and assign one programmer to
   implement each, the probability of maintaining a coherent (or even
   functional) design goes infinitesimal. See also [5818]firefighting,
   [5819]Mongolian Hordes technique, [5820]Conway's Law.
     _________________________________________________________________

   Node:garbage collect, Next:[5821]garply, Previous:[5822]gang bang,
   Up:[5823]= G =

   garbage collect vi.

   (also `garbage collection', n.) See [5824]GC.
     _________________________________________________________________

   Node:garply, Next:[5825]gas, Previous:[5826]garbage collect,
   Up:[5827]= G =

   garply /gar'plee/ n.

   [Stanford] Another metasyntactic variable (see [5828]foo); once
   popular among SAIL hackers.
     _________________________________________________________________

   Node:gas, Next:[5829]gaseous, Previous:[5830]garply, Up:[5831]= G =

   gas

   [as in `gas chamber'] 1. interj. A term of disgust and hatred,
   implying that gas should be dispensed in generous quantities, thereby
   exterminating the source of irritation. "Some loser just reloaded the
   system for no reason! Gas!" 2. interj. A suggestion that someone or
   something ought to be flushed out of mercy. "The system's getting
   [5832]wedged every few minutes. Gas!" 3. vt. To [5833]flush (sense 1).
   "You should gas that old crufty software." 4. [IBM] n. Dead space in
   nonsequentially organized files that was occupied by data that has
   since been deleted; the compression operation that removes it is
   called `degassing' (by analogy, perhaps, with the use of the same term
   in vacuum technology). 5. [IBM] n. Empty space on a disk that has been
   clandestinely allocated against future need.
     _________________________________________________________________

   Node:gaseous, Next:[5834]Gates's Law, Previous:[5835]gas, Up:[5836]= G
   =

   gaseous adj.

   Deserving of being [5837]gassed. Disseminated by Geoff Goodfellow
   while at SRI; became particularly popular after the Moscone-Milk
   killings in San Francisco, when it was learned that the defendant Dan
   White (a politician who had supported Proposition 7) would get the gas
   chamber under Proposition 7 if convicted of first-degree murder (he
   was eventually convicted of manslaughter).
     _________________________________________________________________

   Node:Gates's Law, Next:[5838]gawble, Previous:[5839]gaseous,
   Up:[5840]= G =

   Gates's Law

   "The speed of software halves every 18 months." This oft-cited law is
   an ironic comment on the tendency of software bloat to outpace the
   every-18-month doubling in hardware caopacity per dollar predicted by
   [5841]Moore's Law. The reference is to Bill Gates; Microsoft is widely
   considered among the worst if not the worst of the perpetrators of
   bloat.
     _________________________________________________________________

   Node:gawble, Next:[5842]GC, Previous:[5843]Gates's Law, Up:[5844]= G =

   gawble /gaw'bl/ n.

   See [5845]chawmp.
     _________________________________________________________________

   Node:GC, Next:[5846]GCOS, Previous:[5847]gawble, Up:[5848]= G =

   GC /G-C/

   [from LISP terminology; `Garbage Collect'] 1. vt. To clean up and
   throw away useless things. "I think I'll GC the top of my desk today."
   When said of files, this is equivalent to [5849]GFR. 2. vt. To
   recycle, reclaim, or put to another use. 3. n. An instantiation of the
   garbage collector process.

   `Garbage collection' is computer-science techspeak for a particular
   class of strategies for dynamically but transparently reallocating
   computer memory (i.e., without requiring explicit allocation and
   deallocation by higher-level software). One such strategy involves
   periodically scanning all the data in memory and determining what is
   no longer accessible; useless data items are then discarded so that
   the memory they occupy can be recycled and used for another purpose.
   Implementations of the LISP language usually use garbage collection.

   In jargon, the full phrase is sometimes heard but the [5850]abbrev GC
   is more frequently used because it is shorter. Note that there is an
   ambiguity in usage that has to be resolved by context: "I'm going to
   garbage-collect my desk" usually means to clean out the drawers, but
   it could also mean to throw away or recycle the desk itself.
     _________________________________________________________________

   Node:GCOS, Next:[5851]GECOS, Previous:[5852]GC, Up:[5853]= G =

   GCOS /jee'kohs/ n.

   A [5854]quick-and-dirty [5855]clone of System/360 DOS that emerged
   from GE around 1970; originally called GECOS (the General Electric
   Comprehensive Operating System). Later kluged to support primitive
   timesharing and transaction processing. After the buyout of GE's
   computer division by Honeywell, the name was changed to General
   Comprehensive Operating System (GCOS). Other OS groups at Honeywell
   began referring to it as `God's Chosen Operating System', allegedly in
   reaction to the GCOS crowd's uninformed and snotty attitude about the
   superiority of their product. All this might be of zero interest,
   except for two facts: (1) The GCOS people won the political war, and
   this led in the orphaning and eventual death of Honeywell
   [5856]Multics, and (2) GECOS/GCOS left one permanent mark on Unix.
   Some early Unix systems at Bell Labs used GCOS machines for print
   spooling and various other services; the field added to /etc/passwd to
   carry GCOS ID information was called the `GECOS field' and survives
   today as the pw_gecos member used for the user's full name and other
   human-ID information. GCOS later played a major role in keeping
   Honeywell a dismal also-ran in the mainframe market, and was itself
   mostly ditched for Unix in the late 1980s when Honeywell began to
   retire its aging [5857]big iron designs.
     _________________________________________________________________

   Node:GECOS, Next:[5858]gedanken, Previous:[5859]GCOS, Up:[5860]= G =

   GECOS /jee'kohs/ n.

   See [5861]GCOS.
     _________________________________________________________________

   Node:gedanken, Next:[5862]geef, Previous:[5863]GECOS, Up:[5864]= G =

   gedanken /g*-dahn'kn/ adj.

   Ungrounded; impractical; not well-thought-out; untried; untested.

   `Gedanken' is a German word for `thought'. A thought experiment is one
   you carry out in your head. In physics, the term `gedanken experiment'
   is used to refer to an experiment that is impractical to carry out,
   but useful to consider because it can be reasoned about theoretically.
   (A classic gedanken experiment of relativity theory involves thinking
   about a man in an elevator accelerating through space.) Gedanken
   experiments are very useful in physics, but must be used with care.
   It's too easy to idealize away some important aspect of the real world
   in constructing the `apparatus'.

   Among hackers, accordingly, the word has a pejorative connotation. It
   is typically used of a project, especially one in artificial
   intelligence research, that is written up in grand detail (typically
   as a Ph.D. thesis) without ever being implemented to any great extent.
   Such a project is usually perpetrated by people who aren't very good
   hackers or find programming distasteful or are just in a hurry. A
   `gedanken thesis' is usually marked by an obvious lack of intuition
   about what is programmable and what is not, and about what does and
   does not constitute a clear specification of an algorithm. See also
   [5865]AI-complete, [5866]DWIM.
     _________________________________________________________________

   Node:geef, Next:[5867]geek code, Previous:[5868]gedanken, Up:[5869]= G
   =

   geef v.

   [ostensibly from `gefingerpoken'] vt. Syn. [5870]mung. See also
   [5871]blinkenlights.
     _________________________________________________________________

   Node:geek code, Next:[5872]geek out, Previous:[5873]geef, Up:[5874]= G
   =

   geek code n.

   (also "Code of the Geeks"). A set of codes commonly used in [5875]sig
   blocks to broadcast the interests, skills, and aspirations of the
   poster. Features a G at the left margin followed by numerous letter
   codes, often suffixed with plusses or minuses. Because many net users
   are involved in computer science, the most common prefix is `GCS'. To
   see a copy of the current code, browse [5876]http://www.geekcode.com.
   Here is a sample geek code (that of Robert Hayden, the code's
   inventor) from that page:
-----BEGIN GEEK CODE BLOCK-----
Version: 3.1
GED/J d-- s:++>: a- C++(++++)$ ULUO++ P+>+++ L++ !E---- W+(---) N+++
o+ K+++ w+(---) O- M+$>++ V-- PS++(+++)>$ PE++(+)>$ Y++ PGP++ t- 5+++
X++ R+++>$ tv+ b+ DI+++ D+++ G+++++>$ e++$>++++ h r-- y+**
------END GEEK CODE BLOCK------

   The geek code originated in 1993; it was inspired (according to the
   inventor) by previous "bear", "smurf" and "twink"
   style-and-sexual-preference codes from lesbian and gay
   [5877]newsgroups. It has in turn spawned imitators; there is now even
   a "Saturn geek code" for owners of the Saturn car. See also
   [5878]computer geek.
     _________________________________________________________________

   Node:geek out, Next:[5879]gen, Previous:[5880]geek code, Up:[5881]= G
   =

   geek out vi.

   To temporarily enter techno-nerd mode while in a non-hackish context,
   for example at parties held near computer equipment. Especially used
   when you need to do or say something highly technical and don't have
   time to explain: "Pardon me while I geek out for a moment." See
   [5882]computer geek; see also [5883]propeller head.
     _________________________________________________________________

   Node:gen, Next:[5884]gender mender, Previous:[5885]geek out,
   Up:[5886]= G =

   gen /jen/ n.,v.

   Short for [5887]generate, used frequently in both spoken and written
   contexts.
     _________________________________________________________________

   Node:gender mender, Next:[5888]General Public Virus,
   Previous:[5889]gen, Up:[5890]= G =

   gender mender n.

   [common] A cable connector shell with either two male or two female
   connectors on it, used to correct the mismatches that result when some
   [5891]loser didn't understand the RS232C specification and the
   distinction between DTE and DCE. Used esp. for RS-232C parts in either
   the original D-25 or the IBM PC's bogus D-9 format. Also called
   `gender bender', `gender blender', `sex changer', and even `homosexual
   adapter;' however, there appears to be some confusion as to whether a
   `male homosexual adapter' has pins on both sides (is doubly male) or
   sockets on both sides (connects two males).
     _________________________________________________________________

   Node:General Public Virus, Next:[5892]generate, Previous:[5893]gender
   mender, Up:[5894]= G =

   General Public Virus n.

   Pejorative name for some versions of the [5895]GNU project
   [5896]copyleft or General Public License (GPL), which requires that
   any tools or [5897]apps incorporating copylefted code must be
   source-distributed on the same anti-proprietary terms as GNU stuff.
   Thus it is alleged that the copyleft `infects' software generated with
   GNU tools, which may in turn infect other software that reuses any of
   its code. The Free Software Foundation's official position as of
   January 1991 is that copyright law limits the scope of the GPL to
   "programs textually incorporating significant amounts of GNU code",
   and that the `infection' is not passed on to third parties unless
   actual GNU source is transmitted. Nevertheless, widespread suspicion
   that the [5898]copyleft language is `boobytrapped' has caused many
   developers to avoid using GNU tools and the GPL. Changes in the
   language of the version 2.0 GPL did not eliminate this problem.
     _________________________________________________________________

   Node:generate, Next:[5899]Genius From Mars Technique,
   Previous:[5900]General Public Virus, Up:[5901]= G =

   generate vt.

   To produce something according to an algorithm or program or set of
   rules, or as a (possibly unintended) side effect of the execution of
   an algorithm or program. The opposite of [5902]parse. This term
   retains its mechanistic connotations (though often humorously) when
   used of human behavior. "The guy is rational most of the time, but
   mention nuclear energy around him and he'll generate [5903]infinite
   flamage."
     _________________________________________________________________

   Node:Genius From Mars Technique, Next:[5904]gensym,
   Previous:[5905]generate, Up:[5906]= G =

   Genius From Mars Technique n.

   [TMRC] A visionary quality which enables one to ignore the standard
   approach and come up with a totally unexpected new algorithm. An
   attack on a problem from an offbeat angle that no one has ever thought
   of before, but that in retrospect makes total sense. Compare
   [5907]grok, [5908]zen.
     _________________________________________________________________

   Node:gensym, Next:[5909]Get a life!, Previous:[5910]Genius From Mars
   Technique, Up:[5911]= G =

   gensym /jen'sim/

   [from MacLISP for `generated symbol'] 1. v. To invent a new name for
   something temporary, in such a way that the name is almost certainly
   not in conflict with one already in use. 2. n. The resulting name. The
   canonical form of a gensym is `Gnnnn' where nnnn represents a number;
   any LISP hacker would recognize G0093 (for example) as a gensym. 3. A
   freshly generated data structure with a gensymmed name. Gensymmed
   names are useful for storing or uniquely identifying crufties (see
   [5912]cruft).
     _________________________________________________________________

   Node:Get a life!, Next:[5913]Get a real computer!,
   Previous:[5914]gensym, Up:[5915]= G =

   Get a life! imp.

   Hacker-standard way of suggesting that the person to whom it is
   directed has succumbed to terminal geekdom (see [5916]computer geek).
   Often heard on [5917]Usenet, esp. as a way of suggesting that the
   target is taking some obscure issue of [5918]theology too seriously.
   This exhortation was popularized by William Shatner on a 1987
   "Saturday Night Live" episode in a speech that ended "Get a life!",
   but some respondents believe it to have been in use before then. It
   was certainly in wide use among hackers for years before achieving
   mainstream currency via the sitcom "Get A Life" in 1990.
     _________________________________________________________________

   Node:Get a real computer!, Next:[5919]GFR, Previous:[5920]Get a life!,
   Up:[5921]= G =

   Get a real computer! imp.

   Typical hacker response to news that somebody is having trouble
   getting work done on a system that (a) is single-tasking, (b) has no
   hard disk, or (c) has an address space smaller than 16 megabytes. This
   is as of early 1996; note that the threshold for `real computer' rises
   with time. See [5922]bitty box and [5923]toy.
     _________________________________________________________________

   Node:GFR, Next:[5924]gib, Previous:[5925]Get a real computer!,
   Up:[5926]= G =

   GFR /G-F-R/ vt.

   [ITS: from `Grim File Reaper', an ITS and LISP Machine utility] To
   remove a file or files according to some program-automated or
   semi-automatic manual procedure, especially one designed to reclaim
   mass storage space or reduce name-space clutter (the original GFR
   actually moved files to tape). Often generalized to pieces of data
   below file level. "I used to have his phone number, but I guess I
   [5927]GFRed it." See also [5928]prowler, [5929]reaper. Compare
   [5930]GC, which discards only provably worthless stuff.
     _________________________________________________________________

   Node:gib, Next:[5931]GIFs at 11, Previous:[5932]GFR, Up:[5933]= G =

   gib /jib/

   1. vi. To destroy utterly. Like [5934]frag, but much more violent and
   final. "There's no trace left. You definitely gibbed that bug". 2. n.
   Remnants after total obliteration.

   Originated first by id software in the game Quake. It's short for
   giblets (thus pronounced "jib"), and referred to the bloody remains of
   slain opponents. Eventually the word was verbed, and leaked into
   general usage afterward.
     _________________________________________________________________

   Node:GIFs at 11, Next:[5935]gig, Previous:[5936]gib, Up:[5937]= G =

   GIFs at 11

   [Fidonet] Fidonet alternative to [5938]film at 11, especially in
   echoes (Fidonet topic areas) where uuencoded GIFs are permitted. Other
   formats, especially JPEG and MPEG, may be referenced instead.
     _________________________________________________________________

   Node:gig, Next:[5939]giga-, Previous:[5940]GIFs at 11, Up:[5941]= G =

   gig /jig/ or /gig/ n.

   [SI] See [5942]quantifiers.
     _________________________________________________________________

   Node:giga-, Next:[5943]GIGO, Previous:[5944]gig, Up:[5945]= G =

   giga- /ji'ga/ or /gi'ga/ pref.

   [SI] See [5946]quantifiers.
     _________________________________________________________________

   Node:GIGO, Next:[5947]gilley, Previous:[5948]giga-, Up:[5949]= G =

   GIGO /gi:'goh/ [acronym]

   1. `Garbage In, Garbage Out' -- usually said in response to
   [5950]lusers who complain that a program didn't "do the right thing"
   when given imperfect input or otherwise mistreated in some way. Also
   commonly used to describe failures in human decision making due to
   faulty, incomplete, or imprecise data. 2. `Garbage In, Gospel Out':
   this more recent expansion is a sardonic comment on the tendency human
   beings have to put excessive trust in `computerized' data.
     _________________________________________________________________

   Node:gilley, Next:[5951]gillion, Previous:[5952]GIGO, Up:[5953]= G =

   gilley n.

   [Usenet] The unit of analogical [5954]bogosity. According to its
   originator, the standard for one gilley was "the act of
   bogotoficiously comparing the shutting down of 1000 machines for a day
   with the killing of one person". The milligilley has been found to
   suffice for most normal conversational exchanges.
     _________________________________________________________________

   Node:gillion, Next:[5955]ginger, Previous:[5956]gilley, Up:[5957]= G =

   gillion /gil'y*n/ or /jil'y*n/ n.

   [formed from [5958]giga- by analogy with mega/million and
   tera/trillion] 10^9. Same as an American billion or a British
   `milliard'. How one pronounces this depends on whether one speaks
   [5959]giga- with a hard or soft `g'.
     _________________________________________________________________

   Node:ginger, Next:[5960]GIPS, Previous:[5961]gillion, Up:[5962]= G =

   ginger n.

   See [5963]saga.
     _________________________________________________________________

   Node:GIPS, Next:[5964]glark, Previous:[5965]ginger, Up:[5966]= G =

   GIPS /gips/ or /jips/ n.

   [analogy with [5967]MIPS] Giga-Instructions per Second (also possibly
   `Gillions of Instructions per Second'; see [5968]gillion). In 1991,
   this is used of only a handful of highly parallel machines, but this
   is expected to change. Compare [5969]KIPS.
     _________________________________________________________________

   Node:glark, Next:[5970]glass, Previous:[5971]GIPS, Up:[5972]= G =

   glark /glark/ vt.

   To figure something out from context. "The System III manuals are
   pretty poor, but you can generally glark the meaning from context."
   Interestingly, the word was originally `glork'; the context was "This
   gubblick contains many nonsklarkish English flutzpahs, but the overall
   pluggandisp can be glorked [sic] from context" (David Moser, quoted by
   Douglas Hofstadter in his "Metamagical Themas" column in the January
   1981 "Scientific American"). It is conjectured that hacker usage
   mutated the verb to `glark' because [5973]glork was already an
   established jargon term (some hackers do report using the original
   term). Compare [5974]grok, [5975]zen.
     _________________________________________________________________

   Node:glass, Next:[5976]glass tty, Previous:[5977]glark, Up:[5978]= G =

   glass n.

   [IBM] Synonym for [5979]silicon.
     _________________________________________________________________

   Node:glass tty, Next:[5980]glassfet, Previous:[5981]glass, Up:[5982]=
   G =

   glass tty /glas T-T-Y/ or /glas ti'tee/ n.

   A terminal that has a display screen but which, because of hardware or
   software limitations, behaves like a teletype or some other printing
   terminal, thereby combining the disadvantages of both: like a printing
   terminal, it can't do fancy display hacks, and like a display
   terminal, it doesn't produce hard copy. An example is the early `dumb'
   version of Lear-Siegler ADM 3 (without cursor control). See
   [5983]tube, [5984]tty; compare [5985]dumb terminal, [5986]smart
   terminal. See "[5987]TV Typewriters" (Appendix A) for an interesting
   true story about a glass tty.
     _________________________________________________________________

   Node:glassfet, Next:[5988]glitch, Previous:[5989]glass tty, Up:[5990]=
   G =

   glassfet /glas'fet/ n.

   [by analogy with MOSFET, the acronym for `Metal-Oxide-Semiconductor
   Field-Effect Transistor'] Syn. [5991]firebottle, a humorous way to
   refer to a vacuum tube.
     _________________________________________________________________

   Node:glitch, Next:[5992]glob, Previous:[5993]glassfet, Up:[5994]= G =

   glitch /glich/

   [very common; from German `glitschig' to slip, via Yiddish `glitshen',
   to slide or skid] 1. n. A sudden interruption in electric service,
   sanity, continuity, or program function. Sometimes recoverable. An
   interruption in electric service is specifically called a `power
   glitch' (also [5995]power hit), of grave concern because it usually
   crashes all the computers. In jargon, though, a hacker who got to the
   middle of a sentence and then forgot how he or she intended to
   complete it might say, "Sorry, I just glitched". 2. vi. To commit a
   glitch. See [5996]gritch. 3. vt. [Stanford] To scroll a display
   screen, esp. several lines at a time. [5997]WAITS terminals used to do
   this in order to avoid continuous scrolling, which is distracting to
   the eye. 4. obs. Same as [5998]magic cookie, sense 2.

   All these uses of `glitch' derive from the specific technical meaning
   the term has in the electronic hardware world, where it is now
   techspeak. A glitch can occur when the inputs of a circuit change, and
   the outputs change to some [5999]random value for some very brief time
   before they settle down to the correct value. If another circuit
   inspects the output at just the wrong time, reading the random value,
   the results can be very wrong and very hard to debug (a glitch is one
   of many causes of electronic [6000]heisenbugs).
     _________________________________________________________________

   Node:glob, Next:[6001]glork, Previous:[6002]glitch, Up:[6003]= G =

   glob /glob/, not /glohb/ v.,n.

   [Unix; common] To expand special characters in a wildcarded name, or
   the act of so doing (the action is also called `globbing'). The Unix
   conventions for filename wildcarding have become sufficiently
   pervasive that many hackers use some of them in written English,
   especially in email or news on technical topics. Those commonly
   encountered include the following:

   *
          wildcard for any string (see also [6004]UN*X)

   ?
          wildcard for any single character (generally read this way only
          at the beginning or in the middle of a word)

   []
          delimits a wildcard matching any of the enclosed characters

   {}
          alternation of comma-separated alternatives; thus,
          `foo{baz,qux}' would be read as `foobaz' or `fooqux'

   Some examples: "He said his name was [KC]arl" (expresses ambiguity).
   "I don't read talk.politics.*" (any of the talk.politics subgroups on
   [6005]Usenet). Other examples are given under the entry for [6006]X.
   Note that glob patterns are similar, but not identical, to those used
   in [6007]regexps.

   Historical note: The jargon usage derives from glob, the name of a
   subprogram that expanded wildcards in archaic pre-Bourne versions of
   the Unix shell.
     _________________________________________________________________

   Node:glork, Next:[6008]glue, Previous:[6009]glob, Up:[6010]= G =

   glork /glork/

   1. interj. Term of mild surprise, usually tinged with outrage, as when
   one attempts to save the results of two hours of editing and finds
   that the system has just crashed. 2. Used as a name for just about
   anything. See [6011]foo. 3. vt. Similar to [6012]glitch, but usually
   used reflexively. "My program just glorked itself." 4. Syn. for
   [6013]glark, which see.
     _________________________________________________________________

   Node:glue, Next:[6014]gnarly, Previous:[6015]glork, Up:[6016]= G =

   glue n.

   Generic term for any interface logic or protocol that connects two
   component blocks. For example, [6017]Blue Glue is IBM's SNA protocol,
   and hardware designers call anything used to connect large VLSI's or
   circuit blocks `glue logic'.
     _________________________________________________________________

   Node:gnarly, Next:[6018]GNU, Previous:[6019]glue, Up:[6020]= G =

   gnarly /nar'lee/ adj.

   Both [6021]obscure and [6022]hairy (sense 1). "[6023]Yow! -- the tuned
   assembler implementation of BitBlt is really gnarly!" From a similar
   but less specific usage in surfer slang.
     _________________________________________________________________

   Node:GNU, Next:[6024]gnubie, Previous:[6025]gnarly, Up:[6026]= G =

   GNU /gnoo/, not /noo/

   1. [acronym: `GNU's Not Unix!', see [6027]recursive acronym] A
   Unix-workalike development effort of the Free Software Foundation
   headed by Richard Stallman [6028]<rms@gnu.org>. GNU EMACS and the GNU
   C compiler, two tools designed for this project, have become very
   popular in hackerdom and elsewhere. The GNU project was designed
   partly to proselytize for RMS's position that information is community
   property and all software source should be shared. One of its slogans
   is "Help stamp out software hoarding!" Though this remains
   controversial (because it implicitly denies any right of designers to
   own, assign, and sell the results of their labors), many hackers who
   disagree with RMS have nevertheless cooperated to produce large
   amounts of high-quality software for free redistribution under the
   Free Software Foundation's imprimatur. The GNU project has a web page
   at [6029]http://www.gnu.org. See [6030]EMACS, [6031]copyleft,
   [6032]General Public Virus, [6033]Linux. 2. Noted Unix hacker John
   Gilmore [6034]<gnu@toad.com>, founder of Usenet's anarchic alt.*
   hierarchy.
     _________________________________________________________________

   Node:gnubie, Next:[6035]GNUMACS, Previous:[6036]GNU, Up:[6037]= G =

   gnubie /noo'bee/ n.

   Written-only variant of [6038]newbie in common use on IRC channels,
   which implies specifically someone who is new to the Linux/open
   source/free software world.
     _________________________________________________________________

   Node:GNUMACS, Next:[6039]go flatline, Previous:[6040]gnubie,
   Up:[6041]= G =

   GNUMACS /gnoo'maks/ n.

   [contraction of `GNU EMACS'] Often-heard abbreviated name for the
   [6042]GNU project's flagship tool, [6043]EMACS. Used esp. in contrast
   with GOSMACS.
     _________________________________________________________________

   Node:go flatline, Next:[6044]go root, Previous:[6045]GNUMACS,
   Up:[6046]= G =

   go flatline v.

   [from cyberpunk SF, refers to flattening of EEG traces upon
   brain-death] (also adjectival `flatlined'). 1. To [6047]die,
   terminate, or fail, esp. irreversibly. In hacker parlance, this is
   used of machines only, human death being considered somewhat too
   serious a matter to employ jargon-jokes about. 2. To go completely
   quiescent; said of machines undergoing controlled shutdown. "You can
   suffer file damage if you shut down Unix but power off before the
   system has gone flatline." 3. Of a video tube, to fail by losing
   vertical scan, so all one sees is a bright horizontal line bisecting
   the screen.
     _________________________________________________________________

   Node:go root, Next:[6048]go-faster stripes, Previous:[6049]go
   flatline, Up:[6050]= G =

   go root vi.

   [Unix; common] To temporarily enter [6051]root mode in order to
   perform a privileged operation. This use is deprecated in Australia,
   where v. `root' is a synonym for "fuck".
     _________________________________________________________________

   Node:go-faster stripes, Next:[6052]GoAT, Previous:[6053]go root,
   Up:[6054]= G =

   go-faster stripes n.

   [UK] Syn. [6055]chrome. Mainstream in some parts of UK.
     _________________________________________________________________

   Node:GoAT, Next:[6056]gobble, Previous:[6057]go-faster stripes,
   Up:[6058]= G =

   GoAT //

   [Usenet] Abbreviation: "Go Away, Troll". See [6059]troll.
     _________________________________________________________________

   Node:gobble, Next:[6060]Godwin's Law, Previous:[6061]GoAT, Up:[6062]=
   G =

   gobble vt.

   1. To consume, usu. used with `up'. "The output spy gobbles characters
   out of a [6063]tty output buffer." 2. To obtain, usu. used with
   `down'. "I guess I'll gobble down a copy of the documentation
   tomorrow." See also [6064]snarf.
     _________________________________________________________________

   Node:Godwin's Law, Next:[6065]Godzillagram, Previous:[6066]gobble,
   Up:[6067]= G =

   Godwin's Law prov.

   [Usenet] "As a Usenet discussion grows longer, the probability of a
   comparison involving Nazis or Hitler approaches one." There is a
   tradition in many groups that, once this occurs, that thread is over,
   and whoever mentioned the Nazis has automatically lost whatever
   argument was in progress. Godwin's Law thus practically guarantees the
   existence of an upper bound on thread length in those groups. However
   there is also a widely- recognized codicil that any intentional
   triggering of Godwin's Law in order to invoke its thread-ending
   effects will be unsuccessful.
     _________________________________________________________________

   Node:Godzillagram, Next:[6068]golden, Previous:[6069]Godwin's Law,
   Up:[6070]= G =

   Godzillagram /god-zil'*-gram/ n.

   [from Japan's national hero] 1. A network packet that in theory is a
   broadcast to every machine in the universe. The typical case is an IP
   datagram whose destination IP address is [255.255.255.255].
   Fortunately, few gateways are foolish enough to attempt to implement
   this case! 2. A network packet of maximum size. An IP Godzillagram has
   65,536 octets. Compare [6071]super source quench, [6072]Christmas tree
   packet, [6073]martian.
     _________________________________________________________________

   Node:golden, Next:[6074]golf-ball printer,
   Previous:[6075]Godzillagram, Up:[6076]= G =

   golden adj.

   [prob. from folklore's `golden egg'] When used to describe a magnetic
   medium (e.g., `golden disk', `golden tape'), describes one containing
   a tested, up-to-spec, ready-to-ship software version. Compare
   [6077]platinum-iridium.
     _________________________________________________________________

   Node:golf-ball printer, Next:[6078]gonk, Previous:[6079]golden,
   Up:[6080]= G =

   golf-ball printer n. obs.

   The IBM 2741, a slow but letter-quality printing device and terminal
   based on the IBM Selectric typewriter. The `golf ball' was a little
   spherical frob bearing reversed embossed images of 88 different
   characters arranged on four parallels of latitude; one could change
   the font by swapping in a different golf ball. The print element spun
   and jerked alarmingly in action and when in motion was sometimes
   described as an `infuriated golf ball'. This was the technology that
   enabled APL to use a non-EBCDIC, non-ASCII, and in fact completely
   non-standard character set. This put it 10 years ahead of its time --
   where it stayed, firmly rooted, for the next 20, until character
   displays gave way to programmable bit-mapped devices with the
   flexibility to support other character sets.
     _________________________________________________________________

   Node:gonk, Next:[6081]gonkulator, Previous:[6082]golf-ball printer,
   Up:[6083]= G =

   gonk /gonk/ vi.,n.

   1. To prevaricate or to embellish the truth beyond any reasonable
   recognition. In German the term is (mythically) `gonken'; in Spanish
   the verb becomes `gonkar'. "You're gonking me. That story you just
   told me is a bunch of gonk." In German, for example, "Du gonkst mich"
   (You're pulling my leg). See also [6084]gonkulator. 2. [British] To
   grab some sleep at an odd time; compare [6085]gronk out.
     _________________________________________________________________

   Node:gonkulator, Next:[6086]gonzo, Previous:[6087]gonk, Up:[6088]= G =

   gonkulator /gon'kyoo-lay-tr/ n.

   [common; from the 1960s "Hogan's Heroes" TV series] A pretentious
   piece of equipment that actually serves no useful purpose. Usually
   used to describe one's least favorite piece of computer hardware. See
   [6089]gonk.
     _________________________________________________________________

   Node:gonzo, Next:[6090]Good Thing, Previous:[6091]gonkulator,
   Up:[6092]= G =

   gonzo /gon'zoh/ adj.

   [from Hunter S. Thompson] 1. With total commitment, total
   concentration, and a mad sort of panache. (Thompson's original sense.)
   2. More loosely: Overwhelming; outrageous; over the top; very large,
   esp. used of collections of source code, source files, or individual
   functions. Has some of the connotations of [6093]moby and [6094]hairy,
   but without the implication of obscurity or complexity.
     _________________________________________________________________

   Node:Good Thing, Next:[6095]gopher, Previous:[6096]gonzo, Up:[6097]= G
   =

   Good Thing n.,adj.

   [very common; often capitalized; always pronounced as if capitalized.]
   1. Self-evidently wonderful to anyone in a position to notice: "A
   language that manages dynamic memory automatically for you is a Good
   Thing." 2. Something that can't possibly have any ill side-effects and
   may save considerable grief later: "Removing the self-modifying code
   from that shared library would be a Good Thing." 3. When said of
   software tools or libraries, as in "YACC is a Good Thing",
   specifically connotes that the thing has drastically reduced a
   programmer's work load. Oppose [6098]Bad Thing.
     _________________________________________________________________

   Node:gopher, Next:[6099]gopher hole, Previous:[6100]Good Thing,
   Up:[6101]= G =

   gopher n.

   A type of Internet service first floated around 1991 and obsolesced
   around 1995 by the World Wide Web. Gopher presents a menuing interface
   to a tree or graph of links; the links can be to documents, runnable
   programs, or other gopher menus arbitrarily far across the net.

   Some claim that the gopher software, which was originally developed at
   the University of Minnesota, was named after the Minnesota Gophers (a
   sports team). Others claim the word derives from American slang
   `gofer' (from "go for", dialectal "go fer"), one whose job is to run
   and fetch things. Finally, observe that gophers dig long tunnels, and
   the idea of tunneling through the net to find information was a
   defining metaphor for the developers. Probably all three things were
   true, but with the first two coming first and the gopher-tunnel
   metaphor serendipitously adding flavor and impetus to the project as
   it developed out of its concept stage.
     _________________________________________________________________

   Node:gopher hole, Next:[6102]gorets, Previous:[6103]gopher, Up:[6104]=
   G =

   gopher hole n.

   1. Any access to a [6105]gopher. 2. [Amateur Packet Radio] The
   terrestrial analog of a [6106]wormhole (sense 2), from which this term
   was coined. A gopher hole links two amateur packet relays through some
   non-ham radio medium.
     _________________________________________________________________

   Node:gorets, Next:[6107]gorilla arm, Previous:[6108]gopher hole,
   Up:[6109]= G =

   gorets /gor'ets/ n.

   The unknown ur-noun, fill in your own meaning. Found esp. on the
   Usenet newsgroup alt.gorets, which seems to be a running contest to
   redefine the word by implication in the funniest and most peculiar
   way, with the understanding that no definition is ever final. [A
   correspondent from the Former Soviet Union informs me that `gorets' is
   Russian for `mountain dweller'. Another from France informs me that
   `goret' is archaic French for a young pig --ESR] Compare [6110]frink.
     _________________________________________________________________

   Node:gorilla arm, Next:[6111]gorp, Previous:[6112]gorets, Up:[6113]= G
   =

   gorilla arm n.

   The side-effect that destroyed touch-screens as a mainstream input
   technology despite a promising start in the early 1980s. It seems the
   designers of all those [6114]spiffy touch-menu systems failed to
   notice that humans aren't designed to hold their arms in front of
   their faces making small motions. After more than a very few
   selections, the arm begins to feel sore, cramped, and oversized -- the
   operator looks like a gorilla while using the touch screen and feels
   like one afterwards. This is now considered a classic cautionary tale
   to human-factors designers; "Remember the gorilla arm!" is shorthand
   for "How is this going to fly in real use?".
     _________________________________________________________________

   Node:gorp, Next:[6115]GOSMACS, Previous:[6116]gorilla arm, Up:[6117]=
   G =

   gorp /gorp/ n.

   [CMU: perhaps from the canonical hiker's food, Good Old Raisins and
   Peanuts] Another [6118]metasyntactic variable, like [6119]foo and
   [6120]bar.
     _________________________________________________________________

   Node:GOSMACS, Next:[6121]Gosperism, Previous:[6122]gorp, Up:[6123]= G
   =

   GOSMACS /goz'maks/ n.

   [contraction of `Gosling EMACS'] The first [6124]EMACS-in-C
   implementation, predating but now largely eclipsed by [6125]GNUMACS.
   Originally freeware; a commercial version was modestly popular as
   `UniPress EMACS' during the 1980s. The author, James Gosling, went on
   to invent [6126]NeWS and the programming language Java; the latter
   earned him [6127]demigod status.
     _________________________________________________________________

   Node:Gosperism, Next:[6128]gotcha, Previous:[6129]GOSMACS, Up:[6130]=
   G =

   Gosperism /gos'p*r-izm/ n.

   A hack, invention, or saying due to [6131]elder days arch-hacker R.
   William (Bill) Gosper. This notion merits its own term because there
   are so many of them. Many of the entries in [6132]HAKMEM are
   Gosperisms; see also [6133]life.
     _________________________________________________________________

   Node:gotcha, Next:[6134]GPL, Previous:[6135]Gosperism, Up:[6136]= G =

   gotcha n.

   A [6137]misfeature of a system, especially a programming language or
   environment, that tends to breed bugs or mistakes because it both
   enticingly easy to invoke and completely unexpected and/or
   unreasonable in its outcome. For example, a classic gotcha in [6138]C
   is the fact that if (a=b) {code;} is syntactically valid and sometimes
   even correct. It puts the value of b into a and then executes code if
   a is non-zero. What the programmer probably meant was if (a==b)
   {code;}, which executes code if a and b are equal.
     _________________________________________________________________

   Node:GPL, Next:[6139]GPV, Previous:[6140]gotcha, Up:[6141]= G =

   GPL /G-P-L/ n.

   Abbreviation for `General Public License' in widespread use; see
   [6142]copyleft, [6143]General Public Virus. Often mis-expanded as `GNU
   Public License'.
     _________________________________________________________________

   Node:GPV, Next:[6144]grault, Previous:[6145]GPL, Up:[6146]= G =

   GPV /G-P-V/ n.

   Abbrev. for [6147]General Public Virus in widespread use.
     _________________________________________________________________

   Node:grault, Next:[6148]gray goo, Previous:[6149]GPV, Up:[6150]= G =

   grault /grawlt/ n.

   Yet another [6151]metasyntactic variable, invented by Mike Gallaher
   and propagated by the [6152]GOSMACS documentation. See [6153]corge.
     _________________________________________________________________

   Node:gray goo, Next:[6154]Great Renaming, Previous:[6155]grault,
   Up:[6156]= G =

   gray goo n.

   A hypothetical substance composed of [6157]sagans of sub-micron-sized
   self-replicating robots programmed to make copies of themselves out of
   whatever is available. The image that goes with the term is one of the
   entire biosphere of Earth being eventually converted to robot goo.
   This is the simplest of the [6158]nanotechnology disaster scenarios,
   easily refuted by arguments from energy requirements and elemental
   abundances. Compare [6159]blue goo.
     _________________________________________________________________

   Node:Great Renaming, Next:[6160]Great Runes, Previous:[6161]gray goo,
   Up:[6162]= G =

   Great Renaming n.

   The [6163]flag day in 1987 on which all of the non-local groups on the
   [6164]Usenet had their names changed from the net.- format to the
   current multiple-hierarchies scheme. Used esp. in discussing the
   history of newsgroup names. "The oldest sources group is
   comp.sources.misc; before the Great Renaming, it was net.sources."
   There is a [6165]Great Renaming FAQ on the Web.
     _________________________________________________________________

   Node:Great Runes, Next:[6166]Great Worm, Previous:[6167]Great
   Renaming, Up:[6168]= G =

   Great Runes n.

   Uppercase-only text or display messages. Some archaic operating
   systems still emit these. See also [6169]runes, [6170]smash case,
   [6171]fold case.

   There is a widespread legend (repeated by earlier versions of this
   entry, though tagged as folklore) that the uppercase-only support of
   various old character codes and I/O equipment was chosen by a
   religious person in a position of power at the Teletype Company
   because supporting both upper and lower cases was too expensive and
   supporting lower case only would have made it impossible to spell
   `God' correctly. Not true; the upper-case interpretation of
   teleprinter codes was well established by 1870, long before Teletype
   was even founded.
     _________________________________________________________________

   Node:Great Worm, Next:[6172]great-wall, Previous:[6173]Great Runes,
   Up:[6174]= G =

   Great Worm n.

   The 1988 Internet [6175]worm perpetrated by [6176]RTM. This is a play
   on Tolkien (compare [6177]elvish, [6178]elder days). In the fantasy
   history of his Middle Earth books, there were dragons powerful enough
   to lay waste to entire regions; two of these (Scatha and Glaurung)
   were known as "the Great Worms". This usage expresses the connotation
   that the RTM crack was a sort of devastating watershed event in hacker
   history; certainly it did more to make non-hackers nervous about the
   Internet than anything before or since.
     _________________________________________________________________

   Node:great-wall, Next:[6179]Green Book, Previous:[6180]Great Worm,
   Up:[6181]= G =

   great-wall vi.,n.

   [from SF fandom] A mass expedition to an oriental restaurant, esp. one
   where food is served family-style and shared. There is a common
   heuristic about the amount of food to order, expressed as "Get N - 1
   entrees"; the value of N, which is the number of people in the group,
   can be inferred from context (see [6182]N). See [6183]oriental food,
   [6184]ravs, [6185]stir-fried random.
     _________________________________________________________________

   Node:Green Book, Next:[6186]green bytes, Previous:[6187]great-wall,
   Up:[6188]= G =

   Green Book n.

   1. One of the three standard [6189]PostScript references: "PostScript
   Language Program Design", bylined `Adobe Systems' (Addison-Wesley,
   1988; QA76.73.P67P66 ISBN 0-201-14396-8); see also [6190]Red Book,
   [6191]Blue Book, and the [6192]White Book (sense 2). 2. Informal name
   for one of the three standard references on SmallTalk: "Smalltalk-80:
   Bits of History, Words of Advice", by Glenn Krasner (Addison-Wesley,
   1983; QA76.8.S635S58; ISBN 0-201-11669-3) (this, too, is associated
   with blue and red books). 3. The "X/Open Compatibility Guide", which
   defines an international standard [6193]Unix environment that is a
   proper superset of POSIX/SVID; also includes descriptions of a
   standard utility toolkit, systems administrations features, and the
   like. This grimoire is taken with particular seriousness in Europe.
   See [6194]Purple Book. 4. The IEEE 1003.1 POSIX Operating Systems
   Interface standard has been dubbed "The Ugly Green Book". 5. Any of
   the 1992 standards issued by the CCITT's tenth plenary assembly. These
   include, among other things, the X.400 email standard and the Group 1
   through 4 fax standards. See also [6195]book titles.
     _________________________________________________________________

   Node:green bytes, Next:[6196]green card, Previous:[6197]Green Book,
   Up:[6198]= G =

   green bytes n.

   (also `green words') 1. Meta-information embedded in a file, such as
   the length of the file or its name; as opposed to keeping such
   information in a separate description file or record. The term comes
   from an IBM user's group meeting (ca. 1962) at which these two
   approaches were being debated and the diagram of the file on the
   blackboard had the `green bytes' drawn in green. 2. By extension, the
   non-data bits in any self-describing format. "A GIF file contains,
   among other things, green bytes describing the packing method for the
   image." Compare [6199]out-of-band, [6200]zigamorph, [6201]fence (sense
   1).
     _________________________________________________________________

   Node:green card, Next:[6202]green lightning, Previous:[6203]green
   bytes, Up:[6204]= G =

   green card n.

   [after the "IBM System/360 Reference Data" card] A summary of an
   assembly language, even if the color is not green and not a card. Less
   frequently used now because of the decrease in the use of assembly
   language. "I'll go get my green card so I can check the addressing
   mode for that instruction."

   The original green card became a yellow card when the System/370 was
   introduced, and later a yellow booklet. An anecdote from IBM refers to
   a scene that took place in a programmers' terminal room at Yorktown in
   1978. A [6205]luser overheard one of the programmers ask another "Do
   you have a green card?" The other grunted and passed the first a thick
   yellow booklet. At this point the luser turned a delicate shade of
   olive and rapidly left the room, never to return.

   In fall 2000 it was reported from Electronic Data Systems that the
   green card for 370 machines has been a blue-green booklet since 1989.
     _________________________________________________________________

   Node:green lightning, Next:[6206]green machine, Previous:[6207]green
   card, Up:[6208]= G =

   green lightning n.

   [IBM] 1. Apparently random flashing streaks on the face of 3278-9
   terminals while a new symbol set is being downloaded. This hardware
   bug was left deliberately unfixed, as some genius within IBM suggested
   it would let the user know that `something is happening'. That, it
   certainly does. Later microprocessor-driven IBM color graphics
   displays were actually programmed to produce green lightning! 2.
   [proposed] Any bug perverted into an alleged feature by adroit
   rationalization or marketing. "Motorola calls the CISC cruft in the
   88000 architecture `compatibility logic', but I call it green
   lightning". See also [6209]feature (sense 6).
     _________________________________________________________________

   Node:green machine, Next:[6210]Green's Theorem, Previous:[6211]green
   lightning, Up:[6212]= G =

   green machine n.

   A computer or peripheral device that has been designed and built to
   military specifications for field equipment (that is, to withstand
   mechanical shock, extremes of temperature and humidity, and so forth).
   Comes from the olive-drab `uniform' paint used for military equipment.
     _________________________________________________________________

   Node:Green's Theorem, Next:[6213]greenbar, Previous:[6214]green
   machine, Up:[6215]= G =

   Green's Theorem prov.

   [TMRC] For any story, in any group of people there will be at least
   one person who has not heard the story. A refinement of the theorem
   states that there will be exactly one person (if there were more than
   one, it wouldn't be as bad to re-tell the story). [The name of this
   theorem is a play on a fundamental theorem in calculus. --ESR]
     _________________________________________________________________

   Node:greenbar, Next:[6216]grep, Previous:[6217]Green's Theorem,
   Up:[6218]= G =

   greenbar n.

   A style of fanfolded continuous-feed paper with alternating green and
   white bars on it, especially used in old-style line printers. This
   slang almost certainly dates way back to mainframe days.
     _________________________________________________________________

   Node:grep, Next:[6219]gribble, Previous:[6220]greenbar, Up:[6221]= G =

   grep /grep/ vi.

   [from the qed/ed editor idiom g/re/p, where re stands for a regular
   expression, to Globally search for the Regular Expression and Print
   the lines containing matches to it, via [6222]Unix grep(1)] To rapidly
   scan a file or set of files looking for a particular string or pattern
   (when browsing through a large set of files, one may speak of
   `grepping around'). By extension, to look for something by pattern.
   "Grep the bulletin board for the system backup schedule, would you?"
   See also [6223]vgrep.

   [It has also been alleged that the source is from the title of a paper
   "A General Regular Expression Parser" -ESR]
     _________________________________________________________________

   Node:gribble, Next:[6224]grilf, Previous:[6225]grep, Up:[6226]= G =

   gribble n.

   Random binary data rendered as unreadable text. Noise characters in a
   data stream are displayed as gribble. Modems with mismatched bitrates
   usually generate gribble (more specifically, [6227]baud barf). Dumping
   a binary file to the screen is an excellent source of gribble, and (if
   the bell/speaker is active) headaches.
     _________________________________________________________________

   Node:grilf, Next:[6228]grind, Previous:[6229]gribble, Up:[6230]= G =

   grilf // n.

   Girlfriend. Like [6231]newsfroup and [6232]filk, a typo reincarnated
   as a new word. Seems to have originated sometime in 1992 on
   [6233]Usenet. [A friend tells me there was a Lloyd Biggle SF novel
   "Watchers Of The Dark", in which alien species after species goes
   insane and begins to chant "Grilf! Grilf!". A human detective
   eventually determines that the word means "Liar!" I hope this has
   nothing to do with the popularity of the Usenet term. --ESR]
     _________________________________________________________________

   Node:grind, Next:[6234]grind crank, Previous:[6235]grilf, Up:[6236]= G
   =

   grind vt.

   1. [MIT and Berkeley; now rare] To prettify hardcopy of code,
   especially LISP code, by reindenting lines, printing keywords and
   comments in distinct fonts (if available), etc. This usage was
   associated with the MacLISP community and is now rare; prettyprint was
   and is the generic term for such operations. 2. [Unix] To generate the
   formatted version of a document from the [6237]nroff, [6238]troff,
   [6239]TeX, or Scribe source. 3. [common] To run seemingly
   interminably, esp. (but not necessarily) if performing some tedious
   and inherently useless task. Similar to [6240]crunch or [6241]grovel.
   Grinding has a connotation of using a lot of CPU time, but it is
   possible to grind a disk, network, etc. See also [6242]hog. 4. To make
   the whole system slow. "Troff really grinds a PDP-11." 5. `grind
   grind' excl. Roughly, "Isn't the machine slow today!"
     _________________________________________________________________

   Node:grind crank, Next:[6243]gripenet, Previous:[6244]grind,
   Up:[6245]= G =

   grind crank n. //

   A mythical accessory to a terminal. A crank on the side of a monitor,
   which when operated makes a zizzing noise and causes the computer to
   run faster. Usually one does not refer to a grind crank out loud, but
   merely makes the appropriate gesture and noise. See [6246]grind.

   Historical note: At least one real machine actually had a grind crank
   -- the R1, a research machine built toward the end of the days of the
   great vacuum tube computers, in 1959. R1 (also known as `The Rice
   Institute Computer' (TRIC) and later as `The Rice University Computer'
   (TRUC)) had a single-step/free-run switch for use when debugging
   programs. Since single-stepping through a large program was rather
   tedious, there was also a crank with a cam and gear arrangement that
   repeatedly pushed the single-step button. This allowed one to `crank'
   through a lot of code, then slow down to single-step for a bit when
   you got near the code of interest, poke at some registers using the
   console typewriter, and then keep on cranking.
     _________________________________________________________________

   Node:gripenet, Next:[6247]gritch, Previous:[6248]grind crank,
   Up:[6249]= G =

   gripenet n.

   [IBM] A wry (and thoroughly unofficial) name for IBM's internal VNET
   system, deriving from its common use by IBMers to voice pointed
   criticism of IBM management that would be taboo in more formal
   channels.
     _________________________________________________________________

   Node:gritch, Next:[6250]grok, Previous:[6251]gripenet, Up:[6252]= G =

   gritch /grich/

   [MIT] 1. n. A complaint (often caused by a [6253]glitch). 2. vi. To
   complain. Often verb-doubled: "Gritch gritch". 3. A synonym for
   [6254]glitch (as verb or noun).

   Interestingly, this word seems to have a separate history from
   [6255]glitch, with which it is often confused. Back in the early
   1960s, when `glitch' was strictly a hardware-tech's term of art, the
   Burton House dorm at M.I.T. maintained a "Gritch Book", a blank
   volume, into which the residents hand-wrote complaints, suggestions,
   and witticisms. Previous years' volumes of this tradition were
   maintained, dating back to antiquity. The word "gritch" was described
   as a portmanteau of "gripe" and "bitch". Thus, sense 3 above is at
   least historically incorrect.
     _________________________________________________________________

   Node:grok, Next:[6256]gronk, Previous:[6257]gritch, Up:[6258]= G =

   grok /grok/, var. /grohk/ vt.

   [from the novel "Stranger in a Strange Land", by Robert A. Heinlein,
   where it is a Martian word meaning literally `to drink' and
   metaphorically `to be one with'] The emphatic form is `grok in
   fullness'. 1. To understand, usually in a global sense. Connotes
   intimate and exhaustive knowledge. Contrast [6259]zen, which is
   similar supernal understanding experienced as a single brief flash.
   See also [6260]glark. 2. Used of programs, may connote merely
   sufficient understanding. "Almost all C compilers grok the void type
   these days."
     _________________________________________________________________

   Node:gronk, Next:[6261]gronk out, Previous:[6262]grok, Up:[6263]= G =

   gronk /gronk/ vt.

   [popularized by Johnny Hart's comic strip "B.C." but the word
   apparently predates that] 1. To clear the state of a wedged device and
   restart it. More severe than `to [6264]frob' (sense 2). 2. [TMRC] To
   cut, sever, smash, or similarly disable. 3. The sound made by many
   3.5-inch diskette drives. In particular, the microfloppies on a
   Commodore Amiga go "grink, gronk".
     _________________________________________________________________

   Node:gronk out, Next:[6265]gronked, Previous:[6266]gronk, Up:[6267]= G
   =

   gronk out vi.

   To cease functioning. Of people, to go home and go to sleep. "I guess
   I'll gronk out now; see you all tomorrow."
     _________________________________________________________________

   Node:gronked, Next:[6268]grovel, Previous:[6269]gronk out, Up:[6270]=
   G =

   gronked adj.

   1. Broken. "The teletype scanner was gronked, so we took the system
   down." 2. Of people, the condition of feeling very tired or (less
   commonly) sick. "I've been chasing that bug for 17 hours now and I am
   thoroughly gronked!" Compare [6271]broken, which means about the same
   as [6272]gronk used of hardware, but connotes depression or
   mental/emotional problems in people.
     _________________________________________________________________

   Node:grovel, Next:[6273]grue, Previous:[6274]gronked, Up:[6275]= G =

   grovel vi.

   1. To work interminably and without apparent progress. Often used
   transitively with `over' or `through'. "The file scavenger has been
   groveling through the /usr directories for 10 minutes now." Compare
   [6276]grind and [6277]crunch. Emphatic form: `grovel obscenely'. 2. To
   examine minutely or in complete detail. "The compiler grovels over the
   entire source program before beginning to translate it." "I grovelled
   through all the documentation, but I still couldn't find the command I
   wanted."
     _________________________________________________________________

   Node:grue, Next:[6278]grunge, Previous:[6279]grovel, Up:[6280]= G =

   grue n.

   [from archaic English verb for `shudder', as with fear] The grue was
   originated in the game [6281]Zork (Dave Lebling took the name from
   Jack Vance's "Dying Earth" fantasies) and used in several other
   [6282]Infocom games as a hint that you should perhaps look for a lamp,
   torch or some type of light source. Wandering into a dark area would
   cause the game to prompt you, "It is very dark. If you continue you
   are likely to be eaten by a grue." If you failed to locate a light
   source within the next couple of moves this would indeed be the case.

   The grue, according to scholars of the Great Underground Empire, is a
   sinister, lurking presence in the dark places of the earth. Its
   favorite diet is either adventurers or enchanters, but its insatiable
   appetite is tempered by its extreme fear of light. No grues have ever
   been seen by the light of day, and only a few have been observed in
   their underground lairs. Of those who have seen grues, few have
   survived their fearsome jaws to tell the tale. Grues have sharp claws
   and fangs, and an uncontrollable tendency to slaver and gurgle. They
   are certainly the most evil-tempered of all creatures; to say they are
   touchy is a dangerous understatement. "Sour as a grue" is a common
   expression, even among themselves.

   All this folklore is widely known among hackers.
     _________________________________________________________________

   Node:grunge, Next:[6283]gubbish, Previous:[6284]grue, Up:[6285]= G =

   grunge /gruhnj/ n.

   1. That which is grungy, or that which makes it so. 2. [Cambridge]
   Code which is inaccessible due to changes in other parts of the
   program. The preferred term in North America is [6286]dead code.
     _________________________________________________________________

   Node:gubbish, Next:[6287]Guido, Previous:[6288]grunge, Up:[6289]= G =

   gubbish /guhb'*sh/ n.

   [a portmanteau of `garbage' and `rubbish'; may have originated with SF
   author Philip K. Dick] Garbage; crap; nonsense. "What is all this
   gubbish?" The opposite portmanteau `rubbage' is also reported; in
   fact, it was British slang during the 19th century and appears in
   Dickens.
     _________________________________________________________________

   Node:Guido, Next:[6290]guiltware, Previous:[6291]gubbish, Up:[6292]= G
   =

   Guido /gwee'do/ or /khwee'do/

   Without qualification, Guido van Rossum (author of [6293]Python). Note
   that Guido answers to English /gwee'do/ but in Dutch it's /khwee'do/.
     _________________________________________________________________

   Node:guiltware, Next:[6294]gumby, Previous:[6295]Guido, Up:[6296]= G =

   guiltware /gilt'weir/ n.

   1. A piece of [6297]freeware decorated with a message telling one how
   long and hard the author worked on it and intimating that one is a
   no-good freeloader if one does not immediately send the poor suffering
   martyr gobs of money. 2. A piece of [6298]shareware that works.
     _________________________________________________________________

   Node:gumby, Next:[6299]gun, Previous:[6300]guiltware, Up:[6301]= G =

   gumby /guhm'bee/ n.

   [from a class of Monty Python characters, poss. with some influence
   from the 1960s claymation character] 1. An act of minor but
   conspicuous stupidity, often in `gumby maneuver' or `pull a gumby'. 2.
   [NRL] n. A bureaucrat, or other technical incompetent who impedes the
   progress of real work. 3. adj. Relating to things typically associated
   with people in sense 2. (e.g. "Ran would be writing code, but Richard
   gave him gumby work that's due on Friday", or, "Dammit! Travel screwed
   up my plane tickets. I have to go out on gumby patrol.")
     _________________________________________________________________

   Node:gun, Next:[6302]gunch, Previous:[6303]gumby, Up:[6304]= G =

   gun vt.

   [ITS, now rare: from the :GUN command] To forcibly terminate a program
   or job (computer, not career). "Some idiot left a background process
   running soaking up half the cycles, so I gunned it." Usage: now rare.
   Compare [6305]can, [6306]blammo.
     _________________________________________________________________

   Node:gunch, Next:[6307]gunpowder chicken, Previous:[6308]gun,
   Up:[6309]= G =

   gunch /guhnch/ vt.

   [TMRC] To push, prod, or poke at a device that has almost (but not
   quite) produced the desired result. Implies a threat to [6310]mung.
     _________________________________________________________________

   Node:gunpowder chicken, Next:[6311]gurfle, Previous:[6312]gunch,
   Up:[6313]= G =

   gunpowder chicken n.

   Same as [6314]laser chicken.
     _________________________________________________________________

   Node:gurfle, Next:[6315]guru, Previous:[6316]gunpowder chicken,
   Up:[6317]= G =

   gurfle /ger'fl/ interj.

   An expression of shocked disbelief. "He said we have to recode this
   thing in FORTRAN by next week. Gurfle!" Compare [6318]weeble.
     _________________________________________________________________

   Node:guru, Next:[6319]guru meditation, Previous:[6320]gurfle,
   Up:[6321]= G =

   guru n.

   [Unix] An expert. Implies not only [6322]wizard skill but also a
   history of being a knowledge resource for others. Less often, used
   (with a qualifier) for other experts on other systems, as in `VMS
   guru'. See [6323]source of all good bits.
     _________________________________________________________________

   Node:guru meditation, Next:[6324]gweep, Previous:[6325]guru,
   Up:[6326]= G =

   guru meditation n.

   Amiga equivalent of `panic' in Unix (sometimes just called a `guru' or
   `guru event'). When the system crashes, a cryptic message of the form
   "GURU MEDITATION #XXXXXXXX.YYYYYYYY" may appear, indicating what the
   problem was. An Amiga guru can figure things out from the numbers.
   Sometimes a [6327]guru event must be followed by a [6328]Vulcan nerve
   pinch.

   This term is (no surprise) an in-joke from the earliest days of the
   Amiga. An earlier product of the Amiga corporation was a device called
   a `Joyboard' which was basically a plastic board built onto a
   joystick-like device; it was sold with a skiing game cartridge for the
   Atari game machine. It is said that whenever the prototype OS crashed,
   the system programmer responsible would calm down by concentrating on
   a solution while sitting cross-legged on a Joyboard trying to keep the
   board in balance. This position resembled that of a meditating guru.
   Sadly, the joke was removed fairly early on (but there's a well-known
   patch to restore it in more recent versions).
     _________________________________________________________________

   Node:gweep, Next:[6329]h, Previous:[6330]guru meditation, Up:[6331]= G
   =

   gweep /gweep/

   [WPI] 1. v. To [6332]hack, usually at night. At WPI, from 1975
   onwards, one who gweeped could often be found at the College Computing
   Center punching cards or crashing the [6333]PDP-10 or, later, the
   DEC-20. A correspondent who was there at the time opines that the term
   was originally onomatopoetic, describing the keyclick sound of the
   Datapoint terminals long connected to the PDP-10. The term has
   survived the demise of those technologies, however, and was still
   alive in early 1999. "I'm going to go gweep for a while. See you in
   the morning." "I gweep from 8 PM till 3 AM during the week." 2. n. One
   who habitually gweeps in sense 1; a [6334]hacker. "He's a hard-core
   gweep, mumbles code in his sleep."
     _________________________________________________________________

   Node:= H =, Next:[6335]= I =, Previous:[6336]= G =, Up:[6337]The
   Jargon Lexicon

= H =

     * [6338]h:
     * [6339]ha ha only serious:
     * [6340]hack:
     * [6341]hack attack:
     * [6342]hack mode:
     * [6343]hack on:
     * [6344]hack together:
     * [6345]hack up:
     * [6346]hack value:
     * [6347]hacked off:
     * [6348]hacked up:
     * [6349]hacker:
     * [6350]hacker ethic:
     * [6351]hacker humor:
     * [6352]Hackers (the movie):
     * [6353]hacking run:
     * [6354]Hacking X for Y:
     * [6355]Hackintosh:
     * [6356]hackish:
     * [6357]hackishness:
     * [6358]hackitude:
     * [6359]hair:
     * [6360]hairball:
     * [6361]hairy:
     * [6362]HAKMEM:
     * [6363]hakspek:
     * [6364]Halloween Documents:
     * [6365]hammer:
     * [6366]hamster:
     * [6367]HAND:
     * [6368]hand cruft:
     * [6369]hand-hacking:
     * [6370]handle:
     * [6371]handle:
     * [6372]hand-roll:
     * [6373]handshaking:
     * [6374]handwave:
     * [6375]hang:
     * [6376]Hanlon's Razor:
     * [6377]happily:
     * [6378]haque:
     * [6379]hard boot:
     * [6380]hardcoded:
     * [6381]hardwarily:
     * [6382]hardwired:
     * [6383]has the X nature:
     * [6384]hash bucket:
     * [6385]hash collision:
     * [6386]hat:
     * [6387]HCF:
     * [6388]heads down:
     * [6389]heartbeat:
     * [6390]heatseeker:
     * [6391]heavy metal:
     * [6392]heavy wizardry:
     * [6393]heavyweight:
     * [6394]heisenbug:
     * [6395]Helen Keller mode:
     * [6396]hello sailor!:
     * [6397]hello wall!:
     * [6398]hello world:
     * [6399]hex:
     * [6400]hexadecimal:
     * [6401]hexit:
     * [6402]HHOK:
     * [6403]HHOS:
     * [6404]hidden flag:
     * [6405]high bit:
     * [6406]high moby:
     * [6407]highly:
     * [6408]hing:
     * [6409]hired gun:
     * [6410]hirsute:
     * [6411]HLL:
     * [6412]hoarding:
     * [6413]hobbit:
     * [6414]hog:
     * [6415]hole:
     * [6416]hollised:
     * [6417]holy wars:
     * [6418]home box:
     * [6419]home machine:
     * [6420]home page:
     * [6421]honey pot:
     * [6422]hook:
     * [6423]hop:
     * [6424]hose:
     * [6425]hosed:
     * [6426]hot chat:
     * [6427]hot spot:
     * [6428]hotlink:
     * [6429]house wizard:
     * [6430]HP-SUX:
     * [6431]HTH:
     * [6432]huff:
     * [6433]humma:
     * [6434]hung:
     * [6435]hungry puppy:
     * [6436]hungus:
     * [6437]hyperspace:
     * [6438]hysterical reasons:
     _________________________________________________________________

   Node:h, Next:[6439]ha ha only serious, Previous:[6440]gweep,
   Up:[6441]= H =

   h

   [from SF fandom] A method of `marking' common words, i.e., calling
   attention to the fact that they are being used in a nonstandard,
   ironic, or humorous way. Originated in the fannish catchphrase "Bheer
   is the One True Ghod!" from decades ago. H-infix marking of `Ghod' and
   other words spread into the 1960s counterculture via underground
   comix, and into early hackerdom either from the counterculture or from
   SF fandom (the three overlapped heavily at the time). More recently,
   the h infix has become an expected feature of benchmark names
   (Dhrystone, Rhealstone, etc.); this is probably patterning on the
   original Whetstone (the name of a laboratory) but influenced by the
   fannish/counterculture h infix.
     _________________________________________________________________

   Node:ha ha only serious, Next:[6442]hack, Previous:[6443]h, Up:[6444]=
   H =

   ha ha only serious

   [from SF fandom, orig. as mutation of HHOK, `Ha Ha Only Kidding'] A
   phrase (often seen abbreviated as HHOS) that aptly captures the flavor
   of much hacker discourse. Applied especially to parodies, absurdities,
   and ironic jokes that are both intended and perceived to contain a
   possibly disquieting amount of truth, or truths that are constructed
   on in-joke and self-parody. This lexicon contains many examples of
   ha-ha-only-serious in both form and content. Indeed, the entirety of
   hacker culture is often perceived as ha-ha-only-serious by hackers
   themselves; to take it either too lightly or too seriously marks a
   person as an outsider, a [6445]wannabee, or in [6446]larval stage. For
   further enlightenment on this subject, consult any Zen master. See
   also [6447]hacker humor, and [6448]AI koans.
     _________________________________________________________________

   Node:hack, Next:[6449]hack attack, Previous:[6450]ha ha only serious,
   Up:[6451]= H =

   hack

   [very common] 1. n. Originally, a quick job that produces what is
   needed, but not well. 2. n. An incredibly good, and perhaps very
   time-consuming, piece of work that produces exactly what is needed. 3.
   vt. To bear emotionally or physically. "I can't hack this heat!" 4.
   vt. To work on something (typically a program). In an immediate sense:
   "What are you doing?" "I'm hacking TECO." In a general (time-extended)
   sense: "What do you do around here?" "I hack TECO." More generally, "I
   hack `foo'" is roughly equivalent to "`foo' is my major interest (or
   project)". "I hack solid-state physics." See [6452]Hacking X for Y. 5.
   vt. To pull a prank on. See sense 2 and [6453]hacker (sense 5). 6. vi.
   To interact with a computer in a playful and exploratory rather than
   goal-directed way. "Whatcha up to?" "Oh, just hacking." 7. n. Short
   for [6454]hacker. 8. See [6455]nethack. 9. [MIT] v. To explore the
   basements, roof ledges, and steam tunnels of a large, institutional
   building, to the dismay of Physical Plant workers and (since this is
   usually performed at educational institutions) the Campus Police. This
   activity has been found to be eerily similar to playing adventure
   games such as Dungeons and Dragons and [6456]Zork. See also
   [6457]vadding.

   Constructions on this term abound. They include `happy hacking' (a
   farewell), `how's hacking?' (a friendly greeting among hackers) and
   `hack, hack' (a fairly content-free but friendly comment, often used
   as a temporary farewell). For more on this totipotent term see
   "[6458]The Meaning of Hack". See also [6459]neat hack, [6460]real
   hack.
     _________________________________________________________________

   Node:hack attack, Next:[6461]hack mode, Previous:[6462]hack,
   Up:[6463]= H =

   hack attack n.

   [poss. by analogy with `Big Mac Attack' from ads for the McDonald's
   fast-food chain; the variant `big hack attack' is reported] Nearly
   synonymous with [6464]hacking run, though the latter more strongly
   implies an all-nighter.
     _________________________________________________________________

   Node:hack mode, Next:[6465]hack on, Previous:[6466]hack attack,
   Up:[6467]= H =

   hack mode n.

   1. What one is in when hacking, of course. 2. More specifically, a
   Zen-like state of total focus on The Problem that may be achieved when
   one is hacking (this is why every good hacker is part mystic). Ability
   to enter such concentration at will correlates strongly with
   wizardliness; it is one of the most important skills learned during
   [6468]larval stage. Sometimes amplified as `deep hack mode'.

   Being yanked out of hack mode (see [6469]priority interrupt) may be
   experienced as a physical shock, and the sensation of being in hack
   mode is more than a little habituating. The intensity of this
   experience is probably by itself sufficient explanation for the
   existence of hackers, and explains why many resist being promoted out
   of positions where they can code. See also [6470]cyberspace (sense 2).

   Some aspects of hacker etiquette will appear quite odd to an observer
   unaware of the high value placed on hack mode. For example, if someone
   appears at your door, it is perfectly okay to hold up a hand (without
   turning one's eyes away from the screen) to avoid being interrupted.
   One may read, type, and interact with the computer for quite some time
   before further acknowledging the other's presence (of course, he or
   she is reciprocally free to leave without a word). The understanding
   is that you might be in [6471]hack mode with a lot of delicate
   [6472]state (sense 2) in your head, and you dare not [6473]swap that
   context out until you have reached a good point to pause. See also
   [6474]juggling eggs.
     _________________________________________________________________

   Node:hack on, Next:[6475]hack together, Previous:[6476]hack mode,
   Up:[6477]= H =

   hack on vt.

   [very common] To [6478]hack; implies that the subject is some
   pre-existing hunk of code that one is evolving, as opposed to
   something one might [6479]hack up.
     _________________________________________________________________

   Node:hack together, Next:[6480]hack up, Previous:[6481]hack on,
   Up:[6482]= H =

   hack together vt.

   [common] To throw something together so it will work. Unlike `kluge
   together' or [6483]cruft together, this does not necessarily have
   negative connotations.
     _________________________________________________________________

   Node:hack up, Next:[6484]hack value, Previous:[6485]hack together,
   Up:[6486]= H =

   hack up vt.

   To [6487]hack, but generally implies that the result is a hack in
   sense 1 (a quick hack). Contrast this with [6488]hack on. To `hack up
   on' implies a [6489]quick-and-dirty modification to an existing
   system. Contrast [6490]hacked up; compare [6491]kluge up, [6492]monkey
   up, [6493]cruft together.
     _________________________________________________________________

   Node:hack value, Next:[6494]hacked off, Previous:[6495]hack up,
   Up:[6496]= H =

   hack value n.

   Often adduced as the reason or motivation for expending effort toward
   a seemingly useless goal, the point being that the accomplished goal
   is a hack. For example, MacLISP had features for reading and printing
   Roman numerals, which were installed purely for hack value. See
   [6497]display hack for one method of computing hack value, but this
   cannot really be explained, only experienced. As Louis Armstrong once
   said when asked to explain jazz: "Man, if you gotta ask you'll never
   know." (Feminists please note Fats Waller's explanation of rhythm:
   "Lady, if you got to ask, you ain't got it.")
     _________________________________________________________________

   Node:hacked off, Next:[6498]hacked up, Previous:[6499]hack value,
   Up:[6500]= H =

   hacked off adj.

   [analogous to `pissed off'] Said of system administrators who have
   become annoyed, upset, or touchy owing to suspicions that their sites
   have been or are going to be victimized by crackers, or used for
   inappropriate, technically illegal, or even overtly criminal
   activities. For example, having unreadable files in your home
   directory called `worm', `lockpick', or `goroot' would probably be an
   effective (as well as impressively obvious and stupid) way to get your
   sysadmin hacked off at you.

   It has been pointed out that there is precedent for this usage in U.S.
   Navy slang, in which officers under discipline are sometimes said to
   be "in hack" and one may speak of "hacking off the C.O.".
     _________________________________________________________________

   Node:hacked up, Next:[6501]hacker, Previous:[6502]hacked off,
   Up:[6503]= H =

   hacked up adj.

   Sufficiently patched, kluged, and tweaked that the surgical scars are
   beginning to crowd out normal tissue (compare [6504]critical mass).
   Not all programs that are hacked become `hacked up'; if modifications
   are done with some eye to coherence and continued maintainability, the
   software may emerge better for the experience. Contrast [6505]hack up.
     _________________________________________________________________

   Node:hacker, Next:[6506]hacker ethic, Previous:[6507]hacked up,
   Up:[6508]= H =

   hacker n.

   [originally, someone who makes furniture with an axe] 1. A person who
   enjoys exploring the details of programmable systems and how to
   stretch their capabilities, as opposed to most users, who prefer to
   learn only the minimum necessary. 2. One who programs enthusiastically
   (even obsessively) or who enjoys programming rather than just
   theorizing about programming. 3. A person capable of appreciating
   [6509]hack value. 4. A person who is good at programming quickly. 5.
   An expert at a particular program, or one who frequently does work
   using it or on it; as in `a Unix hacker'. (Definitions 1 through 5 are
   correlated, and people who fit them congregate.) 6. An expert or
   enthusiast of any kind. One might be an astronomy hacker, for example.
   7. One who enjoys the intellectual challenge of creatively overcoming
   or circumventing limitations. 8. [deprecated] A malicious meddler who
   tries to discover sensitive information by poking around. Hence
   `password hacker', `network hacker'. The correct term for this sense
   is [6510]cracker.

   The term `hacker' also tends to connote membership in the global
   community defined by the net (see [6511]the network and [6512]Internet
   address). For discussion of some of the basics of this culture, see
   the [6513]How To Become A Hacker FAQ. It also implies that the person
   described is seen to subscribe to some version of the hacker ethic
   (see [6514]hacker ethic).

   It is better to be described as a hacker by others than to describe
   oneself that way. Hackers consider themselves something of an elite (a
   meritocracy based on ability), though one to which new members are
   gladly welcome. There is thus a certain ego satisfaction to be had in
   identifying yourself as a hacker (but if you claim to be one and are
   not, you'll quickly be labeled [6515]bogus). See also [6516]wannabee.

   This term seems to have been first adopted as a badge in the 1960s by
   the hacker culture surrounding TMRC and the MIT AI Lab. We have a
   report that it was used in a sense close to this entry's by teenage
   radio hams and electronics tinkerers in the mid-1950s.
     _________________________________________________________________

   Node:hacker ethic, Next:[6517]hacker humor, Previous:[6518]hacker,
   Up:[6519]= H =

   hacker ethic n.

   1. The belief that information-sharing is a powerful positive good,
   and that it is an ethical duty of hackers to share their expertise by
   writing open-source and facilitating access to information and to
   computing resources wherever possible. 2. The belief that
   system-cracking for fun and exploration is ethically OK as long as the
   cracker commits no theft, vandalism, or breach of confidentiality.

   Both of these normative ethical principles are widely, but by no means
   universally, accepted among hackers. Most hackers subscribe to the
   hacker ethic in sense 1, and many act on it by writing and giving away
   open-source software. A few go further and assert that all information
   should be free and any proprietary control of it is bad; this is the
   philosophy behind the [6520]GNU project.

   Sense 2 is more controversial: some people consider the act of
   cracking itself to be unethical, like breaking and entering. But the
   belief that `ethical' cracking excludes destruction at least moderates
   the behavior of people who see themselves as `benign' crackers (see
   also [6521]samurai). On this view, it may be one of the highest forms
   of hackerly courtesy to (a) break into a system, and then (b) explain
   to the sysop, preferably by email from a [6522]superuser account,
   exactly how it was done and how the hole can be plugged -- acting as
   an unpaid (and unsolicited) [6523]tiger team.

   The most reliable manifestation of either version of the hacker ethic
   is that almost all hackers are actively willing to share technical
   tricks, software, and (where possible) computing resources with other
   hackers. Huge cooperative networks such as [6524]Usenet, [6525]FidoNet
   and Internet (see [6526]Internet address) can function without central
   control because of this trait; they both rely on and reinforce a sense
   of community that may be hackerdom's most valuable intangible asset.
     _________________________________________________________________

   Node:hacker humor, Next:[6527]Hackers (the movie),
   Previous:[6528]hacker ethic, Up:[6529]= H =

   hacker humor

   A distinctive style of shared intellectual humor found among hackers,
   having the following marked characteristics:

   1. Fascination with form-vs.-content jokes, paradoxes, and humor
   having to do with confusion of metalevels (see [6530]meta). One way to
   make a hacker laugh: hold a red index card in front of him/her with
   "GREEN" written on it, or vice-versa (note, however, that this is
   funny only the first time).

   2. Elaborate deadpan parodies of large intellectual constructs, such
   as specifications (see [6531]write-only memory), standards documents,
   language descriptions (see [6532]INTERCAL), and even entire scientific
   theories (see [6533]quantum bogodynamics, [6534]computron).

   3. Jokes that involve screwily precise reasoning from bizarre,
   ludicrous, or just grossly counter-intuitive premises.

   4. Fascination with puns and wordplay.

   5. A fondness for apparently mindless humor with subversive currents
   of intelligence in it -- for example, old Warner Brothers and Rocky &
   Bullwinkle cartoons, the Marx brothers, the early B-52s, and Monty
   Python's Flying Circus. Humor that combines this trait with elements
   of high camp and slapstick is especially favored.

   6. References to the symbol-object antinomies and associated ideas in
   Zen Buddhism and (less often) Taoism. See [6535]has the X nature,
   [6536]Discordianism, [6537]zen, [6538]ha ha only serious, [6539]koan,
   [6540]AI koans.

   See also [6541]filk, [6542]retrocomputing, and the Portrait of J.
   Random Hacker in [6543]Appendix B. If you have an itchy feeling that
   all six of these traits are really aspects of one thing that is
   incredibly difficult to talk about exactly, you are (a) correct and
   (b) responding like a hacker. These traits are also recognizable
   (though in a less marked form) throughout [6544]science-fiction
   fandom.
     _________________________________________________________________

   Node:Hackers (the movie), Next:[6545]hacking run,
   Previous:[6546]hacker humor, Up:[6547]= H =

   Hackers (the movie) n.

   A notable bomb from 1995. Should have been titled "Crackers", because
   cracking is what the movie was about. It's understandable that they
   didn't however; titles redolent of snack food are probably a tough
   sell in Hollywood.
     _________________________________________________________________

   Node:hacking run, Next:[6548]Hacking X for Y, Previous:[6549]Hackers
   (the movie), Up:[6550]= H =

   hacking run n.

   [analogy with `bombing run' or `speed run'] A hack session extended
   long outside normal working times, especially one longer than 12
   hours. May cause you to `change phase the hard way' (see [6551]phase).
     _________________________________________________________________

   Node:Hacking X for Y, Next:[6552]Hackintosh, Previous:[6553]hacking
   run, Up:[6554]= H =

   Hacking X for Y n.

   [ITS] Ritual phrasing of part of the information which ITS made
   publicly available about each user. This information (the INQUIR
   record) was a sort of form in which the user could fill out various
   fields. On display, two of these fields were always combined into a
   project description of the form "Hacking X for Y" (e.g., "Hacking
   perceptrons for Minsky"). This form of description became traditional
   and has since been carried over to other systems with more general
   facilities for self-advertisement (such as Unix [6555]plan files).
     _________________________________________________________________

   Node:Hackintosh, Next:[6556]hackish, Previous:[6557]Hacking X for Y,
   Up:[6558]= H =

   Hackintosh n.

   1. An Apple Lisa that has been hacked into emulating a Macintosh (also
   called a `Mac XL'). 2. A Macintosh assembled from parts theoretically
   belonging to different models in the line.
     _________________________________________________________________

   Node:hackish, Next:[6559]hackishness, Previous:[6560]Hackintosh,
   Up:[6561]= H =

   hackish /hak'ish/ adj.

   (also [6562]hackishness n.) 1. Said of something that is or involves a
   hack. 2. Of or pertaining to hackers or the hacker subculture. See
   also [6563]true-hacker.
     _________________________________________________________________

   Node:hackishness, Next:[6564]hackitude, Previous:[6565]hackish,
   Up:[6566]= H =

   hackishness n.

   The quality of being or involving a hack. This term is considered
   mildly silly. Syn. [6567]hackitude.
     _________________________________________________________________

   Node:hackitude, Next:[6568]hair, Previous:[6569]hackishness,
   Up:[6570]= H =

   hackitude n.

   Syn. [6571]hackishness; this word is considered sillier.
     _________________________________________________________________

   Node:hair, Next:[6572]hairball, Previous:[6573]hackitude, Up:[6574]= H
   =

   hair n.

   [back-formation from [6575]hairy] The complications that make
   something hairy. "Decoding [6576]TECO commands requires a certain
   amount of hair." Often seen in the phrase `infinite hair', which
   connotes extreme complexity. Also in `hairiferous' (tending to promote
   hair growth): "GNUMACS elisp encourages lusers to write complex
   editing modes." "Yeah, it's pretty hairiferous all right." (or just:
   "Hair squared!")
     _________________________________________________________________

   Node:hairball, Next:[6577]hairy, Previous:[6578]hair, Up:[6579]= H =

   hairball n.

   1. [Fidonet] A large batch of messages that a store-and-forward
   network is failing to forward when it should. Often used in the phrase
   "Fido coughed up a hairball today", meaning that the stuck messages
   have just come unstuck, producing a flood of mail where there had
   previously been drought. 2. An unmanageably huge mass of source code.
   "JWZ thought the Mozilla effort bogged down because the code was a
   huge hairball." 3. Any large amount of garbage coming out suddenly.
   "Sendmail is coughing up a hairball, so expect some slowness accessing
   the Internet."
     _________________________________________________________________

   Node:hairy, Next:[6580]HAKMEM, Previous:[6581]hairball, Up:[6582]= H =

   hairy adj.

   1. Annoyingly complicated. "[6583]DWIM is incredibly hairy." 2.
   Incomprehensible. "[6584]DWIM is incredibly hairy." 3. Of people,
   high-powered, authoritative, rare, expert, and/or incomprehensible.
   Hard to explain except in context: "He knows this hairy lawyer who
   says there's nothing to worry about." See also [6585]hirsute.

   A well-known result in topology called the Brouwer Fixed-Point Theorem
   states that any continuous transformation of a 2-sphere into itself
   has at least one fixed point. Mathematically literate hackers tend to
   associate the term `hairy' with the informal version of this theorem;
   "You can't comb a hairy ball smooth."

   The adjective `long-haired' is well-attested to have been in slang use
   among scientists and engineers during the early 1950s; it was
   equivalent to modern `hairy' senses 1 and 2, and was very likely
   ancestral to the hackish use. In fact the noun `long-hair' was at the
   time used to describe a person satisfying sense 3. Both senses
   probably passed out of use when long hair was adopted as a signature
   trait by the 1960s counterculture, leaving hackish `hairy' as a sort
   of stunted mutant relic.

   In British mainstream use, "hairy" means "dangerous", and
   consequently, in British programming terms, "hairy" may be used to
   denote complicated and/or incomprehensible code, but only if that
   complexity or incomprehesiveness is also considered dangerous.
     _________________________________________________________________

   Node:HAKMEM, Next:[6586]hakspek, Previous:[6587]hairy, Up:[6588]= H =

   HAKMEM /hak'mem/ n.

   MIT AI Memo 239 (February 1972). A legendary collection of neat
   mathematical and programming hacks contributed by many people at MIT
   and elsewhere. (The title of the memo really is "HAKMEM", which is a
   6-letterism for `hacks memo'.) Some of them are very useful
   techniques, powerful theorems, or interesting unsolved problems, but
   most fall into the category of mathematical and computer trivia. Here
   is a sampling of the entries (with authors), slightly paraphrased:

   Item 41 (Gene Salamin): There are exactly 23,000 prime numbers less
   than 2^(18).

   Item 46 (Rich Schroeppel): The most probable suit distribution in
   bridge hands is 4-4-3-2, as compared to 4-3-3-3, which is the most
   evenly distributed. This is because the world likes to have unequal
   numbers: a thermodynamic effect saying things will not be in the state
   of lowest energy, but in the state of lowest disordered energy.

   Item 81 (Rich Schroeppel): Count the magic squares of order 5 (that
   is, all the 5-by-5 arrangements of the numbers from 1 to 25 such that
   all rows, columns, and diagonals add up to the same number). There are
   about 320 million, not counting those that differ only by rotation and
   reflection.

   Item 154 (Bill Gosper): The myth that any given programming language
   is machine independent is easily exploded by computing the sum of
   powers of 2. If the result loops with period = 1 with sign +, you are
   on a sign-magnitude machine. If the result loops with period = 1 at
   -1, you are on a twos-complement machine. If the result loops with
   period greater than 1, including the beginning, you are on a
   ones-complement machine. If the result loops with period greater than
   1, not including the beginning, your machine isn't binary -- the
   pattern should tell you the base. If you run out of memory, you are on
   a string or bignum system. If arithmetic overflow is a fatal error,
   some fascist pig with a read-only mind is trying to enforce machine
   independence. But the very ability to trap overflow is machine
   dependent. By this strategy, consider the universe, or, more
   precisely, algebra: Let X = the sum of many powers of 2 = ...111111
   (base 2). Now add X to itself: X + X = ...111110. Thus, 2X = X - 1, so
   X = -1. Therefore algebra is run on a machine (the universe) that is
   two's-complement.

   Item 174 (Bill Gosper and Stuart Nelson): 21963283741 is the only
   number such that if you represent it on the [6589]PDP-10 as both an
   integer and a floating-point number, the bit patterns of the two
   representations are identical.

   Item 176 (Gosper): The "banana phenomenon" was encountered when
   processing a character string by taking the last 3 letters typed out,
   searching for a random occurrence of that sequence in the text, taking
   the letter following that occurrence, typing it out, and iterating.
   This ensures that every 4-letter string output occurs in the original.
   The program typed BANANANANANANANA.... We note an ambiguity in the
   phrase, "the Nth occurrence of." In one sense, there are five 00's in
   0000000000; in another, there are nine. The editing program TECO finds
   five. Thus it finds only the first ANA in BANANA, and is thus
   obligated to type N next. By Murphy's Law, there is but one NAN, thus
   forcing A, and thus a loop. An option to find overlapped instances
   would be useful, although it would require backing up N - 1 characters
   before seeking the next N-character string.

   Note: This last item refers to a [6590]Dissociated Press
   implementation. See also [6591]banana problem.

   HAKMEM also contains some rather more complicated mathematical and
   technical items, but these examples show some of its fun flavor.

   An HTML transcription of the entire document is available at
   [6592]http://www.inwap.com/pdp10/hbaker/hakmem/hakmem.html.
     _________________________________________________________________

   Node:hakspek, Next:[6593]Halloween Documents, Previous:[6594]HAKMEM,
   Up:[6595]= H =

   hakspek /hak'speek/ n.

   A shorthand method of spelling found on many British academic bulletin
   boards and [6596]talker systems. Syllables and whole words in a
   sentence are replaced by single ASCII characters the names of which
   are phonetically similar or equivalent, while multiple letters are
   usually dropped. Hence, `for' becomes `4'; `two', `too', and `to'
   become `2'; `ck' becomes `k'. "Before I see you tomorrow" becomes "b4
   i c u 2moro". First appeared in London about 1986, and was probably
   caused by the slowness of available talker systems, which operated on
   archaic machines with outdated operating systems and no standard
   methods of communication. Has become rarer since. See also [6597]talk
   mode.
     _________________________________________________________________

   Node:Halloween Documents, Next:[6598]hammer, Previous:[6599]hakspek,
   Up:[6600]= H =

   Halloween Documents n.

   A pair of Microsoft internal strategy memoranda leaked to ESR in late
   1998 that confirmed everybody's paranoia about the current [6601]Evil
   Empire. [6602]These documents praised the technical excellence of
   [6603]Linux and outlined a counterstrategy of attempting to lock in
   customers by "de-commoditizing" Internet protocols and services. They
   were extensively cited on the Internet and in the press and proved so
   embarrassing that Microsoft PR barely said a word in public for six
   months afterwards.
     _________________________________________________________________

   Node:hammer, Next:[6604]hamster, Previous:[6605]Halloween Documents,
   Up:[6606]= H =

   hammer vt.

   Commonwealth hackish syn. for [6607]bang on.
     _________________________________________________________________

   Node:hamster, Next:[6608]HAND, Previous:[6609]hammer, Up:[6610]= H =

   hamster n.

   1. [Fairchild] A particularly slick little piece of code that does one
   thing well; a small, self-contained hack. The image is of a hamster
   [6611]happily spinning its exercise wheel. 2. A tailless mouse; that
   is, one with an infrared link to a receiver on the machine, as opposed
   to the conventional cable. 3. [UK] Any item of hardware made by
   Amstrad, a company famous for its cheap plastic PC-almost-compatibles.
     _________________________________________________________________

   Node:HAND, Next:[6612]hand cruft, Previous:[6613]hamster, Up:[6614]= H
   =

   HAND //

   [Usenet: very common] Abbreviation: Have A Nice Day. Typically used to
   close a [6615]Usenet posting, but also used to informally close
   emails; often preceded by [6616]HTH.
     _________________________________________________________________

   Node:hand cruft, Next:[6617]hand-hacking, Previous:[6618]HAND,
   Up:[6619]= H =

   hand cruft vt.

   [pun on `hand craft'] See [6620]cruft, sense 3.
     _________________________________________________________________

   Node:hand-hacking, Next:[6621]hand-roll, Previous:[6622]hand cruft,
   Up:[6623]= H =

   hand-hacking n.

   1. [rare] The practice of translating [6624]hot spots from an
   [6625]HLL into hand-tuned assembler, as opposed to trying to coerce
   the compiler into generating better code. Both the term and the
   practice are becoming uncommon. See [6626]tune, [6627]bum, [6628]by
   hand; syn. with v. [6629]cruft. 2. [common] More generally, manual
   construction or patching of data sets that would normally be generated
   by a translation utility and interpreted by another program, and
   aren't really designed to be read or modified by humans.
     _________________________________________________________________

   Node:hand-roll, Next:[6630]handle, Previous:[6631]hand-hacking,
   Up:[6632]= H =

   hand-roll v.

   [from obs. mainstream slang `hand-rolled' in opposition to
   `ready-made', referring to cigarettes] To perform a normally automated
   software installation or configuration process [6633]by hand; implies
   that the normal process failed due to bugs in the configurator or was
   defeated by something exceptional in the local environment. "The worst
   thing about being a gateway between four different nets is having to
   hand-roll a new sendmail configuration every time any of them
   upgrades."
     _________________________________________________________________

   Node:handle, Next:[6634]handshaking, Previous:[6635]hand-roll,
   Up:[6636]= H =

   handle n.

   1. [from CB slang] An electronic pseudonym; a `nom de guerre' intended
   to conceal the user's true identity. Network and BBS handles function
   as the same sort of simultaneous concealment and display one finds on
   Citizen's Band radio, from which the term was adopted. Use of
   grandiose handles is characteristic of [6637]warez d00dz,
   [6638]crackers, [6639]weenies, [6640]spods, and other lower forms of
   network life; true hackers travel on their own reputations rather than
   invented legendry. Compare [6641]nick, [6642]screen name. 2. A
   [6643]magic cookie, often in the form of a numeric index into some
   array somewhere, through which you can manipulate an object like a
   file or window. The form `file handle' is especially common. 3. [Mac]
   A pointer to a pointer to dynamically-allocated memory; the extra
   level of indirection allows on-the-fly memory compaction (to cut down
   on fragmentation) or aging out of unused resources, with minimal
   impact on the (possibly multiple) parts of the larger program
   containing references to the allocated memory. Compare [6644]snap (to
   snap a handle would defeat its purpose); see also [6645]aliasing bug,
   [6646]dangling pointer.
     _________________________________________________________________

   Node:handshaking, Next:[6647]handwave, Previous:[6648]handle,
   Up:[6649]= H =

   handshaking n.

   [very common] Hardware or software activity designed to start or keep
   two machines or programs in synchronization as they [6650]do protocol.
   Often applied to human activity; thus, a hacker might watch two people
   in conversation nodding their heads to indicate that they have heard
   each others' points and say "Oh, they're handshaking!". See also
   [6651]protocol.
     _________________________________________________________________

   Node:handwave, Next:[6652]hang, Previous:[6653]handshaking, Up:[6654]=
   H =

   handwave

   [poss. from gestures characteristic of stage magicians] 1. v. To gloss
   over a complex point; to distract a listener; to support a (possibly
   actually valid) point with blatantly faulty logic. 2. n. The act of
   handwaving. "Boy, what a handwave!"

   If someone starts a sentence with "Clearly..." or "Obviously..." or
   "It is self-evident that...", it is a good bet he is about to handwave
   (alternatively, use of these constructions in a sarcastic tone before
   a paraphrase of someone else's argument suggests that it is a
   handwave). The theory behind this term is that if you wave your hands
   at the right moment, the listener may be sufficiently distracted to
   not notice that what you have said is [6655]bogus. Failing that, if a
   listener does object, you might try to dismiss the objection with a
   wave of your hand.

   The use of this word is often accompanied by gestures: both hands up,
   palms forward, swinging the hands in a vertical plane pivoting at the
   elbows and/or shoulders (depending on the magnitude of the handwave);
   alternatively, holding the forearms in one position while rotating the
   hands at the wrist to make them flutter. In context, the gestures
   alone can suffice as a remark; if a speaker makes an outrageously
   unsupported assumption, you might simply wave your hands in this way,
   as an accusation, far more eloquent than words could express, that his
   logic is faulty.
     _________________________________________________________________

   Node:hang, Next:[6656]Hanlon's Razor, Previous:[6657]handwave,
   Up:[6658]= H =

   hang v.

   1. [very common] To wait for an event that will never occur. "The
   system is hanging because it can't read from the crashed drive". See
   [6659]wedged, [6660]hung. 2. To wait for some event to occur; to hang
   around until something happens. "The program displays a menu and then
   hangs until you type a character." Compare [6661]block. 3. To attach a
   peripheral device, esp. in the construction `hang off': "We're going
   to hang another tape drive off the file server." Implies a device
   attached with cables, rather than something that is strictly inside
   the machine's chassis.
     _________________________________________________________________

   Node:Hanlon's Razor, Next:[6662]happily, Previous:[6663]hang,
   Up:[6664]= H =

   Hanlon's Razor prov.

   A corollary of [6665]Finagle's Law, similar to Occam's Razor, that
   reads "Never attribute to malice that which can be adequately
   explained by stupidity." The derivation of the Hanlon eponym is not
   definitely known, but a very similar remark ("You have attributed
   conditions to villainy that simply result from stupidity.") appears in
   "Logic of Empire", a classic 1941 SF story by Robert A. Heinlein, who
   calls it the `devil theory' of sociology. Heinlein's popularity in the
   hacker culture makes plausible the supposition that `Hanlon' is
   derived from `Heinlein' by phonetic corruption. A similar epigram has
   been attributed to William James, but Heinlein more probably got the
   idea from Alfred Korzybski and other practitioners of General
   Semantics. Quoted here because it seems to be a particular favorite of
   hackers, often showing up in [6666]sig blocks, [6667]fortune cookie
   files and the login banners of BBS systems and commercial networks.
   This probably reflects the hacker's daily experience of environments
   created by well-intentioned but short-sighted people. Compare
   [6668]Sturgeon's Law, [6669]Ninety-Ninety Rule.
     _________________________________________________________________

   Node:happily, Next:[6670]haque, Previous:[6671]Hanlon's Razor,
   Up:[6672]= H =

   happily adv.

   Of software, used to emphasize that a program is unaware of some
   important fact about its environment, either because it has been
   fooled into believing a lie, or because it doesn't care. The sense of
   `happy' here is not that of elation, but rather that of blissful
   ignorance. "The program continues to run, happily unaware that its
   output is going to /dev/null." Also used to suggest that a program or
   device would really rather be doing something destructive, and is
   being given an opportunity to do so. "If you enter an O here instead
   of a zero, the program will happily erase all your data." Neverheless,
   use of this term implies a basically benign attitude towards the
   program: It didn't mean any harm, it was just eager to do its job.
   We'd like to be angry at it but we shouldn't, we should try to
   understand it instead. The adjective "cheerfully" is often used in
   exactly the same way.
     _________________________________________________________________

   Node:haque, Next:[6673]hard boot, Previous:[6674]happily, Up:[6675]= H
   =

   haque /hak/ n.

   [Usenet] Variant spelling of [6676]hack, used only for the noun form
   and connoting an [6677]elegant hack. that is a [6678]hack in sense 2.
     _________________________________________________________________

   Node:hard boot, Next:[6679]hardcoded, Previous:[6680]haque, Up:[6681]=
   H =

   hard boot n.

   See [6682]boot.
     _________________________________________________________________

   Node:hardcoded, Next:[6683]hardwarily, Previous:[6684]hard boot,
   Up:[6685]= H =

   hardcoded adj.

   1. [common] Said of data inserted directly into a program, where it
   cannot be easily modified, as opposed to data in some [6686]profile,
   resource (see [6687]de-rezz sense 2), or environment variable that a
   [6688]user or hacker can easily modify. 2. In C, this is esp. applied
   to use of a literal instead of a #define macro (see [6689]magic
   number).
     _________________________________________________________________

   Node:hardwarily, Next:[6690]hardwired, Previous:[6691]hardcoded,
   Up:[6692]= H =

   hardwarily /hard-weir'*-lee/ adv.

   In a way pertaining to hardware. "The system is hardwarily
   unreliable." The adjective `hardwary' is not traditionally used,
   though it has recently been reported from the U.K. See
   [6693]softwarily.
     _________________________________________________________________

   Node:hardwired, Next:[6694]has the X nature,
   Previous:[6695]hardwarily, Up:[6696]= H =

   hardwired adj.

   1. In software, syn. for [6697]hardcoded. 2. By extension, anything
   that is not modifiable, especially in the sense of customizable to
   one's particular needs or tastes.
     _________________________________________________________________

   Node:has the X nature, Next:[6698]hash bucket,
   Previous:[6699]hardwired, Up:[6700]= H =

   has the X nature

   [seems to derive from Zen Buddhist koans of the form "Does an X have
   the Buddha-nature?"] adj. Common hacker construction for `is an X',
   used for humorous emphasis. "Anyone who can't even use a program with
   on-screen help embedded in it truly has the [6701]loser nature!" See
   also [6702]the X that can be Y is not the true X. See also [6703]mu.
     _________________________________________________________________

   Node:hash bucket, Next:[6704]hash collision, Previous:[6705]has the X
   nature, Up:[6706]= H =

   hash bucket n.

   A notional receptacle, a set of which might be used to apportion data
   items for sorting or lookup purposes. When you look up a name in the
   phone book (for example), you typically hash it by extracting its
   first letter; the hash buckets are the alphabetically ordered letter
   sections. This term is used as techspeak with respect to code that
   uses actual hash functions; in jargon, it is used for human
   associative memory as well. Thus, two things `in the same hash bucket'
   are more difficult to discriminate, and may be confused. "If you hash
   English words only by length, you get too many common grammar words in
   the first couple of hash buckets." Compare [6707]hash collision.
     _________________________________________________________________

   Node:hash collision, Next:[6708]hat, Previous:[6709]hash bucket,
   Up:[6710]= H =

   hash collision n.

   [from the techspeak] (var. `hash clash') When used of people,
   signifies a confusion in associative memory or imagination, especially
   a persistent one (see [6711]thinko). True story: One of us [ESR] was
   once on the phone with a friend about to move out to Berkeley. When
   asked what he expected Berkeley to be like, the friend replied: "Well,
   I have this mental picture of naked women throwing Molotov cocktails,
   but I think that's just a collision in my hash tables." Compare
   [6712]hash bucket.
     _________________________________________________________________

   Node:hat, Next:[6713]HCF, Previous:[6714]hash collision, Up:[6715]= H
   =

   hat n.

   Common (spoken) name for the circumflex (`^', ASCII 1011110)
   character. See [6716]ASCII for other synonyms.
     _________________________________________________________________

   Node:HCF, Next:[6717]heads down, Previous:[6718]hat, Up:[6719]= H =

   HCF /H-C-F/ n.

   Mnemonic for `Halt and Catch Fire', any of several undocumented and
   semi-mythical machine instructions with destructive side-effects,
   supposedly included for test purposes on several well-known
   architectures going as far back as the IBM 360. The MC6800
   microprocessor was the first for which an HCF opcode became widely
   known. This instruction caused the processor to [6720]toggle a subset
   of the bus lines as rapidly as it could; in some configurations this
   could actually cause lines to burn up. Compare [6721]killer poke.
     _________________________________________________________________

   Node:heads down, Next:[6722]heartbeat, Previous:[6723]HCF, Up:[6724]=
   H =

   heads down [Sun] adj.

   Concentrating, usually so heavily and for so long that everything
   outside the focus area is missed. See also [6725]hack mode and
   [6726]larval stage, although this mode is hardly confined to fledgling
   hackers.
     _________________________________________________________________

   Node:heartbeat, Next:[6727]heatseeker, Previous:[6728]heads down,
   Up:[6729]= H =

   heartbeat n.

   1. The signal emitted by a Level 2 Ethernet transceiver at the end of
   every packet to show that the collision-detection circuit is still
   connected. 2. A periodic synchronization signal used by software or
   hardware, such as a bus clock or a periodic interrupt. 3. The
   `natural' oscillation frequency of a computer's clock crystal, before
   frequency division down to the machine's clock rate. 4. A signal
   emitted at regular intervals by software to demonstrate that it is
   still alive. Sometimes hardware is designed to reboot the machine if
   it stops hearing a heartbeat. See also [6730]breath-of-life packet.
     _________________________________________________________________

   Node:heatseeker, Next:[6731]heavy metal, Previous:[6732]heartbeat,
   Up:[6733]= H =

   heatseeker n.

   [IBM] A customer who can be relied upon to buy, without fail, the
   latest version of an existing product (not quite the same as a member
   of the [6734]lunatic fringe). A 1993 example of a heatseeker was
   someone who, owning a 286 PC and Windows 3.0, went out and bought
   Windows 3.1 (which offers no worthwhile benefits unless you have a
   386). If all customers were heatseekers, vast amounts of money could
   be made by just fixing some of the bugs in each release (n) and
   selling it to them as release (n+1). Microsoft in fact seems to have
   mastered this technique.
     _________________________________________________________________

   Node:heavy metal, Next:[6735]heavy wizardry,
   Previous:[6736]heatseeker, Up:[6737]= H =

   heavy metal n.

   [Cambridge] Syn. [6738]big iron.
     _________________________________________________________________

   Node:heavy wizardry, Next:[6739]heavyweight, Previous:[6740]heavy
   metal, Up:[6741]= H =

   heavy wizardry n.

   Code or designs that trade on a particularly intimate knowledge or
   experience of a particular operating system or language or complex
   application interface. Distinguished from [6742]deep magic, which
   trades more on arcane theoretical knowledge. Writing device drivers is
   heavy wizardry; so is interfacing to [6743]X (sense 2) without a
   toolkit. Esp. found in source-code comments of the form "Heavy
   wizardry begins here". Compare [6744]voodoo programming.
     _________________________________________________________________

   Node:heavyweight, Next:[6745]heisenbug, Previous:[6746]heavy wizardry,
   Up:[6747]= H =

   heavyweight adj.

   [common] High-overhead; [6748]baroque; code-intensive; featureful, but
   costly. Esp. used of communication protocols, language designs, and
   any sort of implementation in which maximum generality and/or ease of
   implementation has been pushed at the expense of mundane
   considerations such as speed, memory utilization, and startup time.
   [6749]EMACS is a heavyweight editor; [6750]X is an extremely
   heavyweight window system. This term isn't pejorative, but one
   hacker's heavyweight is another's [6751]elephantine and a third's
   [6752]monstrosity. Oppose `lightweight'. Usage: now borders on
   techspeak, especially in the compound `heavyweight process'.
     _________________________________________________________________

   Node:heisenbug, Next:[6753]Helen Keller mode,
   Previous:[6754]heavyweight, Up:[6755]= H =

   heisenbug /hi:'zen-buhg/ n.

   [from Heisenberg's Uncertainty Principle in quantum physics] A bug
   that disappears or alters its behavior when one attempts to probe or
   isolate it. (This usage is not even particularly fanciful; the use of
   a debugger sometimes alters a program's operating environment
   significantly enough that buggy code, such as that which relies on the
   values of uninitialized memory, behaves quite differently.) Antonym of
   [6756]Bohr bug; see also [6757]mandelbug, [6758]schroedinbug. In C,
   nine out of ten heisenbugs result from uninitialized auto variables,
   [6759]fandango on core phenomena (esp. lossage related to corruption
   of the malloc [6760]arena) or errors that [6761]smash the stack.
     _________________________________________________________________

   Node:Helen Keller mode, Next:[6762]hello sailor!,
   Previous:[6763]heisenbug, Up:[6764]= H =

   Helen Keller mode n.

   1. State of a hardware or software system that is deaf, dumb, and
   blind, i.e., accepting no input and generating no output, usually due
   to an infinite loop or some other excursion into [6765]deep space.
   (Unfair to the real Helen Keller, whose success at learning speech was
   triumphant.) See also [6766]go flatline, [6767]catatonic. 2. On IBM
   PCs under DOS, refers to a specific failure mode in which a screen
   saver has kicked in over an [6768]ill-behaved application which
   bypasses the very interrupts the screen saver watches for activity.
   Your choices are to try to get from the program's current state
   through a successful save-and-exit without being able to see what
   you're doing, or to re-boot the machine. This isn't (strictly
   speaking) a crash.
     _________________________________________________________________

   Node:hello sailor!, Next:[6769]hello wall!, Previous:[6770]Helen
   Keller mode, Up:[6771]= H =

   hello sailor! interj.

   Occasional West Coast equivalent of [6772]hello world; seems to have
   originated at SAIL, later associated with the game [6773]Zork (which
   also included "hello, aviator" and "hello, implementor"). Originally
   from the traditional hooker's greeting to a swabbie fresh off the
   boat, of course. The standard response is "Nothing happens here."; of
   all the Zork/Dungeon games, only in Infocom's Zork 3 is "Hello,
   Sailor" actually useful (excluding the unique situation where
   _knowing_ this fact is important in Dungeon...).
     _________________________________________________________________

   Node:hello wall!, Next:[6774]hello world, Previous:[6775]hello
   sailor!, Up:[6776]= H =

   hello, wall! excl.

   See [6777]wall.
     _________________________________________________________________

   Node:hello world, Next:[6778]hex, Previous:[6779]hello wall!,
   Up:[6780]= H =

   hello world interj.

   1. The canonical minimal test message in the C/Unix universe. 2. Any
   of the minimal programs that emit this message. Traditionally, the
   first program a C coder is supposed to write in a new environment is
   one that just prints "hello, world" to standard output (and indeed it
   is the first example program in [6781]K&R). Environments that generate
   an unreasonably large executable for this trivial test or which
   require a [6782]hairy compiler-linker invocation to generate it are
   considered to [6783]lose (see [6784]X). 3. Greeting uttered by a
   hacker making an entrance or requesting information from anyone
   present. "Hello, world! Is the LAN back up yet?"
     _________________________________________________________________

   Node:hex, Next:[6785]hexadecimal, Previous:[6786]hello world,
   Up:[6787]= H =

   hex n.

   1. Short for [6788]hexadecimal, base 16. 2. A 6-pack of anything
   (compare [6789]quad, sense 2). Neither usage has anything to do with
   [6790]magic or [6791]black art, though the pun is appreciated and
   occasionally used by hackers. True story: As a joke, some hackers once
   offered some surplus ICs for sale to be worn as protective amulets
   against hostile magic. The chips were, of course, hex inverters.
     _________________________________________________________________

   Node:hexadecimal, Next:[6792]hexit, Previous:[6793]hex, Up:[6794]= H =

   hexadecimal n.

   Base 16. Coined in the early 1960s to replace earlier `sexadecimal',
   which was too racy and amusing for stuffy IBM, and later adopted by
   the rest of the industry.

   Actually, neither term is etymologically pure. If we take `binary' to
   be paradigmatic, the most etymologically correct term for base 10, for
   example, is `denary', which comes from `deni' (ten at a time, ten
   each), a Latin `distributive' number; the corresponding term for
   base-16 would be something like `sendenary'. `Decimal' is from an
   ordinal number; the corresponding prefix for 6 would imply something
   like `sextidecimal'. The `sexa-' prefix is Latin but incorrect in this
   context, and `hexa-' is Greek. The word `octal' is similarly
   incorrect; a correct form would be `octaval' (to go with decimal), or
   `octonary' (to go with binary). If anyone ever implements a base-3
   computer, computer scientists will be faced with the unprecedented
   dilemma of a choice between two correct forms; both `ternary' and
   `trinary' have a claim to this throne.
     _________________________________________________________________

   Node:hexit, Next:[6795]HHOK, Previous:[6796]hexadecimal, Up:[6797]= H
   =

   hexit /hek'sit/ n.

   A hexadecimal digit (0-9, and A-F or a-f). Used by people who claim
   that there are only ten digits, dammit; sixteen-fingered human beings
   are rather rare, despite what some keyboard designs might seem to
   imply (see [6798]space-cadet keyboard).
     _________________________________________________________________

   Node:HHOK, Next:[6799]HHOS, Previous:[6800]hexit, Up:[6801]= H =

   HHOK

   See [6802]ha ha only serious.
     _________________________________________________________________

   Node:HHOS, Next:[6803]hidden flag, Previous:[6804]HHOK, Up:[6805]= H =

   HHOS

   See [6806]ha ha only serious.
     _________________________________________________________________

   Node:hidden flag, Next:[6807]high bit, Previous:[6808]HHOS, Up:[6809]=
   H =

   hidden flag n.

   [scientific computation] An extra option added to a routine without
   changing the calling sequence. For example, instead of adding an
   explicit input variable to instruct a routine to give extra diagnostic
   output, the programmer might just add a test for some otherwise
   meaningless feature of the existing inputs, such as a negative mass.
   The use of hidden flags can make a program very hard to debug and
   understand, but is all too common wherever programs are hacked on in a
   hurry.
     _________________________________________________________________

   Node:high bit, Next:[6810]high moby, Previous:[6811]hidden flag,
   Up:[6812]= H =

   high bit n.

   [from `high-order bit'] 1. The most significant bit in a byte. 2.
   [common] By extension, the most significant part of something other
   than a data byte: "Spare me the whole [6813]saga, just give me the
   high bit." See also [6814]meta bit, [6815]hobbit, [6816]dread high-bit
   disease, and compare the mainstream slang `bottom line'.
     _________________________________________________________________

   Node:high moby, Next:[6817]highly, Previous:[6818]high bit, Up:[6819]=
   H =

   high moby /hi:' mohb'ee/ n.

   The high half of a 512K [6820]PDP-10's physical address space; the
   other half was of course the low moby. This usage has been generalized
   in a way that has outlasted the [6821]PDP-10; for example, at the 1990
   Washington D.C. Area Science Fiction Conclave (Disclave), when a
   miscommunication resulted in two separate wakes being held in
   commemoration of the shutdown of MIT's last [6822]ITS machines, the
   one on the upper floor was dubbed the `high moby' and the other the
   `low moby'. All parties involved [6823]grokked this instantly. See
   [6824]moby.
     _________________________________________________________________

   Node:highly, Next:[6825]hing, Previous:[6826]high moby, Up:[6827]= H =

   highly adv.

   [scientific computation] The preferred modifier for overstating an
   understatement. As in: `highly nonoptimal', the worst possible way to
   do something; `highly nontrivial', either impossible or requiring a
   major research project; `highly nonlinear', completely erratic and
   unpredictable; `highly nontechnical', drivel written for [6828]lusers,
   oversimplified to the point of being misleading or incorrect (compare
   [6829]drool-proof paper). In other computing cultures, postfixing of
   [6830]in the extreme might be preferred.
     _________________________________________________________________

   Node:hing, Next:[6831]hired gun, Previous:[6832]highly, Up:[6833]= H =

   hing // n.

   [IRC] Fortuitous typo for `hint', now in wide intentional use among
   players of [6834]initgame. Compare [6835]newsfroup, [6836]filk.
     _________________________________________________________________

   Node:hired gun, Next:[6837]hirsute, Previous:[6838]hing, Up:[6839]= H
   =

   hired gun n.

   A contract programmer, as opposed to a full-time staff member. All the
   connotations of this term suggested by innumerable spaghetti Westerns
   are intentional.
     _________________________________________________________________

   Node:hirsute, Next:[6840]HLL, Previous:[6841]hired gun, Up:[6842]= H =

   hirsute adj.

   Occasionally used humorously as a synonym for [6843]hairy.
     _________________________________________________________________

   Node:HLL, Next:[6844]hoarding, Previous:[6845]hirsute, Up:[6846]= H =

   HLL /H-L-L/ n.

   [High-Level Language (as opposed to assembler)] Found primarily in
   email and news rather than speech. Rarely, the variants `VHLL' and
   `MLL' are found. VHLL stands for `Very-High-Level Language' and is
   used to describe a [6847]bondage-and-discipline language that the
   speaker happens to like; Prolog and Backus's FP are often called
   VHLLs. `MLL' stands for `Medium-Level Language' and is sometimes used
   half-jokingly to describe [6848]C, alluding to its
   `structured-assembler' image. See also [6849]languages of choice.
     _________________________________________________________________

   Node:hoarding, Next:[6850]hobbit, Previous:[6851]HLL, Up:[6852]= H =

   hoarding n.

   See [6853]software hoarding.
     _________________________________________________________________

   Node:hobbit, Next:[6854]hog, Previous:[6855]hoarding, Up:[6856]= H =

   hobbit n.

   1. [rare] The High Order BIT of a byte; same as the [6857]meta bit or
   [6858]high bit. 2. The non-ITS name of [6859]vad@ai.mit.edu
   (*Hobbit*), master of lasers.
     _________________________________________________________________

   Node:hog, Next:[6860]hole, Previous:[6861]hobbit, Up:[6862]= H =

   hog n.,vt.

   1. Favored term to describe programs or hardware that seem to eat far
   more than their share of a system's resources, esp. those which
   noticeably degrade interactive response. Not used of programs that are
   simply extremely large or complex or that are merely painfully slow
   themselves. More often than not encountered in qualified forms, e.g.,
   `memory hog', `core hog', `hog the processor', `hog the disk'. "A
   controller that never gives up the I/O bus gets killed after the
   bus-hog timer expires." 2. Also said of people who use more than their
   fair share of resources (particularly disk, where it seems that 10% of
   the people use 90% of the disk, no matter how big the disk is or how
   many people use it). Of course, once disk hogs fill up one filesystem,
   they typically find some other new one to infect, claiming to the
   sysadmin that they have an important new project to complete.
     _________________________________________________________________

   Node:hole, Next:[6863]hollised, Previous:[6864]hog, Up:[6865]= H =

   hole n.

   A region in an otherwise [6866]flat entity which is not actually
   present. For example, some Unix filesystems can store large files with
   holes so that unused regions of the file are never actually stored on
   disk. (In techspeak, these are referred to as `sparse' files.) As
   another example, the region of memory in IBM PCs reserved for
   memory-mapped I/O devices which may not actually be present is called
   `the I/O hole', since memory-management systems must skip over this
   area when filling user requests for memory.
     _________________________________________________________________

   Node:hollised, Next:[6867]holy wars, Previous:[6868]hole, Up:[6869]= H
   =

   hollised /hol'ist/ adj.

   [Usenet: sci.space] To be hollised is to have been ordered by one's
   employer not to post any even remotely job-related material to Usenet
   (or, by extension, to other Internet media). The original and most
   notorious case of this involved one Ken Hollis, a Lockheed employee
   and space-program enthusiast who posted publicly available material on
   access to Space Shuttle launches to sci.space. He was gagged under
   threat of being fired in 1994 at the behest of NASA public-relations
   officers. The result was, of course, a huge publicity black eye for
   NASA. Nevertheless several other NASA contractor employees were
   subsequently hollised for similar activities. Use of this term carries
   the strong connotation that the persons doing the gagging are
   bureaucratic idiots blinded to their own best interests by territorial
   reflexes.
     _________________________________________________________________

   Node:holy wars, Next:[6870]home box, Previous:[6871]hollised,
   Up:[6872]= H =

   holy wars n.

   [from [6873]Usenet, but may predate it; common] n. [6874]flame wars
   over [6875]religious issues. The paper by Danny Cohen that popularized
   the terms [6876]big-endian and [6877]little-endian in connection with
   the LSB-first/MSB-first controversy was entitled "On Holy Wars and a
   Plea for Peace".

   Great holy wars of the past have included [6878]ITS vs. [6879]Unix,
   [6880]Unix vs. [6881]VMS, [6882]BSD Unix vs. [6883]USG Unix, [6884]C
   vs. [6885]Pascal, [6886]C vs. FORTRAN, etc. In the year 2000, popular
   favorites of the day are KDE vs, GNOME, vim vs. elvis, Linux vs.
   [Free|Net|Open]BSD. Hardy perennials include [6887]EMACS vs. [6888]vi,
   my personal computer vs. everyone else's personal computer, ad
   nauseam. The characteristic that distinguishes holy wars from normal
   technical disputes is that in a holy war most of the participants
   spend their time trying to pass off personal value choices and
   cultural attachments as objective technical evaluations. This happens
   precisely because in a true holy war, the actual substantive
   differences between the sides are relatively minor. See also
   [6889]theology.
     _________________________________________________________________

   Node:home box, Next:[6890]home machine, Previous:[6891]holy wars,
   Up:[6892]= H =

   home box n.

   A hacker's personal machine, especially one he or she owns. "Yeah?
   Well, my home box runs a full 4.4 BSD, so there!"
     _________________________________________________________________

   Node:home machine, Next:[6893]home page, Previous:[6894]home box,
   Up:[6895]= H =

   home machine n.

   1. Syn. [6896]home box. 2. The machine that receives your email. These
   senses might be distinct, for example, for a hacker who owns one
   computer at home, but reads email at work.
     _________________________________________________________________

   Node:home page, Next:[6897]honey pot, Previous:[6898]home machine,
   Up:[6899]= H =

   home page n.

   1. One's personal billboard on the World Wide Web. The term `home
   page' is perhaps a bit misleading because home directories and
   physical homes in [6900]RL are private, but home pages are designed to
   be very public. 2. By extension, a WWW repository for information and
   links related to a project or organization. Compare [6901]home box.
     _________________________________________________________________

   Node:honey pot, Next:[6902]hook, Previous:[6903]home page, Up:[6904]=
   H =

   honey pot n.

   A box designed to attract [6905]crackers so that they can be observed
   in action. It is usually well isolated from the rest of the network,
   but has extensive logging (usually network layer, on a different
   machine). Different from an [6906]iron box in that it's purpose is to
   attract, not merely observe. Sometimes, it is also a defensive network
   security tactic - you set up an easy-to-crack box so that your real
   servers don't get messed with. The concept was presented in Cheswick &
   Bellovin's book "Firewalls and Internet Security".
     _________________________________________________________________

   Node:hook, Next:[6907]hop, Previous:[6908]honey pot, Up:[6909]= H =

   hook n.

   A software or hardware feature included in order to simplify later
   additions or changes by a user. For example, a simple program that
   prints numbers might always print them in base 10, but a more flexible
   version would let a variable determine what base to use; setting the
   variable to 5 would make the program print numbers in base 5. The
   variable is a simple hook. An even more flexible program might examine
   the variable and treat a value of 16 or less as the base to use, but
   treat any other number as the address of a user-supplied routine for
   printing a number. This is a [6910]hairy but powerful hook; one can
   then write a routine to print numbers as Roman numerals, say, or as
   Hebrew characters, and plug it into the program through the hook.
   Often the difference between a good program and a superb one is that
   the latter has useful hooks in judiciously chosen places. Both may do
   the original job about equally well, but the one with the hooks is
   much more flexible for future expansion of capabilities ([6911]EMACS,
   for example, is all hooks). The term `user exit' is synonymous but
   much more formal and less hackish.
     _________________________________________________________________

   Node:hop, Next:[6912]hose, Previous:[6913]hook, Up:[6914]= H =

   hop

   1. n. [common] One file transmission in a series required to get a
   file from point A to point B on a store-and-forward network. On such
   networks (including [6915]UUCPNET and [6916]FidoNet), an important
   inter-machine metric is the number of hops in the shortest path
   between them, which can be more significant than their geographical
   separation. See [6917]bang path. 2. v. [rare] To log in to a remote
   machine, esp. via rlogin or telnet. "I'll hop over to foovax to FTP
   that."
     _________________________________________________________________

   Node:hose, Next:[6918]hosed, Previous:[6919]hop, Up:[6920]= H =

   hose

   1. vt. [common] To make non-functional or greatly degraded in
   performance. "That big ray-tracing program really hoses the system."
   See [6921]hosed. 2. n. A narrow channel through which data flows under
   pressure. Generally denotes data paths that represent performance
   bottlenecks. 3. n. Cabling, especially thick Ethernet cable. This is
   sometimes called `bit hose' or `hosery' (play on `hosiery') or
   `etherhose'. See also [6922]washing machine.
     _________________________________________________________________

   Node:hosed, Next:[6923]hot chat, Previous:[6924]hose, Up:[6925]= H =

   hosed adj.

   Same as [6926]down. Used primarily by Unix hackers. Humorous: also
   implies a condition thought to be relatively easy to reverse. Probably
   derived from the Canadian slang `hoser' popularized by the Bob and
   Doug Mackenzie skits on SCTV, but this usage predated SCTV by years in
   hackerdom (it was certainly already live at CMU in the 1970s). See
   [6927]hose. It is also widely used of people in the mainstream sense
   of `in an extremely unfortunate situation'.

   Once upon a time, a Cray that had been experiencing periodic
   difficulties crashed, and it was announced to have been hosed. It was
   discovered that the crash was due to the disconnection of some coolant
   hoses. The problem was corrected, and users were then assured that
   everything was OK because the system had been rehosed. See also
   [6928]dehose.
     _________________________________________________________________

   Node:hot chat, Next:[6929]hot spot, Previous:[6930]hosed, Up:[6931]= H
   =

   hot chat n.

   Sexually explicit one-on-one chat. See [6932]teledildonics.
     _________________________________________________________________

   Node:hot spot, Next:[6933]hotlink, Previous:[6934]hot chat, Up:[6935]=
   H =

   hot spot n.

   1. [primarily used by C/Unix programmers, but spreading] It is
   received wisdom that in most programs, less than 10% of the code eats
   90% of the execution time; if one were to graph instruction visits
   versus code addresses, one would typically see a few huge spikes
   amidst a lot of low-level noise. Such spikes are called `hot spots'
   and are good candidates for heavy optimization or [6936]hand-hacking.
   The term is especially used of tight loops and recursions in the
   code's central algorithm, as opposed to (say) initial set-up costs or
   large but infrequent I/O operations. See [6937]tune, [6938]bum,
   [6939]hand-hacking. 2. The active location of a cursor on a bit-map
   display. "Put the mouse's hot spot on the `ON' widget and click the
   left button." 3. A screen region that is sensitive to mouse gestures,
   which trigger some action. World Wide Web pages now provide the
   [6940]canonical examples; WWW browsers present hypertext links as hot
   spots which, when clicked on, point the browser at another document
   (these are specifically called [6941]hotlinks). 4. In a massively
   parallel computer with shared memory, the one location that all 10,000
   processors are trying to read or write at once (perhaps because they
   are all doing a [6942]busy-wait on the same lock). 5. More generally,
   any place in a hardware design that turns into a performance
   bottleneck due to resource contention.
     _________________________________________________________________

   Node:hotlink, Next:[6943]house wizard, Previous:[6944]hot spot,
   Up:[6945]= H =

   hotlink /hot'link/ n.

   A [6946]hot spot on a World Wide Web page; an area, which, when
   clicked or selected, chases a URL. Also spelled `hot link'. Use of
   this term focuses on the link's role as an immediate part of your
   display, as opposed to the timeless sense of logical connection
   suggested by [6947]web pointer. Your screen shows hotlinks but your
   document has web pointers, not (in normal usage) the other way around.
     _________________________________________________________________

   Node:house wizard, Next:[6948]HP-SUX, Previous:[6949]hotlink,
   Up:[6950]= H =

   house wizard n.

   [prob. from ad-agency tradetalk, `house freak'] A hacker occupying a
   technical-specialist, R&D, or systems position at a commercial shop. A
   really effective house wizard can have influence out of all proportion
   to his/her ostensible rank and still not have to wear a suit. Used
   esp. of Unix wizards. The term `house guru' is equivalent.
     _________________________________________________________________

   Node:HP-SUX, Next:[6951]HTH, Previous:[6952]house wizard, Up:[6953]= H
   =

   HP-SUX /H-P suhks/ n.

   Unflattering hackerism for HP-UX, Hewlett-Packard's Unix port, which
   features some truly unique bogosities in the filesystem internals and
   elsewhere (these occasionally create portability problems). HP-UX is
   often referred to as `hockey-pux' inside HP, and one respondent claims
   that the proper pronunciation is /H-P ukkkhhhh/ as though one were
   about to spit. Another such alternate spelling and pronunciation is
   "H-PUX" /H-puhks/. Hackers at HP/Apollo (the former Apollo Computers
   which was swallowed by HP in 1989) have been heard to complain that
   Mr. Packard should have pushed to have his name first, if for no other
   reason than the greater eloquence of the resulting acronym. Compare
   [6954]AIDX, [6955]buglix. See also [6956]Nominal Semidestructor,
   [6957]Telerat, [6958]ScumOS, [6959]sun-stools, [6960]Slowlaris.
     _________________________________________________________________

   Node:HTH, Next:[6961]huff, Previous:[6962]HP-SUX, Up:[6963]= H =

   HTH //

   [Usenet: very common] Abbreviation: Hope This Helps (e.g. following a
   response to a technical question). Often used just before [6964]HAND.
   See also [6965]YHBT.
     _________________________________________________________________

   Node:huff, Next:[6966]humma, Previous:[6967]HTH, Up:[6968]= H =

   huff v.

   To compress data using a Huffman code. Various programs that use such
   methods have been called `HUFF' or some variant thereof. Oppose
   [6969]puff. Compare [6970]crunch, [6971]compress.
     _________________________________________________________________

   Node:humma, Next:[6972]hung, Previous:[6973]huff, Up:[6974]= H =

   humma // excl.

   A filler word used on various `chat' and `talk' programs when you had
   nothing to say but felt that it was important to say something. The
   word apparently originated (at least with this definition) on the MECC
   Timeshare System (MTS, a now-defunct educational time-sharing system
   running in Minnesota during the 1970s and the early 1980s) but was
   later sighted on early Unix systems. Compare the U.K's [6975]wibble.
     _________________________________________________________________

   Node:hung, Next:[6976]hungry puppy, Previous:[6977]humma, Up:[6978]= H
   =

   hung adj.

   [from `hung up'; common] Equivalent to [6979]wedged, but more common
   at Unix/C sites. Not generally used of people. Syn. with [6980]locked
   up, [6981]wedged; compare [6982]hosed. See also [6983]hang. A hung
   state is distinguished from [6984]crashed or [6985]down, where the
   program or system is also unusable but because it is not running
   rather than because it is waiting for something. However, the recovery
   from both situations is often the same. It is also distinguished from
   the similar but more drastic state [6986]wedged - hung software can be
   woken up with easy things like interrupt keys, but wedged will need a
   kill -9 or even reboot.
     _________________________________________________________________

   Node:hungry puppy, Next:[6987]hungus, Previous:[6988]hung, Up:[6989]=
   H =

   hungry puppy n.

   Syn. [6990]slopsucker.
     _________________________________________________________________

   Node:hungus, Next:[6991]hyperspace, Previous:[6992]hungry puppy,
   Up:[6993]= H =

   hungus /huhng'g*s/ adj.

   [perhaps related to slang `humongous'] Large, unwieldy, usually
   unmanageable. "TCP is a hungus piece of code." "This is a hungus set
   of modifications." The [6994]Infocom text adventure game "Beyond Zork"
   included two monsters called hunguses.
     _________________________________________________________________

   Node:hyperspace, Next:[6995]hysterical reasons, Previous:[6996]hungus,
   Up:[6997]= H =

   hyperspace /hi:'per-spays/ n.

   A memory location that is far away from where the program counter
   should be pointing, especially a place that is inaccessible because it
   is not even mapped in by the virtual-memory system. "Another core dump
   -- looks like the program jumped off to hyperspace somehow." (Compare
   [6998]jump off into never-never land.) This usage is from the SF
   notion of a spaceship jumping `into hyperspace', that is, taking a
   shortcut through higher-dimensional space -- in other words, bypassing
   this universe. The variant `east hyperspace' is recorded among CMU and
   Bliss hackers.
     _________________________________________________________________

   Node:hysterical reasons, Next:[6999]I didn't change anything!,
   Previous:[7000]hyperspace, Up:[7001]= H =

   hysterical reasons n.

   (also `hysterical raisins') A variant on the stock phrase "for
   historical reasons", indicating specifically that something must be
   done in some stupid way for backwards compatibility, and moreover that
   the feature it must be compatible with was the result of a bad design
   in the first place. "All IBM PC video adapters have to support MDA
   text mode for hysterical reasons." Compare [7002]bug-for-bug
   compatible.
     _________________________________________________________________

   Node:= I =, Next:[7003]= J =, Previous:[7004]= H =, Up:[7005]The
   Jargon Lexicon

= I =

     * [7006]I didn't change anything!:
     * [7007]I see no X here.:
     * [7008]IANAL:
     * [7009]IBM:
     * [7010]IBM discount:
     * [7011]ICBM address:
     * [7012]ice:
     * [7013]ID10T error:
     * [7014]idempotent:
     * [7015]IDP:
     * [7016]If you want X you know where to find it.:
     * [7017]ifdef out:
     * [7018]IIRC:
     * [7019]ill-behaved:
     * [7020]IMHO:
     * [7021]Imminent Death Of The Net Predicted!:
     * [7022]in the extreme:
     * [7023]inc:
     * [7024]incantation:
     * [7025]include:
     * [7026]include war:
     * [7027]indent style:
     * [7028]index of X:
     * [7029]infant mortality:
     * [7030]infinite:
     * [7031]infinite loop:
     * [7032]Infinite-Monkey Theorem:
     * [7033]infinity:
     * [7034]inflate:
     * [7035]Infocom:
     * [7036]initgame:
     * [7037]insanely great:
     * [7038]installfest:
     * [7039]INTERCAL:
     * [7040]interesting:
     * [7041]Internet:
     * [7042]Internet address:
     * [7043]Internet Death Penalty:
     * [7044]Internet Exploder:
     * [7045]Internet Exploiter:
     * [7046]interrupt:
     * [7047]interrupt list:
     * [7048]interrupts locked out:
     * [7049]intro:
     * [7050]IRC:
     * [7051]iron:
     * [7052]Iron Age:
     * [7053]iron box:
     * [7054]ironmonger:
     * [7055]ISO standard cup of tea:
     * [7056]ISP:
     * [7057]ITS:
     * [7058]IWBNI:
     * [7059]IYFEG:
     _________________________________________________________________

   Node:I didn't change anything!, Next:[7060]I see no X here.,
   Previous:[7061]hysterical reasons, Up:[7062]= I =

   I didn't change anything! interj.

   An aggrieved cry often heard as bugs manifest during a regression
   test. The [7063]canonical reply to this assertion is "Then it works
   just the same as it did before, doesn't it?" See also [7064]one-line
   fix. This is also heard from applications programmers trying to blame
   an obvious applications problem on an unrelated systems software
   change, for example a divide-by-0 fault after terminals were added to
   a network. Usually, their statement is found to be false. Upon close
   questioning, they will admit some major restructuring of the program
   that shouldn't have broken anything, in their opinion, but which
   actually [7065]hosed the code completely.
     _________________________________________________________________

   Node:I see no X here., Next:[7066]IANAL, Previous:[7067]I didn't
   change anything!, Up:[7068]= I =

   I see no X here.

   Hackers (and the interactive computer games they write) traditionally
   favor this slightly marked usage over other possible equivalents such
   as "There's no X here!" or "X is missing." or "Where's the X?". This
   goes back to the original PDP-10 [7069]ADVENT, which would respond in
   this wise if you asked it to do something involving an object not
   present at your location in the game.
     _________________________________________________________________

   Node:IANAL, Next:[7070]IBM, Previous:[7071]I see no X here.,
   Up:[7072]= I =

   IANAL //

   [Usenet] Abbreviation, "I Am Not A Lawyer". Usually precedes legal
   advice.
     _________________________________________________________________

   Node:IBM, Next:[7073]IBM discount, Previous:[7074]IANAL, Up:[7075]= I
   =

   IBM /I-B-M/

   Inferior But Marketable; It's Better Manually; Insidious Black Magic;
   It's Been Malfunctioning; Incontinent Bowel Movement; and a
   near-[7076]infinite number of even less complimentary expansions,
   including `International Business Machines'. See [7077]TLA. These
   abbreviations illustrate the considerable antipathy most hackers long
   felt toward the `industry leader' (see [7078]fear and loathing).

   What galled hackers about most IBM machines above the PC level wasn't
   so much that they were underpowered and overpriced (though that does
   count against them), but that the designs are incredibly archaic,
   [7079]crufty, and [7080]elephantine ... and you can't fix them --
   source code is locked up tight, and programming tools are expensive,
   hard to find, and bletcherous to use once you've found them. For many
   years, before Microsoft, IBM was the company hackers loved to hate.

   But everything changes. In the 1980s IBM had its own troubles with
   Microsoft. In the late 1990s IBM re-invented itself as a services
   company, began to release open-source software through its AlphaWorks
   group, and began shipping [7081]Linux systems and building ties to the
   Linux community. To the astonishment of all parties, IBM emerged as a
   friend of the hacker community

   This lexicon includes a number of entries attributed to `IBM'; these
   derive from some rampantly unofficial jargon lists circulated within
   IBM's own beleaguered hacker underground.
     _________________________________________________________________

   Node:IBM discount, Next:[7082]ICBM address, Previous:[7083]IBM,
   Up:[7084]= I =

   IBM discount n.

   A price increase. Outside IBM, this derives from the common perception
   that IBM products are generally overpriced (see [7085]clone); inside,
   it is said to spring from a belief that large numbers of IBM employees
   living in an area cause prices to rise.
     _________________________________________________________________

   Node:ICBM address, Next:[7086]ice, Previous:[7087]IBM discount,
   Up:[7088]= I =

   ICBM address n.

   (Also `missile address') The form used to register a site with the
   Usenet mapping project, back before the day of pervasive Internet,
   included a blank for longitude and latitude, preferably to
   seconds-of-arc accuracy. This was actually used for generating
   geographically-correct maps of Usenet links on a plotter; however, it
   became traditional to refer to this as one's `ICBM address' or
   `missile address', and some people include it in their [7089]sig block
   with that name. (A real missile address would include target
   elevation.)
     _________________________________________________________________

   Node:ice, Next:[7090]ID10T error, Previous:[7091]ICBM address,
   Up:[7092]= I =

   ice n.

   [coined by Usenetter Tom Maddox, popularized by William Gibson's
   cyberpunk SF novels: a contrived acronym for `Intrusion Countermeasure
   Electronics'] Security software (in Gibson's novels, software that
   responds to intrusion by attempting to immobilize or even literally
   kill the intruder). Hence, `icebreaker': a program designed for
   cracking security on a system.

   Neither term is in serious use yet as of early 1999, but many hackers
   find the metaphor attractive, and each may develop a denotation in the
   future. In the meantime, the speculative usage could be confused with
   `ICE', an acronym for "in-circuit emulator".

   In ironic reference to the speculative usage, however, some hackers
   and computer scientists formed ICE (International Cryptographic
   Experiment) in 1994. ICE is a consortium to promote uniform
   international access to strong cryptography.
     _________________________________________________________________

   Node:ID10T error, Next:[7093]idempotent, Previous:[7094]ice,
   Up:[7095]= I =

   ID10T error /I-D-ten-T er'*r/

   Synonym for [7096]PEBKAC, e.g. "The user is being an idiot".
   Tech-support people passing a problem report to someone higher up the
   food chain (and presumably better equipped to deal with idiots) may
   ask the user to convey that there seems to be an I-D-ten-T error.
   Users never twig.
     _________________________________________________________________

   Node:idempotent, Next:[7097]IDP, Previous:[7098]ID10T error,
   Up:[7099]= I =

   idempotent adj.

   [from mathematical techspeak] Acting as if used only once, even if
   used multiple times. This term is often used with respect to [7100]C
   header files, which contain common definitions and declarations to be
   included by several source files. If a header file is ever included
   twice during the same compilation (perhaps due to nested #include
   files), compilation errors can result unless the header file has
   protected itself against multiple inclusion; a header file so
   protected is said to be idempotent. The term can also be used to
   describe an initialization subroutine that is arranged to perform some
   critical action exactly once, even if the routine is called several
   times.
     _________________________________________________________________

   Node:IDP, Next:[7101]If you want X you know where to find it.,
   Previous:[7102]idempotent, Up:[7103]= I =

   IDP /I-D-P/ v.,n.

   [Usenet] Abbreviation for [7104]Internet Death Penalty. Common
   (probably now more so than the full form), and frequently verbed.
   Compare [7105]UDP.
     _________________________________________________________________

   Node:If you want X you know where to find it., Next:[7106]ifdef out,
   Previous:[7107]IDP, Up:[7108]= I =

   If you want X, you know where to find it.

   There is a legend that Dennis Ritchie, inventor of [7109]C, once
   responded to demands for features resembling those of what at the time
   was a much more popular language by observing "If you want PL/I, you
   know where to find it." Ever since, this has been hackish standard
   form for fending off requests to alter a new design to mimic some
   older (and, by implication, inferior and [7110]baroque) one. The case
   X = [7111]Pascal manifests semi-regularly on Usenet's comp.lang.c
   newsgroup. Indeed, the case X = X has been reported in discussions of
   graphics software (see [7112]X).
     _________________________________________________________________

   Node:ifdef out, Next:[7113]IIRC, Previous:[7114]If you want X you know
   where to find it., Up:[7115]= I =

   ifdef out /if'def owt/ v.

   Syn. for [7116]condition out, specific to [7117]C.
     _________________________________________________________________

   Node:IIRC, Next:[7118]ill-behaved, Previous:[7119]ifdef out,
   Up:[7120]= I =

   IIRC //

   Common abbreviation for "If I Recall Correctly".
     _________________________________________________________________

   Node:ill-behaved, Next:[7121]IMHO, Previous:[7122]IIRC, Up:[7123]= I =

   ill-behaved adj.

   1. [numerical analysis] Said of an algorithm or computational method
   that tends to blow up because of accumulated roundoff error or poor
   convergence properties. 2. Software that bypasses the defined [7124]OS
   interfaces to do things (like screen, keyboard, and disk I/O) itself,
   often in a way that depends on the hardware of the machine it is
   running on or which is nonportable or incompatible with other pieces
   of software. In the IBM PC/MS-DOS world, there is a folk theorem
   (nearly true) to the effect that (owing to gross inadequacies and
   performance penalties in the OS interface) all interesting
   applications are ill-behaved. See also [7125]bare metal. Oppose
   [7126]well-behaved, compare [7127]PC-ism. See [7128]mess-dos.
     _________________________________________________________________

   Node:IMHO, Next:[7129]Imminent Death Of The Net Predicted!,
   Previous:[7130]ill-behaved, Up:[7131]= I =

   IMHO // abbrev.

   [from SF fandom via Usenet; abbreviation for `In My Humble Opinion']
   "IMHO, mixed-case C names should be avoided, as mistyping something in
   the wrong case can cause hard-to-detect errors -- and they look too
   Pascalish anyhow." Also seen in variant forms such as IMNSHO (In My
   Not-So-Humble Opinion) and IMAO (In My Arrogant Opinion).
     _________________________________________________________________

   Node:Imminent Death Of The Net Predicted!, Next:[7132]in the extreme,
   Previous:[7133]IMHO, Up:[7134]= I =

   Imminent Death Of The Net Predicted! prov.

   [Usenet] Since [7135]Usenet first got off the ground in 1980-81, it
   has grown exponentially, approximately doubling in size every year. On
   the other hand, most people feel the [7136]signal-to-noise ratio of
   Usenet has dropped steadily. These trends led, as far back as
   mid-1983, to predictions of the imminent collapse (or death) of the
   net. Ten years and numerous doublings later, enough of these gloomy
   prognostications have been confounded that the phrase "Imminent Death
   Of The Net Predicted!" has become a running joke, hauled out any time
   someone grumbles about the [7137]S/N ratio or the huge and steadily
   increasing volume, or the possible loss of a key node or link, or the
   potential for lawsuits when ignoramuses post copyrighted material,
   etc., etc., etc.
     _________________________________________________________________

   Node:in the extreme, Next:[7138]inc, Previous:[7139]Imminent Death Of
   The Net Predicted!, Up:[7140]= I =

   in the extreme adj.

   A preferred superlative suffix for many hackish terms. See, for
   example, `obscure in the extreme' under [7141]obscure, and compare
   [7142]highly.
     _________________________________________________________________

   Node:inc, Next:[7143]incantation, Previous:[7144]in the extreme,
   Up:[7145]= I =

   inc /ink/ v.

   Verbal (and only rarely written) shorthand for increment, i.e.
   `increase by one'. Especially used by assembly programmers, as many
   assembly languages have an inc mnemonic. Antonym: dec (see [7146]DEC).
     _________________________________________________________________

   Node:incantation, Next:[7147]include, Previous:[7148]inc, Up:[7149]= I
   =

   incantation n.

   Any particularly arbitrary or obscure command that one must mutter at
   a system to attain a desired result. Not used of passwords or other
   explicit security features. Especially used of tricks that are so
   poorly documented that they must be learned from a [7150]wizard. "This
   compiler normally locates initialized data in the data segment, but if
   you [7151]mutter the right incantation they will be forced into text
   space."
     _________________________________________________________________

   Node:include, Next:[7152]include war, Previous:[7153]incantation,
   Up:[7154]= I =

   include vt.

   [Usenet] 1. To duplicate a portion (or whole) of another's message
   (typically with attribution to the source) in a reply or followup, for
   clarifying the context of one's response. See the discussion of
   inclusion styles under "Hacker Writing Style". 2. [from [7155]C]
   #include <disclaimer.h> has appeared in [7156]sig blocks to refer to a
   notional `standard [7157]disclaimer file'.
     _________________________________________________________________

   Node:include war, Next:[7158]indent style, Previous:[7159]include,
   Up:[7160]= I =

   include war n.

   Excessive multi-leveled inclusion within a discussion [7161]thread, a
   practice that tends to annoy readers. In a forum with high-traffic
   newsgroups, such as Usenet, this can lead to [7162]flames and the urge
   to start a [7163]kill file.
     _________________________________________________________________

   Node:indent style, Next:[7164]index of X, Previous:[7165]include war,
   Up:[7166]= I =

   indent style n.

   [C, C++, and Java programmers] The rules one uses to indent code in a
   readable fashion. There are four major C indent styles, described
   below; all have the aim of making it easier for the reader to visually
   track the scope of control constructs. They have been inherited by C++
   and Java, which have C-like syntaxes. The significant variable is the
   placement of { and } with respect to the statement(s) they enclose and
   to the guard or controlling statement (if, else, for, while, or do) on
   the block, if any.

   `K&R style' -- Named after Kernighan & Ritchie, because the examples
   in [7167]K&R are formatted this way. Also called `kernel style'
   because the Unix kernel is written in it, and the `One True Brace
   Style' (abbrev. 1TBS) by its partisans. In C code, the body is
   typically indented by eight spaces (or one tab) per level, as shown
   here. Four spaces are occasionally seen in C, but in C++ and Java four
   tends to be the rule rather than the exception.
if (<cond>) {
        <body>
}

   `Allman style' -- Named for Eric Allman, a Berkeley hacker who wrote a
   lot of the BSD utilities in it (it is sometimes called `BSD style').
   Resembles normal indent style in Pascal and Algol. It is the only
   style other than K&R in widespread use among Java programmers. Basic
   indent per level shown here is eight spaces, but four (or sometimes
   three) spaces are generally preferred by C++ and Java programmers.
if (<cond>)
{
        <body>
}

   `Whitesmiths style' -- popularized by the examples that came with
   Whitesmiths C, an early commercial C compiler. Basic indent per level
   shown here is eight spaces, but four spaces are occasionally seen.
if (<cond>)
        {
        <body>
        }

   `GNU style' -- Used throughout GNU EMACS and the Free Software
   Foundation code, and just about nowhere else. Indents are always four
   spaces per level, with { and } halfway between the outer and inner
   indent levels.
if (<cond>)
  {
    <body>
  }

   Surveys have shown the Allman and Whitesmiths styles to be the most
   common, with about equal mind shares. K&R/1TBS used to be nearly
   universal, but is now much less common in C (the opening brace tends
   to get lost against the right paren of the guard part in an if or
   while, which is a [7168]Bad Thing). Defenders of 1TBS argue that any
   putative gain in readability is less important than their style's
   relative economy with vertical space, which enables one to see more
   code on one's screen at once.

   The Java Language Specification legislates not only the capitalization
   of identifiers, but where nouns, adjectives, and verbs should be in
   method, class, interface, and variable names (section 6.8). While the
   specification stops short of also standardizing on a bracing style,
   all source code originating from Sun Laboratories uses the K&R style.
   This has set a precedent for Java programmers, which most follow.

   Doubtless these issues will continue to be the subject of [7169]holy
   wars.
     _________________________________________________________________

   Node:index of X, Next:[7170]infant mortality, Previous:[7171]indent
   style, Up:[7172]= I =

   index of X n.

   See [7173]coefficient of X.
     _________________________________________________________________

   Node:infant mortality, Next:[7174]infinite, Previous:[7175]index of X,
   Up:[7176]= I =

   infant mortality n.

   It is common lore among hackers (and in the electronics industry at
   large; this term is possibly techspeak by now) that the chances of
   sudden hardware failure drop off exponentially with a machine's time
   since first use (that is, until the relatively distant time at which
   enough mechanical wear in I/O devices and thermal-cycling stress in
   components has accumulated for the machine to start going senile). Up
   to half of all chip and wire failures happen within a new system's
   first few weeks; such failures are often referred to as `infant
   mortality' problems (or, occasionally, as `sudden infant death
   syndrome'). See [7177]bathtub curve, [7178]burn-in period.
     _________________________________________________________________

   Node:infinite, Next:[7179]infinite loop, Previous:[7180]infant
   mortality, Up:[7181]= I =

   infinite adj.

   [common] Consisting of a large number of objects; extreme. Used very
   loosely as in: "This program produces infinite garbage." "He is an
   infinite loser." The word most likely to follow `infinite', though, is
   [7182]hair. (It has been pointed out that fractals are an excellent
   example of infinite hair.) These uses are abuses of the word's
   mathematical meaning. The term `semi-infinite', denoting an
   immoderately large amount of some resource, is also heard. "This
   compiler is taking a semi-infinite amount of time to optimize my
   program." See also [7183]semi.
     _________________________________________________________________

   Node:infinite loop, Next:[7184]Infinite-Monkey Theorem,
   Previous:[7185]infinite, Up:[7186]= I =

   infinite loop n.

   One that never terminates (that is, the machine [7187]spins or
   [7188]buzzes forever and goes [7189]catatonic). There is a standard
   joke that has been made about each generation's exemplar of the
   ultra-fast machine: "The Cray-3 is so fast it can execute an infinite
   loop in under 2 seconds!"
     _________________________________________________________________

   Node:Infinite-Monkey Theorem, Next:[7190]infinity,
   Previous:[7191]infinite loop, Up:[7192]= I =

   Infinite-Monkey Theorem n.

   "If you put an [7193]infinite number of monkeys at typewriters,
   eventually one will bash out the script for Hamlet." (One may also
   hypothesize a small number of monkeys and a very long period of time.)
   This theorem asserts nothing about the intelligence of the one
   [7194]random monkey that eventually comes up with the script (and note
   that the mob will also type out all the possible incorrect versions of
   Hamlet). It may be referred to semi-seriously when justifying a
   [7195]brute force method; the implication is that, with enough
   resources thrown at it, any technical challenge becomes a
   [7196]one-banana problem. This argument gets more respect since
   [7197]Linux justified the [7198]bazaar mode of development.

   This theorem was first popularized by the astronomer Sir Arthur
   Eddington. It became part of the idiom of techies via the classic SF
   short story "Inflexible Logic" by Russell Maloney, and many younger
   hackers know it through a reference in Douglas Adams's "Hitchhiker's
   Guide to the Galaxy". On 1 April 2000 the usage acquired its own
   Internet standard, [7199]http://www.rfc-editor.org/rfc/rfc2795.txt
   (Infinite Monkey Protocol Suite).
     _________________________________________________________________

   Node:infinity, Next:[7200]inflate, Previous:[7201]Infinite-Monkey
   Theorem, Up:[7202]= I =

   infinity n.

   1. The largest value that can be represented in a particular type of
   variable (register, memory location, data type, whatever). 2. `minus
   infinity': The smallest such value, not necessarily or even usually
   the simple negation of plus infinity. In N-bit twos-complement
   arithmetic, infinity is 2^(N-1) - 1 but minus infinity is - (2^(N-1)),
   not -(2^(N-1) - 1). Note also that this is different from time T
   equals minus infinity, which is closer to a mathematician's usage of
   infinity.
     _________________________________________________________________

   Node:inflate, Next:[7203]Infocom, Previous:[7204]infinity, Up:[7205]=
   I =

   inflate vt.

   To decompress or [7206]puff a file. Rare among Internet hackers, used
   primarily by MS-DOS/Windows types.
     _________________________________________________________________

   Node:Infocom, Next:[7207]initgame, Previous:[7208]inflate, Up:[7209]=
   I =

   Infocom n.

   A now-legendary games company, active from 1979 to 1989, that
   commercialized the MDL parser technology used for [7210]Zork to
   produce a line of text adventure games that remain favorites among
   hackers. Infocom's games were intelligent, funny, witty, erudite,
   irreverent, challenging, satirical, and most thoroughly hackish in
   spirit. The physical game packages from Infocom are now prized
   collector's items. After being acquired by Activision in 1989 they did
   a few more "modern" (e.g. graphics-intensive) games which were less
   successful than reissues of their classics.

   The software, thankfully, is still extant; Infocom games were written
   in a kind of P-code and distributed with a P-code interpreter core,
   and not only freeware emulators for that interpreter but an actual
   compiler as well have been written to permit the P-code to be run on
   platforms the games never originally graced. In fact, new games
   written in this P-code are still bering written. (Emulators that can
   run Infocom game ZIPs, and new games, are available at
   [7211]ftp://wuarchive.wustl.edu:/doc/misc/if-archive/infocom.)
     _________________________________________________________________

   Node:initgame, Next:[7212]insanely great, Previous:[7213]Infocom,
   Up:[7214]= I =

   initgame /in-it'gaym/ n.

   [IRC] An [7215]IRC version of the trivia game "Botticelli", in which
   one user changes his [7216]nick to the initials of a famous person or
   other named entity, and the others on the channel ask yes or no
   questions, with the one to guess the person getting to be "it" next.
   As a courtesy, the one picking the initials starts by providing a
   4-letter hint of the form sex, nationality, life-status,
   reality-status. For example, MAAR means "Male, American, Alive, Real"
   (as opposed to "fictional"). Initgame can be surprisingly addictive.
   See also [7217]hing.

   [1996 update: a recognizable version of the initgame has become a
   staple of some radio talk shows in the U.S. We had it first! - ESR]
     _________________________________________________________________

   Node:insanely great, Next:[7218]installfest, Previous:[7219]initgame,
   Up:[7220]= I =

   insanely great adj.

   [Mac community, from Steve Jobs; also BSD Unix people via Bill Joy]
   Something so incredibly [7221]elegant that it is imaginable only to
   someone possessing the most puissant of [7222]hacker-natures.
     _________________________________________________________________

   Node:installfest, Next:[7223]INTERCAL, Previous:[7224]insanely great,
   Up:[7225]= I =

   installfest

   [Linux community since c.1998] Common portmanteau word for
   "installation festival"; Linux user groups frequently run these.
   Computer users are invited to bring their machines to have Linux
   installed on their machines. The idea is to get them painlessly over
   the biggest hump in migrating to Linux, which is initially installing
   and configuring it for the user's machine.
     _________________________________________________________________

   Node:INTERCAL, Next:[7226]interesting, Previous:[7227]installfest,
   Up:[7228]= I =

   INTERCAL /in't*r-kal/ n.

   [said by the authors to stand for `Compiler Language With No
   Pronounceable Acronym'] A computer language designed by Don Woods and
   James Lyons in 1972. INTERCAL is purposely different from all other
   computer languages in all ways but one; it is purely a written
   language, being totally unspeakable. An excerpt from the INTERCAL
   Reference Manual will make the style of the language clear:

     It is a well-known and oft-demonstrated fact that a person whose
     work is incomprehensible is held in high esteem. For example, if
     one were to state that the simplest way to store a value of 65536
     in a 32-bit INTERCAL variable is:
DO :1 <- #0$#256

     any sensible programmer would say that that was absurd. Since this
     is indeed the simplest method, the programmer would be made to look
     foolish in front of his boss, who would of course have happened to
     turn up, as bosses are wont to do. The effect would be no less
     devastating for the programmer having been correct.

   INTERCAL has many other peculiar features designed to make it even
   more unspeakable. The Woods-Lyons implementation was actually used by
   many (well, at least several) people at Princeton. The language has
   been recently reimplemented as C-INTERCAL and is consequently enjoying
   an unprecedented level of unpopularity; there is even an
   alt.lang.intercal newsgroup devoted to the study and ... appreciation
   of the language on Usenet.

   Inevitably, INTERCAL has a home page on the Web:
   [7229]http://www.tuxedo.org/~esr/intercal/. An extended version,
   implemented in (what else?) [7230]Perl and adding object-oriented
   features, is available at [7231]http://dd-sh.assurdo.com/INTERCAL. See
   also [7232]Befunge.
     _________________________________________________________________

   Node:interesting, Next:[7233]Internet, Previous:[7234]INTERCAL,
   Up:[7235]= I =

   interesting adj.

   In hacker parlance, this word has strong connotations of `annoying',
   or `difficult', or both. Hackers relish a challenge, and enjoy
   wringing all the irony possible out of the ancient Chinese curse "May
   you live in interesting times". Oppose [7236]trivial,
   [7237]uninteresting.
     _________________________________________________________________

   Node:Internet, Next:[7238]Internet address,
   Previous:[7239]interesting, Up:[7240]= I =

   Internet n.

   The mother of all networks. First incarnated beginning in 1969 as the
   ARPANET, a U.S. Department of Defense research testbed. Though it has
   been widely believed that the goal was to develop a network
   architecture for military command-and-control that could survive
   disruptions up to and including nuclear war, this is a myth; in fact,
   ARPANET was conceived from the start as a way to get most economical
   use out of then-scarce large-computer resources.

   As originally imagined, ARPANET's major use would have been to support
   what is now called remote login and more sophisticated forms of
   distributed computing, but the infant technology of electronic mail
   quickly grew to dominate actual usage. Universities, research labs and
   defense contractors early discovered the Internet's potential as a
   medium of communication between humans and linked up in steadily
   increasing numbers, connecting together a quirky mix of academics,
   techies, hippies, SF fans, hackers, and anarchists. The roots of this
   lexicon lie in those early years.

   Over the next quarter-century the Internet evolved in many ways. The
   typical machine/OS combination moved from [7241]DEC [7242]PDP-10s and
   [7243]PDP-20s, running [7244]TOPS-10 and [7245]TOPS-20, to PDP-11s and
   VAXes and Suns running [7246]Unix, and in the 1990s to Unix on Intel
   microcomputers. The Internet's protocols grew more capable, most
   notably in the move from NCP/IP to [7247]TCP/IP in 1982 and the
   implementation of Domain Name Service in 1983. It was around this time
   that people began referring to the collection of interconnected
   networks with ARPANET at its core as "the Internet".

   The ARPANET had a fairly strict set of participation guidelines -
   connected institutions had to be involved with a DOD-related research
   project. By the mid-80s, many of the organizations clamoring to join
   didn't fit this profile. In 1986, the National Science Foundation
   built NSFnet to open up access to its five regional supercomputing
   centers; NSFnet became the backbone of the Internet, replacing the
   original ARPANET pipes (which were formally shut down in 1990).
   Between 1990 and late 1994 the pieces of NSFnet were sold to major
   telecommunications companies until the Internet backbone had gone
   completely commercial.

   That year, 1994, was also the year the mainstream culture discovered
   the Internet. Once again, the [7248]killer app was not the anticipated
   one - rather, what caught the public imagination was the hypertext and
   multimedia features of the World Wide Web. Subsequently the Internet
   has seen off its only serious challenger (the OSI protocol stack
   favored by European telecom monopolies) and is in the process of
   absorbing into itself many of the proprietary networks built during
   the second wave of wide-area networking after 1980. It is now (1996) a
   commonplace even in mainstream media to predict that a
   globally-extended Internet will become the key unifying communications
   technology of the next century. See also [7249]the network and
   [7250]Internet address.
     _________________________________________________________________

   Node:Internet address, Next:[7251]Internet Death Penalty,
   Previous:[7252]Internet, Up:[7253]= I =

   Internet address n.

   1. [techspeak] An absolute network address of the form foo@bar.baz,
   where foo is a user name, bar is a [7254]sitename, and baz is a
   `domain' name, possibly including periods itself. Contrast with
   [7255]bang path; see also [7256]the network and [7257]network address.
   All Internet machines and most UUCP sites can now resolve these
   addresses, thanks to a large amount of behind-the-scenes magic and
   [7258]PD software written since 1980 or so. See also [7259]bang path,
   [7260]domainist. 2. More loosely, any network address reachable
   through Internet; this includes [7261]bang path addresses and some
   internal corporate and government networks.

   Reading Internet addresses is something of an art. Here are the four
   most important top-level functional Internet domains followed by a
   selection of geographical domains:

   com
          commercial organizations

   edu
          educational institutions

   gov
          U.S. government civilian sites

   mil
          U.S. military sites

   Note that most of the sites in the com and edu domains are in the U.S.
   or Canada.

   us
          sites in the U.S. outside the functional domains

   su
          sites in the ex-Soviet Union (see [7262]kremvax).

   uk
          sites in the United Kingdom

   Within the us domain, there are subdomains for the fifty states, each
   generally with a name identical to the state's postal abbreviation.
   Within the uk domain, there is an ac subdomain for academic sites and
   a co domain for commercial ones. Other top-level domains may be
   divided up in similar ways.
     _________________________________________________________________

   Node:Internet Death Penalty, Next:[7263]Internet Exploder,
   Previous:[7264]Internet address, Up:[7265]= I =

   Internet Death Penalty

   [Usenet] (often abbreviated IDP) The ultimate sanction against
   [7266]spam-emitting sites - complete shunning at the router level of
   all mail and packets, as well as Usenet messages, from the offending
   domain(s). Compare [7267]Usenet Death Penalty, with which it is
   sometimes confused.
     _________________________________________________________________

   Node:Internet Exploder, Next:[7268]Internet Exploiter,
   Previous:[7269]Internet Death Penalty, Up:[7270]= I =

   Internet Exploder

   [very common] Pejorative hackerism for Microsoft's "Internet Explorer"
   web browser (also "Internet Exploiter"). Compare [7271]HP-SUX,
   [7272]AIDX, [7273]buglix, [7274]Macintrash, [7275]Telerat,
   [7276]ScumOS, [7277]sun-stools, [7278]Slowlaris.
     _________________________________________________________________

   Node:Internet Exploiter, Next:[7279]interrupt, Previous:[7280]Internet
   Exploder, Up:[7281]= I =

   Internet Exploiter n.

   Another common name-of-insult for Internet Explorer, Microsoft's
   overweight Web Browser; more hostile than [7282]Internet Exploder.
   Reflects widespread hostility to Microsoft and a sense that it is
   seeking to hijack, monopolize, and corrupt the Internet. Compare
   [7283]Exploder and the less pejorative [7284]Netscrape.
     _________________________________________________________________

   Node:interrupt, Next:[7285]interrupt list, Previous:[7286]Internet
   Exploiter, Up:[7287]= I =

   interrupt

   1. [techspeak] n. On a computer, an event that interrupts normal
   processing and temporarily diverts flow-of-control through an
   "interrupt handler" routine. See also [7288]trap. 2. interj. A request
   for attention from a hacker. Often explicitly spoken. "Interrupt --
   have you seen Joe recently?" See [7289]priority interrupt. 3. Under
   MS-DOS, nearly synonymous with `system call', because the OS and BIOS
   routines are both called using the INT instruction (see
   [7290]interrupt list) and because programmers so often have to bypass
   the OS (going directly to a BIOS interrupt) to get reasonable
   performance.
     _________________________________________________________________

   Node:interrupt list, Next:[7291]interrupts locked out,
   Previous:[7292]interrupt, Up:[7293]= I =

   interrupt list n.

   [MS-DOS] The list of all known software interrupt calls (both
   documented and undocumented) for IBM PCs and compatibles, maintained
   and made available for free redistribution by Ralf Brown
   [7294]<ralf@cs.cmu.edu>. As of late 1992, it had grown to
   approximately two megabytes in length.
     _________________________________________________________________

   Node:interrupts locked out, Next:[7295]intro, Previous:[7296]interrupt
   list, Up:[7297]= I =

   interrupts locked out adj.

   When someone is ignoring you. In a restaurant, after several fruitless
   attempts to get the waitress's attention, a hacker might well observe
   "She must have interrupts locked out". The synonym `interrupts
   disabled' is also common. Variations abound; "to have one's interrupt
   mask bit set" and "interrupts masked out" are also heard. See also
   [7298]spl.
     _________________________________________________________________

   Node:intro, Next:[7299]IRC, Previous:[7300]interrupts locked out,
   Up:[7301]= I =

   intro n.

   [[7302]demoscene] Introductory [7303]screen of some production. 2. A
   short [7304]demo, usually showing just one or two [7305]screens. 3.
   Small, usually 64k, 40k or 4k [7306]demo. Sizes are generally dictated
   by [7307]compo rules. See also [7308]dentro, [7309]demo.
     _________________________________________________________________

   Node:IRC, Next:[7310]iron, Previous:[7311]intro, Up:[7312]= I =

   IRC /I-R-C/ n.

   [Internet Relay Chat] A worldwide "party line" network that allows one
   to converse with others in real time. IRC is structured as a network
   of Internet servers, each of which accepts connections from client
   programs, one per user. The IRC community and the [7313]Usenet and
   [7314]MUD communities overlap to some extent, including both hackers
   and regular folks who have discovered the wonders of computer
   networks. Some Usenet jargon has been adopted on IRC, as have some
   conventions such as [7315]emoticons. There is also a vigorous native
   jargon, represented in this lexicon by entries marked `[IRC]'. See
   also [7316]talk mode.
     _________________________________________________________________

   Node:iron, Next:[7317]Iron Age, Previous:[7318]IRC, Up:[7319]= I =

   iron n.

   Hardware, especially older and larger hardware of [7320]mainframe
   class with big metal cabinets housing relatively low-density
   electronics (but the term is also used of modern supercomputers).
   Often in the phrase [7321]big iron. Oppose [7322]silicon. See also
   [7323]dinosaur.
     _________________________________________________________________

   Node:Iron Age, Next:[7324]iron box, Previous:[7325]iron, Up:[7326]= I
   =

   Iron Age n.

   In the history of computing, 1961-1971 -- the formative era of
   commercial [7327]mainframe technology, when ferrite-core
   [7328]dinosaurs ruled the earth. The Iron Age began, ironically
   enough, with the delivery of the first minicomputer (the PDP-1) and
   ended with the introduction of the first commercial microprocessor
   (the Intel 4004) in 1971. See also [7329]Stone Age; compare
   [7330]elder days.
     _________________________________________________________________

   Node:iron box, Next:[7331]ironmonger, Previous:[7332]Iron Age,
   Up:[7333]= I =

   iron box n.

   [Unix/Internet] A special environment set up to trap a [7334]cracker
   logging in over remote connections long enough to be traced. May
   include a modified [7335]shell restricting the cracker's movements in
   unobvious ways, and `bait' files designed to keep him interested and
   logged on. See also [7336]back door, [7337]firewall machine,
   [7338]Venus flytrap, and Clifford Stoll's account in "[7339]The
   Cuckoo's Egg" of how he made and used one (see the [7340]Bibliography
   in Appendix C). Compare [7341]padded cell, [7342]honey pot.
     _________________________________________________________________

   Node:ironmonger, Next:[7343]ISO standard cup of tea,
   Previous:[7344]iron box, Up:[7345]= I =

   ironmonger n.

   [IBM] A hardware specialist (derogatory). Compare [7346]sandbender,
   [7347]polygon pusher.
     _________________________________________________________________

   Node:ISO standard cup of tea, Next:[7348]ISP,
   Previous:[7349]ironmonger, Up:[7350]= I =

   ISO standard cup of tea n.

   [South Africa] A cup of tea with milk and one teaspoon of sugar, where
   the milk is poured into the cup before the tea. Variations are ISO 0,
   with no sugar; ISO 2, with two spoons of sugar; and so on. This may
   derive from the "NATO standard" cup of coffee and tea (milk and two
   sugars), military slang going back to the late 1950s and parodying
   NATO's relentless bureacratic drive to standardize parts across
   European and U.S. militaries.

   Like many ISO standards, this one has a faintly alien ring in North
   America, where hackers generally shun the decadent British practice of
   adulterating perfectly good tea with dairy products and prefer instead
   to add a wedge of lemon, if anything. If one were feeling extremely
   silly, one might hypothesize an analogous `ANSI standard cup of tea'
   and wind up with a political situation distressingly similar to
   several that arise in much more serious technical contexts. (Milk and
   lemon don't mix very well.)

   [2000 update: There is now, in fact, a `British Standard BS6008: How
   to make a standard cup of tea.' - ESR]
     _________________________________________________________________

   Node:ISP, Next:[7351]ITS, Previous:[7352]ISO standard cup of tea,
   Up:[7353]= I =

   ISP /I-S-P/

   Common abbreviation for Internet Service Provider, a kind of company
   that barely existed before 1993. ISPs sell Internet access to the mass
   market. While the big nationwide commercial BBSs with Internet access
   (like America Online, CompuServe, GEnie, Netcom, etc.) are technically
   ISPs, the term is usually reserved for local or regional small
   providers (often run by hackers turned entrepreneurs) who resell
   Internet access cheaply without themselves being information providers
   or selling advertising. Compare [7354]NSP.
     _________________________________________________________________

   Node:ITS, Next:[7355]IWBNI, Previous:[7356]ISP, Up:[7357]= I =

   ITS /I-T-S/ n.

   1. Incompatible Time-sharing System, an influential though highly
   idiosyncratic operating system written for PDP-6s and PDP-10s at MIT
   and long used at the MIT AI Lab. Much AI-hacker jargon derives from
   ITS folklore, and to have been `an ITS hacker' qualifies one instantly
   as an old-timer of the most venerable sort. ITS pioneered many
   important innovations, including transparent file sharing between
   machines and terminal-independent I/O. After about 1982, most actual
   work was shifted to newer machines, with the remaining ITS boxes run
   essentially as a hobby and service to the hacker community. The
   shutdown of the lab's last ITS machine in May 1990 marked the end of
   an era and sent old-time hackers into mourning nationwide (see
   [7358]high moby). 2. A mythical image of operating-system perfection
   worshiped by a bizarre, fervent retro-cult of old-time hackers and
   ex-users (see [7359]troglodyte, sense 2). ITS worshipers manage
   somehow to continue believing that an OS maintained by
   assembly-language hand-hacking that supported only monocase
   6-character filenames in one directory per account remains superior to
   today's state of commercial art (their venom against [7360]Unix is
   particularly intense). See also [7361]holy wars, [7362]Weenix.
     _________________________________________________________________

   Node:IWBNI, Next:[7363]IYFEG, Previous:[7364]ITS, Up:[7365]= I =

   IWBNI //

   Abbreviation for `It Would Be Nice If'. Compare [7366]WIBNI.
     _________________________________________________________________

   Node:IYFEG, Next:[7367]J. Random, Previous:[7368]IWBNI, Up:[7369]= I =

   IYFEG //

   [Usenet] Abbreviation for `Insert Your Favorite Ethnic Group'. Used as
   a meta-name when telling ethnic jokes on the net to avoid offending
   anyone. See [7370]JEDR.
     _________________________________________________________________

   Node:= J =, Next:[7371]= K =, Previous:[7372]= I =, Up:[7373]The
   Jargon Lexicon

= J =

     * [7374]J. Random:
     * [7375]J. Random Hacker:
     * [7376]jack in:
     * [7377]jaggies:
     * [7378]Java:
     * [7379]JCL:
     * [7380]JEDR:
     * [7381]Jeff K.:
     * [7382]jello:
     * [7383]jiffy:
     * [7384]job security:
     * [7385]jock:
     * [7386]joe code:
     * [7387]jolix:
     * [7388]juggling eggs:
     * [7389]jump off into never-never land:
     * [7390]jupiter:
     _________________________________________________________________

   Node:J. Random, Next:[7391]J. Random Hacker, Previous:[7392]IYFEG,
   Up:[7393]= J =

   J. Random /J rand'm/ n.

   [common; generalized from [7394]J. Random Hacker] Arbitrary; ordinary;
   any one; any old. `J. Random' is often prefixed to a noun to make a
   name out of it. It means roughly `some particular' or `any specific
   one'. "Would you let J. Random Loser marry your daughter?" The most
   common uses are `J. Random Hacker', `J. Random Loser', and `J. Random
   Nerd' ("Should J. Random Loser be allowed to [7395]gun down other
   people?"), but it can be used simply as an elaborate version of
   [7396]random in any sense.
     _________________________________________________________________

   Node:J. Random Hacker, Next:[7397]jack in, Previous:[7398]J. Random,
   Up:[7399]= J =

   J. Random Hacker /J rand'm hak'r/ n.

   [very common] A mythical figure like the Unknown Soldier; the
   archetypal hacker nerd. This term is one of the oldest in the jargon,
   apparently going back to MIT in the 1960s. See [7400]random,
   [7401]Suzie COBOL. This may originally have been inspired by `J. Fred
   Muggs', a show-biz chimpanzee whose name was a household word back in
   the early days of [7402]TMRC, and was probably influenced by `J.
   Presper Eckert' (one of the co-inventors of the electronic computer).
   See also [7403]Fred Foobar.
     _________________________________________________________________

   Node:jack in, Next:[7404]jaggies, Previous:[7405]J. Random Hacker,
   Up:[7406]= J =

   jack in v.

   To log on to a machine or connect to a network or [7407]BBS, esp. for
   purposes of entering a [7408]virtual reality simulation such as a
   [7409]MUD or [7410]IRC (leaving is "jacking out"). This term derives
   from [7411]cyberpunk SF, in which it was used for the act of plugging
   an electrode set into neural sockets in order to interface the brain
   directly to a virtual reality. It is primarily used by MUD and IRC
   fans and younger hackers on BBS systems.
     _________________________________________________________________

   Node:jaggies, Next:[7412]Java, Previous:[7413]jack in, Up:[7414]= J =

   jaggies /jag'eez/ n.

   The `stairstep' effect observable when an edge (esp. a linear edge of
   very shallow or steep slope) is rendered on a pixel device (as opposed
   to a vector display).
     _________________________________________________________________

   Node:Java, Next:[7415]JCL, Previous:[7416]jaggies, Up:[7417]= J =

   Java

   An object-oriented language originally developed at Sun by James
   Gosling (and known by the name "Oak") with the intention of being the
   successor to [7418]C++ (the project was however originally sold to Sun
   as an embedded language for use in set-top boxes). After the great
   Internet explosion of 1993-1994, Java was hacked into a
   byte-interpreted language and became the focus of a relentless hype
   campaign by Sun, which touted it as the new language of choice for
   distributed applications.

   Java is indeed a stronger and cleaner design than C++ and has been
   embraced by many in the hacker community - but it has been a
   considerable source of frustration to many others, for reasons ranging
   from uneven support on different Web browser platforms, performance
   issues, and some notorious deficiencies of some of the standard
   toolkits (AWT in particular). [7419]Microsoft's determined attempts to
   corrupt the language (which it rightly sees as a threat to its OS
   monopoly) have not helped. As of 1999, these issues are still in the
   process of being resolved.

   Despite many attractive features and a good design, it is difficult to
   find people willing to praise Java who have tried to implement a
   complex, real-world system with it (but to be fair it is early days
   yet, and no other language has ever been forced to spend its childhood
   under the limelight the way Java has). On the other hand, Java has
   already been a big [7420]win in academic circles, where it has taken
   the place of [7421]Pascal as the preferred tool for teaching the
   basics of good programming to the next generation of hackers.
     _________________________________________________________________

   Node:JCL, Next:[7422]JEDR, Previous:[7423]Java, Up:[7424]= J =

   JCL /J-C-L/ n.

   1. IBM's supremely [7425]rude Job Control Language. JCL is the script
   language used to control the execution of programs in IBM's batch
   systems. JCL has a very [7426]fascist syntax, and some versions will,
   for example, [7427]barf if two spaces appear where it expects one.
   Most programmers confronted with JCL simply copy a working file (or
   card deck), changing the file names. Someone who actually understands
   and generates unique JCL is regarded with the mixed respect one gives
   to someone who memorizes the phone book. It is reported that hackers
   at IBM itself sometimes sing "Who's the breeder of the crud that
   mangles you and me? I-B-M, J-C-L, M-o-u-s-e" to the tune of the
   "Mickey Mouse Club" theme to express their opinion of the beast. 2. A
   comparative for any very [7428]rude software that a hacker is expected
   to use. "That's as bad as JCL." As with [7429]COBOL, JCL is often used
   as an archetype of ugliness even by those who haven't experienced it.
   See also [7430]IBM, [7431]fear and loathing.

   A (poorly documented, naturally) shell simulating JCL syntax is
   available at the Retrocomputing Museum
   [7432]http://www.ccil.org/retro.
     _________________________________________________________________

   Node:JEDR, Next:[7433]Jeff K., Previous:[7434]JCL, Up:[7435]= J =

   JEDR // n.

   Synonymous with [7436]IYFEG. At one time, people in the Usenet
   newsgroup rec.humor.funny tended to use `JEDR' instead of [7437]IYFEG
   or `<ethnic>'; this stemmed from a public attempt to suppress the
   group once made by a loser with initials JEDR after he was offended by
   an ethnic joke posted there. (The practice was [7438]retconned by the
   expanding these initials as `Joke Ethnic/Denomination/Race'.) After
   much sound and fury JEDR faded away; this term appears to be doing
   likewise. JEDR's only permanent effect on the net.culture was to
   discredit `sensitivity' arguments for censorship so thoroughly that
   more recent attempts to raise them have met with immediate and
   near-universal rejection.
     _________________________________________________________________

   Node:Jeff K., Next:[7439]jello, Previous:[7440]JEDR, Up:[7441]= J =

   Jeff K.

   The spiritual successor to [7442]B1FF and the archetype of
   [7443]script kiddies. Jeff K. is a sixteen-year-old suburbanite who
   fancies himself a "l33t haX0r", although his knowledge of computers
   seems to be limited to the procedure for getting Quake up and running.
   His Web page [7444]http://www.somethingawful.com/jeffk features a
   number of hopelessly naive articles, essays, and rants, all filled
   with the kind of misspellings, [7445]studlycaps, and number-for-letter
   substitutions endemic to the script kiddie and [7446]warez d00dz
   communities. Jeff's offerings, among other things, include hardware
   advice (such as "AMD VERSIS PENTIUM" and "HOW TO OVARCLOAK YOUR
   COMPUTAR"), his own Quake clan (Clan 40 OUNSCE), and his own comic
   strip (Wacky Fun Computar Comic Jokes).

   Like B1FF, Jeff K. is (fortunately) a hoax. Jeff K. was created by
   internet game journalist Richard "Lowtax" Kyanka, whose web site
   Something Awful (http://www.somethingawful.com) highlights
   unintentionally humorous news items and Web sites, as a parody of the
   kind of teenage [7447]luser who infests Quake servers, chat rooms, and
   other places where computer enthusiasts congregate. He is
   well-recognized in the PC game community and his influence has spread
   to hacker [7448]fora like Slashdot as well.
     _________________________________________________________________

   Node:jello, Next:[7449]jiffy, Previous:[7450]Jeff K., Up:[7451]= J =

   jello n.

   [Usenet: by analogy with [7452]spam] A message that is both
   excessively cross-posted and too frequently posted, as opposed to
   [7453]spam (which is merely too frequently posted) or [7454]velveeta
   (which is merely excessively cross-posted). This term is widely
   recognized but not commonly used; most people refer to both kinds of
   abuse or their combination as spam.
     _________________________________________________________________

   Node:jiffy, Next:[7455]job security, Previous:[7456]jello, Up:[7457]=
   J =

   jiffy n.

   1. The duration of one tick of the system clock on your computer (see
   [7458]tick). Often one AC cycle time (1/60 second in the U.S. and
   Canada, 1/50 most other places), but more recently 1/100 sec has
   become common. "The swapper runs every 6 jiffies" means that the
   virtual memory management routine is executed once for every 6 ticks
   of the clock, or about ten times a second. 2. Confusingly, the term is
   sometimes also used for a 1-millisecond [7459]wall time interval. 3.
   Even more confusingly, physicists semi-jokingly use `jiffy' to mean
   the time required for light to travel one foot in a vacuum, which
   turns out to be close to one nanosecond. 4. Indeterminate time from a
   few seconds to forever. "I'll do it in a jiffy" means certainly not
   now and possibly never. This is a bit contrary to the more widespread
   use of the word. Oppose [7460]nano. See also [7461]Real Soon Now.
     _________________________________________________________________

   Node:job security, Next:[7462]jock, Previous:[7463]jiffy, Up:[7464]= J
   =

   job security n.

   When some piece of code is written in a particularly [7465]obscure
   fashion, and no good reason (such as time or space optimization) can
   be discovered, it is often said that the programmer was attempting to
   increase his job security (i.e., by making himself indispensable for
   maintenance). This sour joke seldom has to be said in full; if two
   hackers are looking over some code together and one points at a
   section and says "job security", the other one may just nod.
     _________________________________________________________________

   Node:jock, Next:[7466]joe code, Previous:[7467]job security,
   Up:[7468]= J =

   jock n.

   1. A programmer who is characterized by large and somewhat brute-force
   programs. See [7469]brute force. 2. When modified by another noun,
   describes a specialist in some particular computing area. The
   compounds `compiler jock' and `systems jock' seem to be the
   best-established examples.
     _________________________________________________________________

   Node:joe code, Next:[7470]jolix, Previous:[7471]jock, Up:[7472]= J =

   joe code /joh' kohd`/ n.

   1. Code that is overly [7473]tense and unmaintainable. "[7474]Perl may
   be a handy program, but if you look at the source, it's complete joe
   code." 2. Badly written, possibly buggy code.

   Correspondents wishing to remain anonymous have fingered a particular
   Joe at the Lawrence Berkeley Laboratory and observed that usage has
   drifted slightly; the original sobriquet `Joe code' was intended in
   sense 1.

   1994 update: This term has now generalized to `<name> code', used to
   designate code with distinct characteristics traceable to its author.
   "This section doesn't check for a NULL return from malloc()! Oh. No
   wonder! It's Ed code!". Used most often with a programmer who has left
   the shop and thus is a convenient scapegoat for anything that is wrong
   with the project.
     _________________________________________________________________

   Node:jolix, Next:[7475]juggling eggs, Previous:[7476]joe code,
   Up:[7477]= J =

   jolix /joh'liks/ n.,adj.

   386BSD, the freeware port of the BSD Net/2 release to the Intel i386
   architecture by Bill Jolitz, Lynne Greer Jolitz, and friends. Used to
   differentiate from BSDI's port based on the same source tape, which
   used to be called BSD/386 and is now BSD/OS. See [7478]BSD.
     _________________________________________________________________

   Node:juggling eggs, Next:[7479]jump off into never-never land,
   Previous:[7480]jolix, Up:[7481]= J =

   juggling eggs vi.

   Keeping a lot of [7482]state in your head while modifying a program.
   "Don't bother me now, I'm juggling eggs", means that an interrupt is
   likely to result in the program's being scrambled. In the classic 1975
   first-contact SF novel "The Mote in God's Eye", by Larry Niven and
   Jerry Pournelle, an alien describes a very difficult task by saying
   "We juggle priceless eggs in variable gravity." See also [7483]hack
   mode and [7484]on the gripping hand.
     _________________________________________________________________

   Node:jump off into never-never land, Next:[7485]jupiter,
   Previous:[7486]juggling eggs, Up:[7487]= J =

   jump off into never-never land v.

   [from J. M. Barrie's "Peter Pan"] Same as [7488]branch to Fishkill,
   but more common in technical cultures associated with non-IBM
   computers that use the term `jump' rather than `branch'. Compare
   [7489]hyperspace.
     _________________________________________________________________

   Node:jupiter, Next:[7490]K, Previous:[7491]jump off into never-never
   land, Up:[7492]= J =

   jupiter vt.

   [IRC] To kill an [7493]IRC [7494]bot or user and then take its place
   by adopting its [7495]nick so that it cannot reconnect. Named after a
   particular IRC user who did this to NickServ, the robot in charge of
   preventing people from inadvertently using a nick claimed by another
   user. Now commonly shortened to `jupe'.
     _________________________________________________________________

   Node:= K =, Next:[7496]= L =, Previous:[7497]= J =, Up:[7498]The
   Jargon Lexicon

= K =

     * [7499]K:
     * [7500]K&R:
     * [7501]k-:
     * [7502]kahuna:
     * [7503]kamikaze packet:
     * [7504]kangaroo code:
     * [7505]ken:
     * [7506]kernel-of-the-week club:
     * [7507]kgbvax:
     * [7508]KIBO:
     * [7509]kiboze:
     * [7510]kibozo:
     * [7511]kick:
     * [7512]kill file:
     * [7513]killer app:
     * [7514]killer micro:
     * [7515]killer poke:
     * [7516]kilo-:
     * [7517]KIPS:
     * [7518]KISS Principle:
     * [7519]kit:
     * [7520]klone:
     * [7521]kludge:
     * [7522]kluge:
     * [7523]kluge around:
     * [7524]kluge up:
     * [7525]Knights of the Lambda Calculus:
     * [7526]knobs:
     * [7527]Knuth:
     * [7528]koan:
     * [7529]kremvax:
     * [7530]kyrka:
     _________________________________________________________________

   Node:K, Next:[7531]K&R, Previous:[7532]jupiter, Up:[7533]= K =

   K /K/ n.

   [from [7534]kilo-] A kilobyte. Used both as a spoken word and a
   written suffix (like [7535]meg and [7536]gig for megabyte and
   gigabyte). See [7537]quantifiers.
     _________________________________________________________________

   Node:K&R, Next:[7538]k-, Previous:[7539]K, Up:[7540]= K =

   K&R [Kernighan and Ritchie] n.

   Brian Kernighan and Dennis Ritchie's book "The C Programming
   Language", esp. the classic and influential first edition
   (Prentice-Hall 1978; ISBN 0-13-110163-3). Syn. [7541]White Book,
   [7542]Old Testament. See also [7543]New Testament.
     _________________________________________________________________

   Node:k-, Next:[7544]kahuna, Previous:[7545]K&R, Up:[7546]= K =

   k- pref.

   [rare; poss fr. `kilo-' prefix] Extremely. Rare among hackers, but
   quite common among crackers and [7547]warez d00dz in compounds such as
   `k-kool' /K'kool'/, `k-rad' /K'rad'/, and `k-awesome' /K'aw`sm/. Also
   used to intensify negatives; thus, `k-evil', `k-lame', `k-screwed',
   and `k-annoying'. Overuse of this prefix, or use in more formal or
   technical contexts, is considered an indicator of [7548]lamer status.
     _________________________________________________________________

   Node:kahuna, Next:[7549]kamikaze packet, Previous:[7550]k-, Up:[7551]=
   K =

   kahuna /k*-hoo'n*/ n.

   [IBM: from the Hawaiian title for a shaman] Synonym for [7552]wizard,
   [7553]guru.
     _________________________________________________________________

   Node:kamikaze packet, Next:[7554]kangaroo code, Previous:[7555]kahuna,
   Up:[7556]= K =

   kamikaze packet n.

   The `official' jargon for what is more commonly called a
   [7557]Christmas tree packet. [7558]RFC-1025, "TCP and IP Bake Off"
   says:

     10 points for correctly being able to process a "Kamikaze" packet
     (AKA nastygram, christmas tree packet, lamp test segment, et al.).
     That is, correctly handle a segment with the maximum combination of
     features at once (e.g., a SYN URG PUSH FIN segment with options and
     data).

   See also [7559]Chernobyl packet.
     _________________________________________________________________

   Node:kangaroo code, Next:[7560]ken, Previous:[7561]kamikaze packet,
   Up:[7562]= K =

   kangaroo code n.

   Syn. [7563]spaghetti code.
     _________________________________________________________________

   Node:ken, Next:[7564]kernel-of-the-week club, Previous:[7565]kangaroo
   code, Up:[7566]= K =

   ken /ken/ n.

   1. [Unix] Ken Thompson, principal inventor of Unix. In the early days
   he used to hand-cut distribution tapes, often with a note that read
   "Love, ken". Old-timers still use his first name (sometimes
   uncapitalized, because it's a login name and mail address) in
   third-person reference; it is widely understood (on Usenet, in
   particular) that without a last name `Ken' refers only to Ken
   Thompson. Similarly, Dennis without last name means Dennis Ritchie
   (and he is often known as dmr). See also [7567]demigod, [7568]Unix. 2.
   A flaming user. This was originated by the Software Support group at
   Symbolics because the two greatest flamers in the user community were
   both named Ken.
     _________________________________________________________________

   Node:kernel-of-the-week club, Next:[7569]kgbvax, Previous:[7570]ken,
   Up:[7571]= K =

   kernel-of-the-week club

   The fictional society that [7572]BSD [7573]bigots claim [Linux] users
   belong to, alluding to the release-early-release-often style preferred
   by the kernel maintainers. See [7574]bazaar. This was almost certainly
   inspired by the earlier [7575]bug-of-the-month club.
     _________________________________________________________________

   Node:kgbvax, Next:[7576]KIBO, Previous:[7577]kernel-of-the-week club,
   Up:[7578]= K =

   kgbvax /K-G-B'vaks/ n.

   See [7579]kremvax.
     _________________________________________________________________

   Node:KIBO, Next:[7580]kiboze, Previous:[7581]kgbvax, Up:[7582]= K =

   KIBO /ki:'boh/

   1. [acronym] Knowledge In, Bullshit Out. A summary of what happens
   whenever valid data is passed through an organization (or person) that
   deliberately or accidentally disregards or ignores its significance.
   Consider, for example, what an advertising campaign can do with a
   product's actual specifications. Compare [7583]GIGO; see also
   [7584]SNAFU principle. 2. James Parry <kibo@world.std.com>, a
   Usenetter infamous for various surrealist net.pranks and an uncanny,
   machine-assisted knack for joining any thread in which his nom de
   guerre is mentioned. He has a website at [7585]http://www.kibo.com/.
     _________________________________________________________________

   Node:kiboze, Next:[7586]kibozo, Previous:[7587]KIBO, Up:[7588]= K =

   kiboze v.

   [Usenet] To [7589]grep the Usenet news for a string, especially with
   the intention of posting a follow-up. This activity was popularised by
   Kibo (see [7590]KIBO, sense 2).
     _________________________________________________________________

   Node:kibozo, Next:[7591]kick, Previous:[7592]kiboze, Up:[7593]= K =

   kibozo /ki:-boh'zoh/ n.

   [Usenet] One who [7594]kibozes but is not Kibo (see [7595]KIBO, sense
   2).
     _________________________________________________________________

   Node:kick, Next:[7596]kill file, Previous:[7597]kibozo, Up:[7598]= K =

   kick v.

   1. [IRC] To cause somebody to be removed from a [7599]IRC channel, an
   option only available to channel ops. This is an extreme measure,
   often used to combat extreme [7600]flamage or [7601]flooding, but
   sometimes used at the [7602]CHOP's whim. Compare [7603]gun. 2. To
   reboot a machine or kill a running process. "The server's down, let me
   go kick it."
     _________________________________________________________________

   Node:kill file, Next:[7604]killer app, Previous:[7605]kick, Up:[7606]=
   K =

   kill file n.

   [Usenet; very common] (alt. `KILL file') Per-user file(s) used by some
   [7607]Usenet reading programs (originally Larry Wall's rn(1)) to
   discard summarily (without presenting for reading) articles matching
   some particularly uninteresting (or unwanted) patterns of subject,
   author, or other header lines. Thus to add a person (or subject) to
   one's kill file is to arrange for that person to be ignored by one's
   newsreader in future. By extension, it may be used for a decision to
   ignore the person or subject in other media. See also [7608]plonk.
     _________________________________________________________________

   Node:killer app, Next:[7609]killer micro, Previous:[7610]kill file,
   Up:[7611]= K =

   killer app

   The application that actually makes a sustaining market for a
   promising but under-utilized technology. First used in the mid-1980s
   to describe Lotus 1-2-3 once it became evident that demand for that
   product had been the major driver of the early business market for IBM
   PCs. The term was then restrospectively applied to VisiCalc, which had
   played a similar role in the success of the Apple II. After 1994 it
   became commonplace to describe the World Wide Web as the Internet's
   killer app. One of the standard questions asked about each new
   personal-computer technology as it emerges has become "what's the
   killer app?"
     _________________________________________________________________

   Node:killer micro, Next:[7612]killer poke, Previous:[7613]killer app,
   Up:[7614]= K =

   killer micro n.

   [popularized by Eugene Brooks] A microprocessor-based machine that
   infringes on mini, mainframe, or supercomputer performance turf. Often
   heard in "No one will survive the attack of the killer micros!", the
   battle cry of the downsizers. Used esp. of RISC architectures.

   The popularity of the phrase `attack of the killer micros' is
   doubtless reinforced by the title of the movie "Attack Of The Killer
   Tomatoes" (one of the [7615]canonical examples of
   so-bad-it's-wonderful among hackers). This has even more [7616]flavor
   now that killer micros have gone on the offensive not just
   individually (in workstations) but in hordes (within massively
   parallel computers).

   [1996 update: Eugene Brooks was right. Since this term first entered
   the Jargon File in 1990, the minicomputer has effectively vanished,
   the [7617]mainframe sector is in deep and apparently terminal decline
   (with IBM but a shadow of its former self), and even the supercomputer
   business has contracted into a smaller niche. It's networked killer
   micros as far as the eye can see. --ESR]
     _________________________________________________________________

   Node:killer poke, Next:[7618]kilo-, Previous:[7619]killer micro,
   Up:[7620]= K =

   killer poke n.

   A recipe for inducing hardware damage on a machine via insertion of
   invalid values (see [7621]poke) into a memory-mapped control register;
   used esp. of various fairly well-known tricks on [7622]bitty boxes
   without hardware memory management (such as the IBM PC and Commodore
   PET) that can overload and trash analog electronics in the monitor.
   See also [7623]HCF.
     _________________________________________________________________

   Node:kilo-, Next:[7624]KIPS, Previous:[7625]killer poke, Up:[7626]= K
   =

   kilo- pref.

   [SI] See [7627]quantifiers.
     _________________________________________________________________

   Node:KIPS, Next:[7628]KISS Principle, Previous:[7629]kilo-, Up:[7630]=
   K =

   KIPS /kips/ n.

   [abbreviation, by analogy with [7631]MIPS using [7632]K] Thousands
   (not 1024s) of Instructions Per Second. Usage: rare.
     _________________________________________________________________

   Node:KISS Principle, Next:[7633]kit, Previous:[7634]KIPS, Up:[7635]= K
   =

   KISS Principle /kis' prin'si-pl/ n.

   "Keep It Simple, Stupid". A maxim often invoked when discussing design
   to fend off [7636]creeping featurism and control development
   complexity. Possibly related to the [7637]marketroid maxim on sales
   presentations, "Keep It Short and Simple".
     _________________________________________________________________

   Node:kit, Next:[7638]klone, Previous:[7639]KISS Principle, Up:[7640]=
   K =

   kit n.

   [Usenet; poss. fr. [7641]DEC slang for a full software distribution,
   as opposed to a patch or upgrade] A source software distribution that
   has been packaged in such a way that it can (theoretically) be
   unpacked and installed according to a series of steps using only
   standard Unix tools, and entirely documented by some reasonable chain
   of references from the top-level [7642]README file. The more general
   term [7643]distribution may imply that special tools or more stringent
   conditions on the host environment are required.
     _________________________________________________________________

   Node:klone, Next:[7644]kludge, Previous:[7645]kit, Up:[7646]= K =

   klone /klohn/ n.

   See [7647]clone, sense 4.
     _________________________________________________________________

   Node:kludge, Next:[7648]kluge, Previous:[7649]klone, Up:[7650]= K =

   kludge 1. /klooj/ n.

   Incorrect (though regrettably common) spelling of [7651]kluge (US).
   These two words have been confused in American usage since the early
   1960s, and widely confounded in Great Britain since the end of World
   War II. 2. [TMRC] A [7652]crock that works. (A long-ago "Datamation"
   article by Jackson Granholme similarly said: "An ill-assorted
   collection of poorly matching parts, forming a distressing whole.") 3.
   v. To use a kludge to get around a problem. "I've kludged around it
   for now, but I'll fix it up properly later."

   This word appears to have derived from Scots `kludge' or `kludgie' for
   a common toilet, via British military slang. It apparently became
   confused with U.S. [7653]kluge during or after World War II; some
   Britons from that era use both words in definably different ways, but
   [7654]kluge is now uncommon in Great Britain. `Kludge' in Commonwealth
   hackish differs in meaning from `kluge' in that it lacks the positive
   senses; a kludge is something no Commonwealth hacker wants to be
   associated too closely with. Also, `kludge' is more widely known in
   British mainstream slang than `kluge' is in the U.S.
     _________________________________________________________________

   Node:kluge, Next:[7655]kluge around, Previous:[7656]kludge, Up:[7657]=
   K =

   kluge /klooj/

   [from the German `klug', clever; poss. related to Polish `klucz' (a
   key, a hint, a main point)] 1. n. A Rube Goldberg (or Heath Robinson)
   device, whether in hardware or software. 2. n. A clever programming
   trick intended to solve a particular nasty case in an expedient, if
   not clear, manner. Often used to repair bugs. Often involves
   [7658]ad-hockery and verges on being a [7659]crock. 3. n. Something
   that works for the wrong reason. 4. vt. To insert a kluge into a
   program. "I've kluged this routine to get around that weird bug, but
   there's probably a better way." 5. [WPI] n. A feature that is
   implemented in a [7660]rude manner.

   Nowadays this term is often encountered in the variant spelling
   `kludge'. Reports from [7661]old farts are consistent that `kluge' was
   the original spelling, reported around computers as far back as the
   mid-1950s and, at that time, used exclusively of hardware kluges. In
   1947, the "New York Folklore Quarterly" reported a classic shaggy-dog
   story `Murgatroyd the Kluge Maker' then current in the Armed Forces,
   in which a `kluge' was a complex and puzzling artifact with a trivial
   function. Other sources report that `kluge' was common Navy slang in
   the WWII era for any piece of electronics that worked well on shore
   but consistently failed at sea.

   However, there is reason to believe this slang use may be a decade
   older. Several respondents have connected it to the brand name of a
   device called a "Kluge paper feeder", an adjunct to mechanical
   printing presses. Legend has it that the Kluge feeder was designed
   before small, cheap electric motors and control electronics; it relied
   on a fiendishly complex assortment of cams, belts, and linkages to
   both power and synchronize all its operations from one motive
   driveshaft. It was accordingly temperamental, subject to frequent
   breakdowns, and devilishly difficult to repair -- but oh, so clever!
   People who tell this story also aver that `Kluge' was the name of a
   design engineer.

   There is in fact a Brandtjen & Kluge Inc., an old family business that
   manufactures printing equipment - interestingly, their name is
   pronounced /kloo'gee/! Henry Brandtjen, president of the firm, told me
   (ESR, 1994) that his company was co-founded by his father and an
   engineer named Kluge /kloo'gee/, who built and co-designed the
   original Kluge automatic feeder in 1919. Mr. Brandtjen claims,
   however, that this was a simple device (with only four cams); he says
   he has no idea how the myth of its complexity took hold.

   [7662]TMRC and the MIT hacker culture of the early '60s seems to have
   developed in a milieu that remembered and still used some WWII
   military slang (see also [7663]foobar). It seems likely that `kluge'
   came to MIT via alumni of the many military electronics projects that
   had been located in Cambridge (many in MIT's venerable Building 20, in
   which [7664]TMRC is also located) during the war.

   The variant `kludge' was apparently popularized by the
   [7665]Datamation article mentioned above; it was titled "How to Design
   a Kludge" (February 1962, pp. 30, 31). This spelling was probably
   imported from Great Britain, where [7666]kludge has an independent
   history (though this fact was largely unknown to hackers on either
   side of the Atlantic before a mid-1993 debate in the Usenet group
   alt.folklore.computers over the First and Second Edition versions of
   this entry; everybody used to think [7667]kludge was just a mutation
   of [7668]kluge). It now appears that the British, having forgotten the
   etymology of their own `kludge' when `kluge' crossed the Atlantic,
   repaid the U.S. by lobbing the `kludge' orthography in the other
   direction and confusing their American cousins' spelling!

   The result of this history is a tangle. Many younger U.S. hackers
   pronounce the word as /klooj/ but spell it, incorrectly for its
   meaning and pronunciation, as `kludge'. (Phonetically, consider huge,
   refuge, centrifuge, and deluge as opposed to sludge, judge, budge, and
   fudge. Whatever its failings in other areas, English spelling is
   perfectly consistent about this distinction.) British hackers mostly
   learned /kluhj/ orally, use it in a restricted negative sense and are
   at least consistent. European hackers have mostly learned the word
   from written American sources and tend to pronounce it /kluhj/ but use
   the wider American meaning!

   Some observers consider this mess appropriate in view of the word's
   meaning.
     _________________________________________________________________

   Node:kluge around, Next:[7669]kluge up, Previous:[7670]kluge,
   Up:[7671]= K =

   kluge around vt.

   To avoid a bug or difficult condition by inserting a [7672]kluge.
   Compare [7673]workaround.
     _________________________________________________________________

   Node:kluge up, Next:[7674]Knights of the Lambda Calculus,
   Previous:[7675]kluge around, Up:[7676]= K =

   kluge up vt.

   To lash together a quick hack to perform a task; this is milder than
   [7677]cruft together and has some of the connotations of [7678]hack up
   (note, however, that the construction `kluge on' corresponding to
   [7679]hack on is never used). "I've kluged up this routine to dump the
   buffer contents to a safe place."
     _________________________________________________________________

   Node:Knights of the Lambda Calculus, Next:[7680]knobs,
   Previous:[7681]kluge up, Up:[7682]= K =

   Knights of the Lambda Calculus n.

   A semi-mythical organization of wizardly LISP and Scheme hackers. The
   name refers to a mathematical formalism invented by Alonzo Church,
   with which LISP is intimately connected. There is no enrollment list
   and the criteria for induction are unclear, but one well-known LISPer
   has been known to give out buttons and, in general, the members know
   who they are....
     _________________________________________________________________

   Node:knobs, Next:[7683]Knuth, Previous:[7684]Knights of the Lambda
   Calculus, Up:[7685]= K =

   knobs pl.n.

   Configurable options, even in software and even those you can't adjust
   in real time. Anything you can [7686]twiddle is a knob. "Has this PNG
   viewer got an alpha knob?" Software may be described as having "knobs
   and switches" or occasionally "knobs and lights".
     _________________________________________________________________

   Node:Knuth, Next:[7687]koan, Previous:[7688]knobs, Up:[7689]= K =

   Knuth /ka-nooth'/ n.

   [Donald E. Knuth's "The Art of Computer Programming"] Mythically, the
   reference that answers all questions about data structures or
   algorithms. A safe answer when you do not know: "I think you can find
   that in Knuth." Contrast [7690]the literature. See also [7691]bible.
   There is a Donald Knuth home page at
   [7692]http://www-cs-faculty.Stanford.EDU/~knuth.
     _________________________________________________________________

   Node:koan, Next:[7693]kremvax, Previous:[7694]Knuth, Up:[7695]= K =

   koan /koh'an/ n.

   A Zen teaching riddle. Classically, koans are attractive paradoxes to
   be meditated on; their purpose is to help one to enlightenment by
   temporarily jamming normal cognitive processing so that something more
   interesting can happen (this practice is associated with Rinzei Zen
   Buddhism). Hackers are very fond of the koan form and compose their
   own koans for humororous and/or enlightening effect. See [7696]Some AI
   Koans, [7697]has the X nature, [7698]hacker humor.
     _________________________________________________________________

   Node:kremvax, Next:[7699]kyrka, Previous:[7700]koan, Up:[7701]= K =

   kremvax /krem-vaks/ n.

   [from the then large number of [7702]Usenet [7703]VAXen with names of
   the form foovax] Originally, a fictitious Usenet site at the Kremlin,
   announced on April 1, 1984 in a posting ostensibly originated there by
   Soviet leader Konstantin Chernenko. The posting was actually forged by
   Piet Beertema as an April Fool's joke. Other fictitious sites
   mentioned in the hoax were moskvax and [7704]kgbvax. This was probably
   the funniest of the many April Fool's forgeries perpetrated on Usenet
   (which has negligible security against them), because the notion that
   Usenet might ever penetrate the Iron Curtain seemed so totally absurd
   at the time.

   In fact, it was only six years later that the first genuine site in
   Moscow, demos.su, joined Usenet. Some readers needed convincing that
   the postings from it weren't just another prank. Vadim Antonov, senior
   programmer at Demos and the major poster from there up to mid-1991,
   was quite aware of all this, referred to it frequently in his own
   postings, and at one point twitted some credulous readers by blandly
   asserting that he was a hoax!

   Eventually he even arranged to have the domain's gateway site named
   kremvax, thus neatly turning fiction into fact and demonstrating that
   the hackish sense of humor transcends cultural barriers. [Mr. Antonov
   also contributed the Russian-language material for this lexicon.
   --ESR]

   In an even more ironic historical footnote, kremvax became an
   electronic center of the anti-communist resistance during the bungled
   hard-line coup of August 1991. During those three days the Soviet UUCP
   network centered on kremvax became the only trustworthy news source
   for many places within the USSR. Though the sysops were concentrating
   on internal communications, cross-border postings included immediate
   transliterations of Boris Yeltsin's decrees condemning the coup and
   eyewitness reports of the demonstrations in Moscow's streets. In those
   hours, years of speculation that totalitarianism would prove unable to
   maintain its grip on politically-loaded information in the age of
   computer networking were proved devastatingly accurate -- and the
   original kremvax joke became a reality as Yeltsin and the new Russian
   revolutionaries of `glasnost' and `perestroika' made kremvax one of
   the timeliest means of their outreach to the West.
     _________________________________________________________________

   Node:kyrka, Next:[7705]lace card, Previous:[7706]kremvax, Up:[7707]= K
   =

   kyrka /chur'ka/ n.

   [Swedish] See [7708]feature key.
     _________________________________________________________________

   Node:= L =, Next:[7709]= M =, Previous:[7710]= K =, Up:[7711]The
   Jargon Lexicon

= L =

     * [7712]lace card:
     * [7713]lag:
     * [7714]lamer:
     * [7715]language lawyer:
     * [7716]languages of choice:
     * [7717]LART:
     * [7718]larval stage:
     * [7719]lase:
     * [7720]laser chicken:
     * [7721]lasherism:
     * [7722]laundromat:
     * [7723]LDB:
     * [7724]leaf site:
     * [7725]leak:
     * [7726]leaky heap:
     * [7727]leapfrog attack:
     * [7728]leech:
     * [7729]leech mode:
     * [7730]legal:
     * [7731]legalese:
     * [7732]LER:
     * [7733]LERP:
     * [7734]let the smoke out:
     * [7735]letterbomb:
     * [7736]lexer:
     * [7737]lexiphage:
     * [7738]life:
     * [7739]Life is hard:
     * [7740]light pipe:
     * [7741]lightweight:
     * [7742]like kicking dead whales down the beach:
     * [7743]like nailing jelly to a tree:
     * [7744]line 666:
     * [7745]line eater the:
     * [7746]line noise:
     * [7747]line starve:
     * [7748]linearithmic:
     * [7749]link farm:
     * [7750]link rot:
     * [7751]link-dead:
     * [7752]lint:
     * [7753]Lintel:
     * [7754]Linus:
     * [7755]Linux:
     * [7756]lion food:
     * [7757]Lions Book:
     * [7758]LISP:
     * [7759]list-bomb:
     * [7760]lithium lick:
     * [7761]little-endian:
     * [7762]live:
     * [7763]live data:
     * [7764]Live Free Or Die!:
     * [7765]livelock:
     * [7766]liveware:
     * [7767]lobotomy:
     * [7768]locals the:
     * [7769]locked and loaded:
     * [7770]locked up:
     * [7771]logic bomb:
     * [7772]logical:
     * [7773]loop through:
     * [7774]loose bytes:
     * [7775]lord high fixer:
     * [7776]lose:
     * [7777]lose lose:
     * [7778]loser:
     * [7779]losing:
     * [7780]loss:
     * [7781]lossage:
     * [7782]lost in the noise:
     * [7783]lost in the underflow:
     * [7784]lots of MIPS but no I/O:
     * [7785]low-bandwidth:
     * [7786]LPT:
     * [7787]Lubarsky's Law of Cybernetic Entomology:
     * [7788]Lumber Cartel:
     * [7789]lunatic fringe:
     * [7790]lurker:
     * [7791]luser:
     _________________________________________________________________

   Node:lace card, Next:[7792]lag, Previous:[7793]kyrka, Up:[7794]= L =

   lace card n. obs.

   A [7795]punched card with all holes punched (also called a `whoopee
   card' or `ventilator card'). Card readers tended to jam when they got
   to one of these, as the resulting card had too little structural
   strength to avoid buckling inside the mechanism. Card punches could
   also jam trying to produce these things owing to power-supply
   problems. When some practical joker fed a lace card through the
   reader, you needed to clear the jam with a `card knife' -- which you
   used on the joker first.
     _________________________________________________________________

   Node:lag, Next:[7796]lamer, Previous:[7797]lace card, Up:[7798]= L =

   lag n.

   [MUD, IRC; very common] When used without qualification this is
   synomous with [7799]netlag. Curiously, people will often complain "I'm
   really lagged" when in fact it is their server or network connection
   that is lagging.
     _________________________________________________________________

   Node:lamer, Next:[7800]language lawyer, Previous:[7801]lag, Up:[7802]=
   L =

   lamer n.

   [prob. originated in skateboarder slang] 1. Synonym for [7803]luser,
   not used much by hackers but common among [7804]warez d00dz, crackers,
   and [7805]phreakers. A person who downloads much, but who never
   uploads. (Also known as `leecher'). Oppose [7806]elite. Has the same
   connotations of self-conscious elitism that use of [7807]luser does
   among hackers. 2. Someone who tries to crack a BBS. 3. Someone who
   annoys the sysop or other BBS users - for instance, by posting lots of
   silly messages, uploading virus-ridden software, frequently dropping
   carrier, etc.

   Crackers also use it to refer to cracker [7808]wannabees. In phreak
   culture, a lamer is one who scams codes off others rather than doing
   cracks or really understanding the fundamental concepts. In
   [7809]warez d00dz culture, where the ability to wave around cracked
   commercial software within days of (or before) release to the
   commercial market is much esteemed, the lamer might try to upload
   garbage or shareware or something incredibly old (old in this context
   is read as a few years to anything older than 3 days).

   `Lamer' is also much used in the IRC world in a similar sense to the
   above.
     _________________________________________________________________

   Node:language lawyer, Next:[7810]languages of choice,
   Previous:[7811]lamer, Up:[7812]= L =

   language lawyer n.

   A person, usually an experienced or senior software engineer, who is
   intimately familiar with many or most of the numerous restrictions and
   features (both useful and esoteric) applicable to one or more computer
   programming languages. A language lawyer is distinguished by the
   ability to show you the five sentences scattered through a
   200-plus-page manual that together imply the answer to your question
   "if only you had thought to look there". Compare [7813]wizard,
   [7814]legal, [7815]legalese.
     _________________________________________________________________

   Node:languages of choice, Next:[7816]LART, Previous:[7817]language
   lawyer, Up:[7818]= L =

   languages of choice n.

   [7819]C, [7820]C++, [7821]LISP, and [7822]Perl. Nearly every hacker
   knows one of C or LISP, and most good ones are fluent in both. C++,
   despite some serious drawbacks, is generally preferred to other
   object-oriented languages (though in 1999 it looks as though
   [7823]Java has displaced it in the affections of hackers, if not
   everywhere). Since around 1990 Perl has rapidly been gaining favor,
   especially as a tool for systems-administration utilities and rapid
   prototyping. [7824]Python, Smalltalk and Prolog are also popular in
   small but influential communities.

   There is also a rapidly dwindling category of older hackers with
   FORTRAN, or even assembler, as their language of choice. They often
   prefer to be known as [7825]Real Programmers, and other hackers
   consider them a bit odd (see "[7826]The Story of Mel" in Appendix A).
   Assembler is generally no longer considered interesting or appropriate
   for anything but [7827]HLL implementation, [7828]glue, and a few
   time-critical and hardware-specific uses in systems programs. FORTRAN
   occupies a shrinking niche in scientific programming.

   Most hackers tend to frown on languages like [7829]Pascal and
   [7830]Ada, which don't give them the near-total freedom considered
   necessary for hacking (see [7831]bondage-and-discipline language), and
   to regard everything even remotely connected with [7832]COBOL or other
   traditional [7833]card walloper languages as a total and unmitigated
   [7834]loss.
     _________________________________________________________________

   Node:LART, Next:[7835]larval stage, Previous:[7836]languages of
   choice, Up:[7837]= L =

   LART //

   Luser Attitude Readjustment Tool. 1. n. In the collective mythos of
   [7838]scary devil monastery, this is an essential item in the toolkit
   of every [7839]BOFH. The LART classic is a 2x4 or other large billet
   of wood usable as a club, to be applied upside the head of spammers
   and other people who cause sysadmins more grief than just naturally
   goes with the job. Perennial debates rage on alt.sysadmin.recovery
   over what constitutes the truly effective LART; knobkerries,
   semiautomatic weapons, flamethrowers, and tactical nukes all have
   their partisans. Compare [7840]clue-by-four. 2. v. To use a LART. Some
   would add "in malice", but some sysadmins do prefer to gently lart
   their users as a first (and sometimes final) warning. 3. interj.
   Calling for one's LART, much as a surgeon might call "Scalpel!". 4.
   interj. [rare] Used in [7841]flames as a rebuke. "LART! LART! LART!"
     _________________________________________________________________

   Node:larval stage, Next:[7842]lase, Previous:[7843]LART, Up:[7844]= L
   =

   larval stage n.

   Describes a period of monomaniacal concentration on coding apparently
   passed through by all fledgling hackers. Common symptoms include the
   perpetration of more than one 36-hour [7845]hacking run in a given
   week; neglect of all other activities including usual basics like
   food, sleep, and personal hygiene; and a chronic case of advanced
   bleary-eye. Can last from 6 months to 2 years, the apparent median
   being around 18 months. A few so afflicted never resume a more
   `normal' life, but the ordeal seems to be necessary to produce really
   wizardly (as opposed to merely competent) programmers. See also
   [7846]wannabee. A less protracted and intense version of larval stage
   (typically lasting about a month) may recur when one is learning a new
   [7847]OS or programming language.
     _________________________________________________________________

   Node:lase, Next:[7848]laser chicken, Previous:[7849]larval stage,
   Up:[7850]= L =

   lase /layz/ vt.

   To print a given document via a laser printer. "OK, let's lase that
   sucker and see if all those graphics-macro calls did the right
   things."
     _________________________________________________________________

   Node:laser chicken, Next:[7851]lasherism, Previous:[7852]lase,
   Up:[7853]= L =

   laser chicken n.

   Kung Pao Chicken, a standard Chinese dish containing chicken, peanuts,
   and hot red peppers in a spicy pepper-oil sauce. Many hackers call it
   `laser chicken' for two reasons: It can [7854]zap you just like a
   laser, and the sauce has a red color reminiscent of some laser beams.
   The dish has also been called `gunpowder chicken'.

   In a variation on this theme, it is reported that some Australian
   hackers have redesignated the common dish `lemon chicken' as
   `Chernobyl Chicken'. The name is derived from the color of the sauce,
   which is considered bright enough to glow in the dark (as, mythically,
   do some of the inhabitants of Chernobyl).
     _________________________________________________________________

   Node:lasherism, Next:[7855]laundromat, Previous:[7856]laser chicken,
   Up:[7857]= L =

   lasherism n.

   [Harvard] A program that solves a standard problem (such as the Eight
   Queens puzzle or implementing the [7858]life algorithm) in a
   deliberately nonstandard way. Distinguished from a [7859]crock or
   [7860]kluge by the fact that the programmer did it on purpose as a
   mental exercise. Such constructions are quite popular in exercises
   such as the [7861]Obfuscated C Contest, and occasionally in
   [7862]retrocomputing. Lew Lasher was a student at Harvard around 1980
   who became notorious for such behavior.
     _________________________________________________________________

   Node:laundromat, Next:[7863]LDB, Previous:[7864]lasherism, Up:[7865]=
   L =

   laundromat n.

   Syn. [7866]disk farm; see [7867]washing machine.
     _________________________________________________________________

   Node:LDB, Next:[7868]leaf site, Previous:[7869]laundromat, Up:[7870]=
   L =

   LDB /l*'d*b/ vt.

   [from the PDP-10 instruction set] To extract from the middle. "LDB me
   a slice of cake, please." This usage has been kept alive by Common
   LISP's function of the same name. Considered silly. See also
   [7871]DPB.
     _________________________________________________________________

   Node:leaf site, Next:[7872]leak, Previous:[7873]LDB, Up:[7874]= L =

   leaf site n.,obs.

   Before pervasive TCP/IP, this term was used of a machine that merely
   originated and read Usenet news or mail, and did not relay any
   third-party traffic. It was often uttered in a critical tone; when the
   ratio of leaf sites to backbone, rib, and other relay sites got too
   high, the network tended to develop bottlenecks. Compare
   [7875]backbone site, [7876]rib site. Now that traffic patterns depend
   more on the distribution of routers than of host machines this term
   has largely fallen out of use.
     _________________________________________________________________

   Node:leak, Next:[7877]leaky heap, Previous:[7878]leaf site, Up:[7879]=
   L =

   leak n.

   With qualifier, one of a class of resource-management bugs that occur
   when resources are not freed properly after operations on them are
   finished, so they effectively disappear (leak out). This leads to
   eventual exhaustion as new allocation requests come in. [7880]memory
   leak and [7881]fd leak have their own entries; one might also refer,
   to, say, a `window handle leak' in a window system.
     _________________________________________________________________

   Node:leaky heap, Next:[7882]leapfrog attack, Previous:[7883]leak,
   Up:[7884]= L =

   leaky heap n.

   [Cambridge] An [7885]arena with a [7886]memory leak.
     _________________________________________________________________

   Node:leapfrog attack, Next:[7887]leech, Previous:[7888]leaky heap,
   Up:[7889]= L =

   leapfrog attack n.

   Use of userid and password information obtained illicitly from one
   host (e.g., downloading a file of account IDs and passwords, tapping
   TELNET, etc.) to compromise another host. Also, the act of TELNETting
   through one or more hosts in order to confuse a trace (a standard
   cracker procedure).
     _________________________________________________________________

   Node:leech, Next:[7890]leech mode, Previous:[7891]leapfrog attack,
   Up:[7892]= L =

   leech

   1. n. (Also `leecher'.) Among BBS types, crackers and [7893]warez
   d00dz, one who consumes knowledge without generating new software,
   cracks, or techniques. BBS culture specifically defines a leech as
   someone who downloads files with few or no uploads in return, and who
   does not contribute to the message section. Cracker culture extends
   this definition to someone (a [7894]lamer, usually) who constantly
   presses informed sources for information and/or assistance, but has
   nothing to contribute. 2. v. [common, Toronto area] To instantly fetch
   a file (other than a mail attachment) whether by FTP or IRC file req
   or any other method. Seems to be a holdover from the early 1990s when
   Toronto had a very active BBS and warez scene.
     _________________________________________________________________

   Node:leech mode, Next:[7895]legal, Previous:[7896]leech, Up:[7897]= L
   =

   leech mode n.

   [warez d00dz] "Leech mode" or "leech access" or (simply "leech" as in
   "You get leech") is the access mode on a FTP site where one can
   download as many files as one wants, without having to upload. Leech
   mode is often promised on banner sites, but rarely obtained. See
   [7898]ratio site, [7899]banner site.
     _________________________________________________________________

   Node:legal, Next:[7900]legalese, Previous:[7901]leech mode, Up:[7902]=
   L =

   legal adj.

   Loosely used to mean `in accordance with all the relevant rules', esp.
   in connection with some set of constraints defined by software. "The
   older =+ alternate for += is no longer legal syntax in ANSI C." "This
   parser processes each line of legal input the moment it sees the
   trailing linefeed." Hackers often model their work as a sort of game
   played with the environment in which the objective is to maneuver
   through the thicket of `natural laws' to achieve a desired objective.
   Their use of `legal' is flavored as much by this game-playing sense as
   by the more conventional one having to do with courts and lawyers.
   Compare [7903]language lawyer, [7904]legalese.
     _________________________________________________________________

   Node:legalese, Next:[7905]LER, Previous:[7906]legal, Up:[7907]= L =

   legalese n.

   Dense, pedantic verbiage in a language description, product
   specification, or interface standard; text that seems designed to
   obfuscate and requires a [7908]language lawyer to [7909]parse it.
   Though hackers are not afraid of high information density and
   complexity in language (indeed, they rather enjoy both), they share a
   deep and abiding loathing for legalese; they associate it with
   deception, [7910]suits, and situations in which hackers generally get
   the short end of the stick.
     _________________________________________________________________

   Node:LER, Next:[7911]LERP, Previous:[7912]legalese, Up:[7913]= L =

   LER /L-E-R/

   n. 1. [TMRC, from `Light-Emitting Diode'] A light-emitting resistor
   (that is, one in the process of burning up). Ohm's law was broken. See
   also [7914]SED. 2. An incandescent light bulb (the filament emits
   light because it's resistively heated).
     _________________________________________________________________

   Node:LERP, Next:[7915]let the smoke out, Previous:[7916]LER,
   Up:[7917]= L =

   LERP /lerp/ vi.,n.

   Quasi-acronym for Linear Interpolation, used as a verb or noun for the
   operation. "Bresenham's algorithm lerps incrementally between the two
   endpoints of the line."
     _________________________________________________________________

   Node:let the smoke out, Next:[7918]letterbomb, Previous:[7919]LERP,
   Up:[7920]= L =

   let the smoke out v.

   To fry hardware (see [7921]fried). See [7922]magic smoke for a
   discussion of the underlying mythology.
     _________________________________________________________________

   Node:letterbomb, Next:[7923]lexer, Previous:[7924]let the smoke out,
   Up:[7925]= L =

   letterbomb

   1. n. A piece of [7926]email containing [7927]live data intended to do
   nefarious things to the recipient's machine or terminal. It used to be
   possible, for example, to send letterbombs that would lock up some
   specific kinds of terminals when they are viewed, so thoroughly that
   the user must cycle power (see [7928]cycle, sense 3) to unwedge them.
   Under Unix, a letterbomb can also try to get part of its contents
   interpreted as a shell command to the mailer. The results of this
   could range from silly to tragic; fortunately it has been some years
   since any of the standard Unix/Internet mail software was vulnerable
   to such an attack (though, as the Melissa virus attack demonstrated in
   early 1999, Microsoft systems can have serious problems). See also
   [7929]Trojan horse; compare [7930]nastygram. 2. Loosely, a
   [7931]mailbomb.
     _________________________________________________________________

   Node:lexer, Next:[7932]lexiphage, Previous:[7933]letterbomb,
   Up:[7934]= L =

   lexer /lek'sr/ n.

   Common hacker shorthand for `lexical analyzer', the input-tokenizing
   stage in the parser for a language (the part that breaks it into
   word-like pieces). "Some C lexers get confused by the old-style
   compound ops like =-."
     _________________________________________________________________

   Node:lexiphage, Next:[7935]life, Previous:[7936]lexer, Up:[7937]= L =

   lexiphage /lek'si-fayj`/ n.

   A notorious word [7938]chomper on ITS. See [7939]bagbiter. This
   program would draw on a selected victim's bitmapped terminal the words
   "THE BAG" in ornate letters, followed a pair of jaws biting pieces of
   it off.
     _________________________________________________________________

   Node:life, Next:[7940]Life is hard, Previous:[7941]lexiphage,
   Up:[7942]= L =

   life n.

   1. A cellular-automata game invented by John Horton Conway and first
   introduced publicly by Martin Gardner ("Scientific American", October
   1970); the game's popularity had to wait a few years for computers on
   which it could reasonably be played, as it's no fun to simulate the
   cells by hand. Many hackers pass through a stage of fascination with
   it, and hackers at various places contributed heavily to the
   mathematical analysis of this game (most notably Bill Gosper at MIT,
   who even implemented life in [7943]TECO!; see [7944]Gosperism). When a
   hacker mentions `life', he is much more likely to mean this game than
   the magazine, the breakfast cereal, or the human state of existence.
   2. The opposite of [7945]Usenet. As in "[7946]Get a life!"
     _________________________________________________________________

   Node:Life is hard, Next:[7947]light pipe, Previous:[7948]life,
   Up:[7949]= L =

   Life is hard prov.

   [XEROX PARC] This phrase has two possible interpretations: (1) "While
   your suggestion may have some merit, I will behave as though I hadn't
   heard it." (2) "While your suggestion has obvious merit, equally
   obvious circumstances prevent it from being seriously considered." The
   charm of the phrase lies precisely in this subtle but important
   ambiguity.
     _________________________________________________________________

   Node:light pipe, Next:[7950]lightweight, Previous:[7951]Life is hard,
   Up:[7952]= L =

   light pipe n.

   Fiber optic cable. Oppose [7953]copper.
     _________________________________________________________________

   Node:lightweight, Next:[7954]like kicking dead whales down the beach,
   Previous:[7955]light pipe, Up:[7956]= L =

   lightweight adj.

   Opposite of [7957]heavyweight; usually found in combining forms such
   as `lightweight process'.
     _________________________________________________________________

   Node:like kicking dead whales down the beach, Next:[7958]like nailing
   jelly to a tree, Previous:[7959]lightweight, Up:[7960]= L =

   like kicking dead whales down the beach adj.

   Describes a slow, difficult, and disgusting process. First popularized
   by a famous quote about the difficulty of getting work done under one
   of IBM's mainframe OSes. "Well, you could write a C compiler in COBOL,
   but it would be like kicking dead whales down the beach." See also
   [7961]fear and loathing.
     _________________________________________________________________

   Node:like nailing jelly to a tree, Next:[7962]line 666,
   Previous:[7963]like kicking dead whales down the beach, Up:[7964]= L =

   like nailing jelly to a tree adj.

   Used to describe a task thought to be impossible, esp. one in which
   the difficulty arises from poor specification or inherent slipperiness
   in the problem domain. "Trying to display the `prettiest' arrangement
   of nodes and arcs that diagrams a given graph is like nailing jelly to
   a tree, because nobody's sure what `prettiest' means algorithmically."

   Hacker use of this term may recall mainstream slang originated early
   in the 20th century by President Theodore Roosevelt. There is a legend
   that, weary of inconclusive talks with Colombia over the right to dig
   a canal through its then-province Panama, he remarked, "Negotiating
   with those pirates is like trying to nail currant jelly to the wall."
   Roosevelt's government subsequently encouraged the anti-Colombian
   insurgency that created the nation of Panama.
     _________________________________________________________________

   Node:line 666, Next:[7965]line eater the, Previous:[7966]like nailing
   jelly to a tree, Up:[7967]= L =

   line 666 [from Christian eschatological myth] n.

   The notional line of source at which a program fails for obscure
   reasons, implying either that somebody is out to get it (when you are
   the programmer), or that it richly deserves to be so gotten (when you
   are not). "It works when I trace through it, but seems to crash on
   line 666 when I run it." "What happens is that whenever a large batch
   comes through, mmdf dies on the Line of the Beast. Probably some twit
   hardcoded a buffer size."
     _________________________________________________________________

   Node:line eater the, Next:[7968]line noise, Previous:[7969]line 666,
   Up:[7970]= L =

   line eater, the n. obs.

   [Usenet] 1. A bug in some now-obsolete versions of the netnews
   software that used to eat up to BUFSIZ bytes of the article text. The
   bug was triggered by having the text of the article start with a space
   or tab. This bug was quickly personified as a mythical creature called
   the `line eater', and postings often included a dummy line of `line
   eater food'. Ironically, line eater `food' not beginning with a space
   or tab wasn't actually eaten, since the bug was avoided; but if there
   was a space or tab before it, then the line eater would eat the food
   and the beginning of the text it was supposed to be protecting. The
   practice of `sacrificing to the line eater' continued for some time
   after the bug had been [7971]nailed to the wall, and is still
   humorously referred to. The bug itself was still occasionally reported
   to be lurking in some mail-to-netnews gateways as late as 1991. 2. See
   [7972]NSA line eater.
     _________________________________________________________________

   Node:line noise, Next:[7973]line starve, Previous:[7974]line eater
   the, Up:[7975]= L =

   line noise n.

   1. [techspeak] Spurious characters due to electrical noise in a
   communications link, especially an RS-232 serial connection. Line
   noise may be induced by poor connections, interference or crosstalk
   from other circuits, electrical storms, [7976]cosmic rays, or
   (notionally) birds crapping on the phone wires. 2. Any chunk of data
   in a file or elsewhere that looks like the results of line noise in
   sense 1. 3. Text that is theoretically a readable text or program
   source but employs syntax so bizarre that it looks like line noise in
   senses 1 or 2. Yes, there are languages this ugly. The canonical
   example is [7977]TECO; it is often claimed that "TECO's input syntax
   is indistinguishable from line noise." Other non-[7978]WYSIWYG
   editors, such as Multics qed and Unix ed, in the hands of a real
   hacker, also qualify easily, as do deliberately obfuscated languages
   such as [7979]INTERCAL.
     _________________________________________________________________

   Node:line starve, Next:[7980]linearithmic, Previous:[7981]line noise,
   Up:[7982]= L =

   line starve

   [MIT] 1. vi. To feed paper through a printer the wrong way by one line
   (most printers can't do this). On a display terminal, to move the
   cursor up to the previous line of the screen. "To print `X squared',
   you just output `X', line starve, `2', line feed." (The line starve
   causes the `2' to appear on the line above the `X', and the line feed
   gets back to the original line.) 2. n. A character (or character
   sequence) that causes a terminal to perform this action. ASCII
   0011010, also called SUB or control-Z, was one common line-starve
   character in the days before microcomputers and the X3.64 terminal
   standard. Today, the term might be used for the ISO reverse line feed
   character 0x8D. Unlike `line feed', `line starve' is not standard
   [7983]ASCII terminology. Even among hackers it is considered a bit
   silly. 3. [proposed] A sequence such as \c (used in System V echo, as
   well as [7984]nroff and [7985]troff) that suppresses a [7986]newline
   or other character(s) that would normally be emitted.
     _________________________________________________________________

   Node:linearithmic, Next:[7987]link farm, Previous:[7988]line starve,
   Up:[7989]= L =

   linearithmic adj.

   Of an algorithm, having running time that is O(N log N). Coined as a
   portmanteau of `linear' and `logarithmic' in "Algorithms In C" by
   Robert Sedgewick (Addison-Wesley 1990, ISBN 0-201-51425-7).
     _________________________________________________________________

   Node:link farm, Next:[7990]link rot, Previous:[7991]linearithmic,
   Up:[7992]= L =

   link farm n.

   [Unix] A directory tree that contains many links to files in a master
   directory tree of files. Link farms save space when one is maintaining
   several nearly identical copies of the same source tree -- for
   example, when the only difference is architecture-dependent object
   files. "Let's freeze the source and then rebuild the FROBOZZ-3 and
   FROBOZZ-4 link farms." Link farms may also be used to get around
   restrictions on the number of -I (include-file directory) arguments on
   older C preprocessors. However, they can also get completely out of
   hand, becoming the filesystem equivalent of [7993]spaghetti code.
     _________________________________________________________________

   Node:link rot, Next:[7994]link-dead, Previous:[7995]link farm,
   Up:[7996]= L =

   link rot n.

   The natural decay of web links as the sites they're connected to
   change or die. Compare [7997]bit rot.
     _________________________________________________________________

   Node:link-dead, Next:[7998]lint, Previous:[7999]link rot, Up:[8000]= L
   =

   link-dead adj.

   [MUD] The state a player is in when they kill their connection to a
   [8001]MUD without leaving it properly. The player is then commonly
   left as a statue in the game, and is only removed after a certain
   period of time (an hour on most MUDs). Used on [8002]IRC as well,
   although it is inappropriate in that context. Compare [8003]netdead.
     _________________________________________________________________

   Node:lint, Next:[8004]Lintel, Previous:[8005]link-dead, Up:[8006]= L =

   lint

   [from Unix's lint(1), named for the bits of fluff it supposedly picks
   from programs] 1. vt. To examine a program closely for style, language
   usage, and portability problems, esp. if in C, esp. if via use of
   automated analysis tools, most esp. if the Unix utility lint(1) is
   used. This term used to be restricted to use of lint(1) itself, but
   (judging by references on Usenet) it has become a shorthand for
   [8007]desk check at some non-Unix shops, even in languages other than
   C. Also as v. [8008]delint. 2. n. Excess verbiage in a document, as in
   "This draft has too much lint".
     _________________________________________________________________

   Node:Lintel, Next:[8009]Linus, Previous:[8010]lint, Up:[8011]= L =

   Lintel n.

   The emerging [8012]Linux/Intel alliance. This term began to be used in
   early 1999 after it became clear that the [8013]Wintel alliance was
   under increasing strain and Intel started taking stakes in Linux
   companies.
     _________________________________________________________________

   Node:Linus, Next:[8014]Linux, Previous:[8015]Lintel, Up:[8016]= L =

   Linus /leen'us'/ or /lin'us'/, not /li:'nus/

   Linus Torvalds, the author of [8017]Linux. Nobody in the hacker
   culture has been as readily recognized by first name alone since Ken
   (Thompson).
     _________________________________________________________________

   Node:Linux, Next:[8018]lion food, Previous:[8019]Linus, Up:[8020]= L =

   Linux /lee'nuhks/ or /li'nuks/, not /li:'nuhks/ n.

   The free Unix workalike created by Linus Torvalds and friends starting
   about 1991. The pronunciation /lee'nuhks/ is preferred because the
   name `Linus' has an /ee/ sound in Swedish (Linus's family is part of
   Finland's 6% ethnic-Swedish minority). This may be the most remarkable
   hacker project in history -- an entire clone of Unix for 386, 486 and
   Pentium micros, distributed for free with sources over the net (ports
   to Alpha and Sparc and many other machines are also in use).

   Linux is what [8021]GNU aimed to be, and it relies on the GNU toolset.
   But the Free Software Foundation didn't produce the kernel to go with
   that toolset until 1999, which was too late. Other, similar efforts
   like FreeBSD and NetBSD have been technically successful but never
   caught fire the way Linux has; as this is written in 2000, Linux is
   seriously challenging Microsoft's OS dominance. It has already
   captured 31% of the Internet-server market and 25% of general business
   servers.

   An earlier version of this entry opined "The secret of Linux's success
   seems to be that Linus worked much harder early on to keep the
   development process open and recruit other hackers, creating a
   snowball effect." Truer than we knew. See [8022]bazaar.

   (Some people object that the name `Linux' should be used to refer only
   to the kernel, not the entire operating system. This claim is a proxy
   for an underlying territorial dispute; people who insist on the term
   `GNU/Linux' want the the [8023]FSF to get most of the credit for Linux
   because RMS and friends wrote many of its user-level tools. Neither
   this theory nor the term `GNU/Linux' has gained more than minority
   acceptance).
     _________________________________________________________________

   Node:lion food, Next:[8024]Lions Book, Previous:[8025]Linux,
   Up:[8026]= L =

   lion food n.

   [IBM] Middle management or HQ staff (or, by extension, administrative
   drones in general). From an old joke about two lions who, escaping
   from the zoo, split up to increase their chances but agree to meet
   after 2 months. When they finally meet, one is skinny and the other
   overweight. The thin one says: "How did you manage? I ate a human just
   once and they turned out a small army to chase me -- guns, nets, it
   was terrible. Since then I've been reduced to eating mice, insects,
   even grass." The fat one replies: "Well, I hid near an IBM office and
   ate a manager a day. And nobody even noticed!"
     _________________________________________________________________

   Node:Lions Book, Next:[8027]LISP, Previous:[8028]lion food, Up:[8029]=
   L =

   Lions Book n.

   "Source Code and Commentary on Unix level 6", by John Lions. The two
   parts of this book contained (1) the entire source listing of the Unix
   Version 6 kernel, and (2) a commentary on the source discussing the
   algorithms. These were circulated internally at the University of New
   South Wales beginning 1976-77, and were, for years after, the only
   detailed kernel documentation available to anyone outside Bell Labs.
   Because Western Electric wished to maintain trade secret status on the
   kernel, the Lions Book was only supposed to be distributed to
   affiliates of source licensees. In spite of this, it soon spread by
   [8030]samizdat to a good many of the early Unix hackers.

   [1996 update: The Lions book lives again! It was put back in print as
   ISBN 1-57398-013-7 from Peer-To-Peer Communications, with forewords by
   Dennis Ritchie and Ken Thompson. In a neat bit of reflexivity, the
   page before the contents quotes this entry.]
     _________________________________________________________________

   Node:LISP, Next:[8031]list-bomb, Previous:[8032]Lions Book, Up:[8033]=
   L =

   LISP n.

   [from `LISt Processing language', but mythically from `Lots of
   Irritating Superfluous Parentheses'] AI's mother tongue, a language
   based on the ideas of (a) variable-length lists and trees as
   fundamental data types, and (b) the interpretation of code as data and
   vice-versa. Invented by John McCarthy at MIT in the late 1950s, it is
   actually older than any other [8034]HLL still in use except FORTRAN.
   Accordingly, it has undergone considerable adaptive radiation over the
   years; modern variants are quite different in detail from the original
   LISP 1.5. The dominant HLL among hackers until the early 1980s, LISP
   now shares the throne with [8035]C. Its partisans claim it is the only
   language that is truly beautiful. See [8036]languages of choice.

   All LISP functions and programs are expressions that return values;
   this, together with the high memory utilization of LISPs, gave rise to
   Alan Perlis's famous quip (itself a take on an Oscar Wilde quote) that
   "LISP programmers know the value of everything and the cost of
   nothing".

   One significant application for LISP has been as a proof by example
   that most newer languages, such as [8037]COBOL and [8038]Ada, are full
   of unnecessary [8039]crocks. When the [8040]Right Thing has already
   been done once, there is no justification for [8041]bogosity in newer
   languages.
     _________________________________________________________________

   Node:list-bomb, Next:[8042]lithium lick, Previous:[8043]LISP,
   Up:[8044]= L =

   list-bomb v.

   To [8045]mailbomb someone by forging messages causing the victim to
   become a subscriber to many mailing lists. This is a self-defeating
   tactic; it merely forces mailing list servers to require confirmation
   by return message for every subscription.
     _________________________________________________________________

   Node:lithium lick, Next:[8046]little-endian, Previous:[8047]list-bomb,
   Up:[8048]= L =

   lithium lick n.

   [NeXT] Steve Jobs. Employees who have gotten too much attention from
   their esteemed founder are said to have `lithium lick' when they begin
   to show signs of Jobsian fervor and repeat the most recent catch
   phrases in normal conversation -- for example, "It just works, right
   out of the box!"
     _________________________________________________________________

   Node:little-endian, Next:[8049]live, Previous:[8050]lithium lick,
   Up:[8051]= L =

   little-endian adj.

   Describes a computer architecture in which, within a given 16- or
   32-bit word, bytes at lower addresses have lower significance (the
   word is stored `little-end-first'). The PDP-11 and VAX families of
   computers and Intel microprocessors and a lot of communications and
   networking hardware are little-endian. See [8052]big-endian,
   [8053]middle-endian, [8054]NUXI problem. The term is sometimes used to
   describe the ordering of units other than bytes; most often, bits
   within a byte.
     _________________________________________________________________

   Node:live, Next:[8055]live data, Previous:[8056]little-endian,
   Up:[8057]= L =

   live /li:v/ adj.,adv.

   [common] Opposite of `test'. Refers to actual real-world data or a
   program working with it. For example, the response to "I think the
   record deleter is finished" might be "Is it live yet?" or "Have you
   tried it out on live data?" This usage usually carries the connotation
   that live data is more fragile and must not be corrupted, or bad
   things will happen. So a more appropriate response might be: "Well,
   make sure it works perfectly before we throw live data at it." The
   implication here is that record deletion is something pretty
   significant, and a haywire record-deleter running amok live would
   probably cause great harm.
     _________________________________________________________________

   Node:live data, Next:[8058]Live Free Or Die!, Previous:[8059]live,
   Up:[8060]= L =

   live data n.

   1. Data that is written to be interpreted and takes over program flow
   when triggered by some un-obvious operation, such as viewing it. One
   use of such hacks is to break security. For example, some smart
   terminals have commands that allow one to download strings to program
   keys; this can be used to write live data that, when listed to the
   terminal, infects it with a security-breaking [8061]virus that is
   triggered the next time a hapless user strikes that key. For another,
   there are some well-known bugs in [8062]vi that allow certain texts to
   send arbitrary commands back to the machine when they are simply
   viewed. 2. In C code, data that includes pointers to function
   [8063]hooks (executable code). 3. An object, such as a
   [8064]trampoline, that is constructed on the fly by a program and
   intended to be executed as code.
     _________________________________________________________________

   Node:Live Free Or Die!, Next:[8065]livelock, Previous:[8066]live data,
   Up:[8067]= L =

   Live Free Or Die! imp.

   1. The state motto of New Hampshire, which appears on that state's
   automobile license plates. 2. A slogan associated with Unix in the
   romantic days when Unix aficionados saw themselves as a tiny,
   beleaguered underground tilting against the windmills of industry. The
   "free" referred specifically to freedom from the [8068]fascist design
   philosophies and crufty misfeatures common on competing operating
   systems. Armando Stettner, one of the early Unix developers, used to
   give out fake license plates bearing this motto under a large Unix,
   all in New Hampshire colors of green and white. These are now valued
   collector's items. In 1994 [8069]DEC put an inferior imitation of
   these in circulation with a red corporate logo added. Compaq (half of
   which was once DEC) has continued the practice.
     _________________________________________________________________

   Node:livelock, Next:[8070]liveware, Previous:[8071]Live Free Or Die!,
   Up:[8072]= L =

   livelock /li:v'lok/ n.

   A situation in which some critical stage of a task is unable to finish
   because its clients perpetually create more work for it to do after
   they have been serviced but before it can clear its queue. Differs
   from [8073]deadlock in that the process is not blocked or waiting for
   anything, but has a virtually infinite amount of work to do and can
   never catch up.
     _________________________________________________________________

   Node:liveware, Next:[8074]lobotomy, Previous:[8075]livelock,
   Up:[8076]= L =

   liveware /li:v'weir/ n.

   1. Synonym for [8077]wetware. Less common. 2. [Cambridge] Vermin.
   "Waiter, there's some liveware in my salad..."
     _________________________________________________________________

   Node:lobotomy, Next:[8078]locals the, Previous:[8079]liveware,
   Up:[8080]= L =

   lobotomy n.

   1. What a hacker subjected to formal management training is said to
   have undergone. At IBM and elsewhere this term is used by both hackers
   and low-level management; the latter doubtless intend it as a joke. 2.
   The act of removing the processor from a microcomputer in order to
   replace or upgrade it. Some very cheap [8081]clone systems are sold in
   `lobotomized' form -- everything but the brain.
     _________________________________________________________________

   Node:locals the, Next:[8082]locked and loaded,
   Previous:[8083]lobotomy, Up:[8084]= L =

   locals, the pl.n.

   The users on one's local network (as opposed, say, to people one
   reaches via public Internet or UUCP connects). The marked thing about
   this usage is how little it has to do with real-space distance. "I
   have to do some tweaking on this mail utility before releasing it to
   the locals."
     _________________________________________________________________

   Node:locked and loaded, Next:[8085]locked up, Previous:[8086]locals
   the, Up:[8087]= L =

   locked and loaded adj.,obs.

   [from military slang for an M-16 rifle with magazine inserted and
   prepared for firing] Said of a removable disk volume properly prepared
   for use -- that is, locked into the drive and with the heads loaded.
   Ironically, because their heads are `loaded' whenever the power is up,
   this description is never used of [8088]Winchester drives (which are
   named after a rifle).
     _________________________________________________________________

   Node:locked up, Next:[8089]logic bomb, Previous:[8090]locked and
   loaded, Up:[8091]= L =

   locked up adj.

   Syn. for [8092]hung, [8093]wedged.
     _________________________________________________________________

   Node:logic bomb, Next:[8094]logical, Previous:[8095]locked up,
   Up:[8096]= L =

   logic bomb n.

   Code surreptitiously inserted into an application or OS that causes it
   to perform some destructive or security-compromising activity whenever
   specified conditions are met. Compare [8097]back door.
     _________________________________________________________________

   Node:logical, Next:[8098]loop through, Previous:[8099]logic bomb,
   Up:[8100]= L =

   logical adj.

   [from the technical term `logical device', wherein a physical device
   is referred to by an arbitrary `logical' name] Having the role of. If
   a person (say, Les Earnest at SAIL) who had long held a certain post
   left and were replaced, the replacement would for a while be known as
   the `logical' Les Earnest. (This does not imply any judgment on the
   replacement.) Compare [8101]virtual.

   At Stanford, `logical' compass directions denote a coordinate system
   in which `logical north' is toward San Francisco, `logical west' is
   toward the ocean, etc., even though logical north varies between
   physical (true) north near San Francisco and physical west near San
   Jose. (The best rule of thumb here is that, by definition, El Camino
   Real always runs logical north-and-south.) In giving directions, one
   might say: "To get to Rincon Tarasco restaurant, get onto [8102]El
   Camino Bignum going logical north." Using the word `logical' helps to
   prevent the recipient from worrying about that the fact that the sun
   is setting almost directly in front of him. The concept is reinforced
   by North American highways which are almost, but not quite,
   consistently labeled with logical rather than physical directions. A
   similar situation exists at MIT: Route 128 (famous for the electronics
   industry that has grown up along it) is a 3-quarters circle
   surrounding Boston at a radius of 10 miles, terminating near the
   coastline at each end. It would be most precise to describe the two
   directions along this highway as `clockwise' and `counterclockwise',
   but the road signs all say "north" and "south", respectively. A hacker
   might describe these directions as `logical north' and `logical
   south', to indicate that they are conventional directions not
   corresponding to the usual denotation for those words. (If you went
   logical south along the entire length of route 128, you would start
   out going northwest, curve around to the south, and finish headed due
   east, passing along one infamous stretch of pavement that is
   simultaneously route 128 south and Interstate 93 north, and is signed
   as such!)
     _________________________________________________________________

   Node:loop through, Next:[8103]loose bytes, Previous:[8104]logical,
   Up:[8105]= L =

   loop through vt.

   To process each element of a list of things. "Hold on, I've got to
   loop through my paper mail." Derives from the computer-language notion
   of an iterative loop; compare `cdr down' (under [8106]cdr), which is
   less common among C and Unix programmers. ITS hackers used to say `IRP
   over' after an obscure pseudo-op in the MIDAS PDP-10 assembler (the
   same IRP op can nowadays be found in Microsoft's assembler).
     _________________________________________________________________

   Node:loose bytes, Next:[8107]lord high fixer, Previous:[8108]loop
   through, Up:[8109]= L =

   loose bytes n.

   Commonwealth hackish term for the padding bytes or [8110]shims many
   compilers insert between members of a record or structure to cope with
   alignment requirements imposed by the machine architecture.
     _________________________________________________________________

   Node:lord high fixer, Next:[8111]lose, Previous:[8112]loose bytes,
   Up:[8113]= L =

   lord high fixer n.

   [primarily British, from Gilbert & Sullivan's `lord high executioner']
   The person in an organization who knows the most about some aspect of
   a system. See [8114]wizard.
     _________________________________________________________________

   Node:lose, Next:[8115]lose lose, Previous:[8116]lord high fixer,
   Up:[8117]= L =

   lose vi.

   1. [very common] To fail. A program loses when it encounters an
   exceptional condition or fails to work in the expected manner. 2. To
   be exceptionally unesthetic or crocky. 3. Of people, to be obnoxious
   or unusually stupid (as opposed to ignorant). See also [8118]deserves
   to lose. 4. n. Refers to something that is [8119]losing, especially in
   the phrases "That's a lose!" and "What a lose!"
     _________________________________________________________________

   Node:lose lose, Next:[8120]loser, Previous:[8121]lose, Up:[8122]= L =

   lose lose interj.

   A reply to or comment on an undesirable situation. "I accidentally
   deleted all my files!" "Lose, lose."
     _________________________________________________________________

   Node:loser, Next:[8123]losing, Previous:[8124]lose lose, Up:[8125]= L
   =

   loser n.

   An unexpectedly bad situation, program, programmer, or person. Someone
   who habitually loses. (Even winners can lose occasionally.) Someone
   who knows not and knows not that he knows not. Emphatic forms are
   `real loser', `total loser', and `complete loser' (but not **`moby
   loser', which would be a contradiction in terms). See [8126]luser.
     _________________________________________________________________

   Node:losing, Next:[8127]loss, Previous:[8128]loser, Up:[8129]= L =

   losing adj.

   Said of anything that is or causes a [8130]lose or [8131]lossage. "The
   compiler is losing badly when I try to use templates."
     _________________________________________________________________

   Node:loss, Next:[8132]lossage, Previous:[8133]losing, Up:[8134]= L =

   loss n.

   Something (not a person) that loses; a situation in which something is
   losing. Emphatic forms include `moby loss', and `total loss',
   `complete loss'. Common interjections are "What a loss!" and "What a
   moby loss!" Note that `moby loss' is OK even though **`moby loser' is
   not used; applied to an abstract noun, moby is simply a magnifier,
   whereas when applied to a person it implies substance and has positive
   connotations. Compare [8135]lossage.
     _________________________________________________________________

   Node:lossage, Next:[8136]lost in the noise, Previous:[8137]loss,
   Up:[8138]= L =

   lossage /los'*j/ n.

   [very common] The result of a bug or malfunction. This is a mass or
   collective noun. "What a loss!" and "What lossage!" are nearly
   synonymous. The former is slightly more particular to the speaker's
   present circumstances; the latter implies a continuing [8139]lose of
   which the speaker is currently a victim. Thus (for example) a
   temporary hardware failure is a loss, but bugs in an important tool
   (like a compiler) are serious lossage.
     _________________________________________________________________

   Node:lost in the noise, Next:[8140]lost in the underflow,
   Previous:[8141]lossage, Up:[8142]= L =

   lost in the noise adj.

   Syn. [8143]lost in the underflow. This term is from signal processing,
   where signals of very small amplitude cannot be separated from
   low-intensity noise in the system. Though popular among hackers, it is
   not confined to hackerdom; physicists, engineers, astronomers, and
   statisticians all use it.
     _________________________________________________________________

   Node:lost in the underflow, Next:[8144]lots of MIPS but no I/O,
   Previous:[8145]lost in the noise, Up:[8146]= L =

   lost in the underflow adj.

   Too small to be worth considering; more specifically, small beyond the
   limits of accuracy or measurement. This is a reference to `floating
   underflow', a condition that can occur when a floating-point
   arithmetic processor tries to handle quantities smaller than its limit
   of magnitude. It is also a pun on `undertow' (a kind of fast, cold
   current that sometimes runs just offshore and can be dangerous to
   swimmers). "Well, sure, photon pressure from the stadium lights alters
   the path of a thrown baseball, but that effect gets lost in the
   underflow." Compare [8147]epsilon, [8148]epsilon squared; see also
   [8149]overflow bit.
     _________________________________________________________________

   Node:lots of MIPS but no I/O, Next:[8150]low-bandwidth,
   Previous:[8151]lost in the underflow, Up:[8152]= L =

   lots of MIPS but no I/O adj.

   Used to describe a person who is technically brilliant but can't seem
   to communicate with human beings effectively. Technically it describes
   a machine that has lots of processing power but is bottlenecked on
   input-output (in 1991, the IBM Rios, a.k.a. RS/6000, was a notorious
   example).
     _________________________________________________________________

   Node:low-bandwidth, Next:[8153]LPT, Previous:[8154]lots of MIPS but no
   I/O, Up:[8155]= L =

   low-bandwidth adj.

   [from communication theory] Used to indicate a talk that, although not
   [8156]content-free, was not terribly informative. "That was a
   low-bandwidth talk, but what can you expect for an audience of
   [8157]suits!" Compare [8158]zero-content, [8159]bandwidth,
   [8160]math-out.
     _________________________________________________________________

   Node:LPT, Next:[8161]Lubarsky's Law of Cybernetic Entomology,
   Previous:[8162]low-bandwidth, Up:[8163]= L =

   LPT /L-P-T/ or /lip'it/ or /lip-it'/ n.

   1. Line printer (originally Line Printing Terminal). Rare under Unix,
   more common among hackers who grew up with ITS, MS-DOS, CP/M and other
   operating systems that were strongly influenced by early [8164]DEC
   conventions. 2. Local PorT. Used among MS-DOS programmers (and so
   expanded in the MS-DOS 5 manual). It seems likely this is a
   [8165]backronym.
     _________________________________________________________________

   Node:Lubarsky's Law of Cybernetic Entomology, Next:[8166]Lumber
   Cartel, Previous:[8167]LPT, Up:[8168]= L =

   Lubarsky's Law of Cybernetic Entomology prov.

   "There is always one more bug."
     _________________________________________________________________

   Node:Lumber Cartel, Next:[8169]lunatic fringe,
   Previous:[8170]Lubarsky's Law of Cybernetic Entomology, Up:[8171]= L =

   Lumber Cartel n.

   A mythical conspiracy accused by [8172]spam-spewers of funding
   anti-spam activism in order to force the direct-mail promotions
   industry back onto paper. Hackers, predictably, responded by forming a
   "Lumber Cartel" spoofing this paranoid theory; the web page is
   [8173]http://come.to/the.lumber.cartel. Members often include the tag
   TINLC ("There Is No Lumber Cartel") in their postings; see [8174]TINC,
   [8175]backbone cabal and [8176]NANA for explanation.
     _________________________________________________________________

   Node:lunatic fringe, Next:[8177]lurker, Previous:[8178]Lumber Cartel,
   Up:[8179]= L =

   lunatic fringe n.

   [IBM] Customers who can be relied upon to accept release 1 versions of
   software. Compare [8180]heatseeker.
     _________________________________________________________________

   Node:lurker, Next:[8181]luser, Previous:[8182]lunatic fringe,
   Up:[8183]= L =

   lurker n.

   One of the `silent majority' in a electronic forum; one who posts
   occasionally or not at all but is known to read the group's postings
   regularly. This term is not pejorative and indeed is casually used
   reflexively: "Oh, I'm just lurking." Often used in `the lurkers', the
   hypothetical audience for the group's [8184]flamage-emitting regulars.
   When a lurker speaks up for the first time, this is called
   `delurking'.

   The creator of the popular science-fiction TV series "Babylon 5" has
   ties to SF fandom and the hacker culture. In that series, the use of
   the term `lurker' for a homeless or displaced person is a conscious
   reference to the jargon term.
     _________________________________________________________________

   Node:luser, Next:[8185]M, Previous:[8186]lurker, Up:[8187]= L =

   luser /loo'zr/ n.

   [common] A [8188]user; esp. one who is also a [8189]loser.
   ([8190]luser and [8191]loser are pronounced identically.) This word
   was coined around 1975 at MIT. Under ITS, when you first walked up to
   a terminal at MIT and typed Control-Z to get the computer's attention,
   it printed out some status information, including how many people were
   already using the computer; it might print "14 users", for example.
   Someone thought it would be a great joke to patch the system to print
   "14 losers" instead. There ensued a great controversy, as some of the
   users didn't particularly want to be called losers to their faces
   every time they used the computer. For a while several hackers
   struggled covertly, each changing the message behind the back of the
   others; any time you logged into the computer it was even money
   whether it would say "users" or "losers". Finally, someone tried the
   compromise "lusers", and it stuck. Later one of the ITS machines
   supported luser as a request-for-help command. ITS died the death in
   mid-1990, except as a museum piece; the usage lives on, however, and
   the term `luser' is often seen in program comments and on Usenet.
   Compare [8192]mundane, [8193]muggle.
     _________________________________________________________________

   Node:= M =, Next:[8194]= N =, Previous:[8195]= L =, Up:[8196]The
   Jargon Lexicon

= M =

     * [8197]M:
     * [8198]M$:
     * [8199]macdink:
     * [8200]machinable:
     * [8201]machoflops:
     * [8202]Macintoy:
     * [8203]Macintrash:
     * [8204]macro:
     * [8205]macro-:
     * [8206]macrology:
     * [8207]macrotape:
     * [8208]maggotbox:
     * [8209]magic:
     * [8210]magic cookie:
     * [8211]magic number:
     * [8212]magic smoke:
     * [8213]mail storm:
     * [8214]mailbomb:
     * [8215]mailing list:
     * [8216]main loop:
     * [8217]mainframe:
     * [8218]management:
     * [8219]mandelbug:
     * [8220]manged:
     * [8221]mangle:
     * [8222]mangled name:
     * [8223]mangler:
     * [8224]manularity:
     * [8225]marbles:
     * [8226]marginal:
     * [8227]Marginal Hacks:
     * [8228]marginally:
     * [8229]marketroid:
     * [8230]Mars:
     * [8231]martian:
     * [8232]massage:
     * [8233]math-out:
     * [8234]Matrix:
     * [8235]maximum Maytag mode:
     * [8236]meatspace:
     * [8237]meatware:
     * [8238]meeces:
     * [8239]meg:
     * [8240]mega-:
     * [8241]megapenny:
     * [8242]MEGO:
     * [8243]meltdown network:
     * [8244]meme:
     * [8245]meme plague:
     * [8246]memetics:
     * [8247]memory farts:
     * [8248]memory leak:
     * [8249]memory smash:
     * [8250]menuitis:
     * [8251]mess-dos:
     * [8252]meta:
     * [8253]meta bit:
     * [8254]metasyntactic variable:
     * [8255]MFTL:
     * [8256]mickey:
     * [8257]mickey mouse program:
     * [8258]micro-:
     * [8259]MicroDroid:
     * [8260]microfloppies:
     * [8261]microfortnight:
     * [8262]microLenat:
     * [8263]microReid:
     * [8264]microserf:
     * [8265]Microsloth Windows:
     * [8266]Microsoft:
     * [8267]micros~1:
     * [8268]middle-endian:
     * [8269]middle-out implementation:
     * [8270]milliLampson:
     * [8271]minifloppies:
     * [8272]MIPS:
     * [8273]misbug:
     * [8274]misfeature:
     * [8275]Missed'em-five:
     * [8276]missile address:
     * [8277]miswart:
     * [8278]MMF:
     * [8279]mobo:
     * [8280]moby:
     * [8281]mockingbird:
     * [8282]mod:
     * [8283]mode:
     * [8284]mode bit:
     * [8285]modulo:
     * [8286]molly-guard:
     * [8287]Mongolian Hordes technique:
     * [8288]monkey up:
     * [8289]monkey scratch:
     * [8290]monstrosity:
     * [8291]monty:
     * [8292]Moof:
     * [8293]Moore's Law:
     * [8294]moose call:
     * [8295]moria:
     * [8296]MOTAS:
     * [8297]MOTOS:
     * [8298]MOTSS:
     * [8299]mouse ahead:
     * [8300]mouse around:
     * [8301]mouse belt:
     * [8302]mouse droppings:
     * [8303]mouse elbow:
     * [8304]mouso:
     * [8305]MS-DOS:
     * [8306]mu:
     * [8307]MUD:
     * [8308]muddie:
     * [8309]mudhead:
     * [8310]muggle:
     * [8311]multician:
     * [8312]Multics:
     * [8313]multitask:
     * [8314]mumblage:
     * [8315]mumble:
     * [8316]munch:
     * [8317]munching:
     * [8318]munching squares:
     * [8319]munchkin:
     * [8320]mundane:
     * [8321]mung:
     * [8322]munge:
     * [8323]Murphy's Law:
     * [8324]music:
     * [8325]mutter:
     _________________________________________________________________

   Node:M, Next:[8326]M$, Previous:[8327]luser, Up:[8328]= M =

   M pref. (on units) suff. (on numbers)

   [SI] See [8329]quantifiers.
     _________________________________________________________________

   Node:M$, Next:[8330]macdink, Previous:[8331]M, Up:[8332]= M =

   M$

   Common net abbreviation for Microsoft, everybody's least favorite
   monopoly.
     _________________________________________________________________

   Node:macdink, Next:[8333]machinable, Previous:[8334]M$, Up:[8335]= M =

   macdink /mak'dink/ vt.

   [from the Apple Macintosh, which is said to encourage such behavior]
   To make many incremental and unnecessary cosmetic changes to a program
   or file. Often the subject of the macdinking would be better off
   without them. "When I left at 11 P.M. last night, he was still
   macdinking the slides for his presentation." See also
   [8336]fritterware, [8337]window shopping.
     _________________________________________________________________

   Node:machinable, Next:[8338]machoflops, Previous:[8339]macdink,
   Up:[8340]= M =

   machinable adj.

   Machine-readable. Having the [8341]softcopy nature.
     _________________________________________________________________

   Node:machoflops, Next:[8342]Macintoy, Previous:[8343]machinable,
   Up:[8344]= M =

   machoflops /mach'oh-flops/ n.

   [pun on `megaflops', a coinage for `millions of FLoating-point
   Operations Per Second'] Refers to artificially inflated performance
   figures often quoted by computer manufacturers. Real applications are
   lucky to get half the quoted speed. See [8345]Your mileage may vary,
   [8346]benchmark.
     _________________________________________________________________

   Node:Macintoy, Next:[8347]Macintrash, Previous:[8348]machoflops,
   Up:[8349]= M =

   Macintoy /mak'in-toy/ n.

   The Apple Macintosh, considered as a [8350]toy. Less pejorative than
   [8351]Macintrash.
     _________________________________________________________________

   Node:Macintrash, Next:[8352]macro, Previous:[8353]Macintoy, Up:[8354]=
   M =

   Macintrash /mak'in-trash`/ n.

   The Apple Macintosh, as described by a hacker who doesn't appreciate
   being kept away from the real computer by the interface. The term
   [8355]maggotbox has been reported in regular use in the Research
   Triangle area of North Carolina. Compare [8356]Macintoy. See also
   [8357]beige toaster, [8358]WIMP environment, [8359]point-and-drool
   interface, [8360]drool-proof paper, [8361]user-friendly.
     _________________________________________________________________

   Node:macro, Next:[8362]macro-, Previous:[8363]Macintrash, Up:[8364]= M
   =

   macro /mak'roh/ n.

   [techspeak] A name (possibly followed by a formal [8365]arg list) that
   is equated to a text or symbolic expression to which it is to be
   expanded (possibly with the substitution of actual arguments) by a
   macro expander. This definition can be found in any technical
   dictionary; what those won't tell you is how the hackish connotations
   of the term have changed over time.

   The term `macro' originated in early assemblers, which encouraged the
   use of macros as a structuring and information-hiding device. During
   the early 1970s, macro assemblers became ubiquitous, and sometimes
   quite as powerful and expensive as [8366]HLLs, only to fall from favor
   as improving compiler technology marginalized assembler programming
   (see [8367]languages of choice). Nowadays the term is most often used
   in connection with the C preprocessor, LISP, or one of several
   special-purpose languages built around a macro-expansion facility
   (such as TeX or Unix's [nt]roff suite).

   Indeed, the meaning has drifted enough that the collective `macros' is
   now sometimes used for code in any special-purpose application control
   language (whether or not the language is actually translated by text
   expansion), and for macro-like entities such as the `keyboard macros'
   supported in some text editors (and PC TSR or Macintosh INIT/CDEV
   keyboard enhancers).
     _________________________________________________________________

   Node:macro-, Next:[8368]macrology, Previous:[8369]macro, Up:[8370]= M
   =

   macro- pref.

   Large. Opposite of [8371]micro-. In the mainstream and among other
   technical cultures (for example, medical people) this competes with
   the prefix [8372]mega-, but hackers tend to restrict the latter to
   quantification.
     _________________________________________________________________

   Node:macrology, Next:[8373]macrotape, Previous:[8374]macro-,
   Up:[8375]= M =

   macrology /mak-rol'*-jee/ n.

   1. Set of usually complex or crufty macros, e.g., as part of a large
   system written in [8376]LISP, [8377]TECO, or (less commonly)
   assembler. 2. The art and science involved in comprehending a
   macrology in sense 1. Sometimes studying the macrology of a system is
   not unlike archeology, ecology, or [8378]theology, hence the
   sound-alike construction. See also [8379]boxology.
     _________________________________________________________________

   Node:macrotape, Next:[8380]maggotbox, Previous:[8381]macrology,
   Up:[8382]= M =

   macrotape /mak'roh-tayp/ n.

   An industry-standard reel of tape. Originally, as opposed to a DEC
   microtape; nowadays, as opposed to modern QIC and DDS tapes. Syn.
   [8383]round tape.
     _________________________________________________________________

   Node:maggotbox, Next:[8384]magic, Previous:[8385]macrotape, Up:[8386]=
   M =

   maggotbox /mag'*t-boks/ n.

   See [8387]Macintrash. This is even more derogatory.
     _________________________________________________________________

   Node:magic, Next:[8388]magic cookie, Previous:[8389]maggotbox,
   Up:[8390]= M =

   magic

   1. adj. As yet unexplained, or too complicated to explain; compare
   [8391]automagically and (Arthur C.) Clarke's Third Law: "Any
   sufficiently advanced technology is indistinguishable from magic."
   "TTY echoing is controlled by a large number of magic bits." "This
   routine magically computes the parity of an 8-bit byte in three
   instructions." 2. adj. Characteristic of something that works although
   no one really understands why (this is especially called [8392]black
   magic). 3. n. [Stanford] A feature not generally publicized that
   allows something otherwise impossible, or a feature formerly in that
   category but now unveiled. 4. n. The ultimate goal of all engineering
   & development, elegance in the extreme; from the first corollary to
   Clarke's Third Law: "Any technology distinguishable from magic is
   insufficiently advanced".

   Parodies playing on these senses of the term abound; some have made
   their way into serious documentation, as when a MAGIC directive was
   described in the Control Card Reference for GCOS c.1978. For more
   about hackish `magic', see [8393]Appendix A. Compare [8394]black
   magic, [8395]wizardly, [8396]deep magic, [8397]heavy wizardry.
     _________________________________________________________________

   Node:magic cookie, Next:[8398]magic number, Previous:[8399]magic,
   Up:[8400]= M =

   magic cookie n.

   [Unix; common] 1. Something passed between routines or programs that
   enables the receiver to perform some operation; a capability ticket or
   opaque identifier. Especially used of small data objects that contain
   data encoded in a strange or intrinsically machine-dependent way.
   E.g., on non-Unix OSes with a non-byte-stream model of files, the
   result of ftell(3) may be a magic cookie rather than a byte offset; it
   can be passed to fseek(3), but not operated on in any meaningful way.
   The phrase `it hands you a magic cookie' means it returns a result
   whose contents are not defined but which can be passed back to the
   same or some other program later. 2. An in-band code for changing
   graphic rendition (e.g., inverse video or underlining) or performing
   other control functions (see also [8401]cookie). Some older terminals
   would leave a blank on the screen corresponding to mode-change magic
   cookies; this was also called a [8402]glitch (or occasionally a
   `turd'; compare [8403]mouse droppings). See also [8404]cookie.
     _________________________________________________________________

   Node:magic number, Next:[8405]magic smoke, Previous:[8406]magic
   cookie, Up:[8407]= M =

   magic number n.

   [Unix/C; common] 1. In source code, some non-obvious constant whose
   value is significant to the operation of a program and that is
   inserted inconspicuously in-line ([8408]hardcoded), rather than
   expanded in by a symbol set by a commented #define. Magic numbers in
   this sense are bad style. 2. A number that encodes critical
   information used in an algorithm in some opaque way. The classic
   examples of these are the numbers used in hash or CRC functions, or
   the coefficients in a linear congruential generator for pseudo-random
   numbers. This sense actually predates and was ancestral to the more
   commonsense 1. 3. Special data located at the beginning of a binary
   data file to indicate its type to a utility. Under Unix, the system
   and various applications programs (especially the linker) distinguish
   between types of executable file by looking for a magic number. Once
   upon a time, these magic numbers were PDP-11 branch instructions that
   skipped over header data to the start of executable code; 0407, for
   example, was octal for `branch 16 bytes relative'. Many other kinds of
   files now have magic numbers somewhere; some magic numbers are, in
   fact, strings, like the !<arch> at the beginning of a Unix archive
   file or the %! leading PostScript files. Nowadays only a [8409]wizard
   knows the spells to create magic numbers. How do you choose a fresh
   magic number of your own? Simple -- you pick one at random. See? It's
   magic!

   The magic number, on the other hand, is 7+/-2. See "The magical number
   seven, plus or minus two: some limits on our capacity for processing
   information" by George Miller, in the "Psychological Review" 63:81-97
   (1956). This classic paper established the number of distinct items
   (such as numeric digits) that humans can hold in short-term memory.
   Among other things, this strongly influenced the interface design of
   the phone system.
     _________________________________________________________________

   Node:magic smoke, Next:[8410]mail storm, Previous:[8411]magic number,
   Up:[8412]= M =

   magic smoke n.

   A substance trapped inside IC packages that enables them to function
   (also called `blue smoke'; this is similar to the archaic `phlogiston'
   hypothesis about combustion). Its existence is demonstrated by what
   happens when a chip burns up -- the magic smoke gets let out, so it
   doesn't work any more. See [8413]smoke test, [8414]let the smoke out.

   Usenetter Jay Maynard tells the following story: "Once, while hacking
   on a dedicated Z80 system, I was testing code by blowing EPROMs and
   plugging them in the system, then seeing what happened. One time, I
   plugged one in backwards. I only discovered that after I realized that
   Intel didn't put power-on lights under the quartz windows on the tops
   of their EPROMs -- the die was glowing white-hot. Amazingly, the EPROM
   worked fine after I erased it, filled it full of zeros, then erased it
   again. For all I know, it's still in service. Of course, this is
   because the magic smoke didn't get let out." Compare the original
   phrasing of [8415]Murphy's Law.
     _________________________________________________________________

   Node:mail storm, Next:[8416]mailbomb, Previous:[8417]magic smoke,
   Up:[8418]= M =

   mail storm n.

   [from [8419]broadcast storm, influenced by `maelstrom'] What often
   happens when a machine with an Internet connection and active users
   re-connects after extended downtime -- a flood of incoming mail that
   brings the machine to its knees. See also [8420]hairball.
     _________________________________________________________________

   Node:mailbomb, Next:[8421]mailing list, Previous:[8422]mail storm,
   Up:[8423]= M =

   mailbomb

   (also mail bomb) [Usenet] 1. v. To send, or urge others to send,
   massive amounts of [8424]email to a single system or person, esp. with
   intent to crash or [8425]spam the recipient's system. Sometimes done
   in retaliation for a perceived serious offense. Mailbombing is itself
   widely regarded as a serious offense -- it can disrupt email traffic
   or other facilities for innocent users on the victim's system, and in
   extreme cases, even at upstream sites. 2. n. An automatic procedure
   with a similar effect. 3. n. The mail sent. Compare [8426]letterbomb,
   [8427]nastygram, [8428]BLOB (sense 2), [8429]list-bomb.
     _________________________________________________________________

   Node:mailing list, Next:[8430]main loop, Previous:[8431]mailbomb,
   Up:[8432]= M =

   mailing list n.

   (often shortened in context to `list') 1. An [8433]email address that
   is an alias (or [8434]macro, though that word is never used in this
   connection) for many other email addresses. Some mailing lists are
   simple `reflectors', redirecting mail sent to them to the list of
   recipients. Others are filtered by humans or programs of varying
   degrees of sophistication; lists filtered by humans are said to be
   `moderated'. 2. The people who receive your email when you send it to
   such an address.

   Mailing lists are one of the primary forms of hacker interaction,
   along with [8435]Usenet. They predate Usenet, having originated with
   the first UUCP and ARPANET connections. They are often used for
   private information-sharing on topics that would be too specialized
   for or inappropriate to public Usenet groups. Though some of these
   maintain almost purely technical content (such as the Internet
   Engineering Task Force mailing list), others (like the `sf-lovers'
   list maintained for many years by Saul Jaffe) are recreational, and
   many are purely social. Perhaps the most infamous of the social lists
   was the eccentric bandykin distribution; its latter-day progeny,
   lectroids and tanstaafl, still include a number of the oddest and most
   interesting people in hackerdom.

   Mailing lists are easy to create and (unlike Usenet) don't tie up a
   significant amount of machine resources (until they get very large, at
   which point they can become interesting torture tests for mail
   software). Thus, they are often created temporarily by working groups,
   the members of which can then collaborate on a project without ever
   needing to meet face-to-face. Much of the material in this lexicon was
   criticized and polished on just such a mailing list (called
   `jargon-friends'), which included all the co-authors of Steele-1983.
     _________________________________________________________________

   Node:main loop, Next:[8436]mainframe, Previous:[8437]mailing list,
   Up:[8438]= M =

   main loop n.

   The top-level control flow construct in an input- or event-driven
   program, the one which receives and acts or dispatches on the
   program's input. See also [8439]driver.
     _________________________________________________________________

   Node:mainframe, Next:[8440]management, Previous:[8441]main loop,
   Up:[8442]= M =

   mainframe n.

   Term originally referring to the cabinet containing the central
   processor unit or `main frame' of a room-filling [8443]Stone Age batch
   machine. After the emergence of smaller `minicomputer' designs in the
   early 1970s, the traditional [8444]big iron machines were described as
   `mainframe computers' and eventually just as mainframes. The term
   carries the connotation of a machine designed for batch rather than
   interactive use, though possibly with an interactive timesharing
   operating system retrofitted onto it; it is especially used of
   machines built by IBM, Unisys, and the other great [8445]dinosaurs
   surviving from computing's [8446]Stone Age.

   It has been common wisdom among hackers since the late 1980s that the
   mainframe architectural tradition is essentially dead (outside of the
   tiny market for [8447]number-crunching supercomputers (see
   [8448]cray)), having been swamped by the recent huge advances in IC
   technology and low-cost personal computing. The wave of failures,
   takeovers, and mergers among traditional mainframe makers in the early
   1990s bore this out. The biggest mainframer of all, IBM, was compelled
   to re-invent itself as a huge systems-consulting house. (See
   [8449]dinosaurs mating and [8450]killer micro).
     _________________________________________________________________

   Node:management, Next:[8451]mandelbug, Previous:[8452]mainframe,
   Up:[8453]= M =

   management n.

   1. Corporate power elites distinguished primarily by their distance
   from actual productive work and their chronic failure to manage (see
   also [8454]suit). Spoken derisively, as in "Management decided that
   ...". 2. Mythically, a vast bureaucracy responsible for all the
   world's minor irritations. Hackers' satirical public notices are often
   signed `The Mgt'; this derives from the "Illuminatus" novels (see the
   [8455]Bibliography in Appendix C).
     _________________________________________________________________

   Node:mandelbug, Next:[8456]manged, Previous:[8457]management,
   Up:[8458]= M =

   mandelbug /man'del-buhg/ n.

   [from the Mandelbrot set] A bug whose underlying causes are so complex
   and obscure as to make its behavior appear chaotic or even
   non-deterministic. This term implies that the speaker thinks it is a
   [8459]Bohr bug, rather than a [8460]heisenbug. See also
   [8461]schroedinbug.
     _________________________________________________________________

   Node:manged, Next:[8462]mangle, Previous:[8463]mandelbug, Up:[8464]= M
   =

   manged /mahnjd/ n.

   [probably from the French `manger' or Italian `mangiare', to eat;
   perhaps influenced by English `mange', `mangy'] adj. Refers to
   anything that is mangled or damaged, usually beyond repair. "The disk
   was manged after the electrical storm." Compare [8465]mung.
     _________________________________________________________________

   Node:mangle, Next:[8466]mangled name, Previous:[8467]manged,
   Up:[8468]= M =

   mangle vt.

   1. Used similarly to [8469]mung or [8470]scribble, but more violent in
   its connotations; something that is mangled has been irreversibly and
   totally trashed. 2. To produce the [8471]mangled name corresponding to
   a C++ declaration.
     _________________________________________________________________

   Node:mangled name, Next:[8472]mangler, Previous:[8473]mangle,
   Up:[8474]= M =

   mangled name n.

   A name, appearing in a C++ object file, that is a coded representation
   of the object declaration as it appears in the source. Mangled names
   are used because C++ allows multiple objects to have the same name, as
   long as they are distinguishable in some other way, such as by having
   different parameter types. Thus, the internal name must have that
   additional information embedded in it, using the limited character set
   allowed by most linkers. For instance, one popular compiler encodes
   the standard library function declaration "memchr(const
   void*,int,unsigned int)" as "@memchr$qpxviui".
     _________________________________________________________________

   Node:mangler, Next:[8475]manularity, Previous:[8476]mangled name,
   Up:[8477]= M =

   mangler n.

   [DEC] A manager. Compare [8478]management. Note that [8479]system
   mangler is somewhat different in connotation.
     _________________________________________________________________

   Node:manularity, Next:[8480]marbles, Previous:[8481]mangler,
   Up:[8482]= M =

   manularity /man`yoo-la'ri-tee/ n.

   [prob. fr. techspeak `manual' + `granularity'] A notional measure of
   the manual labor required for some task, particularly one of the sort
   that automation is supposed to eliminate. "Composing English on paper
   has much higher manularity than using a text editor, especially in the
   revising stage." Hackers tend to consider manularity a symptom of
   primitive methods; in fact, a true hacker confronted with an apparent
   requirement to do a computing task [8483]by hand will inevitably seize
   the opportunity to build another tool (see [8484]toolsmith).
     _________________________________________________________________

   Node:marbles, Next:[8485]marginal, Previous:[8486]manularity,
   Up:[8487]= M =

   marbles pl.n.

   [from mainstream "lost all his/her marbles"] The minimum needed to
   build your way further up some hierarchy of tools or abstractions.
   After a bad system crash, you need to determine if the machine has
   enough marbles to come up on its own, or enough marbles to allow a
   rebuild from backups, or if you need to rebuild from scratch. "This
   compiler doesn't even have enough marbles to compile [8488]hello
   world."
     _________________________________________________________________

   Node:marginal, Next:[8489]Marginal Hacks, Previous:[8490]marbles,
   Up:[8491]= M =

   marginal adj.

   [common] 1. [techspeak] An extremely small change. "A marginal
   increase in [8492]core can decrease [8493]GC time drastically." In
   everyday terms, this means that it is a lot easier to clean off your
   desk if you have a spare place to put some of the junk while you sort
   through it. 2. Of little merit. "This proposed new feature seems
   rather marginal to me." 3. Of extremely small probability of
   [8494]winning. "The power supply was rather marginal anyway; no wonder
   it fried."
     _________________________________________________________________

   Node:Marginal Hacks, Next:[8495]marginally, Previous:[8496]marginal,
   Up:[8497]= M =

   Marginal Hacks n.

   Margaret Jacks Hall, a building into which the Stanford AI Lab was
   moved near the beginning of the 1980s (from the [8498]D. C. Power
   Lab).
     _________________________________________________________________

   Node:marginally, Next:[8499]marketroid, Previous:[8500]Marginal Hacks,
   Up:[8501]= M =

   marginally adv.

   Slightly. "The ravs here are only marginally better than at Small
   Eating Place." See [8502]epsilon.
     _________________________________________________________________

   Node:marketroid, Next:[8503]Mars, Previous:[8504]marginally,
   Up:[8505]= M =

   marketroid /mar'k*-troyd/ n.

   alt. `marketing slime', `marketeer', `marketing droid', `marketdroid'.
   A member of a company's marketing department, esp. one who promises
   users that the next version of a product will have features that are
   not actually scheduled for inclusion, are extremely difficult to
   implement, and/or are in violation of the laws of physics; and/or one
   who describes existing features (and misfeatures) in ebullient,
   buzzword-laden adspeak. Derogatory. Compare [8506]droid.
     _________________________________________________________________

   Node:Mars, Next:[8507]martian, Previous:[8508]marketroid, Up:[8509]= M
   =

   Mars n.

   A legendary tragic failure, the archetypal Hacker Dream Gone Wrong.
   Mars was the code name for a family of PDP-10 compatible computers
   built by Systems Concepts (now, The SC Group): the multi-processor
   SC-30M, the small uniprocessor SC-25M, and the never-built
   superprocessor SC-40M. These machines were marvels of engineering
   design; although not much slower than the unique [8510]Foonly F-1,
   they were physically smaller and consumed less power than the much
   slower [8511]DEC KS10 or Foonly F-2, F-3, or F-4 machines. They were
   also completely compatible with the DEC KL10, and ran all KL10
   binaries (including the operating system) with no modifications at
   about 2-3 times faster than a KL10.

   When DEC cancelled the Jupiter project in 1983, Systems Concepts
   should have made a bundle selling their machine into shops with a lot
   of software investment in PDP-10s, and in fact their spring 1984
   announcement generated a great deal of excitement in the PDP-10 world.
   TOPS-10 was running on the Mars by the summer of 1984, and TOPS-20 by
   early fall. Unfortunately, the hackers running Systems Concepts were
   much better at designing machines than at mass producing or selling
   them; the company allowed itself to be sidetracked by a bout of
   perfectionism into continually improving the design, and lost
   credibility as delivery dates continued to slip. They also overpriced
   the product ridiculously; they believed they were competing with the
   KL10 and VAX 8600 and failed to reckon with the likes of Sun
   Microsystems and other hungry startups building workstations with
   power comparable to the KL10 at a fraction of the price. By the time
   SC shipped the first SC-30M to Stanford in late 1985, most customers
   had already made the traumatic decision to abandon the PDP-10, usually
   for VMS or Unix boxes. Most of the Mars computers built ended up being
   purchased by CompuServe.

   This tale and the related saga of [8512]Foonly hold a lesson for
   hackers: if you want to play in the [8513]Real World, you need to
   learn Real World moves.
     _________________________________________________________________

   Node:martian, Next:[8514]massage, Previous:[8515]Mars, Up:[8516]= M =

   martian n.

   A packet sent on a TCP/IP network with a source address of the test
   loopback interface [127.0.0.1]. This means that it will come back
   labeled with a source address that is clearly not of this earth. "The
   domain server is getting lots of packets from Mars. Does that gateway
   have a martian filter?" Compare [8517]Christmas tree packet,
   [8518]Godzillagram.
     _________________________________________________________________

   Node:massage, Next:[8519]math-out, Previous:[8520]martian, Up:[8521]=
   M =

   massage vt.

   [common] Vague term used to describe `smooth' transformations of a
   data set into a different form, esp. transformations that do not lose
   information. Connotes less pain than [8522]munch or [8523]crunch. "He
   wrote a program that massages X bitmap files into GIF format." Compare
   [8524]slurp.
     _________________________________________________________________

   Node:math-out, Next:[8525]Matrix, Previous:[8526]massage, Up:[8527]= M
   =

   math-out n.

   [poss. from `white-out' (the blizzard variety)] A paper or
   presentation so encrusted with mathematical or other formal notation
   as to be incomprehensible. This may be a device for concealing the
   fact that it is actually [8528]content-free. See also [8529]numbers,
   [8530]social science number.
     _________________________________________________________________

   Node:Matrix, Next:[8531]maximum Maytag mode, Previous:[8532]math-out,
   Up:[8533]= M =

   Matrix n.

   [FidoNet] 1. What the Opus BBS software and sysops call [8534]FidoNet.
   2. Fanciful term for a [8535]cyberspace expected to emerge from
   current networking experiments (see [8536]the network). The name of
   the rather good 1999 [8537]cypherpunk movie "The Matrix" played on
   this sense, which however had been established for years before. 3.
   The totality of present-day computer networks (popularized in this
   sense by John Quarterman; rare outside academic literature).
     _________________________________________________________________

   Node:maximum Maytag mode, Next:[8538]meatspace, Previous:[8539]Matrix,
   Up:[8540]= M =

   maximum Maytag mode n.

   What a [8541]washing machine or, by extension, any disk drive is in
   when it's being used so heavily that it's shaking like an old Maytag
   with an unbalanced load. If prolonged for any length of time, can lead
   to disks becoming [8542]walking drives. In 1999 it's been some years
   since hard disks were large enough to do this, but the same phenomenon
   has recently been reported with 24X CD-ROM drives.
     _________________________________________________________________

   Node:meatspace, Next:[8543]meatware, Previous:[8544]maximum Maytag
   mode, Up:[8545]= M =

   meatspace /meet'spays/ n.

   The physical world, where the meat lives - as opposed to
   [8546]cyberspace. Hackers are actually more willing to use this term
   than `cyberspace', because it's not speculative - we already have a
   running meatspace implementation (the universe). Compare [8547]RL.
     _________________________________________________________________

   Node:meatware, Next:[8548]meeces, Previous:[8549]meatspace, Up:[8550]=
   M =

   meatware n.

   Synonym for [8551]wetware. Less common.
     _________________________________________________________________

   Node:meeces, Next:[8552]meg, Previous:[8553]meatware, Up:[8554]= M =

   meeces /mees'*z/ n.

   [TMRC] Occasional furry visitors who are not [8555]urchins. [That is,
   mice. This may no longer be in live use; it clearly derives from the
   refrain of the early-1960s cartoon character Mr. Jinx: "I hate meeces
   to pieces!" -- ESR]
     _________________________________________________________________

   Node:meg, Next:[8556]mega-, Previous:[8557]meeces, Up:[8558]= M =

   meg /meg/ n.

   See [8559]quantifiers.
     _________________________________________________________________

   Node:mega-, Next:[8560]megapenny, Previous:[8561]meg, Up:[8562]= M =

   mega- /me'g*/ pref.

   [SI] See [8563]quantifiers.
     _________________________________________________________________

   Node:megapenny, Next:[8564]MEGO, Previous:[8565]mega-, Up:[8566]= M =

   megapenny /meg'*-pen`ee/ n.

   $10,000 (1 cent * 10^6). Used semi-humorously as a unit in comparing
   computer cost and performance figures.
     _________________________________________________________________

   Node:MEGO, Next:[8567]meltdown network, Previous:[8568]megapenny,
   Up:[8569]= M =

   MEGO /me'goh/ or /mee'goh/

   [`My Eyes Glaze Over', often `Mine Eyes Glazeth (sic) Over',
   attributed to the futurologist Herman Kahn] Also `MEGO factor'. 1. n.
   A [8570]handwave intended to confuse the listener and hopefully induce
   agreement because the listener does not want to admit to not
   understanding what is going on. MEGO is usually directed at senior
   management by engineers and contains a high proportion of [8571]TLAs.
   2. excl. An appropriate response to MEGO tactics. 3. Among
   non-hackers, often refers not to behavior that causes the eyes to
   glaze, but to the eye-glazing reaction itself, which may be triggered
   by the mere threat of technical detail as effectively as by an actual
   excess of it.
     _________________________________________________________________

   Node:meltdown network, Next:[8572]meme, Previous:[8573]MEGO,
   Up:[8574]= M =

   meltdown, network n.

   See [8575]network meltdown.
     _________________________________________________________________

   Node:meme, Next:[8576]meme plague, Previous:[8577]meltdown network,
   Up:[8578]= M =

   meme /meem/ n.

   [coined by analogy with `gene', by Richard Dawkins] An idea considered
   as a [8579]replicator, esp. with the connotation that memes parasitize
   people into propagating them much as viruses do. Used esp. in the
   phrase `meme complex' denoting a group of mutually supporting memes
   that form an organized belief system, such as a religion. This lexicon
   is an (epidemiological) vector of the `hacker subculture' meme
   complex; each entry might be considered a meme. However, `meme' is
   often misused to mean `meme complex'. Use of the term connotes
   acceptance of the idea that in humans (and presumably other tool- and
   language-using sophonts) cultural evolution by selection of adaptive
   ideas has superseded biological evolution by selection of hereditary
   traits. Hackers find this idea congenial for tolerably obvious
   reasons.
     _________________________________________________________________

   Node:meme plague, Next:[8580]memetics, Previous:[8581]meme, Up:[8582]=
   M =

   meme plague n.

   The spread of a successful but pernicious [8583]meme, esp. one that
   parasitizes the victims into giving their all to propagate it.
   Astrology, BASIC, and the other guy's religion are often considered to
   be examples. This usage is given point by the historical fact that
   `joiner' ideologies like Naziism or various forms of millennarian
   Christianity have exhibited plague-like cycles of exponential growth
   followed by collapses to small reservoir populations.
     _________________________________________________________________

   Node:memetics, Next:[8584]memory farts, Previous:[8585]meme plague,
   Up:[8586]= M =

   memetics /me-met'iks/ n.

   [from [8587]meme] The study of memes. As of early 1999, this is still
   an extremely informal and speculative endeavor, though the first steps
   towards at least statistical rigor have been made by H. Keith Henson
   and others. Memetics is a popular topic for speculation among hackers,
   who like to see themselves as the architects of the new information
   ecologies in which memes live and replicate.
     _________________________________________________________________

   Node:memory farts, Next:[8588]memory leak, Previous:[8589]memetics,
   Up:[8590]= M =

   memory farts n.

   The flatulent sounds that some DOS box BIOSes (most notably AMI's)
   make when checking memory on bootup.
     _________________________________________________________________

   Node:memory leak, Next:[8591]memory smash, Previous:[8592]memory
   farts, Up:[8593]= M =

   memory leak n.

   An error in a program's dynamic-store allocation logic that causes it
   to fail to reclaim discarded memory, leading to eventual collapse due
   to memory exhaustion. Also (esp. at CMU) called [8594]core leak. These
   problems were severe on older machines with small, fixed-size address
   spaces, and special "leak detection" tools were commonly written to
   root them out. With the advent of virtual memory, it is unfortunately
   easier to be sloppy about wasting a bit of memory (although when you
   run out of memory on a VM machine, it means you've got a real leak!).
   See [8595]aliasing bug, [8596]fandango on core, [8597]smash the stack,
   [8598]precedence lossage, [8599]overrun screw, [8600]leaky heap,
   [8601]leak.
     _________________________________________________________________

   Node:memory smash, Next:[8602]menuitis, Previous:[8603]memory leak,
   Up:[8604]= M =

   memory smash n.

   [XEROX PARC] Writing through a pointer that doesn't point to what you
   think it does. This occasionally reduces your machine to a rubble of
   bits. Note that this is subtly different from (and more general than)
   related terms such as a [8605]memory leak or [8606]fandango on core
   because it doesn't imply an allocation error or overrun condition.
     _________________________________________________________________

   Node:menuitis, Next:[8607]mess-dos, Previous:[8608]memory smash,
   Up:[8609]= M =

   menuitis /men`yoo-i:'tis/ n.

   Notional disease suffered by software with an obsessively
   simple-minded menu interface and no escape. Hackers find this
   intensely irritating and much prefer the flexibility of command-line
   or language-style interfaces, especially those customizable via macros
   or a special-purpose language in which one can encode useful hacks.
   See [8610]user-obsequious, [8611]drool-proof paper, [8612]WIMP
   environment, [8613]for the rest of us.
     _________________________________________________________________

   Node:mess-dos, Next:[8614]meta, Previous:[8615]menuitis, Up:[8616]= M
   =

   mess-dos /mes-dos/ n.

   [semi-obsolescent now that DOS is] Derisory term for MS-DOS. Often
   followed by the ritual banishing "Just say No!" See [8617]MS-DOS. Most
   hackers (even many MS-DOS hackers) loathed MS-DOS for its
   single-tasking nature, its limits on application size, its nasty
   primitive interface, and its ties to IBMness and Microsoftness (see
   [8618]fear and loathing). Also `mess-loss', `messy-dos', `mess-dog',
   `mess-dross', `mush-dos', and various combinations thereof. In Ireland
   and the U.K. it is even sometimes called `Domestos' after a brand of
   toilet cleanser.
     _________________________________________________________________

   Node:meta, Next:[8619]meta bit, Previous:[8620]mess-dos, Up:[8621]= M
   =

   meta /me't*/ or /may't*/ or (Commonwealth) /mee't*/ adj.,pref.

   [from analytic philosophy] One level of description up. A
   metasyntactic variable is a variable in notation used to describe
   syntax, and meta-language is language used to describe language. This
   is difficult to explain briefly, but much hacker humor turns on
   deliberate confusion between meta-levels. See [8622]hacker humor.
     _________________________________________________________________

   Node:meta bit, Next:[8623]metasyntactic variable, Previous:[8624]meta,
   Up:[8625]= M =

   meta bit n.

   The top bit of an 8-bit character, which is on in character values
   128-255. Also called [8626]high bit, [8627]alt bit, or (rarely)
   [8628]hobbit. Some terminals and consoles (see [8629]space-cadet
   keyboard) have a META shift key. Others (including, mirabile dictu,
   keyboards on IBM PC-class machines) have an ALT key. See also
   [8630]bucky bits.

   Historical note: although in modern usage shaped by a universe of
   8-bit bytes the meta bit is invariably hex 80 (octal 0200), things
   were different on earlier machines with 36-bit words and 9-bit bytes.
   The MIT and Stanford keyboards (see [8631]space-cadet keyboard)
   generated hex 100 (octal 400) from their meta keys.
     _________________________________________________________________

   Node:metasyntactic variable, Next:[8632]MFTL, Previous:[8633]meta bit,
   Up:[8634]= M =

   metasyntactic variable n.

   A name used in examples and understood to stand for whatever thing is
   under discussion, or any random member of a class of things under
   discussion. The word [8635]foo is the [8636]canonical example. To
   avoid confusion, hackers never (well, hardly ever) use `foo' or other
   words like it as permanent names for anything. In filenames, a common
   convention is that any filename beginning with a
   metasyntactic-variable name is a [8637]scratch file that may be
   deleted at any time.

   Metasyntactic variables are so called because (1) they are variables
   in the metalanguage used to talk about programs etc; (2) they are
   variables whose values are often variables (as in usages usages like
   "the value of f(foo,bar) is the sum of foo and bar"). However, it has
   been plausibly suggested that the real reason for the term
   "metasyntactic variable" is that it sounds good.

   To some extent, the list of one's preferred metasyntactic variables is
   a cultural signature. They occur both in series (used for related
   groups of variables or objects) and as singletons. Here are a few
   common signatures:

   [8638]foo, [8639]bar, [8640]baz, [8641]quux, quuux, quuuux...:
          MIT/Stanford usage, now found everywhere (thanks largely to
          early versions of this lexicon!). At MIT (but not at Stanford),
          [8642]baz dropped out of use for a while in the 1970s and '80s.
          A common recent mutation of this sequence inserts [8643]qux
          before [8644]quux.

   bazola, ztesch:
          Stanford (from mid-'70s on).

   [8645]foo, [8646]bar, thud, grunt:
          This series was popular at CMU. Other CMU-associated variables
          include [8647]gorp.

   [8648]foo, [8649]bar, fum:
          This series is reported to be common at XEROX PARC.

   [8650]fred, jim, sheila, [8651]barney:
          See the entry for [8652]fred. These tend to be Britishisms.

   [8653]corge, [8654]grault, [8655]flarp:
          Popular at Rutgers University and among [8656]GOSMACS hackers.

   zxc, spqr, wombat:
          Cambridge University (England).

   shme
          Berkeley, GeoWorks, Ingres. Pronounced /shme/ with a short /e/.

   foo, bar, baz, bongo
          Yale, late 1970s.

   spam
          [8657]Python programmers.

   snork
          Brown University, early 1970s.

   [8658]foo, [8659]bar, zot
          Helsinki University of Technology, Finland.

   blarg, wibble
          New Zealand.

   toto, titi, tata, tutu
          France.

   pippo, pluto, paperino
          Italy. Pippo /pee'po/ and Paperino /pa-per-ee'-no/ are the
          Italian names for Goofy and Donald Duck.

   aap, noot, mies
          The Netherlands. These are the first words a child used to
          learn to spell on a Dutch spelling board.

   oogle, foogle, boogle; zork, gork, bork
          These two series (which may be continued with other initial
          consonents) are reportedly common in England, and said to go
          back to Lewis Carroll.

   Of all these, only `foo' and `bar' are universal (and [8660]baz nearly
   so). The compounds [8661]foobar and `foobaz' also enjoy very wide
   currency.

   Some jargon terms are also used as metasyntactic names; [8662]barf and
   [8663]mumble, for example. See also [8664]Commonwealth Hackish for
   discussion of numerous metasyntactic variables found in Great Britain
   and the Commonwealth.
     _________________________________________________________________

   Node:MFTL, Next:[8665]mickey, Previous:[8666]metasyntactic variable,
   Up:[8667]= M =

   MFTL /M-F-T-L/

   [abbreviation: `My Favorite Toy Language'] 1. adj. Describes a talk on
   a programming language design that is heavy on the syntax (with lots
   of BNF), sometimes even talks about semantics (e.g., type systems),
   but rarely, if ever, has any content (see [8668]content-free). More
   broadly applied to talks -- even when the topic is not a programming
   language -- in which the subject matter is gone into in unnecessary
   and meticulous detail at the sacrifice of any conceptual content.
   "Well, it was a typical MFTL talk". 2. n. Describes a language about
   which the developers are passionate (often to the point of proselytic
   zeal) but no one else cares about. Applied to the language by those
   outside the originating group. "He cornered me about type resolution
   in his MFTL."

   The first great goal in the mind of the designer of an MFTL is usually
   to write a compiler for it, then bootstrap the design away from
   contamination by lesser languages by writing a compiler for it in
   itself. Thus, the standard put-down question at an MFTL talk is "Has
   it been used for anything besides its own compiler?" On the other
   hand, a (compiled) language that cannot even be used to write its own
   compiler is beneath contempt. (The qualification has become necessary
   because of the increasing popularity of interpreted languages like
   [8669]Perl and [8670]Python. See [8671]break-even point.

   (On a related note, Doug McIlroy once proposed a test of the
   generality and utility of a language and the operating system under
   which it is compiled: "Is the output of a FORTRAN program acceptable
   as input to the FORTRAN compiler?" In other words, can you write
   programs that write programs? (See [8672]toolsmith.) Alarming numbers
   of (language, OS) pairs fail this test, particularly when the language
   is FORTRAN; aficionados are quick to point out that [8673]Unix (even
   using FORTRAN) passes it handily. That the test could ever be failed
   is only surprising to those who have had the good fortune to have
   worked only under modern systems which lack OS-supported and -imposed
   "file types".)
     _________________________________________________________________

   Node:mickey, Next:[8674]mickey mouse program, Previous:[8675]MFTL,
   Up:[8676]= M =

   mickey n.

   The resolution unit of mouse movement. It has been suggested that the
   `disney' will become a benchmark unit for animation graphics
   performance.
     _________________________________________________________________

   Node:mickey mouse program, Next:[8677]micro-, Previous:[8678]mickey,
   Up:[8679]= M =

   mickey mouse program n.

   North American equivalent of a [8680]noddy (that is, trivial) program.
   Doesn't necessarily have the belittling connotations of mainstream
   slang "Oh, that's just mickey mouse stuff!"; sometimes trivial
   programs can be very useful.
     _________________________________________________________________

   Node:micro-, Next:[8681]MicroDroid, Previous:[8682]mickey mouse
   program, Up:[8683]= M =

   micro- pref.

   1. Very small; this is the root of its use as a quantifier prefix. 2.
   A quantifier prefix, calling for multiplication by 10^(-6) (see
   [8684]quantifiers). Neither of these uses is peculiar to hackers, but
   hackers tend to fling them both around rather more freely than is
   countenanced in standard English. It is recorded, for example, that
   one CS professor used to characterize the standard length of his
   lectures as a microcentury -- that is, about 52.6 minutes (see also
   [8685]attoparsec, [8686]nanoacre, and especially
   [8687]microfortnight). 3. Personal or human-scale -- that is, capable
   of being maintained or comprehended or manipulated by one human being.
   This sense is generalized from `microcomputer', and is esp. used in
   contrast with `macro-' (the corresponding Greek prefix meaning
   `large'). 4. Local as opposed to global (or [8688]macro-). Thus a
   hacker might say that buying a smaller car to reduce pollution only
   solves a microproblem; the macroproblem of getting to work might be
   better solved by using mass transit, moving to within walking
   distance, or (best of all) telecommuting.
     _________________________________________________________________

   Node:MicroDroid, Next:[8689]microfloppies, Previous:[8690]micro-,
   Up:[8691]= M =

   MicroDroid n.

   [Usenet] A Microsoft employee, esp. one who posts to various
   operating-system advocacy newsgroups. MicroDroids post follow-ups to
   any messages critical of Microsoft's operating systems, and often end
   up sounding like visiting fundamentalist missionaries. See also
   [8692]astroturfing; compare [8693]microserf.
     _________________________________________________________________

   Node:microfloppies, Next:[8694]microfortnight,
   Previous:[8695]MicroDroid, Up:[8696]= M =

   microfloppies n.

   3.5-inch floppies, as opposed to 5.25-inch [8697]vanilla or
   mini-floppies and the now-obsolete 8-inch variety. This term may be
   headed for obsolescence as 5.25-inchers pass out of use, only to be
   revived if anybody floats a sub-3-inch floppy standard. See
   [8698]stiffy, [8699]minifloppies.
     _________________________________________________________________

   Node:microfortnight, Next:[8700]microLenat,
   Previous:[8701]microfloppies, Up:[8702]= M =

   microfortnight n.

   1/1000000 of the fundamental unit of time in the
   Furlong/Firkin/Fortnight system of measurement; 1.2096 sec. (A furlong
   is 1/8th of a mile; a firkin is 1/4th of a barrel; the mass unit of
   the system is taken to be a firkin of water). The VMS operating system
   has a lot of tuning parameters that you can set with the SYSGEN
   utility, and one of these is TIMEPROMPTWAIT, the time the system will
   wait for an operator to set the correct date and time at boot if it
   realizes that the current value is bogus. This time is specified in
   microfortnights!

   Multiple uses of the millifortnight (about 20 minutes) and
   [8703]nanofortnight have also been reported.
     _________________________________________________________________

   Node:microLenat, Next:[8704]microReid, Previous:[8705]microfortnight,
   Up:[8706]= M =

   microLenat /mi:`-kroh-len'-*t/ n.

   The unit of [8707]bogosity. consensus is that this is the largest unit
   practical for everyday use. The microLenat, originally invented by
   David Jefferson, was promulgated as an attack against noted computer
   scientist Doug Lenat by a [8708]tenured graduate student at CMU. Doug
   had failed the student on an important exam because the student gave
   only "AI is bogus" as his answer to the questions. The slur is
   generally considered unmerited, but it has become a running gag
   nevertheless. Some of Doug's friends argue that of course a microLenat
   is bogus, since it is only one millionth of a Lenat. Others have
   suggested that the unit should be redesignated after the grad student,
   as the microReid.
     _________________________________________________________________

   Node:microReid, Next:[8709]microserf, Previous:[8710]microLenat,
   Up:[8711]= M =

   microReid /mi:'kroh-reed/ n.

   See [8712]microLenat.
     _________________________________________________________________

   Node:microserf, Next:[8713]Microsloth Windows,
   Previous:[8714]microReid, Up:[8715]= M =

   microserf /mi:'kro-s*rf/

   [popularized, though not originated, by Douglas Copeland's book
   "Microserfs"] A programmer at [8716]Microsoft, especially a low-level
   coder with little chance of fame or fortune. Compare [8717]MicroDroid.
     _________________________________________________________________

   Node:Microsloth Windows, Next:[8718]Microsoft,
   Previous:[8719]microserf, Up:[8720]= M =

   Microsloth Windows /mi:'kroh-sloth` win'dohz/ n.

   (Variants combine {Microshift, Macroshaft, Microsuck} with {Windoze,
   WinDOS}. Hackerism(s) for `Microsoft Windows'. A thirty-two bit
   extension and graphical shell to a sixteen bit patch to an eight bit
   operating system originally coded for a four bit microprocessor which
   was written by a two-bit company that can't stand one bit of
   competition. Also just called `Windoze', with the implication that you
   can fall asleep waiting for it to do anything; the latter term is
   extremely common on Usenet. See [8721]Black Screen of Death and
   [8722]Blue Screen of Death; compare [8723]X, [8724]sun-stools.
     _________________________________________________________________

   Node:Microsoft, Next:[8725]micros~1, Previous:[8726]Microsloth
   Windows, Up:[8727]= M =

   Microsoft

   The new [8728]Evil Empire (the old one was [8729]IBM). The basic
   complaints are, as formerly with IBM, that (a) their system designs
   are horrible botches, (b) we can't get [8730]source to fix them, and
   (c) they throw their weight around a lot. See also [8731]Halloween
   Documents.
     _________________________________________________________________

   Node:micros~1, Next:[8732]middle-endian, Previous:[8733]Microsoft,
   Up:[8734]= M =

   micros~1

   An abbreviation of the full name [8735]Microsoft resembling the rather
   [8736]bogus way Windows 9x's VFAT filesystem truncates long file names
   to fit in the MS-DOS 8+3 scheme (the real filename is stored
   elsewhere). If other files start with the same prefix, they'll be
   called micros~2 and so on, causing lots of problems with backups and
   other routine system-administration problems. During the US Antitrust
   trial against Microsoft the names Micros~1 ans Micros~2 were suggested
   for the two companies that would exist after a break-up.
     _________________________________________________________________

   Node:middle-endian, Next:[8737]middle-out implementation,
   Previous:[8738]micros~1, Up:[8739]= M =

   middle-endian adj.

   Not [8740]big-endian or [8741]little-endian. Used of perverse byte
   orders such as 3-4-1-2 or 2-1-4-3, occasionally found in the
   packed-decimal formats of minicomputer manufacturers who shall remain
   nameless. See [8742]NUXI problem. Non-US hackers use this term to
   describe the American mm/dd/yy style of writing dates (Europeans write
   little-endian dd/mm/yy, and Japanese use big-endian yy/mm/dd for
   Western dates).
     _________________________________________________________________

   Node:middle-out implementation, Next:[8743]milliLampson,
   Previous:[8744]middle-endian, Up:[8745]= M =

   middle-out implementation

   See [8746]bottom-up implementation.
     _________________________________________________________________

   Node:milliLampson, Next:[8747]minifloppies, Previous:[8748]middle-out
   implementation, Up:[8749]= M =

   milliLampson /mil'*-lamp`sn/ n.

   A unit of talking speed, abbreviated mL. Most people run about 200
   milliLampsons. The eponymous Butler Lampson (a CS theorist and systems
   implementor highly regarded among hackers) goes at 1000. A few people
   speak faster. This unit is sometimes used to compare the (sometimes
   widely disparate) rates at which people can generate ideas and
   actually emit them in speech. For example, noted computer architect C.
   Gordon Bell (designer of the PDP-11) is said, with some awe, to think
   at about 1200 mL but only talk at about 300; he is frequently reduced
   to fragments of sentences as his mouth tries to keep up with his
   speeding brain.
     _________________________________________________________________

   Node:minifloppies, Next:[8750]MIPS, Previous:[8751]milliLampson,
   Up:[8752]= M =

   minifloppies n.,obs.

   5.25-inch floppy disks, as opposed to 3.5-inch or [8753]microfloppies
   and the long-obsolescent 8-inch variety (if there is ever a smaller
   size, they will undoubtedly be tagged `nanofloppies'). At one time,
   this term was a trademark of Shugart Associates for their SA-400
   minifloppy drive. Nobody paid any attention. See [8754]stiffy.
     _________________________________________________________________

   Node:MIPS, Next:[8755]misbug, Previous:[8756]minifloppies, Up:[8757]=
   M =

   MIPS /mips/ n.

   [abbreviation] 1. A measure of computing speed; formally, `Million
   Instructions Per Second' (that's 10^6 per second, not 2^(20)!); often
   rendered by hackers as `Meaningless Indication of Processor Speed' or
   in other unflattering ways, such as `Meaningless Information Provided
   by Salesmen'. This joke expresses an attitude nearly universal among
   hackers about the value of most [8758]benchmark claims, said attitude
   being one of the great cultural divides between hackers and
   [8759]marketroids (see also [8760]BogoMIPS). The singular is sometimes
   `1 MIP' even though this is clearly etymologically wrong. See also
   [8761]KIPS and [8762]GIPS. 2. Computers, especially large computers,
   considered abstractly as sources of [8763]computrons. "This is just a
   workstation; the heavy MIPS are hidden in the basement." 3. The
   corporate name of a particular RISC-chip company; among other things,
   they designed the processor chips used in [8764]DEC's 3100 workstation
   series. 4. Acronym for `Meaningless Information per Second' (a joke,
   prob. from sense 1).
     _________________________________________________________________

   Node:misbug, Next:[8765]misfeature, Previous:[8766]MIPS, Up:[8767]= M
   =

   misbug /mis-buhg/ n.

   [MIT; rare (like its referent)] An unintended property of a program
   that turns out to be useful; something that should have been a
   [8768]bug but turns out to be a [8769]feature. Compare [8770]green
   lightning. See [8771]miswart.
     _________________________________________________________________

   Node:misfeature, Next:[8772]Missed'em-five, Previous:[8773]misbug,
   Up:[8774]= M =

   misfeature /mis-fee'chr/ or /mis'fee`chr/ n.

   [common] A feature that eventually causes lossage, possibly because it
   is not adequate for a new situation that has evolved. Since it results
   from a deliberate and properly implemented feature, a misfeature is
   not a bug. Nor is it a simple unforeseen side effect; the term implies
   that the feature in question was carefully planned, but its long-term
   consequences were not accurately or adequately predicted (which is
   quite different from not having thought ahead at all). A misfeature
   can be a particularly stubborn problem to resolve, because fixing it
   usually involves a substantial philosophical change to the structure
   of the system involved.

   Many misfeatures (especially in user-interface design) arise because
   the designers/implementors mistake their personal tastes for laws of
   nature. Often a former feature becomes a misfeature because trade-offs
   were made whose parameters subsequently change (possibly only in the
   judgment of the implementors). "Well, yeah, it is kind of a misfeature
   that file names are limited to six characters, but the original
   implementors wanted to save directory space and we're stuck with it
   for now."
     _________________________________________________________________

   Node:Missed'em-five, Next:[8775]missile address,
   Previous:[8776]misfeature, Up:[8777]= M =

   Missed'em-five n.

   Pejorative hackerism for AT&T System V Unix, generally used by
   [8778]BSD partisans in a bigoted mood. (The synonym `SysVile' is also
   encountered.) See [8779]software bloat, [8780]Berzerkeley.
     _________________________________________________________________

   Node:missile address, Next:[8781]miswart,
   Previous:[8782]Missed'em-five, Up:[8783]= M =

   missile address n.

   See [8784]ICBM address.
     _________________________________________________________________

   Node:miswart, Next:[8785]MMF, Previous:[8786]missile address,
   Up:[8787]= M =

   miswart /mis-wort/ n.

   [from [8788]wart by analogy with [8789]misbug] A [8790]feature that
   superficially appears to be a [8791]wart but has been determined to be
   the [8792]Right Thing. For example, in some versions of the
   [8793]EMACS text editor, the `transpose characters' command exchanges
   the character under the cursor with the one before it on the screen,
   except when the cursor is at the end of a line, in which case the two
   characters before the cursor are exchanged. While this behavior is
   perhaps surprising, and certainly inconsistent, it has been found
   through extensive experimentation to be what most users want. This
   feature is a miswart.
     _________________________________________________________________

   Node:MMF, Next:[8794]mobo, Previous:[8795]miswart, Up:[8796]= M =

   MMF //

   [Usenet; common] Abbreviation: "Make Money Fast". Refers to any kind
   of scheme which promises participants large profits with little or no
   risk or effort. Typically, it is a some kind of multi-level marketing
   operation which involves recruiting more members, or an illegal
   pyramid scam. The term is also used to refer to any kind of spam which
   promotes this. For more information, see the [8797]Make Money Fast
   Myth Page.
     _________________________________________________________________

   Node:mobo, Next:[8798]moby, Previous:[8799]MMF, Up:[8800]= M =

   mobo /moh'bo/

   Written and (rarely) spoken contraction of "motherboard"
     _________________________________________________________________

   Node:moby, Next:[8801]mockingbird, Previous:[8802]mobo, Up:[8803]= M =

   moby /moh'bee/

   [MIT: seems to have been in use among model railroad fans years ago.
   Derived from Melville's "Moby Dick" (some say from `Moby Pickle'). Now
   common.] 1. adj. Large, immense, complex, impressive. "A Saturn V
   rocket is a truly moby frob." "Some MIT undergrads pulled off a moby
   hack at the Harvard-Yale game." (See [8804]Appendix A for discussion.)
   2. n. obs. The maximum address space of a machine (see below). For a
   680[234]0 or VAX or most modern 32-bit architectures, it is
   4,294,967,296 8-bit bytes (4 gigabytes). 3. A title of address (never
   of third-person reference), usually used to show admiration, respect,
   and/or friendliness to a competent hacker. "Greetings, moby Dave.
   How's that address-book thing for the Mac going?" 4. adj. In
   backgammon, doubles on the dice, as in `moby sixes', `moby ones', etc.
   Compare this with [8805]bignum (sense 3): double sixes are both
   bignums and moby sixes, but moby ones are not bignums (the use of
   `moby' to describe double ones is sarcastic). Standard emphatic forms:
   `Moby foo', `moby win', `moby loss'. `Foby moo': a spoonerism due to
   Richard Greenblatt. 5. The largest available unit of something which
   is available in discrete increments. Thus, ordering a "moby Coke" at
   the local fast-food joint is not just a request for a large Coke, it's
   an explicit request for the largest size they sell.

   This term entered hackerdom with the Fabritek 256K memory added to the
   MIT AI PDP-6 machine, which was considered unimaginably huge when it
   was installed in the 1960s (at a time when a more typical memory size
   for a timesharing system was 72 kilobytes). Thus, a moby is
   classically 256K 36-bit words, the size of a PDP-6 or PDP-10 moby.
   Back when address registers were narrow the term was more generally
   useful, because when a computer had virtual memory mapping, it might
   actually have more physical memory attached to it than any one program
   could access directly. One could then say "This computer has 6 mobies"
   meaning that the ratio of physical memory to address space is 6,
   without having to say specifically how much memory there actually is.
   That in turn implied that the computer could timeshare six
   `full-sized' programs without having to swap programs between memory
   and disk.

   Nowadays the low cost of processor logic means that address spaces are
   usually larger than the most physical memory you can cram onto a
   machine, so most systems have much less than one theoretical `native'
   moby of [8806]core. Also, more modern memory-management techniques
   (esp. paging) make the `moby count' less significant. However, there
   is one series of widely-used chips for which the term could stand to
   be revived -- the Intel 8088 and 80286 with their incredibly
   [8807]brain-damaged segmented-memory designs. On these, a `moby' would
   be the 1-megabyte address span of a segment/offset pair (by
   coincidence, a PDP-10 moby was exactly 1 megabyte of 9-bit bytes).
     _________________________________________________________________

   Node:mockingbird, Next:[8808]mod, Previous:[8809]moby, Up:[8810]= M =

   mockingbird n.

   Software that intercepts communications (especially login
   transactions) between users and hosts and provides system-like
   responses to the users while saving their responses (especially
   account IDs and passwords). A special case of [8811]Trojan horse.
     _________________________________________________________________

   Node:mod, Next:[8812]mode, Previous:[8813]mockingbird, Up:[8814]= M =

   mod vt.,n.

   [very common] 1. Short for `modify' or `modification'. Very commonly
   used -- in fact the full terms are considered markers that one is
   being formal. The plural `mods' is used esp. with reference to bug
   fixes or minor design changes in hardware or software, most esp. with
   respect to [8815]patch sets or a [8816]diff. 2. Short for [8817]modulo
   but used only for its techspeak sense.
     _________________________________________________________________

   Node:mode, Next:[8818]mode bit, Previous:[8819]mod, Up:[8820]= M =

   mode n.

   [common] A general state, usually used with an adjective describing
   the state. Use of the word `mode' rather than `state' implies that the
   state is extended over time, and probably also that some activity
   characteristic of that state is being carried out. "No time to hack;
   I'm in thesis mode." In its jargon sense, `mode' is most often
   attributed to people, though it is sometimes applied to programs and
   inanimate objects. In particular, see [8821]hack mode, [8822]day mode,
   [8823]night mode, [8824]demo mode, [8825]fireworks mode, and
   [8826]yoyo mode; also [8827]talk mode.

   One also often hears the verbs `enable' and `disable' used in
   connection with jargon modes. Thus, for example, a sillier way of
   saying "I'm going to crash" is "I'm going to enable crash mode now".
   One might also hear a request to "disable flame mode, please".

   In a usage much closer to techspeak, a mode is a special state that
   certain user interfaces must pass into in order to perform certain
   functions. For example, in order to insert characters into a document
   in the Unix editor vi, one must type the "i" key, which invokes the
   "Insert" command. The effect of this command is to put vi into "insert
   mode", in which typing the "i" key has a quite different effect (to
   wit, it inserts an "i" into the document). One must then hit another
   special key, "ESC", in order to leave "insert mode". Nowadays, modeful
   interfaces are generally considered [8828]losing but survive in quite
   a few widely used tools built in less enlightened times.
     _________________________________________________________________

   Node:mode bit, Next:[8829]modulo, Previous:[8830]mode, Up:[8831]= M =

   mode bit n.

   [common] A [8832]flag, usually in hardware, that selects between two
   (usually quite different) modes of operation. The connotations are
   different from [8833]flag bit in that mode bits are mainly written
   during a boot or set-up phase, are seldom explicitly read, and seldom
   change over the lifetime of an ordinary program. The classic example
   was the EBCDIC-vs.-ASCII bit (#12) of the Program Status Word of the
   IBM 360.
     _________________________________________________________________

   Node:modulo, Next:[8834]molly-guard, Previous:[8835]mode bit,
   Up:[8836]= M =

   modulo /mod'yu-loh/ prep.

   Except for. An overgeneralization of mathematical terminology; one can
   consider saying that 4 equals 22 except for the 9s (4 = 22 mod 9).
   "Well, LISP seems to work okay now, modulo that [8837]GC bug." "I feel
   fine today modulo a slight headache."
     _________________________________________________________________

   Node:molly-guard, Next:[8838]Mongolian Hordes technique,
   Previous:[8839]modulo, Up:[8840]= M =

   molly-guard /mol'ee-gard/ n.

   [University of Illinois] A shield to prevent tripping of some
   [8841]Big Red Switch by clumsy or ignorant hands. Originally used of
   the plexiglass covers improvised for the BRS on an IBM 4341 after a
   programmer's toddler daughter (named Molly) frobbed it twice in one
   day. Later generalized to covers over stop/reset switches on disk
   drives and networking equipment. In hardware catalogues, you'll see
   the much less interesting description "guarded button".
     _________________________________________________________________

   Node:Mongolian Hordes technique, Next:[8842]monkey up,
   Previous:[8843]molly-guard, Up:[8844]= M =

   Mongolian Hordes technique n.

   [poss. from the Sixties counterculture expression `Mongolian
   clusterfuck' for a public orgy] Development by [8845]gang bang.
   Implies that large numbers of inexperienced programmers are being put
   on a job better performed by a few skilled ones (but see
   [8846]bazaar). Also called `Chinese Army technique'; see also
   [8847]Brooks's Law.
     _________________________________________________________________

   Node:monkey up, Next:[8848]monkey scratch, Previous:[8849]Mongolian
   Hordes technique, Up:[8850]= M =

   monkey up vt.

   To hack together hardware for a particular task, especially a one-shot
   job. Connotes an extremely [8851]crufty and consciously temporary
   solution. Compare [8852]hack up, [8853]kluge up, [8854]cruft together.
     _________________________________________________________________

   Node:monkey scratch, Next:[8855]monstrosity, Previous:[8856]monkey up,
   Up:[8857]= M =

   monkey, scratch n.

   See [8858]scratch monkey.
     _________________________________________________________________

   Node:monstrosity, Next:[8859]monty, Previous:[8860]monkey scratch,
   Up:[8861]= M =

   monstrosity

   1. n. A ridiculously [8862]elephantine program or system, esp. one
   that is buggy or only marginally functional. 2. adj. The quality of
   being monstrous (see `Overgeneralization' in the discussion of
   jargonification). See also [8863]baroque.
     _________________________________________________________________

   Node:monty, Next:[8864]Moof, Previous:[8865]monstrosity, Up:[8866]= M
   =

   monty /mon'tee/ n.

   1. [US Geological Survey] A program with a ludicrously complex user
   interface written to perform extremely trivial tasks. An example would
   be a menu-driven, button clicking, pulldown, pop-up windows program
   for listing directories. The original monty was an infamous
   weather-reporting program, Monty the Amazing Weather Man, written at
   the USGS. Monty had a widget-packed X-window interface with over 200
   buttons; and all monty actually did was [8867]FTP files off the
   network. 2. [Great Britain; commonly capitalized as `Monty' or as `the
   Full Monty'] 16 megabytes of memory, when fitted to an IBM-PC or
   compatible. A standard PC-compatible using the AT- or ISA-bus with a
   normal BIOS cannot access more than 16 megabytes of RAM. Generally
   used of a PC, Unix workstation, etc. to mean `fully populated with'
   memory, disk-space or some other desirable resource. This usage may be
   related to a TV commercial for Del Monte fruit juice, in which one of
   the characters insisted on "the full Del Monte"; but see the World
   Wide Words article [8868]"The Full Monty" for discussion of the rather
   complex etymology that may lie behind this. Compare American
   [8869]moby.
     _________________________________________________________________

   Node:Moof, Next:[8870]Moore's Law, Previous:[8871]monty, Up:[8872]= M
   =

   Moof /moof/

   [Macintosh users] 1. n. The call of a semi-legendary creature,
   properly called the [8873]dogcow. (Some previous versions of this
   entry claimed, incorrectly, that Moof was the name of the creature.)
   2. adj. Used to flag software that's a hack, something untested and on
   the edge. On one Apple CD-ROM, certain folders such as "Tools & Apps
   (Moof!)" and "Development Platforms (Moof!)", are so marked to
   indicate that they contain software not fully tested or sanctioned by
   the powers that be. When you open these folders you cross the boundary
   into hackerland. 3. v. On the Microsoft Network, the term `moof' has
   gained popularity as a verb meaning `to be suddenly disconnected by
   the system'. One might say "I got moofed".
     _________________________________________________________________

   Node:Moore's Law, Next:[8874]moose call, Previous:[8875]Moof,
   Up:[8876]= M =

   Moore's Law /morz law/ prov.

   The observation that the logic density of silicon integrated circuits
   has closely followed the curve (bits per square inch) = 2^(t - 1962)
   where t is time in years; that is, the amount of information storable
   on a given amount of silicon has roughly doubled every year since the
   technology was invented. This relation, first uttered in 1964 by
   semiconductor engineer Gordon Moore (who co-founded Intel four years
   later) held until the late 1970s, at which point the doubling period
   slowed to 18 months. The doubling period remained at that value
   through time of writing (late 1999). Moore's Law is apparently
   self-fulfilling. The implication is that somebody, somewhere is going
   to be able to build a better chip than you if you rest on your
   laurels, so you'd better start pushing hard on the problem. See also
   [8877]Parkinson's Law of Data and [8878]Gates's Law.
     _________________________________________________________________

   Node:moose call, Next:[8879]moria, Previous:[8880]Moore's Law,
   Up:[8881]= M =

   moose call n.

   See [8882]whalesong.
     _________________________________________________________________

   Node:moria, Next:[8883]MOTAS, Previous:[8884]moose call, Up:[8885]= M
   =

   moria /mor'ee-*/ n.

   Like [8886]nethack and [8887]rogue, one of the large PD
   Dungeons-and-Dragons-like simulation games, available for a wide range
   of machines and operating systems. The name is from Tolkien's Mines of
   Moria; compare [8888]elder days, [8889]elvish. The game is extremely
   addictive and a major consumer of time better used for hacking. See
   also [8890]nethack, [8891]rogue, [8892]Angband.
     _________________________________________________________________

   Node:MOTAS, Next:[8893]MOTOS, Previous:[8894]moria, Up:[8895]= M =

   MOTAS /moh-tahz/ n.

   [Usenet: Member Of The Appropriate Sex, after [8896]MOTOS and
   [8897]MOTSS] A potential or (less often) actual sex partner. See also
   [8898]SO.
     _________________________________________________________________

   Node:MOTOS, Next:[8899]MOTSS, Previous:[8900]MOTAS, Up:[8901]= M =

   MOTOS /moh-tohs/ n.

   [acronym from the 1970 U.S. census forms via Usenet: Member Of The
   Opposite Sex] A potential or (less often) actual sex partner. See
   [8902]MOTAS, [8903]MOTSS, [8904]SO. Less common than MOTSS or
   [8905]MOTAS, which has largely displaced it.
     _________________________________________________________________

   Node:MOTSS, Next:[8906]mouse ahead, Previous:[8907]MOTOS, Up:[8908]= M
   =

   MOTSS /mots/ or /M-O-T-S-S/ n.

   [from the 1970 U.S. census forms via Usenet] Member Of The Same Sex,
   esp. one considered as a possible sexual partner. The gay-issues
   newsgroup on Usenet is called soc.motss. See [8909]MOTOS and
   [8910]MOTAS, which derive from it. See also [8911]SO.
     _________________________________________________________________

   Node:mouse ahead, Next:[8912]mouse around, Previous:[8913]MOTSS,
   Up:[8914]= M =

   mouse ahead vi.

   Point-and-click analog of `type ahead'. To manipulate a computer's
   pointing device (almost always a mouse in this usage, but not
   necessarily) and its selection or command buttons before a computer
   program is ready to accept such input, in anticipation of the program
   accepting the input. Handling this properly is rare, but it can help
   make a [8915]WIMP environment much more usable, assuming the users are
   familiar with the behavior of the user interface.
     _________________________________________________________________

   Node:mouse around, Next:[8916]mouse belt, Previous:[8917]mouse ahead,
   Up:[8918]= M =

   mouse around vi.

   To explore public portions of a large system, esp. a network such as
   Internet via [8919]FTP or [8920]TELNET, looking for interesting stuff
   to [8921]snarf.
     _________________________________________________________________

   Node:mouse belt, Next:[8922]mouse droppings, Previous:[8923]mouse
   around, Up:[8924]= M =

   mouse belt n.

   See [8925]rat belt.
     _________________________________________________________________

   Node:mouse droppings, Next:[8926]mouse elbow, Previous:[8927]mouse
   belt, Up:[8928]= M =

   mouse droppings n.

   [MS-DOS] Pixels (usually single) that are not properly restored when
   the mouse pointer moves away from a particular location on the screen,
   producing the appearance that the mouse pointer has left droppings
   behind. The major causes for this problem are programs that write to
   the screen memory corresponding to the mouse pointer's current
   location without hiding the mouse pointer first, and mouse drivers
   that do not quite support the graphics mode in use.
     _________________________________________________________________

   Node:mouse elbow, Next:[8929]mouso, Previous:[8930]mouse droppings,
   Up:[8931]= M =

   mouse elbow n.

   A tennis-elbow-like fatigue syndrome resulting from excessive use of a
   [8932]WIMP environment. Similarly, `mouse shoulder'; GLS reports that
   he used to get this a lot before he taught himself to be
   ambimoustrous.
     _________________________________________________________________

   Node:mouso, Next:[8933]MS-DOS, Previous:[8934]mouse elbow, Up:[8935]=
   M =

   mouso /mow'soh/ n.

   [by analogy with `typo'] An error in mouse usage resulting in an
   inappropriate selection or graphic garbage on the screen. Compare
   [8936]thinko, [8937]braino.
     _________________________________________________________________

   Node:MS-DOS, Next:[8938]mu, Previous:[8939]mouso, Up:[8940]= M =

   MS-DOS /M-S-dos/ n.

   [MicroSoft Disk Operating System] A [8941]clone of [8942]CP/M for the
   8088 crufted together in 6 weeks by hacker Tim Paterson at Seattle
   Computer Products, who called the original QDOS (Quick and Dirty
   Operating System) and is said to have regretted it ever since.
   Microsoft licensed QDOS order to have something to demo for IBM on
   time, and the rest is history. Numerous features, including vaguely
   Unix-like but rather broken support for subdirectories, I/O
   redirection, and pipelines, were hacked into Microsoft's 2.0 and
   subsequent versions; as a result, there are two or more incompatible
   versions of many system calls, and MS-DOS programmers can never agree
   on basic things like what character to use as an option switch or
   whether to be case-sensitive. The resulting appalling mess is now the
   highest-unit-volume OS in history. Often known simply as DOS, which
   annoys people familiar with other similarly abbreviated operating
   systems (the name goes back to the mid-1960s, when it was attached to
   IBM's first disk operating system for the 360). The name further
   annoys those who know what the term [8943]operating system does (or
   ought to) connote; DOS is more properly a set of relatively simple
   interrupt services. Some people like to pronounce DOS like "dose", as
   in "I don't work on dose, man!", or to compare it to a dose of
   brain-damaging drugs (a slogan button in wide circulation among
   hackers exhorts: "MS-DOS: Just say No!"). See [8944]mess-dos,
   [8945]ill-behaved.
     _________________________________________________________________

   Node:mu, Next:[8946]MUD, Previous:[8947]MS-DOS, Up:[8948]= M =

   mu /moo/

   The correct answer to the classic trick question "Have you stopped
   beating your wife yet?". Assuming that you have no wife or you have
   never beaten your wife, the answer "yes" is wrong because it implies
   that you used to beat your wife and then stopped, but "no" is worse
   because it suggests that you have one and are still beating her.
   According to various Discordians and Douglas Hofstadter the correct
   answer is usually "mu", a Japanese word alleged to mean "Your question
   cannot be answered because it depends on incorrect assumptions".
   Hackers tend to be sensitive to logical inadequacies in language, and
   many have adopted this suggestion with enthusiasm. The word `mu' is
   actually from Chinese, meaning `nothing'; it is used in mainstream
   Japanese in that sense. Native speakers do not recognize the
   Discordian question-denying use, which almost certainly derives from
   overgeneralization of the answer in the following well-known Rinzai
   Zen [8949]koan:

     A monk asked Joshu, "Does a dog have the Buddha nature?" Joshu
     retorted, "Mu!"

   See also [8950]has the X nature, [8951]Some AI Koans, and Douglas
   Hofstadter's "Gödel, Escher, Bach: An Eternal Golden Braid" (pointer
   in the [8952]Bibliography in Appendix C.
     _________________________________________________________________

   Node:MUD, Next:[8953]muddie, Previous:[8954]mu, Up:[8955]= M =

   MUD /muhd/ n.

   [acronym, Multi-User Dungeon; alt. Multi-User Dimension] 1. A class of
   [8956]virtual reality experiments accessible via the Internet. These
   are real-time chat forums with structure; they have multiple
   `locations' like an adventure game, and may include combat, traps,
   puzzles, magic, a simple economic system, and the capability for
   characters to build more structure onto the database that represents
   the existing world. 2. vi. To play a MUD. The acronym MUD is often
   lowercased and/or verbed; thus, one may speak of `going mudding', etc.

   Historically, MUDs (and their more recent progeny with names of MU-
   form) derive from a hack by Richard Bartle and Roy Trubshaw on the
   University of Essex's DEC-10 in the early 1980s; descendants of that
   game still exist today and are sometimes generically called
   BartleMUDs. There is a widespread myth (repeated, unfortunately, by
   earlier versions of this lexicon) that the name MUD was trademarked to
   the commercial MUD run by Bartle on British Telecom (the motto: "You
   haven't lived 'til you've died on MUD!"); however, this is false --
   Richard Bartle explicitly placed `MUD' in the public domain in 1985.
   BT was upset at this, as they had already printed trademark claims on
   some maps and posters, which were released and created the myth.

   Students on the European academic networks quickly improved on the MUD
   concept, spawning several new MUDs (VAXMUD, AberMUD, LPMUD). Many of
   these had associated bulletin-board systems for social interaction.
   Because these had an image as `research' they often survived
   administrative hostility to BBSs in general. This, together with the
   fact that Usenet feeds were often spotty and difficult to get in the
   U.K., made the MUDs major foci of hackish social interaction there.

   AberMUD and other variants crossed the Atlantic around 1988 and
   quickly gained popularity in the U.S.; they became nuclei for large
   hacker communities with only loose ties to traditional hackerdom (some
   observers see parallels with the growth of Usenet in the early 1980s).
   The second wave of MUDs (TinyMUD and variants) tended to emphasize
   social interaction, puzzles, and cooperative world-building as opposed
   to combat and competition (in writing, these social MUDs are sometimes
   referred to as `MU*', with `MUD' implicitly reserved for the more
   game-oriented ones). By 1991, over 50% of MUD sites were of a third
   major variety, LPMUD, which synthesizes the combat/puzzle aspects of
   AberMUD and older systems with the extensibility of TinyMud. In 1996
   the cutting edge of the technology is Pavel Curtis's MOO, even more
   extensible using a built-in object-oriented language. The trend toward
   greater programmability and flexibility will doubtless continue.

   The state of the art in MUD design is still moving very rapidly, with
   new simulation designs appearing (seemingly) every month. Around 1991
   there was an unsuccessful movement to deprecate the term [8957]MUD
   itself, as newer designs exhibit an exploding variety of names
   corresponding to the different simulation styles being explored. It
   survived. See also [8958]bonk/oif, [8959]FOD, [8960]link-dead,
   [8961]mudhead, [8962]talk mode.
     _________________________________________________________________

   Node:muddie, Next:[8963]mudhead, Previous:[8964]MUD, Up:[8965]= M =

   muddie n.

   Syn. [8966]mudhead. More common in Great Britain, possibly because
   system administrators there like to mutter "bloody muddies" when
   annoyed at the species.
     _________________________________________________________________

   Node:mudhead, Next:[8967]muggle, Previous:[8968]muddie, Up:[8969]= M =

   mudhead n.

   Commonly used to refer to a [8970]MUD player who eats, sleeps, and
   breathes MUD. Mudheads have been known to fail their degrees, drop
   out, etc., with the consolation, however, that they made wizard level.
   When encountered in person, on a MUD, or in a chat system, all a
   mudhead will talk about is three topics: the tactic, character, or
   wizard that is supposedly always unfairly stopping him/her from
   becoming a wizard or beating a favorite MUD; why the specific game
   he/she has experience with is so much better than any other; and the
   MUD he or she is writing or going to write because his/her design
   ideas are so much better than in any existing MUD. See also
   [8971]wannabee.

   To the anthropologically literate, this term may recall the Zuni/Hopi
   legend of the mudheads or `koyemshi', mythical half-formed children of
   an unnatural union. Figures representing them act as clowns in Zuni
   sacred ceremonies. Others may recall the `High School Madness'
   sequence from the Firesign Theatre album "Don't Crush That Dwarf, Hand
   Me the Pliers", in which there is a character named "Mudhead".
     _________________________________________________________________

   Node:muggle, Next:[8972]multician, Previous:[8973]mudhead, Up:[8974]=
   M =

   muggle

   [from J.K. Rowling's `Harry Potter' books, 1998] A non-[8975]wizard.
   Not as disparaging as [8976]luser; implies vague pity rather than
   contempt. In the universe of Rowling's enormously (and deservedly)
   popular children's series, muggles and wizards inhabit the same modern
   world, but each group is ignorant of the commonplaces of the others'
   existence - most muggles are unaware that wizards exist, and wizards
   (used to magical ways of doing everything) are perplexed and
   fascinated by muggle artifacts.

   In retrospect it seems completely inevitable that hackers would adopt
   this metaphor, and in hacker usage it readily forms compounds such as
   `muggle-friendly'. Compare [8977]luser, [8978]mundane.
     _________________________________________________________________

   Node:multician, Next:[8979]Multics, Previous:[8980]muggle, Up:[8981]=
   M =

   multician /muhl-ti'shn/ n.

   [coined at Honeywell, ca. 1970] Competent user of [8982]Multics.
   Perhaps oddly, no one has ever promoted the analogous `Unician'.
     _________________________________________________________________

   Node:Multics, Next:[8983]multitask, Previous:[8984]multician,
   Up:[8985]= M =

   Multics /muhl'tiks/ n.

   [from "MULTiplexed Information and Computing Service"] An early
   time-sharing [8986]operating system co-designed by a consortium
   including MIT, GE, and Bell Laboratories as a successor to [8987]CTSS.
   The design was first presented in 1965, planned for operation in 1967,
   first operational in 1969, and took several more years to achieve
   respectable performance and stability.

   Multics was very innovative for its time -- among other things, it
   provided a hierarchical file system with access control on individual
   files and introduced the idea of treating all devices uniformly as
   special files. It was also the first OS to run on a symmetric
   multiprocessor, and the only general-purpose system to be awarded a B2
   security rating by the NSA (see [8988]Orange Book).

   Bell Labs left the development effort in 1969 after judging that
   [8989]second-system effect had bloated Multics to the point of
   practical unusability. Honeywell commercialized Multics in 1972 after
   buying out GE's computer group, but it was never very successful: at
   its peak in the 1980s, there were between 75 and 100 Multics sites,
   each a multi-million dollar mainframe.

   One of the former Multics developers from Bell Labs was Ken Thompson,
   and [8990]Unix deliberately carried through and extended many of
   Multics' design ideas; indeed, Thompson described the very name `Unix'
   as `a weak pun on Multics'. For this and other reasons, aspects of the
   Multics design remain a topic of occasional debate among hackers. See
   also [8991]brain-damaged and [8992]GCOS.

   MIT ended its development association with Multics in 1977. Honeywell
   sold its computer business to Bull in the mid 80s, and development on
   Multics was stopped in 1988. Four Multics sites were known to be still
   in use as late as 1998. There is a Multics page at
   [8993]http://www.stratus.com/pub/vos/multics/tvv/multics.html.
     _________________________________________________________________

   Node:multitask, Next:[8994]mumblage, Previous:[8995]Multics,
   Up:[8996]= M =

   multitask n.

   Often used of humans in the same meaning it has for computers, to
   describe a person doing several things at once (but see [8997]thrash).
   The term `multiplex', from communications technology (meaning to
   handle more than one channel at the same time), is used similarly.
     _________________________________________________________________

   Node:mumblage, Next:[8998]mumble, Previous:[8999]multitask, Up:[9000]=
   M =

   mumblage /muhm'bl*j/ n.

   The topic of one's mumbling (see [9001]mumble). "All that mumblage" is
   used like "all that stuff" when it is not quite clear how the subject
   of discussion works, or like "all that crap" when `mumble' is being
   used as an implicit replacement for pejoratives.
     _________________________________________________________________

   Node:mumble, Next:[9002]munch, Previous:[9003]mumblage, Up:[9004]= M =

   mumble interj.

   1. Said when the correct response is too complicated to enunciate, or
   the speaker has not thought it out. Often prefaces a longer answer, or
   indicates a general reluctance to get into a long discussion. "Don't
   you think that we could improve LISP performance by using a hybrid
   reference-count transaction garbage collector, if the cache is big
   enough and there are some extra cache bits for the microcode to use?"
   "Well, mumble ... I'll have to think about it." 2. [MIT] Expression of
   not-quite-articulated agreement, often used as an informal vote of
   consensus in a meeting: "So, shall we dike out the COBOL emulation?"
   "Mumble!" 3. Sometimes used as an expression of disagreement
   (distinguished from sense 2 by tone of voice and other cues). "I think
   we should buy a [9005]VAX." "Mumble!" Common variant: `mumble frotz'
   (see [9006]frotz; interestingly, one does not say `mumble frobnitz'
   even though `frotz' is short for `frobnitz'). 4. Yet another
   [9007]metasyntactic variable, like [9008]foo. 5. When used as a
   question ("Mumble?") means "I didn't understand you". 6. Sometimes
   used in `public' contexts on-line as a placefiller for things one is
   barred from giving details about. For example, a poster with
   pre-released hardware in his machine might say "Yup, my machine now
   has an extra 16M of memory, thanks to the card I'm testing for
   Mumbleco." 7. A conversational wild card used to designate something
   one doesn't want to bother spelling out, but which can be
   [9009]glarked from context. Compare [9010]blurgle. 8. [XEROX PARC] A
   colloquialism used to suggest that further discussion would be
   fruitless.
     _________________________________________________________________

   Node:munch, Next:[9011]munching, Previous:[9012]mumble, Up:[9013]= M =

   munch vt.

   [often confused with [9014]mung, q.v.] To transform information in a
   serial fashion, often requiring large amounts of computation. To trace
   down a data structure. Related to [9015]crunch and nearly synonymous
   with [9016]grovel, but connotes less pain.
     _________________________________________________________________

   Node:munching, Next:[9017]munching squares, Previous:[9018]munch,
   Up:[9019]= M =

   munching n.

   Exploration of security holes of someone else's computer for thrills,
   notoriety, or to annoy the system manager. Compare [9020]cracker. See
   also [9021]hacked off.
     _________________________________________________________________

   Node:munching squares, Next:[9022]munchkin, Previous:[9023]munching,
   Up:[9024]= M =

   munching squares n.

   A [9025]display hack dating back to the PDP-1 (ca. 1962, reportedly
   discovered by Jackson Wright), which employs a trivial computation
   (repeatedly plotting the graph Y = X XOR T for successive values of T
   -- see [9026]HAKMEM items 146-148) to produce an impressive display of
   moving and growing squares that devour the screen. The initial value
   of T is treated as a parameter, which, when well-chosen, can produce
   amazing effects. Some of these, later (re)discovered on the LISP
   machine, have been christened `munching triangles' (try AND for XOR
   and toggling points instead of plotting them), `munching w's', and
   `munching mazes'. More generally, suppose a graphics program produces
   an impressive and ever-changing display of some basic form, foo, on a
   display terminal, and does it using a relatively simple program; then
   the program (or the resulting display) is likely to be referred to as
   `munching foos'. [This is a good example of the use of the word
   [9027]foo as a [9028]metasyntactic variable.]
     _________________________________________________________________

   Node:munchkin, Next:[9029]mundane, Previous:[9030]munching squares,
   Up:[9031]= M =

   munchkin /muhnch'kin/ n.

   [from the squeaky-voiced little people in L. Frank Baum's "The Wizard
   of Oz"] A teenage-or-younger micro enthusiast hacking BASIC or
   something else equally constricted. A term of mild derision --
   munchkins are annoying but some grow up to be hackers after passing
   through a [9032]larval stage. The term [9033]urchin is also used. See
   also [9034]wannabee, [9035]bitty box.
     _________________________________________________________________

   Node:mundane, Next:[9036]mung, Previous:[9037]munchkin, Up:[9038]= M =

   mundane n.

   [from SF fandom] 1. A person who is not in science fiction fandom. 2.
   A person who is not in the computer industry. In this sense, most
   often an adjectival modifier as in "in my mundane life...." See also
   [9039]Real World, [9040]muggle.
     _________________________________________________________________

   Node:mung, Next:[9041]munge, Previous:[9042]mundane, Up:[9043]= M =

   mung /muhng/ vt.

   [in 1960 at MIT, `Mash Until No Good'; sometime after that the
   derivation from the [9044]recursive acronym `Mung Until No Good'
   became standard; but see [9045]munge] 1. To make changes to a file,
   esp. large-scale and irrevocable changes. See [9046]BLT. 2. To
   destroy, usually accidentally, occasionally maliciously. The system
   only mungs things maliciously; this is a consequence of
   [9047]Finagle's Law. See [9048]scribble, [9049]mangle, [9050]trash,
   [9051]nuke. Reports from [9052]Usenet suggest that the pronunciation
   /muhnj/ is now usual in speech, but the spelling `mung' is still
   common in program comments (compare the widespread confusion over the
   proper spelling of [9053]kluge). 3. The kind of beans the sprouts of
   which are used in Chinese food. (That's their real name! Mung beans!
   Really!)

   Like many early hacker terms, this one seems to have originated at
   [9054]TMRC; it was already in use there in 1958. Peter Samson
   (compiler of the original TMRC lexicon) thinks it may originally have
   been onomatopoeic for the sound of a relay spring (contact) being
   twanged. However, it is known that during the World Wars, `mung' was
   U.S. army slang for the ersatz creamed chipped beef better known as
   `SOS', and it seems quite likely that the word in fact goes back to
   Scots-dialect [9055]munge.
     _________________________________________________________________

   Node:munge, Next:[9056]Murphy's Law, Previous:[9057]mung, Up:[9058]= M
   =

   munge /muhnj/ vt.

   1. [derogatory] To imperfectly transform information. 2. A
   comprehensive rewrite of a routine, data structure or the whole
   program. 3. To modify data in some way the speaker doesn't need to go
   into right now or cannot describe succinctly (compare [9059]mumble).
   4. To add [9060]spamblock to an email address.

   This term is often confused with [9061]mung, which probably was
   derived from it. However, it also appears the word `munge' was in
   common use in Scotland in the 1940s, and in Yorkshire in the 1950s, as
   a verb, meaning to munch up into a masticated mess, and as a noun,
   meaning the result of munging something up (the parallel with the
   [9062]kluge/[9063]kludge pair is amusing). The OED reports `munge' as
   an archaic verb nmeaning "to wipe (a person's nose)".
     _________________________________________________________________

   Node:Murphy's Law, Next:[9064]music, Previous:[9065]munge, Up:[9066]=
   M =

   Murphy's Law prov.

   The correct, original Murphy's Law reads: "If there are two or more
   ways to do something, and one of those ways can result in a
   catastrophe, then someone will do it." This is a principle of
   defensive design, cited here because it is usually given in mutant
   forms less descriptive of the challenges of design for [9067]lusers.
   For example, you don't make a two-pin plug symmetrical and then label
   it `THIS WAY UP'; if it matters which way it is plugged in, then you
   make the design asymmetrical (see also the anecdote under [9068]magic
   smoke).

   Edward A. Murphy, Jr. was one of the engineers on the rocket-sled
   experiments that were done by the U.S. Air Force in 1949 to test human
   acceleration tolerances (USAF project MX981). One experiment involved
   a set of 16 accelerometers mounted to different parts of the subject's
   body. There were two ways each sensor could be glued to its mount, and
   somebody methodically installed all 16 the wrong way around. Murphy
   then made the original form of his pronouncement, which the test
   subject (Major John Paul Stapp) quoted at a news conference a few days
   later.

   Within months `Murphy's Law' had spread to various technical cultures
   connected to aerospace engineering. Before too many years had gone by
   variants had passed into the popular imagination, changing as they
   went. Most of these are variants on "Anything that can go wrong,
   will"; this is correctly referred to as [9069]Finagle's Law. The
   memetic drift apparent in these mutants clearly demonstrates Murphy's
   Law acting on itself!
     _________________________________________________________________

   Node:music, Next:[9070]mutter, Previous:[9071]Murphy's Law, Up:[9072]=
   M =

   music n.

   A common extracurricular interest of hackers (compare
   [9073]science-fiction fandom, [9074]oriental food; see also
   [9075]filk). Hackish folklore has long claimed that musical and
   programming abilities are closely related, and there has been at least
   one large-scale statistical study that supports this. Hackers, as a
   rule, like music and often develop musical appreciation in unusual and
   interesting directions. Folk music is very big in hacker circles; so
   is electronic music, and the sort of elaborate instrumental jazz/rock
   that used to be called `progressive' and isn't recorded much any more.
   The hacker's musical range tends to be wide; many can listen with
   equal appreciation to (say) Talking Heads, Yes, Gentle Giant, Pat
   Metheny, Scott Joplin, Tangerine Dream, Dream Theater, King Sunny Ade,
   The Pretenders, Screaming Trees, or the Brandenburg Concerti. It is
   also apparently true that hackerdom includes a much higher
   concentration of talented amateur musicians than one would expect from
   a similar-sized control group of [9076]mundane types.
     _________________________________________________________________

   Node:mutter, Next:[9077]N, Previous:[9078]music, Up:[9079]= M =

   mutter vt.

   To quietly enter a command not meant for the ears, eyes, or fingers of
   ordinary mortals. Often used in `mutter an [9080]incantation'. See
   also [9081]wizard.
     _________________________________________________________________

   Node:= N =, Next:[9082]= O =, Previous:[9083]= M =, Up:[9084]The
   Jargon Lexicon

= N =

     * [9085]N:
     * [9086]nadger:
     * [9087]nagware:
     * [9088]nailed to the wall:
     * [9089]nailing jelly:
     * [9090]naive:
     * [9091]naive user:
     * [9092]NAK:
     * [9093]NANA:
     * [9094]nano:
     * [9095]nano-:
     * [9096]nanoacre:
     * [9097]nanobot:
     * [9098]nanocomputer:
     * [9099]nanofortnight:
     * [9100]nanotechnology:
     * [9101]nasal demons:
     * [9102]nastygram:
     * [9103]Nathan Hale:
     * [9104]nature:
     * [9105]neat hack:
     * [9106]neats vs. scruffies:
     * [9107]neep-neep:
     * [9108]neophilia:
     * [9109]nerd:
     * [9110]nerd knob:
     * [9111]net.-:
     * [9112]net.god:
     * [9113]net.personality:
     * [9114]net.police:
     * [9115]NetBOLLIX:
     * [9116]netburp:
     * [9117]netdead:
     * [9118]nethack:
     * [9119]netiquette:
     * [9120]netlag:
     * [9121]netnews:
     * [9122]netrock:
     * [9123]Netscrape:
     * [9124]netsplit:
     * [9125]netter:
     * [9126]network address:
     * [9127]network meltdown:
     * [9128]New Jersey:
     * [9129]New Testament:
     * [9130]newbie:
     * [9131]newgroup wars:
     * [9132]newline:
     * [9133]NeWS:
     * [9134]newsfroup:
     * [9135]newsgroup:
     * [9136]nick:
     * [9137]nickle:
     * [9138]night mode:
     * [9139]Nightmare File System:
     * [9140]NIL:
     * [9141]Ninety-Ninety Rule:
     * [9142]nipple mouse:
     * [9143]NMI:
     * [9144]no-op:
     * [9145]noddy:
     * [9146]node:
     * [9147]Nominal Semidestructor:
     * [9148]non-optimal solution:
     * [9149]nonlinear:
     * [9150]nontrivial:
     * [9151]not ready for prime time:
     * [9152]notwork:
     * [9153]NP-:
     * [9154]nroff:
     * [9155]NSA line eater:
     * [9156]NSP:
     * [9157]nude:
     * [9158]nugry:
     * [9159]nuke:
     * [9160]number-crunching:
     * [9161]numbers:
     * [9162]NUXI problem:
     * [9163]nybble:
     * [9164]nyetwork:
     _________________________________________________________________

   Node:N, Next:[9165]nadger, Previous:[9166]mutter, Up:[9167]= N =

   N /N/ quant.

   1. A large and indeterminate number of objects: "There were N bugs in
   that crock!" Also used in its original sense of a variable name: "This
   crock has N bugs, as N goes to infinity." (The true number of bugs is
   always at least N + 1; see [9168]Lubarsky's Law of Cybernetic
   Entomology.) 2. A variable whose value is inherited from the current
   context. For example, when a meal is being ordered at a restaurant, N
   may be understood to mean however many people there are at the table.
   From the remark "We'd like to order N wonton soups and a family dinner
   for N - 1" you can deduce that one person at the table wants to eat
   only soup, even though you don't know how many people there are (see
   [9169]great-wall). 3. `Nth': adj. The ordinal counterpart of N, senses
   1 and 2. "Now for the Nth and last time..." In the specific context
   "Nth-year grad student", N is generally assumed to be at least 4, and
   is usually 5 or more (see [9170]tenured graduate student). See also
   [9171]random numbers, [9172]two-to-the-N.
     _________________________________________________________________

   Node:nadger, Next:[9173]nagware, Previous:[9174]N, Up:[9175]= N =

   nadger /nad'jr/ v.

   [UK, from rude slang noun `nadgers' for testicles; compare American &
   British `bollixed'] Of software or hardware (not people), to twiddle
   some object in a hidden manner, generally so that it conforms better
   to some format. For instance, string printing routines on 8-bit
   processors often take the string text from the instruction stream,
   thus a print call looks like jsr print:"Hello world". The print
   routine has to `nadger' the saved instruction pointer so that the
   processor doesn't try to execute the text as instructions when the
   subroutine returns. See [9176]adger.
     _________________________________________________________________

   Node:nagware, Next:[9177]nailed to the wall, Previous:[9178]nadger,
   Up:[9179]= N =

   nagware /nag'weir/ n.

   [Usenet] The variety of [9180]shareware that displays a large screen
   at the beginning or end reminding you to register, typically requiring
   some sort of keystroke to continue so that you can't use the software
   in batch mode. Compare [9181]annoyware, [9182]crippleware.
     _________________________________________________________________

   Node:nailed to the wall, Next:[9183]nailing jelly,
   Previous:[9184]nagware, Up:[9185]= N =

   nailed to the wall adj.

   [like a trophy] Said of a bug finally eliminated after protracted, and
   even heroic, effort.
     _________________________________________________________________

   Node:nailing jelly, Next:[9186]naive, Previous:[9187]nailed to the
   wall, Up:[9188]= N =

   nailing jelly vi.

   See [9189]like nailing jelly to a tree.
     _________________________________________________________________

   Node:naive, Next:[9190]naive user, Previous:[9191]nailing jelly,
   Up:[9192]= N =

   naive adj.

   1. Untutored in the perversities of some particular program or system;
   one who still tries to do things in an intuitive way, rather than the
   right way (in really good designs these coincide, but most designs
   aren't `really good' in the appropriate sense). This trait is
   completely unrelated to general maturity or competence, or even
   competence at any other specific program. It is a sad commentary on
   the primitive state of computing that the natural opposite of this
   term is often claimed to be `experienced user' but is really more like
   `cynical user'. 2. Said of an algorithm that doesn't take advantage of
   some superior but advanced technique, e.g., the [9193]bubble sort. It
   may imply naivete on the part of the programmer, although there are
   situations where a naive algorithm is preferred, because it is more
   important to keep the code comprehensible than to go for maximum
   performance. "I know the linear search is naive, but in this case the
   list typically only has half a dozen items."
     _________________________________________________________________

   Node:naive user, Next:[9194]NAK, Previous:[9195]naive, Up:[9196]= N =

   naive user n.

   A [9197]luser. Tends to imply someone who is ignorant mainly owing to
   inexperience. When this is applied to someone who has experience,
   there is a definite implication of stupidity.
     _________________________________________________________________

   Node:NAK, Next:[9198]NANA, Previous:[9199]naive user, Up:[9200]= N =

   NAK /nak/ interj.

   [from the ASCII mnemonic for 0010101] 1. On-line joke answer to
   [9201]ACK?: "I'm not here." 2. On-line answer to a request for chat:
   "I'm not available." 3. Used to politely interrupt someone to tell
   them you don't understand their point or that they have suddenly
   stopped making sense. See [9202]ACK, sense 3. "And then, after we
   recode the project in COBOL...." "Nak, Nak, Nak! I thought I heard you
   say COBOL!" 4. A negative answer. "OK if I boot the server?" "NAK!"
     _________________________________________________________________

   Node:NANA, Next:[9203]nano, Previous:[9204]NAK, Up:[9205]= N =

   NANA //

   [Usenet] The newsgroups news.admin.net-abuse.*, devoted to fighting
   [9206]spam and network abuse. Each individual newsgroup is often
   referred to by adding a letter to NANA. For example, NANAU would refer
   to news.admin.net-abuse.usenet.

   When spam began to be a serious problem around 1995, and a loose
   network of anti-spammers formed to combat it, spammers immediately
   accused them of being the [9207]backbone cabal, or the Cabal reborn.
   Though this was not true, spam-fighters ironically accepted the label
   and the tag line "There is No Cabal" reappeared (later, and now
   commonly, abbreviated to "TINC"). Nowadays "the Cabal" is generally
   understood to refer to the NANA regulars.
     _________________________________________________________________

   Node:nano, Next:[9208]nano-, Previous:[9209]NANA, Up:[9210]= N =

   nano /nan'oh/ n.

   [CMU: from `nanosecond'] A brief period of time. "Be with you in a
   nano" means you really will be free shortly, i.e., implies what
   mainstream people mean by "in a jiffy" (whereas the hackish use of
   `jiffy' is quite different -- see [9211]jiffy).
     _________________________________________________________________

   Node:nano-, Next:[9212]nanoacre, Previous:[9213]nano, Up:[9214]= N =

   nano- pref.

   [SI: the next quantifier below [9215]micro-; meaning * 10^(-9)]
   Smaller than [9216]micro-, and used in the same rather loose and
   connotative way. Thus, one has [9217]nanotechnology (coined by hacker
   K. Eric Drexler) by analogy with `microtechnology'; and a few machine
   architectures have a `nanocode' level below `microcode'. Tom Duff at
   Bell Labs has also pointed out that "Pi seconds is a nanocentury". See
   also [9218]quantifiers, [9219]pico-, [9220]nanoacre, [9221]nanobot,
   [9222]nanocomputer, [9223]nanofortnight.
     _________________________________________________________________

   Node:nanoacre, Next:[9224]nanobot, Previous:[9225]nano-, Up:[9226]= N
   =

   nanoacre /nan'oh-ay`kr/ n.

   A unit (about 2 mm square) of real estate on a VLSI chip. The term
   gets its giggle value from the fact that VLSI nanoacres have costs in
   the same range as real acres once one figures in design and
   fabrication-setup costs.
     _________________________________________________________________

   Node:nanobot, Next:[9227]nanocomputer, Previous:[9228]nanoacre,
   Up:[9229]= N =

   nanobot /nan'oh-bot/ n.

   A robot of microscopic proportions, presumably built by means of
   [9230]nanotechnology. As yet, only used informally (and
   speculatively!). Also called a `nanoagent'.
     _________________________________________________________________

   Node:nanocomputer, Next:[9231]nanofortnight, Previous:[9232]nanobot,
   Up:[9233]= N =

   nanocomputer /nan'oh-k*m-pyoo'tr/ n.

   A computer with molecular-sized switching elements. Designs for
   mechanical nanocomputers which use single-molecule sliding rods for
   their logic have been proposed. The controller for a [9234]nanobot
   would be a nanocomputer.
     _________________________________________________________________

   Node:nanofortnight, Next:[9235]nanotechnology,
   Previous:[9236]nanocomputer, Up:[9237]= N =

   nanofortnight n.

   [Adelaide University] 1 fortnight * 10^(-9), or about 1.2 msec. This
   unit was used largely by students doing undergraduate practicals. See
   [9238]microfortnight, [9239]attoparsec, and [9240]micro-.
     _________________________________________________________________

   Node:nanotechnology, Next:[9241]nasal demons,
   Previous:[9242]nanofortnight, Up:[9243]= N =

   nanotechnology /nan'-oh-tek-no`l*-jee/ n.

   A hypothetical fabrication technology in which objects are designed
   and built with the individual specification and placement of each
   separate atom. The first unequivocal nanofabrication experiments took
   place in 1990, for example with the deposition of individual xenon
   atoms on a nickel substrate to spell the logo of a certain very large
   computer company. Nanotechnology has been a hot topic in the hacker
   subculture ever since the term was coined by K. Eric Drexler in his
   book "Engines of Creation" (Anchor/Doubleday, ISBN 0-385-19973-2),
   where he predicted that nanotechnology could give rise to replicating
   assemblers, permitting an exponential growth of productivity and
   personal wealth (there's an authorized transcription at
   [9244]http://www.foresight.org/EOC/index.html.). See also [9245]blue
   goo, [9246]gray goo, [9247]nanobot.
     _________________________________________________________________

   Node:nasal demons, Next:[9248]nastygram,
   Previous:[9249]nanotechnology, Up:[9250]= N =

   nasal demons n.

   Recognized shorthand on the Usenet group comp.std.c for any unexpected
   behavior of a C compiler on encountering an undefined construct.
   During a discussion on that group in early 1992, a regular remarked
   "When the compiler encounters [a given undefined construct] it is
   legal for it to make demons fly out of your nose" (the implication is
   that the compiler may choose any arbitrarily bizarre way to interpret
   the code without violating the ANSI C standard). Someone else followed
   up with a reference to "nasal demons", which quickly became
   established.
     _________________________________________________________________

   Node:nastygram, Next:[9251]Nathan Hale, Previous:[9252]nasal demons,
   Up:[9253]= N =

   nastygram /nas'tee-gram/ n.

   1. A protocol packet or item of email (the latter is also called a
   [9254]letterbomb) that takes advantage of misfeatures or security
   holes on the target system to do untoward things. 2. Disapproving
   mail, esp. from a [9255]net.god, pursuant to a violation of
   [9256]netiquette or a complaint about failure to correct some mail- or
   news-transmission problem. Compare [9257]shitogram, [9258]mailbomb. 3.
   A status report from an unhappy, and probably picky, customer. "What'd
   Corporate say in today's nastygram?" 4. [deprecated] An error reply by
   mail from a [9259]daemon; in particular, a [9260]bounce message.
     _________________________________________________________________

   Node:Nathan Hale, Next:[9261]nature, Previous:[9262]nastygram,
   Up:[9263]= N =

   Nathan Hale n.

   An asterisk (see also [9264]splat, [9265]ASCII). Oh, you want an
   etymology? Notionally, from "I regret that I have only one asterisk
   for my country!", a misquote of the famous remark uttered by Nathan
   Hale just before he was hanged. Hale was a (failed) spy for the rebels
   in the American War of Independence.
     _________________________________________________________________

   Node:nature, Next:[9266]neat hack, Previous:[9267]Nathan Hale,
   Up:[9268]= N =

   nature n.

   See [9269]has the X nature.
     _________________________________________________________________

   Node:neat hack, Next:[9270]neats vs. scruffies, Previous:[9271]nature,
   Up:[9272]= N =

   neat hack n.

   [very common] 1. A clever technique. 2. A brilliant practical joke,
   where neatness is correlated with cleverness, harmlessness, and
   surprise value. Example: the Caltech Rose Bowl card display switch
   (see [9273]Appendix A for discussion). See also [9274]hack.
     _________________________________________________________________

   Node:neats vs. scruffies, Next:[9275]neep-neep, Previous:[9276]neat
   hack, Up:[9277]= N =

   neats vs. scruffies n.

   The label used to refer to one of the continuing [9278]holy wars in AI
   research. This conflict tangles together two separate issues. One is
   the relationship between human reasoning and AI; `neats' tend to try
   to build systems that `reason' in some way identifiably similar to the
   way humans report themselves as doing, while `scruffies' profess not
   to care whether an algorithm resembles human reasoning in the least as
   long as it works. More importantly, neats tend to believe that logic
   is king, while scruffies favor looser, more ad-hoc methods driven by
   empirical knowledge. To a neat, scruffy methods appear promiscuous,
   successful only by accident, and not productive of insights about how
   intelligence actually works; to a scruffy, neat methods appear to be
   hung up on formalism and irrelevant to the hard-to-capture `common
   sense' of living intelligences.
     _________________________________________________________________

   Node:neep-neep, Next:[9279]neophilia, Previous:[9280]neats vs.
   scruffies, Up:[9281]= N =

   neep-neep /neep neep/ n.

   [onomatopoeic, widely spread through SF fandom but reported to have
   originated at Caltech in the 1970s] One who is fascinated by
   computers. Less specific than [9282]hacker, as it need not imply more
   skill than is required to boot games on a PC. The derived noun
   `neeping' applies specifically to the long conversations about
   computers that tend to develop in the corners at most SF-convention
   parties (the term `neepery' is also in wide use). Fandom has a related
   proverb to the effect that "Hacking is a conversational black hole!".
     _________________________________________________________________

   Node:neophilia, Next:[9283]nerd, Previous:[9284]neep-neep, Up:[9285]=
   N =

   neophilia /nee`oh-fil'-ee-*/ n.

   The trait of being excited and pleased by novelty. Common among most
   hackers, SF fans, and members of several other connected leading-edge
   subcultures, including the pro-technology `Whole Earth' wing of the
   ecology movement, space activists, many members of Mensa, and the
   Discordian/neo-pagan underground. All these groups overlap heavily and
   (where evidence is available) seem to share characteristic hacker
   tropisms for science fiction, [9286]music, and [9287]oriental food.
   The opposite tendency is `neophobia'.
     _________________________________________________________________

   Node:nerd, Next:[9288]nerd knob, Previous:[9289]neophilia, Up:[9290]=
   N =

   nerd n.

   1. [mainstream slang] Pejorative applied to anyone with an
   above-average IQ and few gifts at small talk and ordinary social
   rituals. 2. [jargon] Term of praise applied (in conscious ironic
   reference to sense 1) to someone who knows what's really important and
   interesting and doesn't care to be distracted by trivial chatter and
   silly status games. Compare the two senses of [9291]computer geek.

   The word itself appears to derive from the lines "And then, just to
   show them, I'll sail to Ka-Troo / And Bring Back an It-Kutch, a Preep
   and a Proo, / A Nerkle, a Nerd, and a Seersucker, too!" in the Dr.
   Seuss book "If I Ran the Zoo" (1950). (The spellings `nurd' and
   `gnurd' also used to be current at MIT, where `nurd' is reported from
   as far back as 1957.) How it developed its mainstream meaning is
   unclear, but sense 1 seems to have entered mass culture in the early
   1970s (there are reports that in the mid-1960s it meant roughly
   "annoying misfit" without the connotation of intelligence).

   An IEEE Spectrum article (4/95, page 16) once derived `nerd' in its
   variant form `knurd' from the word `drunk' backwards, but this bears
   all the hallmarks of a bogus folk etymology.

   Hackers developed sense 2 in self-defense perhaps ten years later, and
   some actually wear "Nerd Pride" buttons, only half as a joke. At MIT
   one can find not only buttons but (what else?) pocket protectors
   bearing the slogan and the MIT seal.
     _________________________________________________________________

   Node:nerd knob, Next:[9292]net.-, Previous:[9293]nerd, Up:[9294]= N =

   nerd knob n.

   [Cisco] a command in a complex piece of software which is more likely
   to be used by an extremely experienced user to tweak a setting of one
   sort or another - a setting which the average user may not even know
   exists. Nerd knobs tend to be toggles, turning on or off a particular,
   specific, narrowly defined behavior.
     _________________________________________________________________

   Node:net.-, Next:[9295]net.god, Previous:[9296]nerd knob, Up:[9297]= N
   =

   net.- /net dot/ pref.

   [Usenet] Prefix used to describe people and events related to Usenet.
   From the time before the [9298]Great Renaming, when most non-local
   newsgroups had names beginning `net.'. Includes [9299]net.gods,
   `net.goddesses' (various charismatic net.women with circles of on-line
   admirers), `net.lurkers' (see [9300]lurker), `net.person',
   `net.parties' (a synonym for [9301]boink, sense 2), and many similar
   constructs. See also [9302]net.police.
     _________________________________________________________________

   Node:net.god, Next:[9303]net.personality, Previous:[9304]net.-,
   Up:[9305]= N =

   net.god /net god/ n.

   Accolade referring to anyone who satisfies some combination of the
   following conditions: has been visible on Usenet for more than 5
   years, ran one of the original backbone sites, moderated an important
   newsgroup, wrote news software, or knows Gene, Mark, Rick, Mel, Henry,
   Chuq, and Greg personally. See [9306]demigod. Net.goddesses such as
   Rissa or the Slime Sisters have (so far) been distinguished more by
   personality than by authority.
     _________________________________________________________________

   Node:net.personality, Next:[9307]net.police, Previous:[9308]net.god,
   Up:[9309]= N =

   net.personality /net per`sn-al'-*-tee/ n.

   Someone who has made a name for him or herself on [9310]Usenet,
   through either longevity or attention-getting posts, but doesn't meet
   the other requirements of [9311]net.godhood.
     _________________________________________________________________

   Node:net.police, Next:[9312]NetBOLLIX, Previous:[9313]net.personality,
   Up:[9314]= N =

   net.police /net-p*-lees'/ n.

   (var. `net.cops') Those Usenet readers who feel it is their
   responsibility to pounce on and [9315]flame any posting which they
   regard as offensive or in violation of their understanding of
   [9316]netiquette. Generally used sarcastically or pejoratively. Also
   spelled `net police'. See also [9317]net.-, [9318]code police.
     _________________________________________________________________

   Node:NetBOLLIX, Next:[9319]netburp, Previous:[9320]net.police,
   Up:[9321]= N =

   NetBOLLIX n.

   [from bollix: to bungle, or British `bollocks'] [9322]IBM's NetBIOS,
   an extremely [9323]brain-damaged network protocol that, like
   [9324]Blue Glue, is used at commercial shops that don't know any
   better.
     _________________________________________________________________

   Node:netburp, Next:[9325]netdead, Previous:[9326]NetBOLLIX, Up:[9327]=
   N =

   netburp n.

   [IRC] When [9328]netlag gets really bad, and delays between servers
   exceed a certain threshhold, the [9329]IRC network effectively becomes
   partitioned for a period of time, and large numbers of people seem to
   be signing off at the same time and then signing back on again when
   things get better. An instance of this is called a `netburp' (or,
   sometimes, [9330]netsplit).
     _________________________________________________________________

   Node:netdead, Next:[9331]nethack, Previous:[9332]netburp, Up:[9333]= N
   =

   netdead n.

   [IRC] The state of someone who signs off [9334]IRC, perhaps during a
   [9335]netburp, and doesn't sign back on until later. In the interim,
   he is "dead to the net". Compare [9336]link-dead.
     _________________________________________________________________

   Node:nethack, Next:[9337]netiquette, Previous:[9338]netdead,
   Up:[9339]= N =

   nethack /net'hak/ n.

   [Unix] A dungeon game similar to [9340]rogue but more elaborate,
   distributed in C source over [9341]Usenet and very popular at Unix
   sites and on PC-class machines (nethack is probably the most widely
   distributed of the freeware dungeon games). The earliest versions,
   written by Jay Fenlason and later considerably enhanced by Andries
   Brouwer, were simply called `hack'. The name changed when maintenance
   was taken over by a group of hackers originally organized by Mike
   Stephenson. There is now an official site one at
   [9342]http://www.nethack.org/. See also [9343]moria, [9344]rogue,
   [9345]Angband.
     _________________________________________________________________

   Node:netiquette, Next:[9346]netlag, Previous:[9347]nethack, Up:[9348]=
   N =

   netiquette /net'ee-ket/ or /net'i-ket/ n.

   [portmanteau, network + etiquette] The conventions of politeness
   recognized on [9349]Usenet, such as avoidance of cross-posting to
   inappropriate groups and refraining from commercial pluggery outside
   the biz groups.
     _________________________________________________________________

   Node:netlag, Next:[9350]netnews, Previous:[9351]netiquette, Up:[9352]=
   N =

   netlag n.

   [IRC, MUD] A condition that occurs when the delays in the [9353]IRC
   network or on a [9354]MUD become severe enough that servers briefly
   lose and then reestablish contact, causing messages to be delivered in
   bursts, often with delays of up to a minute. (Note that this term has
   nothing to do with mainstream "jet lag", a condition which hackers
   tend not to be much bothered by.) Often shortened to just `lag'.
     _________________________________________________________________

   Node:netnews, Next:[9355]netrock, Previous:[9356]netlag, Up:[9357]= N
   =

   netnews /net'n[y]ooz/ n.

   1. The software that makes [9358]Usenet run. 2. The content of Usenet.
   "I read netnews right after my mail most mornings."
     _________________________________________________________________

   Node:netrock, Next:[9359]Netscrape, Previous:[9360]netnews, Up:[9361]=
   N =

   netrock /net'rok/ n.

   [IBM] A [9362]flame; used esp. on VNET, IBM's internal corporate
   network.
     _________________________________________________________________

   Node:Netscrape, Next:[9363]netsplit, Previous:[9364]netrock,
   Up:[9365]= N =

   Netscrape n.

   [sometimes elaborated to `Netscrape Fornicator', also `Nutscrape']
   Standard name-of-insult for Netscape Navigator/Communicator,
   Netscape's overweight Web browser. Compare [9366]Internet Exploiter.
     _________________________________________________________________

   Node:netsplit, Next:[9367]netter, Previous:[9368]Netscrape, Up:[9369]=
   N =

   netsplit n.

   Syn. [9370]netburp.
     _________________________________________________________________

   Node:netter, Next:[9371]network address, Previous:[9372]netsplit,
   Up:[9373]= N =

   netter n.

   1. Loosely, anyone with a [9374]network address. 2. More specifically,
   a [9375]Usenet regular. Most often found in the plural. "If you post
   that in a technical group, you're going to be flamed by angry netters
   for the rest of time!"
     _________________________________________________________________

   Node:network address, Next:[9376]network meltdown,
   Previous:[9377]netter, Up:[9378]= N =

   network address n.

   (also `net address') As used by hackers, means an address on `the'
   network (see [9379]the network; this used to include [9380]bang path
   addresses but now almost always implies an [9381]Internet address).
   Net addresses are often used in email text as a more concise
   substitute for personal names; indeed, hackers may come to know each
   other quite well by network names without ever learning each others'
   `legal' monikers. Indeed, display of a network address (e.g on
   business cards) used to function as an important hacker identification
   signal, like lodge pins among Masons or tie-dyed T-shirts among
   Grateful Dead fans. In the day of pervasive Internet this is less
   true, but you can still be fairly sure that anyone with a network
   address handwritten on his or her convention badge is a hacker.
     _________________________________________________________________

   Node:network meltdown, Next:[9382]New Jersey, Previous:[9383]network
   address, Up:[9384]= N =

   network meltdown n.

   A state of complete network overload; the network equivalent of
   [9385]thrashing. This may be induced by a [9386]Chernobyl packet. See
   also [9387]broadcast storm, [9388]kamikaze packet.

   Network meltdown is often a result of network designs that are
   optimized for a steady state of moderate load and don't cope well with
   the very jagged, bursty usage patterns of the real world. One amusing
   instance of this is triggered by the popular and very bloody
   shoot-'em-up game Doom on the PC. When used in multiplayer mode over a
   network, the game uses broadcast packets to inform other machines when
   bullets are fired. This causes problems with weapons like the chain
   gun which fire rapidly -- it can blast the network into a meltdown
   state just as easily as it shreds opposing monsters.
     _________________________________________________________________

   Node:New Jersey, Next:[9389]New Testament, Previous:[9390]network
   meltdown, Up:[9391]= N =

   New Jersey adj.

   [primarily Stanford/Silicon Valley] Brain-damaged or of poor design.
   This refers to the allegedly wretched quality of such software as C,
   C++, and Unix (which originated at Bell Labs in Murray Hill, New
   Jersey). "This compiler bites the bag, but what can you expect from a
   compiler designed in New Jersey?" Compare [9392]Berkeley Quality
   Software. See also [9393]Unix conspiracy.
     _________________________________________________________________

   Node:New Testament, Next:[9394]newbie, Previous:[9395]New Jersey,
   Up:[9396]= N =

   New Testament n.

   [C programmers] The second edition of K&R's "The C Programming
   Language" (Prentice-Hall, 1988; ISBN 0-13-110362-8), describing ANSI
   Standard C. See [9397]K&R; this version is also called `K&R2'.
     _________________________________________________________________

   Node:newbie, Next:[9398]newgroup wars, Previous:[9399]New Testament,
   Up:[9400]= N =

   newbie /n[y]oo'bee/ n.

   [verry common; orig. from British public-school and military slang
   variant of `new boy'] A Usenet neophyte. This term surfaced in the
   [9401]newsgroup talk.bizarre but is now in wide use (the combination
   "clueless newbie" is especially common). Criteria for being considered
   a newbie vary wildly; a person can be called a newbie in one newsgroup
   while remaining a respected regular in another. The label `newbie' is
   sometimes applied as a serious insult to a person who has been around
   Usenet for a long time but who carefully hides all evidence of having
   a clue. See [9402]B1FF; see also [9403]gnubie.
     _________________________________________________________________

   Node:newgroup wars, Next:[9404]newline, Previous:[9405]newbie,
   Up:[9406]= N =

   newgroup wars /n[y]oo'groop worz/ n.

   [Usenet] The salvos of dueling newgroup and rmgroup messages sometimes
   exchanged by persons on opposite sides of a dispute over whether a
   [9407]newsgroup should be created net-wide, or (even more frequently)
   whether an obsolete one should be removed. These usually settle out
   within a week or two as it becomes clear whether the group has a
   natural constituency (usually, it doesn't). At times, especially in
   the completely anarchic alt hierarchy, the names of newsgroups
   themselves become a form of comment or humor; e.g., the group
   alt.swedish.chef.bork.bork.bork which originated as a birthday joke
   for a Muppets fan, or any number of specialized abuse groups named
   after particularly notorious [9408]flamers, e.g., alt.weemba.
     _________________________________________________________________

   Node:newline, Next:[9409]NeWS, Previous:[9410]newgroup wars,
   Up:[9411]= N =

   newline /n[y]oo'li:n/ n.

   1. [techspeak, primarily Unix] The ASCII LF character (0001010), used
   under [9412]Unix as a text line terminator. Though the term `newline'
   appears in ASCII standards, it never caught on in the general
   computing world before Unix. 2. More generally, any magic character,
   character sequence, or operation (like Pascal's writeln procedure)
   required to terminate a text record or separate lines. See [9413]crlf,
   [9414]terpri.
     _________________________________________________________________

   Node:NeWS, Next:[9415]newsfroup, Previous:[9416]newline, Up:[9417]= N
   =

   NeWS /nee'wis/, /n[y]oo'is/ or /n[y]ooz/ n.

   [acronym; the `Network Window System'] The road not taken in window
   systems, an elegant [9418]PostScript-based environment that would
   almost certainly have won the standards war with [9419]X if it hadn't
   been [9420]proprietary to Sun Microsystems. There is a lesson here
   that too many software vendors haven't yet heeded. Many hackers insist
   on the two-syllable pronunciations above as a way of distinguishing
   NeWS from Usenet news (the [9421]netnews software).
     _________________________________________________________________

   Node:newsfroup, Next:[9422]newsgroup, Previous:[9423]NeWS, Up:[9424]=
   N =

   newsfroup // n.

   [Usenet] Silly synonym for [9425]newsgroup, originally a typo but now
   in regular use on Usenet's talk.bizarre, and other lunatic-fringe
   groups. Compare [9426]hing, [9427]grilf, [9428]pr0n and [9429]filk.
     _________________________________________________________________

   Node:newsgroup, Next:[9430]nick, Previous:[9431]newsfroup, Up:[9432]=
   N =

   newsgroup n.

   [Usenet] One of [9433]Usenet's huge collection of topic groups or
   [9434]fora. Usenet groups can be `unmoderated' (anyone can post) or
   `moderated' (submissions are automatically directed to a moderator,
   who edits or filters and then posts the results). Some newsgroups have
   parallel [9435]mailing lists for Internet people with no netnews
   access, with postings to the group automatically propagated to the
   list and vice versa. Some moderated groups (especially those which are
   actually gatewayed Internet mailing lists) are distributed as
   `digests', with groups of postings periodically collected into a
   single large posting with an index.

   Among the best-known are comp.lang.c (the C-language forum), comp.arch
   (on computer architectures), comp.unix.wizards (for Unix wizards),
   rec.arts.sf.written and siblings (for science-fiction fans), and
   talk.politics.misc (miscellaneous political discussions and
   [9436]flamage).
     _________________________________________________________________

   Node:nick, Next:[9437]nickle, Previous:[9438]newsgroup, Up:[9439]= N =

   nick n.

   [IRC; very common] Short for nickname. On [9440]IRC, every user must
   pick a nick, which is sometimes the same as the user's real name or
   login name, but is often more fanciful. Compare [9441]handle,
   [9442]screen name.
     _________________________________________________________________

   Node:nickle, Next:[9443]night mode, Previous:[9444]nick, Up:[9445]= N
   =

   nickle /ni'kl/ n.

   [from `nickel', common name for the U.S. 5-cent coin] A [9446]nybble +
   1; 5 bits. Reported among developers for Mattel's GI 1600 (the
   Intellivision games processor), a chip with 16-bit-wide RAM but
   10-bit-wide ROM. See also [9447]deckle, and [9448]nybble for names of
   other bit units.
     _________________________________________________________________

   Node:night mode, Next:[9449]Nightmare File System,
   Previous:[9450]nickle, Up:[9451]= N =

   night mode n.

   See [9452]phase (of people).
     _________________________________________________________________

   Node:Nightmare File System, Next:[9453]NIL, Previous:[9454]night mode,
   Up:[9455]= N =

   Nightmare File System n.

   Pejorative hackerism for Sun's Network File System (NFS). In any
   nontrivial network of Suns where there is a lot of NFS cross-mounting,
   when one Sun goes down, the others often freeze up. Some machine tries
   to access the down one, and (getting no response) repeats
   indefinitely. This causes it to appear dead to some messages (what is
   actually happening is that it is locked up in what should have been a
   brief excursion to a higher [9456]spl level). Then another machine
   tries to reach either the down machine or the pseudo-down machine, and
   itself becomes pseudo-down. The first machine to discover the down one
   is now trying both to access the down one and to respond to the
   pseudo-down one, so it is even harder to reach. This situation
   snowballs very quickly, and soon the entire network of machines is
   frozen -- worst of all, the user can't even abort the file access that
   started the problem! Many of NFS's problems are excused by partisans
   as being an inevitable result of its statelessness, which is held to
   be a great feature (critics, of course, call it a great
   [9457]misfeature). (ITS partisans are apt to cite this as proof of
   Unix's alleged bogosity; ITS had a working NFS-like shared file system
   with none of these problems in the early 1970s.) See also
   [9458]broadcast storm.
     _________________________________________________________________

   Node:NIL, Next:[9459]Ninety-Ninety Rule, Previous:[9460]Nightmare File
   System, Up:[9461]= N =

   NIL /nil/

   No. Used in reply to a question, particularly one asked using the `-P'
   convention. Most hackers assume this derives simply from LISP
   terminology for `false' (see also [9462]T), but NIL as a negative
   reply was well-established among radio hams decades before the advent
   of LISP. The historical connection between early hackerdom and the ham
   radio world was strong enough that this may have been an influence.
     _________________________________________________________________

   Node:Ninety-Ninety Rule, Next:[9463]nipple mouse, Previous:[9464]NIL,
   Up:[9465]= N =

   Ninety-Ninety Rule n.

   "The first 90% of the code accounts for the first 90% of the
   development time. The remaining 10% of the code accounts for the other
   90% of the development time." Attributed to Tom Cargill of Bell Labs,
   and popularized by Jon Bentley's September 1985 "Bumper-Sticker
   Computer Science" column in "Communications of the ACM". It was there
   called the "Rule of Credibility", a name which seems not to have
   stuck. Other maxims in the same vein include the law attributed to the
   early British computer scientist Douglas Hartree: "The time from now
   until the completion of the project tends to become constant."
     _________________________________________________________________

   Node:nipple mouse, Next:[9466]NMI, Previous:[9467]Ninety-Ninety Rule,
   Up:[9468]= N =

   nipple mouse n.

   Var. `clit mouse, clitoris' Common term for the pointing device used
   on IBM ThinkPads and a few other laptop computers. The device, which
   sits between the `g' and `h' keys on the keyboard, indeed resembles a
   rubber nipple intended to be tweaked by a forefinger. Many hackers
   consider these superior to the glide pads found on most laptops, which
   are harder to control precisely.
     _________________________________________________________________

   Node:NMI, Next:[9469]no-op, Previous:[9470]nipple mouse, Up:[9471]= N
   =

   NMI /N-M-I/ n.

   Non-Maskable Interrupt. An IRQ 7 on the PDP-11 or 680[01234]0; the NMI
   line on an 80[1234]86. In contrast with a [9472]priority interrupt
   (which might be ignored, although that is unlikely), an NMI is never
   ignored. Except, that is, on [9473]clone boxes, where NMI is often
   ignored on the motherboard because flaky hardware can generate many
   spurious ones.
     _________________________________________________________________

   Node:no-op, Next:[9474]noddy, Previous:[9475]NMI, Up:[9476]= N =

   no-op /noh'op/ n.,v.

   alt. NOP /nop/ [no operation] 1. A machine instruction that does
   nothing (sometimes used in assembler-level programming as filler for
   data or patch areas, or to overwrite code to be removed in binaries).
   2. A person who contributes nothing to a project, or has nothing going
   on upstairs, or both. As in "He's a no-op." 3. Any operation or
   sequence of operations with no effect, such as circling the block
   without finding a parking space, or putting money into a vending
   machine and having it fall immediately into the coin-return box, or
   asking someone for help and being told to go away. "Oh, well, that was
   a no-op." Hot-and-sour soup (see [9477]great-wall) that is
   insufficiently either is `no-op soup'; so is wonton soup if everybody
   else is having hot-and-sour.
     _________________________________________________________________

   Node:noddy, Next:[9478]node, Previous:[9479]no-op, Up:[9480]= N =

   noddy /nod'ee/ adj.

   [UK: from the children's books] 1. Small and un-useful, but
   demonstrating a point. Noddy programs are often written by people
   learning a new language or system. The archetypal noddy program is
   [9481]hello world. Noddy code may be used to demonstrate a feature or
   bug of a compiler. May be used of real hardware or software to imply
   that it isn't worth using. "This editor's a bit noddy." 2. A program
   that is more or less instant to produce. In this use, the term does
   not necessarily connote uselessness, but describes a [9482]hack
   sufficiently trivial that it can be written and debugged while
   carrying on (and during the space of) a normal conversation. "I'll
   just throw together a noddy [9483]awk script to dump all the first
   fields." In North America this might be called a [9484]mickey mouse
   program. See [9485]toy program.
     _________________________________________________________________

   Node:node, Next:[9486]Nominal Semidestructor, Previous:[9487]noddy,
   Up:[9488]= N =

   node n.

   1. [Internet, UUCP] A host machine on the network. 2. [MS-DOS BBSes] A
   dial-in line on a BBS. Thus an MS-DOS [9489]sysop might say that his
   BBS has 4 nodes even though it has a single machine and no Internet
   link, confusing an Internet hacker no end.
     _________________________________________________________________

   Node:Nominal Semidestructor, Next:[9490]non-optimal solution,
   Previous:[9491]node, Up:[9492]= N =

   Nominal Semidestructor n.

   Soundalike slang for `National Semiconductor', found among other
   places in the Networking/2 networking sources. During the late 1970s
   to mid-1980s this company marketed a series of microprocessors
   including the NS16000 and NS32000 and several variants. At one point
   early in the great microprocessor race, the specs on these chips made
   them look like serious competition for the rising Intel 80x86 and
   Motorola 680x0 series. Unfortunately, the actual parts were
   notoriously flaky and never implemented the full instruction set
   promised in their literature, apparently because the company couldn't
   get any of the mask steppings to work as designed. They eventually
   sank without trace, joining the Zilog Z8000 and a few even more
   obscure also-rans in the graveyard of forgotten microprocessors.
   Compare [9493]HP-SUX, [9494]AIDX, [9495]buglix, [9496]Macintrash,
   [9497]Telerat, [9498]ScumOS, [9499]sun-stools, [9500]Slowlaris,
   [9501]Internet Exploder.
     _________________________________________________________________

   Node:non-optimal solution, Next:[9502]nonlinear,
   Previous:[9503]Nominal Semidestructor, Up:[9504]= N =

   non-optimal solution n.

   (also `sub-optimal solution') An astoundingly stupid way to do
   something. This term is generally used in deadpan sarcasm, as its
   impact is greatest when the person speaking looks completely serious.
   Compare [9505]stunning. See also [9506]Bad Thing.
     _________________________________________________________________

   Node:nonlinear, Next:[9507]nontrivial, Previous:[9508]non-optimal
   solution, Up:[9509]= N =

   nonlinear adj.

   [scientific computation] 1. Behaving in an erratic and unpredictable
   fashion; unstable. When used to describe the behavior of a machine or
   program, it suggests that said machine or program is being forced to
   run far outside of design specifications. This behavior may be induced
   by unreasonable inputs, or may be triggered when a more mundane bug
   sends the computation far off from its expected course. 2. When
   describing the behavior of a person, suggests a tantrum or a
   [9510]flame. "When you talk to Bob, don't mention the drug problem or
   he'll go nonlinear for hours." In this context, `go nonlinear'
   connotes `blow up out of proportion' (proportion connotes linearity).
     _________________________________________________________________

   Node:nontrivial, Next:[9511]not ready for prime time,
   Previous:[9512]nonlinear, Up:[9513]= N =

   nontrivial adj.

   Requiring real thought or significant computing power. Often used as
   an understated way of saying that a problem is quite difficult or
   impractical, or even entirely unsolvable ("Proving P=NP is
   nontrivial"). The preferred emphatic form is `decidedly nontrivial'.
   See [9514]trivial, [9515]uninteresting, [9516]interesting.
     _________________________________________________________________

   Node:not ready for prime time, Next:[9517]notwork,
   Previous:[9518]nontrivial, Up:[9519]= N =

   not ready for prime time adj.

   Usable, but only just so; not very robust; for internal use only. Said
   of a program or device. Often connotes that the thing will be made
   more solid [9520]Real Soon Now. This term comes from the ensemble name
   of the original cast of "Saturday Night Live", the "Not Ready for
   Prime Time Players". It has extra flavor for hackers because of the
   special (though now semi-obsolescent) meaning of [9521]prime time.
   Compare [9522]beta.
     _________________________________________________________________

   Node:notwork, Next:[9523]NP-, Previous:[9524]not ready for prime time,
   Up:[9525]= N =

   notwork /not'werk/ n.

   A network, when it is acting [9526]flaky or is [9527]down. Compare
   [9528]nyetwork. Said at IBM to have originally referred to a
   particular period of flakiness on IBM's VNET corporate network ca.
   1988; but there are independent reports of the term from elsewhere.
     _________________________________________________________________

   Node:NP-, Next:[9529]nroff, Previous:[9530]notwork, Up:[9531]= N =

   NP- /N-P/ pref.

   Extremely. Used to modify adjectives describing a level or quality of
   difficulty; the connotation is often `more so than it should be' This
   is generalized from the computer-science terms `NP-hard' and
   `NP-complete'; NP-complete problems all seem to be very hard, but so
   far no one has found a proof that they are. NP is the set of
   Nondeterministic-Polynomial algorithms, those that can be completed by
   a nondeterministic Turing machine in an amount of time that is a
   polynomial function of the size of the input; a solution for one
   NP-complete problem would solve all the others. "Coding a BitBlt
   implementation to perform correctly in every case is NP-annoying."

   Note, however, that strictly speaking this usage is misleading; there
   are plenty of easy problems in class NP. NP-complete problems are hard
   not because they are in class NP, but because they are the hardest
   problems in class NP.
     _________________________________________________________________

   Node:nroff, Next:[9532]NSA line eater, Previous:[9533]NP-, Up:[9534]=
   N =

   nroff /N'rof/

   n. [Unix, from "new roff" (see [9535]troff)] A companion program to
   the Unix typesetter [9536]troff, accepting identical input but
   preparing output for terminals and line printers.
     _________________________________________________________________

   Node:NSA line eater, Next:[9537]NSP, Previous:[9538]nroff, Up:[9539]=
   N =

   NSA line eater n.

   The National Security Agency trawling program sometimes assumed to be
   reading the net for the U.S. Government's spooks. Most hackers used to
   think it was mythical but believed in acting as though existed just in
   case. since the mid-1990s it has gradually become known that the NSA
   actually does this, quite illegaly, through its Echelon program.

   The standard countermeasure is to put loaded phrases like `KGB',
   `Uzi', `nuclear materials', `Palestine', `cocaine', and
   `assassination' in their [9540]sig blocks in a (probably futile)
   attempt to confuse and overload the creature. The [9541]GNU version of
   [9542]EMACS actually has a command that randomly inserts a bunch of
   insidious anarcho-verbiage into your edited text.

   As far back as the 1970s there was a mainstream variant of this myth
   involving a `Trunk Line Monitor', which supposedly used speech
   recognition to extract words from telephone trunks. This is much
   harder than noticing keywords in email, and most of the people who
   originally propagated it had no idea of then-current technology or the
   storage, signal-processing, or speech recognition needs of such a
   project. On the basis of mass-storage costs alone it would have been
   cheaper to hire 50 high-school students and just let them listen in.
   Twenty years and several orders of technological magnitude later,
   however, there are clear indications that the NSA has actually
   deployed such filtering (again, very much against U.S. law).
     _________________________________________________________________

   Node:NSP, Next:[9543]nude, Previous:[9544]NSA line eater, Up:[9545]= N
   =

   NSP /N-S-P/ n.

   Common abbreviation for `Network Service Provider', one of the big
   national or regional companies that maintains a portion of the
   Internet backbone and resells connectivity to [9546]ISPs. In 1996,
   major NSPs include ANS, MCI, UUNET, and Sprint. An Internet
   wholesaler.
     _________________________________________________________________

   Node:nude, Next:[9547]nugry, Previous:[9548]NSP, Up:[9549]= N =

   nude adj.

   Said of machines delivered without an operating system (compare
   [9550]bare metal). "We ordered 50 systems, but they all arrived nude,
   so we had to spend a an extra weekend with the installation disks."
   This usage is a recent innovation reflecting the fact that most IBM-PC
   clones are now delivered with an operating system pre-installed at the
   factory. Other kinds of hardware are still normally delivered without
   OS, so this term is particular to PC support groups.
     _________________________________________________________________

   Node:nugry, Next:[9551]nuke, Previous:[9552]nude, Up:[9553]= N =

   nugry /n[y]oo'gree/

   [Usenet, 'newbie' + '-gry'] `. n. A [9554]newbie who posts a [9555]FAQ
   in the rec.puzzles newsgroup, especially if it is a variant of the
   notorious and unanswerable "What, besides `angry' and `hungry', is the
   third common English word that ends in -GRY?". In the newsgroup, the
   canonical answer is of course `nugry' itself. Plural is `nusgry'
   /n[y]oos'gree/. 2. adj. Having the qualities of a nugry.
     _________________________________________________________________

   Node:nuke, Next:[9556]number-crunching, Previous:[9557]nugry,
   Up:[9558]= N =

   nuke /n[y]ook/ vt.

   [common] 1. To intentionally delete the entire contents of a given
   directory or storage volume. "On Unix, rm -r /usr will nuke everything
   in the usr filesystem." Never used for accidental deletion; contrast
   [9559]blow away. 2. Syn. for [9560]dike, applied to smaller things
   such as files, features, or code sections. Often used to express a
   final verdict. "What do you want me to do with that 80-meg
   [9561]wallpaper file?" "Nuke it." 3. Used of processes as well as
   files; nuke is a frequent verbal alias for kill -9 on Unix. 4. On IBM
   PCs, a bug that results in [9562]fandango on core can trash the
   operating system, including the FAT (the in-core copy of the disk
   block chaining information). This can utterly scramble attached disks,
   which are then said to have been `nuked'. This term is also used of
   analogous lossages on Macintoshes and other micros without memory
   protection.
     _________________________________________________________________

   Node:number-crunching, Next:[9563]numbers, Previous:[9564]nuke,
   Up:[9565]= N =

   number-crunching n.

   [common] Computations of a numerical nature, esp. those that make
   extensive use of floating-point numbers. The only thing [9566]Fortrash
   is good for. This term is in widespread informal use outside hackerdom
   and even in mainstream slang, but has additional hackish connotations:
   namely, that the computations are mindless and involve massive use of
   [9567]brute force. This is not always [9568]evil, esp. if it involves
   ray tracing or fractals or some other use that makes [9569]pretty
   pictures, esp. if such pictures can be used as [9570]wallpaper. See
   also [9571]crunch.
     _________________________________________________________________

   Node:numbers, Next:[9572]NUXI problem,
   Previous:[9573]number-crunching, Up:[9574]= N =

   numbers n.

   [scientific computation] Output of a computation that may not be
   significant results but at least indicate that the program is running.
   May be used to placate management, grant sponsors, etc. `Making
   numbers' means running a program because output -- any output, not
   necessarily meaningful output -- is needed as a demonstration of
   progress. See [9575]pretty pictures, [9576]math-out, [9577]social
   science number.
     _________________________________________________________________

   Node:NUXI problem, Next:[9578]nybble, Previous:[9579]numbers,
   Up:[9580]= N =

   NUXI problem /nuk'see pro'bl*m/ n.

   Refers to the problem of transferring data between machines with
   differing byte-order. The string `UNIX' might look like `NUXI' on a
   machine with a different `byte sex' (e.g., when transferring data from
   a [9581]little-endian to a [9582]big-endian, or vice-versa). See also
   [9583]middle-endian, [9584]swab, and [9585]bytesexual.
     _________________________________________________________________

   Node:nybble, Next:[9586]nyetwork, Previous:[9587]NUXI problem,
   Up:[9588]= N =

   nybble /nib'l/ (alt. `nibble') n.

   [from v. `nibble' by analogy with `bite' => `byte'] Four bits; one
   [9589]hex digit; a half-byte. Though `byte' is now techspeak, this
   useful relative is still jargon. Compare [9590]byte; see also
   [9591]bit. The more mundane spelling "nibble" is also commonly used.
   Apparently the `nybble' spelling is uncommon in Commonwealth Hackish,
   as British orthography would suggest the pronunciation /ni:'bl/.

   Following `bit', `byte' and `nybble' there have been quite a few
   analogical attempts to construct unambiguous terms for bit blocks of
   other sizes. All of these are strictly jargon, not techspeak, and not
   very common jargon at that (most hackers would recognize them in
   context but not use them spontaneously). We collect them here for
   reference together with the ambiguous techspeak terms `word',
   `half-word' and `double word'; some (indicated) have substantial
   information separate entries.

   2 bits:
          [9592]crumb, [9593]quad, [9594]quarter, tayste, tydbit

   4 bits:
          nybble

   5 bits:
          [9595]nickle

   10 bits:
          [9596]deckle

   16 bits:
          playte, [9597]chawmp (on a 32-bit machine), word (on a 16-bit
          machine), half-word (on a 32-bit machine).

   18 bits:
          [9598]chawmp (on a 36-bit machine), half-word (on a 36-bit
          machine)

   32 bits:
          dynner, [9599]gawble (on a 32-bit machine), word (on a 32-bit
          machine), longword (on a 16-bit machine).

   36:
          word (on a 36-bit machine)

   48 bits:
          [9600]gawble (under circumstances that remain obscure)

   64 bits
          double word (on a 32-bit machine)

   The fundamental motivation for most of these jargon terms (aside from
   the normal hackerly enjoyment of punning wordplay) is the extreme
   ambiguity of the term `word' and its derivatives.
     _________________________________________________________________

   Node:nyetwork, Next:[9601]Ob-, Previous:[9602]nybble, Up:[9603]= N =

   nyetwork /nyet'werk/ n.

   [from Russian `nyet' = no] A network, when it is acting [9604]flaky or
   is [9605]down. Compare [9606]notwork.
     _________________________________________________________________

   Node:= O =, Next:[9607]= P =, Previous:[9608]= N =, Up:[9609]The
   Jargon Lexicon

= O =

     * [9610]Ob-:
     * [9611]Obfuscated C Contest:
     * [9612]obi-wan error:
     * [9613]Objectionable-C:
     * [9614]obscure:
     * [9615]octal forty:
     * [9616]off the trolley:
     * [9617]off-by-one error:
     * [9618]offline:
     * [9619]ogg:
     * [9620]-oid:
     * [9621]old fart:
     * [9622]Old Testament:
     * [9623]on the gripping hand:
     * [9624]one-banana problem:
     * [9625]one-line fix:
     * [9626]one-liner wars:
     * [9627]ooblick:
     * [9628]op:
     * [9629]open:
     * [9630]open source:
     * [9631]open switch:
     * [9632]operating system:
     * [9633]optical diff:
     * [9634]optical grep:
     * [9635]optimism:
     * [9636]Oracle the:
     * [9637]Orange Book:
     * [9638]oriental food:
     * [9639]orphan:
     * [9640]orphaned i-node:
     * [9641]orthogonal:
     * [9642]OS:
     * [9643]OS/2:
     * [9644]OSS:
     * [9645]OSU:
     * [9646]OTOH:
     * [9647]out-of-band:
     * [9648]overclock:
     * [9649]overflow bit:
     * [9650]overflow pdl:
     * [9651]overrun:
     * [9652]overrun screw:
     _________________________________________________________________

   Node:Ob-, Next:[9653]Obfuscated C Contest, Previous:[9654]nyetwork,
   Up:[9655]= O =

   Ob- /ob/ pref.

   Obligatory. A piece of [9656]netiquette acknowledging that the author
   has been straying from the newsgroup's charter topic. For example, if
   a posting in alt.sex is a response to a part of someone else's posting
   that has nothing particularly to do with sex, the author may append
   `ObSex' (or `Obsex') and toss off a question or vignette about some
   unusual erotic act. It is considered a sign of great [9657]winnitude
   when one's Obs are more interesting than other people's whole
   postings.
     _________________________________________________________________

   Node:Obfuscated C Contest, Next:[9658]obi-wan error,
   Previous:[9659]Ob-, Up:[9660]= O =

   Obfuscated C Contest n.

   (in full, the `International Obfuscated C Code Contest', or IOCCC) An
   annual contest run since 1984 over Usenet by Landon Curt Noll and
   friends. The overall winner is whoever produces the most unreadable,
   creative, and bizarre (but working) C program; various other prizes
   are awarded at the judges' whim. C's terse syntax and
   macro-preprocessor facilities give contestants a lot of maneuvering
   room. The winning programs often manage to be simultaneously (a)
   funny, (b) breathtaking works of art, and (c) horrible examples of how
   not to code in C.

   This relatively short and sweet entry might help convey the flavor of
   obfuscated C:
/*
 * HELLO WORLD program
 * by Jack Applin and Robert Heckendorn, 1985
 * (Note: depends on being able to modify elements of argv[],
 * which is not guaranteed by ANSI and often not possible.)
 */
main(v,c)char**c;{for(v[c++]="Hello, world!\n)";
(!!c)[*c]&&(v--||--c&&execlp(*c,*c,c[!!c]+!!c,!c));
**c=!c)write(!!*c,*c,!!**c);}

   Here's another good one:
/*
 * Program to compute an approximation of pi
 * by Brian Westley, 1988
 * (requires pcc macro concatenation; try gcc -traditional-cpp)
 */

#define _ -F<00||--F-OO--;
int F=00,OO=00;
main(){F_OO();printf("%1.3f\n",4.*-F/OO/OO);}F_OO()
{
            _-_-_-_
       _-_-_-_-_-_-_-_-_
    _-_-_-_-_-_-_-_-_-_-_-_
  _-_-_-_-_-_-_-_-_-_-_-_-_-_
 _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
 _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
 _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
 _-_-_-_-_-_-_-_-_-_-_-_-_-_-_
  _-_-_-_-_-_-_-_-_-_-_-_-_-_
    _-_-_-_-_-_-_-_-_-_-_-_
        _-_-_-_-_-_-_-_
            _-_-_-_
}

   Note that this program works by computing its own area. For more
   digits, write a bigger program. See also [9661]hello world.

   The IOCCC has an official home page at [9662]http://www.ioccc.org.
     _________________________________________________________________

   Node:obi-wan error, Next:[9663]Objectionable-C,
   Previous:[9664]Obfuscated C Contest, Up:[9665]= O =

   obi-wan error /oh'bee-won` er'*r/ n.

   [RPI, from `off-by-one' and the Obi-Wan Kenobi character in "Star
   Wars"] A loop of some sort in which the index is off by 1. Common when
   the index should have started from 0 but instead started from 1. A
   kind of [9666]off-by-one error. See also [9667]zeroth.
     _________________________________________________________________

   Node:Objectionable-C, Next:[9668]obscure, Previous:[9669]obi-wan
   error, Up:[9670]= O =

   Objectionable-C n.

   Hackish take on "Objective-C", the name of an object-oriented dialect
   of C in competition with the better-known C++ (it is used to write
   native applications on the NeXT machine). Objectionable-C uses a
   Smalltalk-like syntax, but lacks the flexibility of Smalltalk method
   calls, and (like many such efforts) comes frustratingly close to
   attaining the [9671]Right Thing without actually doing so.
     _________________________________________________________________

   Node:obscure, Next:[9672]octal forty, Previous:[9673]Objectionable-C,
   Up:[9674]= O =

   obscure adj.

   Used in an exaggeration of its normal meaning, to imply total
   incomprehensibility. "The reason for that last crash is obscure." "The
   find(1) command's syntax is obscure!" The phrase `moderately obscure'
   implies that something could be figured out but probably isn't worth
   the trouble. The construction `obscure in the extreme' is the
   preferred emphatic form.
     _________________________________________________________________

   Node:octal forty, Next:[9675]off the trolley, Previous:[9676]obscure,
   Up:[9677]= O =

   octal forty /ok'tl for'tee/ n.

   Hackish way of saying "I'm drawing a blank." Octal 40 is the
   [9678]ASCII space character, 0100000; by an odd coincidence, [9679]hex
   40 (01000000) is the [9680]EBCDIC space character. See [9681]wall.
     _________________________________________________________________

   Node:off the trolley, Next:[9682]off-by-one error,
   Previous:[9683]octal forty, Up:[9684]= O =

   off the trolley adj.

   Describes the behavior of a program that malfunctions and goes
   catatonic, but doesn't actually [9685]crash or abort. See
   [9686]glitch, [9687]bug, [9688]deep space, [9689]wedged.

   This term is much older than computing, and is (uncommon) slang
   elsewhere. A trolley is the small wheel that trolls, or runs against,
   the heavy wire that carries the current to run a streetcar. It's at
   the end of the long pole (the trolley pole) that reaches from the roof
   of the streetcar to the overhead line. When the trolley stops making
   contact with the wire (from passing through a switch, going over bumpy
   track, or whatever), the streetcar comes to a halt, (usually) without
   crashing. The streetcar is then said to be off the trolley, or off the
   wire. Later on, trolley came to mean the streetcar itself. Since
   streetcars became common in the 1890s, the term is more than 100 years
   old. Nowadays, trolleys are only seen on historic streetcars, since
   modern streetcars use pantographs to contact the wire.
     _________________________________________________________________

   Node:off-by-one error, Next:[9690]offline, Previous:[9691]off the
   trolley, Up:[9692]= O =

   off-by-one error n.

   [common] Exceedingly common error induced in many ways, such as by
   starting at 0 when you should have started at 1 or vice-versa, or by
   writing < N instead of <= N or vice-versa. Also applied to giving
   something to the person next to the one who should have gotten it.
   Often confounded with [9693]fencepost error, which is properly a
   particular subtype of it.
     _________________________________________________________________

   Node:offline, Next:[9694]ogg, Previous:[9695]off-by-one error,
   Up:[9696]= O =

   offline adv.

   Not now or not here. "Let's take this discussion offline."
   Specifically used on [9697]Usenet to suggest that a discussion be
   moved off a public newsgroup to email.
     _________________________________________________________________

   Node:ogg, Next:[9698]-oid, Previous:[9699]offline, Up:[9700]= O =

   ogg /og/ v.

   [CMU] 1. In the multi-player space combat game Netrek, to execute
   kamikaze attacks against enemy ships which are carrying armies or
   occupying strategic positions. Named during a game in which one of the
   players repeatedly used the tactic while playing Orion ship G, showing
   up in the player list as "Og". This trick has been roundly denounced
   by those who would return to the good old days when the tactic of
   dogfighting was dominant, but as Sun Tzu wrote, "What is of supreme
   importance in war is to attack the enemy's strategy, not his tactics."
   However, the traditional answer to the newbie question "What does ogg
   mean?" is just "Pick up some armies and I'll show you." 2. In other
   games, to forcefully attack an opponent with the expectation that the
   resources expended will be renewed faster than the opponent will be
   able to regain his previous advantage. Taken more seriously as a
   tactic since it has gained a simple name. 3. To do anything
   forcefully, possibly without consideration of the drain on future
   resources. "I guess I'd better go ogg the problem set that's due
   tomorrow." "Whoops! I looked down at the map for a sec and almost
   ogged that oncoming car."
     _________________________________________________________________

   Node:-oid, Next:[9701]old fart, Previous:[9702]ogg, Up:[9703]= O =

   -oid suff.

   [from Greek suffix -oid = `in the image of'] 1. Used as in mainstream
   slang English to indicate a poor imitation, a counterfeit, or some
   otherwise slightly bogus resemblance. Hackers will happily use it with
   all sorts of non-Greco/Latin stem words that wouldn't keep company
   with it in mainstream English. For example, "He's a nerdoid" means
   that he superficially resembles a nerd but can't make the grade; a
   `modemoid' might be a 300-baud box (Real Modems run at 28.8 or up); a
   `computeroid' might be any [9704]bitty box. The word `keyboid' could
   be used to describe a [9705]chiclet keyboard, but would have to be
   written; spoken, it would confuse the listener as to the speaker's
   city of origin. 2. More specifically, an indicator for `resembling an
   android' which in the past has been confined to science-fiction fans
   and hackers. It too has recently (in 1991) started to go mainstream
   (most notably in the term `trendoid' for victims of terminal hipness).
   This is probably traceable to the popularization of the term
   [9706]droid in "Star Wars" and its sequels. (See also [9707]windoid.)

   Coinages in both forms have been common in science fiction for at
   least fifty years, and hackers (who are often SF fans) have probably
   been making `-oid' jargon for almost that long [though GLS and I can
   personally confirm only that they were already common in the mid-1970s
   --ESR].
     _________________________________________________________________

   Node:old fart, Next:[9708]Old Testament, Previous:[9709]-oid,
   Up:[9710]= O =

   old fart n.

   Tribal elder. A title self-assumed with remarkable frequency by (esp.)
   Usenetters who have been programming for more than about 25 years;
   often appears in [9711]sig blocks attached to Jargon File
   contributions of great archeological significance. This is a term of
   insult in the second or third person but one of pride in first person.
     _________________________________________________________________

   Node:Old Testament, Next:[9712]on the gripping hand,
   Previous:[9713]old fart, Up:[9714]= O =

   Old Testament n.

   [C programmers] The first edition of [9715]K&R, the sacred text
   describing [9716]Classic C.
     _________________________________________________________________

   Node:on the gripping hand, Next:[9717]one-banana problem,
   Previous:[9718]Old Testament, Up:[9719]= O =

   on the gripping hand

   In the progression that starts "On the one hand..." and continues "On
   the other hand..." mainstream English may add "on the third hand..."
   even though most people don't have three hands. Among hackers, it is
   just as likely to be "on the gripping hand". This metaphor supplied
   the title of Larry Niven & Jerry Pournelle's 1993 SF novel "The
   Gripping Hand" which involved a species of hostile aliens with three
   arms (the same species, in fact, referenced in [9720]juggling eggs).
   As with [9721]TANSTAAFL and [9722]con, this usage one of the
   naturalized imports from SF fandom frequently observed among hackers.
     _________________________________________________________________

   Node:one-banana problem, Next:[9723]one-line fix, Previous:[9724]on
   the gripping hand, Up:[9725]= O =

   one-banana problem n.

   At mainframe shops, where the computers have operators for routine
   administrivia, the programmers and hardware people tend to look down
   on the operators and claim that a trained monkey could do their job.
   It is frequently observed that the incentives that would be offered
   said monkeys can be used as a scale to describe the difficulty of a
   task. A one-banana problem is simple; hence, "It's only a one-banana
   job at the most; what's taking them so long?"

   At IBM, folklore divides the world into one-, two-, and three-banana
   problems. Other cultures have different hierarchies and may divide
   them more finely; at ICL, for example, five grapes (a bunch) equals a
   banana. Their upper limit for the in-house [9726]sysapes is said to be
   two bananas and three grapes (another source claims it's three bananas
   and one grape, but observes "However, this is subject to local
   variations, cosmic rays and ISO"). At a complication level any higher
   than that, one asks the manufacturers to send someone around to check
   things.

   See also [9727]Infinite-Monkey Theorem.
     _________________________________________________________________

   Node:one-line fix, Next:[9728]one-liner wars,
   Previous:[9729]one-banana problem, Up:[9730]= O =

   one-line fix n.

   Used (often sarcastically) of a change to a program that is thought to
   be trivial or insignificant right up to the moment it crashes the
   system. Usually `cured' by another one-line fix. See also [9731]I
   didn't change anything!
     _________________________________________________________________

   Node:one-liner wars, Next:[9732]ooblick, Previous:[9733]one-line fix,
   Up:[9734]= O =

   one-liner wars n.

   A game popular among hackers who code in the language APL (see
   [9735]write-only language and [9736]line noise). The objective is to
   see who can code the most interesting and/or useful routine in one
   line of operators chosen from APL's exceedingly [9737]hairy primitive
   set. A similar amusement was practiced among [9738]TECO hackers and is
   now popular among [9739]Perl aficionados.

   Ken Iverson, the inventor of APL, has been credited with a one-liner
   that, given a number N, produces a list of the prime numbers from 1 to
   N inclusive. It looks like this:

   (2 = 0 +.= T o.| T) / T <- iN

   where `o' is the APL null character, the assignment arrow is a single
   character, and `i' represents the APL iota.

   Here's a [9740]Perl program that prints primes:
        perl -wle '(1 x $_) !~ /^(11+)\1+$/ && print while ++ $_'

   In the Perl world this game is sometimes called Perl Golf because the
   player with the fewest (key)strokes wins.
     _________________________________________________________________

   Node:ooblick, Next:[9741]op, Previous:[9742]one-liner wars, Up:[9743]=
   O =

   ooblick /oo'blik/ n.

   [from the Dr. Seuss title "Bartholomew and the Oobleck"; the spelling
   `oobleck' is still current in the mainstream] A bizarre semi-liquid
   sludge made from cornstarch and water. Enjoyed among hackers who make
   batches during playtime at parties for its amusing and extremely
   non-Newtonian behavior; it pours and splatters, but resists rapid
   motion like a solid and will even crack when hit by a hammer. Often
   found near lasers.

   Here is a field-tested ooblick recipe contributed by GLS:

   1 cup cornstarch
   1 cup baking soda
   3/4 cup water
   N drops of food coloring

   This recipe isn't quite as non-Newtonian as a pure cornstarch ooblick,
   but has an appropriately slimy feel.

   Some, however, insist that the notion of an ooblick recipe is far too
   mechanical, and that it is best to add the water in small increments
   so that the various mixed states the cornstarch goes through as it
   becomes ooblick can be grokked in fullness by many hands. For optional
   ingredients of this experience, see the "[9744]Ceremonial Chemicals"
   section of Appendix B.
     _________________________________________________________________

   Node:op, Next:[9745]open, Previous:[9746]ooblick, Up:[9747]= O =

   op /op/ n.

   1. In England and Ireland, common verbal abbreviation for `operator',
   as in system operator. Less common in the U.S., where [9748]sysop
   seems to be preferred. 2. [IRC] Someone who is endowed with privileges
   on [9749]IRC, not limited to a particular channel. These are generally
   people who are in charge of the IRC server at their particular site.
   Sometimes used interchangeably with [9750]CHOP. Compare [9751]sysop.
     _________________________________________________________________

   Node:open, Next:[9752]open source, Previous:[9753]op, Up:[9754]= O =

   open n.

   Abbreviation for `open (or left) parenthesis' -- used when necessary
   to eliminate oral ambiguity. To read aloud the LISP form (DEFUN FOO
   (X) (PLUS X 1)) one might say: "Open defun foo, open eks close, open,
   plus eks one, close close."
     _________________________________________________________________

   Node:open source, Next:[9755]open switch, Previous:[9756]open,
   Up:[9757]= O =

   open source n.

   [common; also adj. `open-source'] Term coined in March 1998 following
   the Mozilla release to describe software distributed in source under
   licenses guaranteeing anybody rights to freely use, modify, and
   redistribute, the code. The intent was to be able to sell the hackers'
   ways of doing software to industry and the mainstream by avoid the
   negative connotations (to [9758]suits) of the term "[9759]free
   software". For discussion of the followon tactics and their
   consequences, see the [9760]Open Source Initiative site.
     _________________________________________________________________

   Node:open switch, Next:[9761]operating system, Previous:[9762]open
   source, Up:[9763]= O =

   open switch n.

   [IBM: prob. from railroading] An unresolved question, issue, or
   problem.
     _________________________________________________________________

   Node:operating system, Next:[9764]optical diff, Previous:[9765]open
   switch, Up:[9766]= O =

   operating system n.

   [techspeak] (Often abbreviated `OS') The foundation software of a
   machine; that which schedules tasks, allocates storage, and presents a
   default interface to the user between applications. The facilities an
   operating system provides and its general design philosophy exert an
   extremely strong influence on programming style and on the technical
   cultures that grow up around its host machines. Hacker folklore has
   been shaped primarily by the [9767]Unix, [9768]ITS, [9769]TOPS-10,
   [9770]TOPS-20/[9771]TWENEX, [9772]WAITS, [9773]CP/M, [9774]MS-DOS, and
   [9775]Multics operating systems (most importantly by ITS and Unix).
     _________________________________________________________________

   Node:optical diff, Next:[9776]optical grep, Previous:[9777]operating
   system, Up:[9778]= O =

   optical diff n.

   See [9779]vdiff.
     _________________________________________________________________

   Node:optical grep, Next:[9780]optimism, Previous:[9781]optical diff,
   Up:[9782]= O =

   optical grep n.

   See [9783]vgrep.
     _________________________________________________________________

   Node:optimism, Next:[9784]Oracle the, Previous:[9785]optical grep,
   Up:[9786]= O =

   optimism n.

   What a programmer is full of after fixing the last bug and before
   discovering the next last bug. Fred Brooks's book "The Mythical
   Man-Month" (See "Brooks's Law") contains the following paragraph that
   describes this extremely well:

     All programmers are optimists. Perhaps this modern sorcery
     especially attracts those who believe in happy endings and fairy
     godmothers. Perhaps the hundreds of nitty frustrations drive away
     all but those who habitually focus on the end goal. Perhaps it is
     merely that computers are young, programmers are younger, and the
     young are always optimists. But however the selection process
     works, the result is indisputable: "This time it will surely run,"
     or "I just found the last bug.".

   See also [9787]Lubarsky's Law of Cybernetic Entomology.
     _________________________________________________________________

   Node:Oracle the, Next:[9788]Orange Book, Previous:[9789]optimism,
   Up:[9790]= O =

   Oracle, the

   The all-knowing, all-wise Internet Oracle rec.humor.oracle), or one of
   the foreign language derivatives of same. Newbies frequently confuse
   the Oracle with Oracle, a database vendor. As a result, the
   unmoderated rec.humor.oracle.d is frequently crossposted to by the
   clueless, looking for advice on SQL. As more than one person has said
   in similar situations, "Don't people bother to look at the newsgroup
   description line anymore?" (To which the standard response is, "Did
   people ever read it in the first place?")
     _________________________________________________________________

   Node:Orange Book, Next:[9791]oriental food, Previous:[9792]Oracle the,
   Up:[9793]= O =

   Orange Book n.

   The U.S. Government's standards document "Trusted Computer System
   Evaluation Criteria, DOD standard 5200.28-STD, December, 1985" which
   characterize secure computing architectures and defines levels A1
   (most secure) through D (least). Modern Unixes are roughly C2. See
   also [9794]crayola books, [9795]book titles.
     _________________________________________________________________

   Node:oriental food, Next:[9796]orphan, Previous:[9797]Orange Book,
   Up:[9798]= O =

   oriental food n.

   Hackers display an intense tropism towards oriental cuisine,
   especially Chinese, and especially of the spicier varieties such as
   Szechuan and Hunan. This phenomenon (which has also been observed in
   subcultures that overlap heavily with hackerdom, most notably
   science-fiction fandom) has never been satisfactorily explained, but
   is sufficiently intense that one can assume the target of a hackish
   dinner expedition to be the best local Chinese place and be right at
   least three times out of four. See also [9799]ravs, [9800]great-wall,
   [9801]stir-fried random, [9802]laser chicken, [9803]Yu-Shiang Whole
   Fish. Thai, Indian, Korean, and Vietnamese cuisines are also quite
   popular.
     _________________________________________________________________

   Node:orphan, Next:[9804]orphaned i-node, Previous:[9805]oriental food,
   Up:[9806]= O =

   orphan n.

   [Unix] A process whose parent has died; one inherited by init(1).
   Compare [9807]zombie.
     _________________________________________________________________

   Node:orphaned i-node, Next:[9808]orthogonal, Previous:[9809]orphan,
   Up:[9810]= O =

   orphaned i-node /or'f*nd i:'nohd/ n.

   [Unix] 1. [techspeak] A file that retains storage but no longer
   appears in the directories of a filesystem. 2. By extension, a
   pejorative for any person no longer serving a useful function within
   some organization, esp. [9811]lion food without subordinates.
     _________________________________________________________________

   Node:orthogonal, Next:[9812]OS, Previous:[9813]orphaned i-node,
   Up:[9814]= O =

   orthogonal adj.

   [from mathematics] Mutually independent; well separated; sometimes,
   irrelevant to. Used in a generalization of its mathematical meaning to
   describe sets of primitives or capabilities that, like a vector basis
   in geometry, span the entire `capability space' of the system and are
   in some sense non-overlapping or mutually independent. For example, in
   architectures such as the PDP-11 or VAX where all or nearly all
   registers can be used interchangeably in any role with respect to any
   instruction, the register set is said to be orthogonal. Or, in logic,
   the set of operators `not' and `or' is orthogonal, but the set `nand',
   `or', and `not' is not (because any one of these can be expressed in
   terms of the others). Also used in comments on human discourse: "This
   may be orthogonal to the discussion, but...."
     _________________________________________________________________

   Node:OS, Next:[9815]OS/2, Previous:[9816]orthogonal, Up:[9817]= O =

   OS /O-S/

   1. [Operating System] n. An abbreviation heavily used in email,
   occasionally in speech. 2. n. obs. On ITS, an output spy. See
   "[9818]OS and JEDGAR" in Appendix A.
     _________________________________________________________________

   Node:OS/2, Next:[9819]OSS, Previous:[9820]OS, Up:[9821]= O =

   OS/2 /O S too/ n.

   The anointed successor to MS-DOS for Intel 286- and 386-based micros;
   proof that IBM/Microsoft couldn't get it right the second time,
   either. Often called `Half-an-OS'. Mentioning it is usually good for a
   cheap laugh among hackers -- the design was so [9822]baroque, and the
   implementation of 1.x so bad, that 3 years after introduction you
   could still count the major [9823]apps shipping for it on the fingers
   of two hands -- in unary. The 2.x versions are said to have improved
   somewhat, and informed hackers now rate them superior to Microsoft
   Windows (an endorsement which, however, could easily be construed as
   damning with faint praise). See [9824]monstrosity, [9825]cretinous,
   [9826]second-system effect.
     _________________________________________________________________

   Node:OSS, Next:[9827]OSU, Previous:[9828]OS/2, Up:[9829]= O =

   OSS

   Written-only acronym for "Open Source Software" (see [9830]open
   source. This is a rather ugly [9831]TLA, and the principals in the
   open-source movement don't use it, but it has (perhaps inevitably)
   spread through the trade press like kudzu.
     _________________________________________________________________

   Node:OSU, Next:[9832]OTOH, Previous:[9833]OSS, Up:[9834]= O =

   OSU /O-S-U/ n. obs.

   [TMRC] Acronym for Officially Sanctioned User; a user who is
   recognized as such by the computer authorities and allowed to use the
   computer above the objections of the security monitor.
     _________________________________________________________________

   Node:OTOH, Next:[9835]out-of-band, Previous:[9836]OSU, Up:[9837]= O =

   OTOH //

   [Usenet; very common] On The Other Hand.
     _________________________________________________________________

   Node:out-of-band, Next:[9838]overclock, Previous:[9839]OTOH,
   Up:[9840]= O =

   out-of-band adj.

   [from telecommunications and network theory] 1. In software, describes
   values of a function which are not in its `natural' range of return
   values, but are rather signals that some kind of exception has
   occurred. Many C functions, for example, return a nonnegative integral
   value, but indicate failure with an out-of-band return value of -1.
   Compare [9841]hidden flag, [9842]green bytes, [9843]fence. 2. Also
   sometimes used to describe what communications people call `shift
   characters', such as the ESC that leads control sequences for many
   terminals, or the level shift indicators in the old 5-bit Baudot
   codes. 3. In personal communication, using methods other than email,
   such as telephones or [9844]snail-mail.
     _________________________________________________________________

   Node:overclock, Next:[9845]overflow bit, Previous:[9846]out-of-band,
   Up:[9847]= O =

   overclock /oh'vr-klok'/ vt.

   To operate a CPU or other digital logic device at a rate higher than
   it was designed for, under the assumption that the manufacturer put
   some [9848]slop into the specification to account for manufacturing
   tolerances. Overclocking something can result in intermittent
   [9849]crashes, and can even burn things out, since power dissipation
   is directly proportional to [9850]clock frequency. People who make a
   hobby of this are sometimes called "overclockers"; they are thrilled
   that they can run their 450MHz CPU at 500MHz, even though they can
   only tell the difference by running a [9851]benchmark program.
     _________________________________________________________________

   Node:overflow bit, Next:[9852]overflow pdl, Previous:[9853]overclock,
   Up:[9854]= O =

   overflow bit n.

   1. [techspeak] A [9855]flag on some processors indicating an attempt
   to calculate a result too large for a register to hold. 2. More
   generally, an indication of any kind of capacity overload condition.
   "Well, the [9856]Ada description was [9857]baroque all right, but I
   could hack it OK until they got to the exception handling ... that set
   my overflow bit." 3. The hypothetical bit that will be set if a hacker
   doesn't get to make a trip to the Room of Porcelain Fixtures: "I'd
   better process an internal interrupt before the overflow bit gets
   set."
     _________________________________________________________________

   Node:overflow pdl, Next:[9858]overrun, Previous:[9859]overflow bit,
   Up:[9860]= O =

   overflow pdl n.

   [MIT] The place where you put things when your [9861]PDL is full. If
   you don't have one and too many things get pushed, you forget
   something. The overflow pdl for a person's memory might be a memo pad.
   This usage inspired the following doggerel:

     Hey, diddle, diddle
     The overflow pdl
     To get a little more stack;
     If that's not enough
     Then you lose it all,
     And have to pop all the way back.
     -The Great Quux

   The term `pdl' (see [9862]PDL) seems to be primarily an MITism;
   outside MIT this term is replaced by `overflow [9863]stack' (but that
   wouldn't rhyme with `diddle').
     _________________________________________________________________

   Node:overrun, Next:[9864]overrun screw, Previous:[9865]overflow pdl,
   Up:[9866]= O =

   overrun n.

   1. [techspeak] Term for a frequent consequence of data arriving faster
   than it can be consumed, esp. in serial line communications. For
   example, at 9600 baud there is almost exactly one character per
   millisecond, so if a [9867]silo can hold only two characters and the
   machine takes longer than 2 msec to get to service the interrupt, at
   least one character will be lost. 2. Also applied to non-serial-I/O
   communications. "I forgot to pay my electric bill due to mail
   overrun." "Sorry, I got four phone calls in 3 minutes last night and
   lost your message to overrun." When [9868]thrashing at tasks, the next
   person to make a request might be told "Overrun!" Compare
   [9869]firehose syndrome. 3. More loosely, may refer to a [9870]buffer
   overflow not necessarily related to processing time (as in
   [9871]overrun screw).
     _________________________________________________________________

   Node:overrun screw, Next:[9872]P-mail, Previous:[9873]overrun,
   Up:[9874]= O =

   overrun screw n.

   [C programming] A variety of [9875]fandango on core produced by
   scribbling past the end of an array (C implementations typically have
   no checks for this error). This is relatively benign and easy to spot
   if the array is static; if it is auto, the result may be to
   [9876]smash the stack -- often resulting in [9877]heisenbugs of the
   most diabolical subtlety. The term `overrun screw' is used esp. of
   scribbles beyond the end of arrays allocated with malloc(3); this
   typically trashes the allocation header for the next block in the
   [9878]arena, producing massive lossage within malloc and often a core
   dump on the next operation to use stdio(3) or malloc(3) itself. See
   [9879]spam, [9880]overrun; see also [9881]memory leak, [9882]memory
   smash, [9883]aliasing bug, [9884]precedence lossage, [9885]fandango on
   core, [9886]secondary damage.
     _________________________________________________________________

   Node:= P =, Next:[9887]= Q =, Previous:[9888]= O =, Up:[9889]The
   Jargon Lexicon

= P =

     * [9890]P-mail:
     * [9891]P.O.D.:
     * [9892]packet over air:
     * [9893]padded cell:
     * [9894]page in:
     * [9895]page out:
     * [9896]pain in the net:
     * [9897]Pangloss parity:
     * [9898]paper-net:
     * [9899]param:
     * [9900]PARC:
     * [9901]parent message:
     * [9902]parity errors:
     * [9903]Parkinson's Law of Data:
     * [9904]parm:
     * [9905]parse:
     * [9906]Pascal:
     * [9907]pastie:
     * [9908]patch:
     * [9909]patch pumpkin:
     * [9910]patch space:
     * [9911]path:
     * [9912]pathological:
     * [9913]payware:
     * [9914]PBD:
     * [9915]PC-ism:
     * [9916]PD:
     * [9917]PDL:
     * [9918]PDP-10:
     * [9919]PDP-20:
     * [9920]PEBKAC:
     * [9921]peek:
     * [9922]pencil and paper:
     * [9923]Pentagram Pro:
     * [9924]Pentium:
     * [9925]peon:
     * [9926]percent-S:
     * [9927]perf:
     * [9928]perfect programmer syndrome:
     * [9929]Perl:
     * [9930]person of no account:
     * [9931]pessimal:
     * [9932]pessimizing compiler:
     * [9933]peta-:
     * [9934]PETSCII:
     * [9935]PFY:
     * [9936]phage:
     * [9937]phase:
     * [9938]phase of the moon:
     * [9939]phase-wrapping:
     * [9940]PHB:
     * [9941]phreaker:
     * [9942]phreaking:
     * [9943]pico-:
     * [9944]pig-tail:
     * [9945]pilot error:
     * [9946]ping:
     * [9947]Ping O' Death:
     * [9948]ping storm:
     * [9949]pink wire:
     * [9950]pipe:
     * [9951]pistol:
     * [9952]pixel sort:
     * [9953]pizza box:
     * [9954]plaid screen:
     * [9955]plain-ASCII:
     * [9956]plan file:
     * [9957]platinum-iridium:
     * [9958]playpen:
     * [9959]playte:
     * [9960]plingnet:
     * [9961]plokta:
     * [9962]plonk:
     * [9963]plug-and-pray:
     * [9964]plugh:
     * [9965]plumbing:
     * [9966]PM:
     * [9967]pnambic:
     * [9968]pod:
     * [9969]point-and-drool interface:
     * [9970]pointy hat:
     * [9971]pointy-haired:
     * [9972]poke:
     * [9973]poll:
     * [9974]polygon pusher:
     * [9975]POM:
     * [9976]pop:
     * [9977]POPJ:
     * [9978]poser:
     * [9979]post:
     * [9980]postcardware:
     * [9981]posting:
     * [9982]postmaster:
     * [9983]PostScript:
     * [9984]pound on:
     * [9985]power cycle:
     * [9986]power hit:
     * [9987]PPN:
     * [9988]pr0n:
     * [9989]precedence lossage:
     * [9990]prepend:
     * [9991]prestidigitization:
     * [9992]pretty pictures:
     * [9993]prettyprint:
     * [9994]pretzel key:
     * [9995]priesthood:
     * [9996]prime time:
     * [9997]print:
     * [9998]printing discussion:
     * [9999]priority interrupt:
     * [10000]profile:
     * [10001]progasm:
     * [10002]proggy:
     * [10003]proglet:
     * [10004]program:
     * [10005]Programmer's Cheer:
     * [10006]programming:
     * [10007]programming fluid:
     * [10008]propeller head:
     * [10009]propeller key:
     * [10010]proprietary:
     * [10011]protocol:
     * [10012]provocative maintenance:
     * [10013]prowler:
     * [10014]pseudo:
     * [10015]pseudoprime:
     * [10016]pseudosuit:
     * [10017]psychedelicware:
     * [10018]psyton:
     * [10019]pubic directory:
     * [10020]puff:
     * [10021]pumpkin holder:
     * [10022]pumpking:
     * [10023]punched card:
     * [10024]punt:
     * [10025]Purple Book:
     * [10026]purple wire:
     * [10027]push:
     * [10028]Python:
     _________________________________________________________________

   Node:P-mail, Next:[10029]P.O.D., Previous:[10030]overrun screw,
   Up:[10031]= P =

   P-mail n.

   [rare] Physical mail, as opposed to [10032]email. Synonymous with
   [10033]snail-mail, but much less common.
     _________________________________________________________________

   Node:P.O.D., Next:[10034]packet over air, Previous:[10035]P-mail,
   Up:[10036]= P =

   P.O.D. /P-O-D/

   [rare] Acronym for `Piece Of Data' (as opposed to a code section). See
   also [10037]pod.
     _________________________________________________________________

   Node:packet over air, Next:[10038]padded cell, Previous:[10039]P.O.D.,
   Up:[10040]= P =

   packet over air

   [common among backbone ISPs] The protocol notionally being used by
   Internet data attempting to traverse a physical gap or break in the
   network, such as might be caused by a [10041]fiber-seeking backhoe. "I
   see why you're dropping packets. You seem to have a packet over air
   problem.
     _________________________________________________________________

   Node:padded cell, Next:[10042]page in, Previous:[10043]packet over
   air, Up:[10044]= P =

   padded cell n.

   Where you put [10045]lusers so they can't hurt anything. A program
   that limits a luser to a carefully restricted subset of the
   capabilities of the host system (for example, the rsh(1) utility on
   USG Unix). Note that this is different from an [10046]iron box because
   it is overt and not aimed at enforcing security so much as protecting
   others (and the luser) from the consequences of the luser's boundless
   naivete (see [10047]naive). Also `padded cell environment'.
     _________________________________________________________________

   Node:page in, Next:[10048]page out, Previous:[10049]padded cell,
   Up:[10050]= P =

   page in v.

   [MIT] 1. To become aware of one's surroundings again after having
   paged out (see [10051]page out). Usually confined to the sarcastic
   comment: "Eric pages in, [10052]film at 11!" 2. Syn. `swap in'; see
   [10053]swap.
     _________________________________________________________________

   Node:page out, Next:[10054]pain in the net, Previous:[10055]page in,
   Up:[10056]= P =

   page out vi.

   [MIT] 1. To become unaware of one's surroundings temporarily, due to
   daydreaming or preoccupation. "Can you repeat that? I paged out for a
   minute." See [10057]page in. Compare [10058]glitch, [10059]thinko. 2.
   Syn. `swap out'; see [10060]swap.
     _________________________________________________________________

   Node:pain in the net, Next:[10061]Pangloss parity,
   Previous:[10062]page out, Up:[10063]= P =

   pain in the net n.

   A [10064]flamer.
     _________________________________________________________________

   Node:Pangloss parity, Next:[10065]paper-net, Previous:[10066]pain in
   the net, Up:[10067]= P =

   Pangloss parity n.

   [from Dr. Pangloss, the eternal optimist in Voltaire's "Candide"] In
   corporate DP shops, a common condition of severe but equally shared
   [10068]lossage resulting from the theory that as long as everyone in
   the organization has the exactly the same model of obsolete computer,
   everything will be fine.
     _________________________________________________________________

   Node:paper-net, Next:[10069]param, Previous:[10070]Pangloss parity,
   Up:[10071]= P =

   paper-net n.

   Hackish way of referring to the postal service, analogizing it to a
   very slow, low-reliability network. Usenet [10072]sig blocks sometimes
   include a "Paper-Net:" header just before the sender's postal address;
   common variants of this are "Papernet" and "P-Net". Note that the
   standard [10073]netiquette guidelines discourage this practice as a
   waste of bandwidth, since netters are quite unlikely to casually use
   postal addresses. Compare [10074]voice-net, [10075]snail-mail,
   [10076]P-mail.
     _________________________________________________________________

   Node:param, Next:[10077]PARC, Previous:[10078]paper-net, Up:[10079]= P
   =

   param /p*-ram'/ n.

   [common] Shorthand for `parameter'. See also [10080]parm; compare
   [10081]arg, [10082]var.
     _________________________________________________________________

   Node:PARC, Next:[10083]parent message, Previous:[10084]param,
   Up:[10085]= P =

   PARC n.

   See [10086]XEROX PARC.
     _________________________________________________________________

   Node:parent message, Next:[10087]parity errors, Previous:[10088]PARC,
   Up:[10089]= P =

   parent message n.

   What a [10090]followup follows up.
     _________________________________________________________________

   Node:parity errors, Next:[10091]Parkinson's Law of Data,
   Previous:[10092]parent message, Up:[10093]= P =

   parity errors pl.n.

   Little lapses of attention or (in more severe cases) consciousness,
   usually brought on by having spent all night and most of the next day
   hacking. "I need to go home and crash; I'm starting to get a lot of
   parity errors." Derives from a relatively common but nearly always
   correctable transient error in memory hardware. It predates RAM; in
   fact, this term is reported to have already have been in use in its
   jargoin sense back in the 1960s when magnetic cores ruled. Parity
   errors can also afflict mass storage and serial communication lines;
   this is more serious because not always correctable.
     _________________________________________________________________

   Node:Parkinson's Law of Data, Next:[10094]parm, Previous:[10095]parity
   errors, Up:[10096]= P =

   Parkinson's Law of Data prov.

   "Data expands to fill the space available for storage"; buying more
   memory encourages the use of more memory-intensive techniques. It has
   been observed since the mid-1980s that the memory usage of evolving
   systems tends to double roughly once every 18 months. Fortunately,
   memory density available for constant dollars also tends to about
   double once every 18 months (see [10097]Moore's Law); unfortunately,
   the laws of physics guarantee that the latter cannot continue
   indefinitely.
     _________________________________________________________________

   Node:parm, Next:[10098]parse, Previous:[10099]Parkinson's Law of Data,
   Up:[10100]= P =

   parm /parm/ n.

   Further-compressed form of [10101]param. This term is an IBMism, and
   written use is almost unknown outside IBM shops; spoken /parm/ is more
   widely distributed, but the synonym [10102]arg is favored among
   hackers. Compare [10103]arg, [10104]var.
     _________________________________________________________________

   Node:parse, Next:[10105]Pascal, Previous:[10106]parm, Up:[10107]= P =

   parse [from linguistic terminology] vt.

   1. To determine the syntactic structure of a sentence or other
   utterance (close to the standard English meaning). "That was the one I
   saw you." "I can't parse that." 2. More generally, to understand or
   comprehend. "It's very simple; you just kretch the glims and then aos
   the zotz." "I can't parse that." 3. Of fish, to have to remove the
   bones yourself. "I object to parsing fish", means "I don't want to get
   a whole fish, but a sliced one is okay". A `parsed fish' has been
   deboned. There is some controversy over whether `unparsed' should mean
   `bony', or also mean `deboned'.
     _________________________________________________________________

   Node:Pascal, Next:[10108]pastie, Previous:[10109]parse, Up:[10110]= P
   =

   Pascal n.

   An Algol-descended language designed by Niklaus Wirth on the CDC 6600
   around 1967-68 as an instructional tool for elementary programming.
   This language, designed primarily to keep students from shooting
   themselves in the foot and thus extremely restrictive from a
   general-purpose-programming point of view, was later promoted as a
   general-purpose tool and, in fact, became the ancestor of a large
   family of languages including Modula-2 and [10111]Ada (see also
   [10112]bondage-and-discipline language). The hackish point of view on
   Pascal was probably best summed up by a devastating (and, in its
   deadpan way, screamingly funny) 1981 paper by Brian Kernighan (of
   [10113]K&R fame) entitled "Why Pascal is Not My Favorite Programming
   Language", which was turned down by the technical journals but
   circulated widely via photocopies. It was eventually published in
   "Comparing and Assessing Programming Languages", edited by Alan Feuer
   and Narain Gehani (Prentice-Hall, 1984). Part of his discussion is
   worth repeating here, because its criticisms are still apposite to
   Pascal itself after ten years of improvement and could also stand as
   an indictment of many other bondage-and-discipline languages. At the
   end of a summary of the case against Pascal, Kernighan wrote:

     9. There is no escape

     This last point is perhaps the most important. The language is
     inadequate but circumscribed, because there is no way to escape its
     limitations. There are no casts to disable the type-checking when
     necessary. There is no way to replace the defective run-time
     environment with a sensible one, unless one controls the compiler
     that defines the "standard procedures". The language is closed.

     People who use Pascal for serious programming fall into a fatal
     trap. Because the language is impotent, it must be extended. But
     each group extends Pascal in its own direction, to make it look
     like whatever language they really want. Extensions for separate
     compilation, FORTRAN-like COMMON, string data types, internal
     static variables, initialization, octal numbers, bit operators,
     etc., all add to the utility of the language for one group but
     destroy its portability to others.

     I feel that it is a mistake to use Pascal for anything much beyond
     its original target. In its pure form, Pascal is a toy language,
     suitable for teaching but not for real programming.

   Pascal has since been almost entirely displaced (by [10114]C) from the
   niches it had acquired in serious applications and systems
   programming, but retains some popularity as a hobbyist language in the
   MS-DOS and Macintosh worlds.
     _________________________________________________________________

   Node:pastie, Next:[10115]patch, Previous:[10116]Pascal, Up:[10117]= P
   =

   pastie /pay'stee/ n.

   An adhesive-backed label designed to be attached to a key on a
   keyboard to indicate some non-standard character which can be accessed
   through that key. Pasties are likely to be used in APL environments,
   where almost every key is associated with a special character. A
   pastie on the R key, for example, might remind the user that it is
   used to generate the rho character. The term properly refers to
   nipple-concealing devices formerly worn by strippers in concession to
   indecent-exposure laws; compare [10118]tits on a keyboard.
     _________________________________________________________________

   Node:patch, Next:[10119]patch pumpkin, Previous:[10120]pastie,
   Up:[10121]= P =

   patch

   1. n. A temporary addition to a piece of code, usually as a
   [10122]quick-and-dirty remedy to an existing bug or misfeature. A
   patch may or may not work, and may or may not eventually be
   incorporated permanently into the program. Distinguished from a
   [10123]diff or [10124]mod by the fact that a patch is generated by
   more primitive means than the rest of the program; the classical
   examples are instructions modified by using the front panel switches,
   and changes made directly to the binary executable of a program
   originally written in an [10125]HLL. Compare [10126]one-line fix. 2.
   vt. To insert a patch into a piece of code. 3. [in the Unix world] n.
   A [10127]diff (sense 2). 4. A set of modifications to binaries to be
   applied by a patching program. IBM operating systems often receive
   updates to the operating system in the form of absolute hexadecimal
   patches. If you have modified your OS, you have to disassemble these
   back to the source. The patches might later be corrected by other
   patches on top of them (patches were said to "grow scar tissue"). The
   result was often a convoluted [10128]patch space and headaches galore.
   5. [Unix] the patch(1) program, written by Larry Wall, which
   automatically applies a patch (sense 3) to a set of source code.

   There is a classic story of a [10129]tiger team penetrating a secure
   military computer that illustrates the danger inherent in binary
   patches (or, indeed, any patches that you can't -- or don't -- inspect
   and examine before installing). They couldn't find any [10130]trap
   doors or any way to penetrate security of IBM's OS, so they made a
   site visit to an IBM office (remember, these were official military
   types who were purportedly on official business), swiped some IBM
   stationery, and created a fake patch. The patch was actually the
   trapdoor they needed. The patch was distributed at about the right
   time for an IBM patch, had official stationery and all accompanying
   documentation, and was dutifully installed. The installation manager
   very shortly thereafter learned something about proper procedures.
     _________________________________________________________________

   Node:patch pumpkin, Next:[10131]patch space, Previous:[10132]patch,
   Up:[10133]= P =

   patch pumpkin n.

   [Perl hackers] A notional token passed around among the members of a
   project. Possession of the patch pumpkin means one has the exclusive
   authority to make changes on the project's master source tree. The
   implicit assumption is that `pumpkin holder' status is temporary and
   rotates periodically among senior project members.

   This term comes from the Perl development community, but has been
   sighted elsewhere. It derives from a stuffed-toy pumpkin that was
   passed around at a development shop years ago as the access control
   for a shared backup-tape drive.
     _________________________________________________________________

   Node:patch space, Next:[10134]path, Previous:[10135]patch pumpkin,
   Up:[10136]= P =

   patch space n.

   An unused block of bits left in a binary so that it can later be
   modified by insertion of machine-language instructions there
   (typically, the patch space is modified to contain new code, and the
   superseded code is patched to contain a jump or call to the patch
   space). The near-universal use of compilers and interpreters has made
   this term rare; it is now primarily historical outside IBM shops. See
   [10137]patch (sense 4), [10138]zap (sense 4), [10139]hook.
     _________________________________________________________________

   Node:path, Next:[10140]pathological, Previous:[10141]patch space,
   Up:[10142]= P =

   path n.

   1. A [10143]bang path or explicitly routed [10144]Internet address; a
   node-by-node specification of a link between two machines. Though
   these are now obsolete as a form of addressing, they still show up in
   diagnostics and trace headers ocvcasionally (e.g. in NNTP headers). 2.
   [Unix] A filename, fully specified relative to the root directory (as
   opposed to relative to the current directory; the latter is sometimes
   called a `relative path'). This is also called a `pathname'. 3. [Unix
   and MS-DOS] The `search path', an environment variable specifying the
   directories in which the [10145]shell (COMMAND.COM, under MS-DOS)
   should look for commands. Other, similar constructs abound under Unix
   (for example, the C preprocessor has a `search path' it uses in
   looking for #include files).
     _________________________________________________________________

   Node:pathological, Next:[10146]payware, Previous:[10147]path,
   Up:[10148]= P =

   pathological adj.

   1. [scientific computation] Used of a data set that is grossly
   atypical of normal expected input, esp. one that exposes a weakness or
   bug in whatever algorithm one is using. An algorithm that can be
   broken by pathological inputs may still be useful if such inputs are
   very unlikely to occur in practice. 2. When used of test input,
   implies that it was purposefully engineered as a worst case. The
   implication in both senses is that the data is spectacularly
   ill-conditioned or that someone had to explicitly set out to break the
   algorithm in order to come up with such a crazy example. 3. Also said
   of an unlikely collection of circumstances. "If the network is down
   and comes up halfway through the execution of that command by root,
   the system may just crash." "Yes, but that's a pathological case."
   Often used to dismiss the case from discussion, with the implication
   that the consequences are acceptable, since they will happen so
   infrequently (if at all) that it doesn't seem worth going to the extra
   trouble to handle that case (see sense 1).
     _________________________________________________________________

   Node:payware, Next:[10149]PBD, Previous:[10150]pathological,
   Up:[10151]= P =

   payware /pay'weir/ n.

   Commercial software. Oppose [10152]shareware or [10153]freeware.
     _________________________________________________________________

   Node:PBD, Next:[10154]PC-ism, Previous:[10155]payware, Up:[10156]= P =

   PBD /P-B-D/ n.

   [abbrev. of `Programmer Brain Damage'] Applied to bug reports
   revealing places where the program was obviously broken by an
   incompetent or short-sighted programmer. Compare [10157]UBD; see also
   [10158]brain-damaged.
     _________________________________________________________________

   Node:PC-ism, Next:[10159]PD, Previous:[10160]PBD, Up:[10161]= P =

   PC-ism /P-C-izm/ n.

   A piece of code or coding technique that takes advantage of the
   unprotected single-tasking environment in IBM PCs and the like running
   DOS, e.g., by busy-waiting on a hardware register, direct diddling of
   screen memory, or using hard timing loops. Compare [10162]ill-behaved,
   [10163]vaxism, [10164]unixism. Also, `PC-ware' n., a program full of
   PC-isms on a machine with a more capable operating system. Pejorative.
     _________________________________________________________________

   Node:PD, Next:[10165]PDL, Previous:[10166]PC-ism, Up:[10167]= P =

   PD /P-D/ adj.

   [common] Abbreviation for `public domain', applied to software
   distributed over [10168]Usenet and from Internet archive sites. Much
   of this software is not in fact public domain in the legal sense but
   travels under various copyrights granting reproduction and use rights
   to anyone who can [10169]snarf a copy. See [10170]copyleft.
     _________________________________________________________________

   Node:PDL, Next:[10171]PDP-10, Previous:[10172]PD, Up:[10173]= P =

   PDL /P-D-L/, /pid'l/, /p*d'l/ or /puhd'l/

   1. n. `Program Design Language'. Any of a large class of formal and
   profoundly useless pseudo-languages in which [10174]management forces
   one to design programs. Too often, management expects PDL descriptions
   to be maintained in parallel with the code, imposing massive overhead
   to little or no benefit. See also [10175]flowchart. 2. v. To design
   using a program design language. "I've been pdling so long my eyes
   won't focus beyond 2 feet." 3. n. `Page Description Language'. Refers
   to any language which is used to control a graphics device, usually a
   laserprinter. The most common example is, of course, Adobe's
   [10176]PostScript language, but there are many others, such as Xerox
   InterPress, etc. 4. In ITS days, the preferred MITism for
   [10177]stack. See [10178]overflow pdl. 5. Dave Lebling, one of the
   co-authors of [10179]Zork; (his [10180]network address on the ITS
   machines was at one time pdl@dms).
     _________________________________________________________________

   Node:PDP-10, Next:[10181]PDP-20, Previous:[10182]PDL, Up:[10183]= P =

   PDP-10 n.

   [Programmed Data Processor model 10] The machine that made timesharing
   real. It looms large in hacker folklore because of its adoption in the
   mid-1970s by many university computing facilities and research labs,
   including the MIT AI Lab, Stanford, and CMU. Some aspects of the
   instruction set (most notably the bit-field instructions) are still
   considered unsurpassed. The 10 was eventually eclipsed by the VAX
   machines (descendants of the PDP-11) when [10184]DEC recognized that
   the 10 and VAX product lines were competing with each other and
   decided to concentrate its software development effort on the more
   profitable VAX. The machine was finally dropped from DEC's line in
   1983, following the failure of the Jupiter Project at DEC to build a
   viable new model. (Some attempts by other companies to market clones
   came to nothing; see [10185]Foonly and [10186]Mars.) This event
   spelled the doom of [10187]ITS and the technical cultures that had
   spawned the original Jargon File, but by mid-1991 it had become
   something of a badge of honorable old-timerhood among hackers to have
   cut one's teeth on a PDP-10. See [10188]TOPS-10, [10189]ITS,
   [10190]BLT, [10191]DDT, [10192]DPB, [10193]EXCH, [10194]HAKMEM,
   [10195]LDB, [10196]pop, [10197]push. See also
   [10198]http://www.inwap.com/pdp10/.
     _________________________________________________________________

   Node:PDP-20, Next:[10199]PEBKAC, Previous:[10200]PDP-10, Up:[10201]= P
   =

   PDP-20 n.

   The most famous computer that never was. [10202]PDP-10 computers
   running the [10203]TOPS-10 operating system were labeled
   `DECsystem-10' as a way of differentiating them from the PDP-11. Later
   on, those systems running [10204]TOPS-20 were labeled `DECSYSTEM-20'
   (the block capitals being the result of a lawsuit brought against DEC
   by Singer, which once made a computer called `system-10'), but
   contrary to popular lore there was never a `PDP-20'; the only
   difference between a 10 and a 20 was the operating system and the
   color of the paint. Most (but not all) machines sold to run TOPS-10
   were painted `Basil Blue', whereas most TOPS-20 machines were painted
   `Chinese Red' (often mistakenly called orange).
     _________________________________________________________________

   Node:PEBKAC, Next:[10205]peek, Previous:[10206]PDP-20, Up:[10207]= P =

   PEBKAC /peb'kak/

   [Abbrev., "Problem Exists Between Keyboard And Chair"] Used by support
   people, particularly at call centers and help desks. Not used with the
   public. Denotes pilot error as the cause of the crash, especially
   stupid errors that even a [10208]luser could figure out. Very
   derogatory. Usage: "Did you ever figure out why that guy couldn't
   print?" "Yeah, he kept cancelling the operation before it could
   finish. PEBKAC."
     _________________________________________________________________

   Node:peek, Next:[10209]pencil and paper, Previous:[10210]PEBKAC,
   Up:[10211]= P =

   peek n.,vt.

   (and [10212]poke) The commands in most microcomputer BASICs for
   directly accessing memory contents at an absolute address; often
   extended to mean the corresponding constructs in any [10213]HLL (peek
   reads memory, poke modifies it). Much hacking on small, non-MMU micros
   used to consist of `peek'ing around memory, more or less at random, to
   find the location where the system keeps interesting stuff. Long (and
   variably accurate) lists of such addresses for various computers
   circulated (see [10214]interrupt list). The results of `poke's at
   these addresses may be highly useful, mildly amusing, useless but
   neat, or (most likely) total [10215]lossage (see [10216]killer poke).

   Since a [10217]real operating system provides useful, higher-level
   services for the tasks commonly performed with peeks and pokes on
   micros, and real languages tend not to encourage low-level memory
   groveling, a question like "How do I do a peek in C?" is diagnostic of
   the [10218]newbie. (Of course, OS kernels often have to do exactly
   this; a real kernel hacker would unhesitatingly, if unportably, assign
   an absolute address to a pointer variable and indirect through it.)
     _________________________________________________________________

   Node:pencil and paper, Next:[10219]Pentagram Pro,
   Previous:[10220]peek, Up:[10221]= P =

   pencil and paper n.

   An archaic information storage and transmission device that works by
   depositing smears of graphite on bleached wood pulp. More recent
   developments in paper-based technology include improved `write-once'
   update devices which use tiny rolling heads similar to mouse balls to
   deposit colored pigment. All these devices require an operator skilled
   at so-called `handwriting' technique. These technologies are
   ubiquitous outside hackerdom, but nearly forgotten inside it. Most
   hackers had terrible handwriting to begin with, and years of
   keyboarding tend to have encouraged it to degrade further. Perhaps for
   this reason, hackers deprecate pencil-and-paper technology and often
   resist using it in any but the most trivial contexts.
     _________________________________________________________________

   Node:Pentagram Pro, Next:[10222]Pentium, Previous:[10223]pencil and
   paper, Up:[10224]= P =

   Pentagram Pro n.

   A humorous corruption of "Pentium Pro", with a Satanic reference,
   implying that the chip is inherently [10225]evil. Often used with "666
   MHz"; there is a T-shirt. See [10226]Pentium
     _________________________________________________________________

   Node:Pentium, Next:[10227]peon, Previous:[10228]Pentagram Pro,
   Up:[10229]= P =

   Pentium n.

   The name given to Intel's P5 chip, the successor to the 80486. The
   name was chosen because of difficulties Intel had in trademarking a
   number. It suggests the number five (implying 586) while (according to
   Intel) conveying a meaning of strength "like titanium". Among hackers,
   the plural is frequently `pentia'. See also [10230]Pentagram Pro.

   Intel did not stick to this convention when naming its P6 processor
   the Pentium Pro; many believe this is due to difficulties in selling a
   chip with "sex" in its name. Successor chips have been called `Pentium
   II' and `Pentium III'.
     _________________________________________________________________

   Node:peon, Next:[10231]percent-S, Previous:[10232]Pentium, Up:[10233]=
   P =

   peon n.

   A person with no special ([10234]root or [10235]wheel) privileges on a
   computer system. "I can't create an account on foovax for you; I'm
   only a peon there."
     _________________________________________________________________

   Node:percent-S, Next:[10236]perf, Previous:[10237]peon, Up:[10238]= P
   =

   percent-S /per-sent' es'/ n.

   [From the code in C's printf(3) library function used to insert an
   arbitrary string argument] An unspecified person or object. "I was
   just talking to some percent-s in administration." Compare
   [10239]random.
     _________________________________________________________________

   Node:perf, Next:[10240]perfect programmer syndrome,
   Previous:[10241]percent-S, Up:[10242]= P =

   perf /perf/ n.

   Syn. [10243]chad (sense 1). The term `perfory' /per'f*-ree/ is also
   heard. The term [10244]perf may also refer to the perforations
   themselves, rather than the chad they produce when torn (philatelists
   use it this way).
     _________________________________________________________________

   Node:perfect programmer syndrome, Next:[10245]Perl,
   Previous:[10246]perf, Up:[10247]= P =

   perfect programmer syndrome n.

   Arrogance; the egotistical conviction that one is above normal human
   error. Most frequently found among programmers of some native ability
   but relatively little experience (especially new graduates; their
   perceptions may be distorted by a history of excellent performance at
   solving [10248]toy problems). "Of course my program is correct, there
   is no need to test it." "Yes, I can see there may be a problem here,
   but I'll never type rm -r / while in [10249]root mode."
     _________________________________________________________________

   Node:Perl, Next:[10250]person of no account, Previous:[10251]perfect
   programmer syndrome, Up:[10252]= P =

   Perl /perl/ n.

   [Practical Extraction and Report Language, a.k.a. Pathologically
   Eclectic Rubbish Lister] An interpreted language developed by Larry
   Wall ([10253]<larry@wall.org>, author of patch(1) and rn(1)) and
   distributed over Usenet. Superficially resembles [10254]awk, but is
   much hairier, including many facilities reminiscent of sed(1) and
   shells and a comprehensive Unix system-call interface. Unix sysadmins,
   who are almost always incorrigible hackers, generally consider it one
   of the [10255]languages of choice, and it is by far the most widely
   used tool for making `live' web pages via CGI. Perl has been
   described, in a parody of a famous remark about lex(1), as the
   "Swiss-Army chainsaw" of Unix programming. Though Perl is very useful,
   it would be a stretch to describe it as pretty or [10256]elegant;
   people who like clean, spare design generally prefer [10257]Python.
   See also [10258]Camel Book, [10259]TMTOWTDI.
     _________________________________________________________________

   Node:person of no account, Next:[10260]pessimal, Previous:[10261]Perl,
   Up:[10262]= P =

   person of no account n.

   [University of California at Santa Cruz] Used when referring to a
   person with no [10263]network address, frequently to forestall
   confusion. Most often as part of an introduction: "This is Bill, a
   person of no account, but he used to be bill@random.com". Compare
   [10264]return from the dead.
     _________________________________________________________________

   Node:pessimal, Next:[10265]pessimizing compiler,
   Previous:[10266]person of no account, Up:[10267]= P =

   pessimal /pes'im-l/ adj.

   [Latin-based antonym for `optimal'] Maximally bad. "This is a pessimal
   situation." Also `pessimize' vt. To make as bad as possible. These
   words are the obvious Latin-based antonyms for `optimal' and
   `optimize', but for some reason they do not appear in most English
   dictionaries, although `pessimize' is listed in the OED.
     _________________________________________________________________

   Node:pessimizing compiler, Next:[10268]peta-,
   Previous:[10269]pessimal, Up:[10270]= P =

   pessimizing compiler /pes'*-mi:z`ing k*m-pi:l'r/ n.

   A compiler that produces object [antonym of techspeak `optimizing
   compiler'] code that is worse than the straightforward or obvious hand
   translation. The implication is that the compiler is actually trying
   to optimize the program, but through excessive cleverness is doing the
   opposite. A few pessimizing compilers have been written on purpose,
   however, as pranks or burlesques.
     _________________________________________________________________

   Node:peta-, Next:[10271]PETSCII, Previous:[10272]pessimizing compiler,
   Up:[10273]= P =

   peta- /pe't*/ pref

   [SI] See [10274]quantifiers.
     _________________________________________________________________

   Node:PETSCII, Next:[10275]PFY, Previous:[10276]peta-, Up:[10277]= P =

   PETSCII /pet'skee/ n. obs.

   [abbreviation of PET ASCII] The variation (many would say perversion)
   of the [10278]ASCII character set used by the Commodore Business
   Machines PET series of personal computers and the later Commodore C64,
   C16, C128, and VIC20 machines. The PETSCII set used left-arrow and
   up-arrow (as in old-style ASCII) instead of underscore and caret,
   placed the unshifted alphabet at positions 65-90, put the shifted
   alphabet at positions 193-218, and added graphics characters.
     _________________________________________________________________

   Node:PFY, Next:[10279]phage, Previous:[10280]PETSCII, Up:[10281]= P =

   PFY n.

   [Usenet; common] Abbreviation for `Pimply-Faced Youth'. A [10282]BOFH
   in training, esp. one apprenticed to an elder BOFH aged in evil.
     _________________________________________________________________

   Node:phage, Next:[10283]phase, Previous:[10284]PFY, Up:[10285]= P =

   phage n.

   A program that modifies other programs or databases in unauthorized
   ways; esp. one that propagates a [10286]virus or [10287]Trojan horse.
   See also [10288]worm, [10289]mockingbird. The analogy, of course, is
   with phage viruses in biology.
     _________________________________________________________________

   Node:phase, Next:[10290]phase of the moon, Previous:[10291]phage,
   Up:[10292]= P =

   phase

   1. n. The offset of one's waking-sleeping schedule with respect to the
   standard 24-hour cycle; a useful concept among people who often work
   at night and/or according to no fixed schedule. It is not uncommon to
   change one's phase by as much as 6 hours per day on a regular basis.
   "What's your phase?" "I've been getting in about 8 P.M. lately, but
   I'm going to [10293]wrap around to the day schedule by Friday." A
   person who is roughly 12 hours out of phase is sometimes said to be in
   `night mode'. (The term `day mode' is also (but less frequently) used,
   meaning you're working 9 to 5 (or, more likely, 10 to 6).) The act of
   altering one's cycle is called `changing phase'; `phase shifting' has
   also been recently reported from Caltech. 2. `change phase the hard
   way': To stay awake for a very long time in order to get into a
   different phase. 3. `change phase the easy way': To stay asleep, etc.
   However, some claim that either staying awake longer or sleeping
   longer is easy, and that it is shortening your day or night that is
   really hard (see [10294]wrap around). The `jet lag' that afflicts
   travelers who cross many time-zone boundaries may be attributed to two
   distinct causes: the strain of travel per se, and the strain of
   changing phase. Hackers who suddenly find that they must change phase
   drastically in a short period of time, particularly the hard way,
   experience something very like jet lag without traveling.
     _________________________________________________________________

   Node:phase of the moon, Next:[10295]phase-wrapping,
   Previous:[10296]phase, Up:[10297]= P =

   phase of the moon n.

   Used humorously as a random parameter on which something is said to
   depend. Sometimes implies unreliability of whatever is dependent, or
   that reliability seems to be dependent on conditions nobody has been
   able to determine. "This feature depends on having the channel open in
   mumble mode, having the foo switch set, and on the phase of the moon."
   See also [10298]heisenbug.

   True story: Once upon a time there was a program bug that really did
   depend on the phase of the moon. There was a little subroutine that
   had traditionally been used in various programs at MIT to calculate an
   approximation to the moon's true phase. GLS incorporated this routine
   into a LISP program that, when it wrote out a file, would print a
   timestamp line almost 80 characters long. Very occasionally the first
   line of the message would be too long and would overflow onto the next
   line, and when the file was later read back in the program would
   [10299]barf. The length of the first line depended on both the precise
   date and time and the length of the phase specification when the
   timestamp was printed, and so the bug literally depended on the phase
   of the moon!

   The first paper edition of the Jargon File (Steele-1983) included an
   example of one of the timestamp lines that exhibited this bug, but the
   typesetter `corrected' it. This has since been described as the
   phase-of-the-moon-bug bug.

   However, beware of assumptions. A few years ago, engineers of CERN
   (European Center for Nuclear Research) were baffled by some errors in
   experiments conducted with the LEP particle accelerator. As the
   formidable amount of data generated by such devices is heavily
   processed by computers before being seen by humans, many people
   suggested the software was somehow sensitive to the phase of the moon.
   A few desperate engineers discovered the truth; the error turned out
   to be the result of a tiny change in the geometry of the 27km
   circumference ring, physically caused by the deformation of the Earth
   by the passage of the Moon! This story has entered physics folklore as
   a Newtonian vengeance on particle physics and as an example of the
   relevance of the simplest and oldest physical laws to the most modern
   science.
     _________________________________________________________________

   Node:phase-wrapping, Next:[10300]PHB, Previous:[10301]phase of the
   moon, Up:[10302]= P =

   phase-wrapping n.

   [MIT] Syn. [10303]wrap around, sense 2.
     _________________________________________________________________

   Node:PHB, Next:[10304]phreaker, Previous:[10305]phase-wrapping,
   Up:[10306]= P =

   PHB /P-H-B/

   [Usenet; common; rarely spoken] Abbreviation, "Pointy-Haired Boss".
   From the [10307]Dilbert character, the archetypal halfwitted
   middle-[10308]management type. See also [10309]pointy-haired.
     _________________________________________________________________

   Node:phreaker, Next:[10310]phreaking, Previous:[10311]PHB, Up:[10312]=
   P =

   phreaker /freek'r/ n.

   One who engages in [10313]phreaking. See also [10314]blue box.
     _________________________________________________________________

   Node:phreaking, Next:[10315]pico-, Previous:[10316]phreaker,
   Up:[10317]= P =

   phreaking /freek'ing/ n.

   [from `phone phreak'] 1. The art and science of [10318]cracking the
   phone network (so as, for example, to make free long-distance calls).
   2. By extension, security-cracking in any other context (especially,
   but not exclusively, on communications networks) (see
   [10319]cracking).

   At one time phreaking was a semi-respectable activity among hackers;
   there was a gentleman's agreement that phreaking as an intellectual
   game and a form of exploration was OK, but serious theft of services
   was taboo. There was significant crossover between the hacker
   community and the hard-core phone phreaks who ran semi-underground
   networks of their own through such media as the legendary "TAP
   Newsletter". This ethos began to break down in the mid-1980s as wider
   dissemination of the techniques put them in the hands of less
   responsible phreaks. Around the same time, changes in the phone
   network made old-style technical ingenuity less effective as a way of
   hacking it, so phreaking came to depend more on overtly criminal acts
   such as stealing phone-card numbers. The crimes and punishments of
   gangs like the `414 group' turned that game very ugly. A few old-time
   hackers still phreak casually just to keep their hand in, but most
   these days have hardly even heard of `blue boxes' or any of the other
   paraphernalia of the great phreaks of yore.
     _________________________________________________________________

   Node:pico-, Next:[10320]pig-tail, Previous:[10321]phreaking,
   Up:[10322]= P =

   pico- pref.

   [SI: a quantifier meaning * 10^-12] Smaller than [10323]nano-; used in
   the same rather loose connotative way as [10324]nano- and micro-. This
   usage is not yet common in the way [10325]nano- and [10326]micro- are,
   but should be instantly recognizable to any hacker. See also
   [10327]quantifiers, [10328]micro-.
     _________________________________________________________________

   Node:pig-tail, Next:[10329]pilot error, Previous:[10330]pico-,
   Up:[10331]= P =

   pig-tail

   [radio hams] A short piece of cable with two connectors on each end
   for converting between one connector type and another. Common
   pig-tails are 9-to-25-pin serial-port converters and cables to connect
   PCMCIA network cards to an RJ-45 network cable.
     _________________________________________________________________

   Node:pilot error, Next:[10332]ping, Previous:[10333]pig-tail,
   Up:[10334]= P =

   pilot error n.

   [Sun: from aviation] A user's misconfiguration or misuse of a piece of
   software, producing apparently buglike results (compare [10335]UBD).
   "Joe Luser reported a bug in sendmail that causes it to generate bogus
   headers." "That's not a bug, that's pilot error. His sendmail.cf is
   hosed."
     _________________________________________________________________

   Node:ping, Next:[10336]Ping O' Death, Previous:[10337]pilot error,
   Up:[10338]= P =

   ping

   [from the submariners' term for a sonar pulse] 1. n. Slang term for a
   small network message (ICMP ECHO) sent by a computer to check for the
   presence and alertness of another. The Unix command ping(8) can be
   used to do this manually (note that ping(8)'s author denies the
   widespread folk etymology that the name was ever intended as acronym
   for `Packet INternet Groper'). Occasionally used as a phone greeting.
   See [10339]ACK, also [10340]ENQ. 2. vt. To verify the presence of. 3.
   vt. To get the attention of. 4. vt. To send a message to all members
   of a [10341]mailing list requesting an [10342]ACK (in order to verify
   that everybody's addresses are reachable). "We haven't heard much of
   anything from Geoff, but he did respond with an ACK both times I
   pinged jargon-friends." 5. n. A quantum packet of happiness. People
   who are very happy tend to exude pings; furthermore, one can
   intentionally create pings and aim them at a needy party (e.g., a
   depressed person). This sense of ping may appear as an exclamation;
   "Ping!" (I'm happy; I am emitting a quantum of happiness; I have been
   struck by a quantum of happiness). The form "pingfulness", which is
   used to describe people who exude pings, also occurs. (In the standard
   abuse of language, "pingfulness" can also be used as an exclamation,
   in which case it's a much stronger exclamation than just "ping"!).
   Oppose [10343]blargh.

   The funniest use of `ping' to date was described in January 1991 by
   Steve Hayman on the Usenet group comp.sys.next. He was trying to
   isolate a faulty cable segment on a TCP/IP Ethernet hooked up to a
   NeXT machine, and got tired of having to run back to his console after
   each cabling tweak to see if the ping packets were getting through. So
   he used the sound-recording feature on the NeXT, then wrote a script
   that repeatedly invoked ping(8), listened for an echo, and played back
   the recording on each returned packet. Result? A program that caused
   the machine to repeat, over and over, "Ping ... ping ... ping ..." as
   long as the network was up. He turned the volume to maximum, ferreted
   through the building with one ear cocked, and found a faulty tee
   connector in no time.
     _________________________________________________________________

   Node:Ping O' Death, Next:[10344]ping storm, Previous:[10345]ping,
   Up:[10346]= P =

   Ping O' Death n.

   A notorious [10347]exploit that (when first discovered) could be
   easily used to crash a wide variety of machines by overunning size
   limits in their TCP/IP stacks. First revealed in late 1996. The
   open-source Unix community patched its systems to remove the
   vulnerability within days or weeks, the closed-source OS vendors
   generally took months. While the difference in response times repeated
   a pattern familiar from other security incidents, the accompanying
   glare of Web-fueled publicity proved unusually embarrassing to the OS
   vendors and so passed into history and myth. The term is now used to
   refer to any nudge delivered by network wizards over the network that
   causes bad things to happen on the system being nudged. For the full
   story on the original exploit, see
   [10348]http://www.insecure.org/sploits/ping-o-death.html.

   Compare with 'kamikaze packet,' 'Finger of Death' and 'Chernobyl
   packet.'
     _________________________________________________________________

   Node:ping storm, Next:[10349]pink wire, Previous:[10350]Ping O' Death,
   Up:[10351]= P =

   ping storm n.

   A form of [10352]DoS attack consisting of a flood of [10353]ping
   requests (normally used to check network conditions) designed to
   disrupt the normal activity of a system. This act is sometimes called
   `ping lashing' or `ping flood'. Compare [10354]mail storm,
   [10355]broadcast storm.
     _________________________________________________________________

   Node:pink wire, Next:[10356]pipe, Previous:[10357]ping storm,
   Up:[10358]= P =

   pink wire n.

   [from the pink PTFE wire used in military equipment] As [10359]blue
   wire, but used in military applications. 2. vi. To add a pink wire to
   a board.
     _________________________________________________________________

   Node:pipe, Next:[10360]pistol, Previous:[10361]pink wire, Up:[10362]=
   P =

   pipe n.

   [common] Idiomatically, one's connection to the Internet; in context,
   the expansion "bit pipe" is understood. A "fat pipe" is a line with T1
   or higher capacity. A person with a 28.8 modem might be heard to
   complain "I need a bigger pipe".
     _________________________________________________________________

   Node:pistol, Next:[10363]pixel sort, Previous:[10364]pipe, Up:[10365]=
   P =

   pistol n.

   [IBM] A tool that makes it all too easy for you to shoot yourself in
   the foot. "Unix rm * makes such a nice pistol!"
     _________________________________________________________________

   Node:pixel sort, Next:[10366]pizza box, Previous:[10367]pistol,
   Up:[10368]= P =

   pixel sort n.

   [Commodore users] Any compression routine which irretrievably loses
   valuable data in the process of [10369]crunching it. Disparagingly
   used for `lossy' methods such as JPEG. The theory, of course, is that
   these methods are only used on photographic images in which minor
   loss-of-data is not visible to the human eye. The term `pixel sort'
   implies distrust of this theory. Compare [10370]bogo-sort.
     _________________________________________________________________

   Node:pizza box, Next:[10371]plaid screen, Previous:[10372]pixel sort,
   Up:[10373]= P =

   pizza box n.

   [Sun] The largish thin box housing the electronics in (especially Sun)
   desktop workstations, so named because of its size and shape and the
   dimpled pattern that looks like air holes.

   Two meg single-platter removable disk packs used to be called pizzas,
   and the huge drive they were stuck into was referred to as a pizza
   oven. It's an index of progress that in the old days just the disk was
   pizza-sized, while now the entire computer is.
     _________________________________________________________________

   Node:plaid screen, Next:[10374]plain-ASCII, Previous:[10375]pizza box,
   Up:[10376]= P =

   plaid screen n.

   [XEROX PARC] A `special effect' that occurs when certain kinds of
   [10377]memory smashes overwrite the control blocks or image memory of
   a bit-mapped display. The term "salt and pepper" may refer to a
   different pattern of similar origin. Though the term as coined at PARC
   refers to the result of an error, some of the [10378]X demos induce
   plaid-screen effects deliberately as a [10379]display hack.
     _________________________________________________________________

   Node:plain-ASCII, Next:[10380]plan file, Previous:[10381]plaid screen,
   Up:[10382]= P =

   plain-ASCII /playn-as'kee/

   Syn. [10383]flat-ASCII.
     _________________________________________________________________

   Node:plan file, Next:[10384]platinum-iridium,
   Previous:[10385]plain-ASCII, Up:[10386]= P =

   plan file n.

   [Unix] On systems that support [10387]finger, the `.plan' file in a
   user's home directory is displayed when the user is fingered. This
   feature was originally intended to be used to keep potential fingerers
   apprised of one's location and near-future plans, but has been turned
   almost universally to humorous and self-expressive purposes (like a
   [10388]sig block). See also [10389]Hacking X for Y.

   A recent innovation in plan files has been the introduction of
   "scrolling plan files" which are one-dimensional animations made using
   only the printable ASCII character set, carriage return and line feed,
   avoiding terminal specific escape sequences, since the [10390]finger
   command will (for security reasons; see [10391]letterbomb) not pass
   the escape character.

   Scrolling .plan files have become art forms in miniature, and some
   sites have started competitions to find who can create the longest
   running, funniest, and most original animations. Various animation
   characters include:

   Centipede:
          mmmmme

   Lorry/Truck:
          oo-oP

   Andalusian Video Snail:
          _@/

   and a compiler (ASP) is available on Usenet for producing them. See
   also [10392]twirling baton.
     _________________________________________________________________

   Node:platinum-iridium, Next:[10393]playpen, Previous:[10394]plan file,
   Up:[10395]= P =

   platinum-iridium adj.

   Standard, against which all others of the same category are measured.
   Usage: silly. The notion is that one of whatever it is has actually
   been cast in platinum-iridium alloy and placed in the vault beside the
   Standard Kilogram at the International Bureau of Weights and Measures
   near Paris. (From 1889 to 1960, the meter was defined to be the
   distance between two scratches in a platinum-iridium bar kept in that
   same vault -- this replaced an earlier definition as 10^(-7) times the
   distance between the North Pole and the Equator along a meridian
   through Paris; unfortunately, this had been based on an inexact value
   of the circumference of the Earth. From 1960 to 1984 it was defined to
   be 1650763.73 wavelengths of the orange-red line of krypton-86
   propagating in a vacuum. It is now defined as the length of the path
   traveled by light in a vacuum in the time interval of 1/299,792,458 of
   a second. The kilogram is now the only unit of measure officially
   defined in terms of a unique artifact.) "This garbage-collection
   algorithm has been tested against the platinum-iridium cons cell in
   Paris." Compare [10396]golden.
     _________________________________________________________________

   Node:playpen, Next:[10397]playte, Previous:[10398]platinum-iridium,
   Up:[10399]= P =

   playpen n.

   [IBM] A room where programmers work. Compare [10400]salt mines.
     _________________________________________________________________

   Node:playte, Next:[10401]plingnet, Previous:[10402]playpen,
   Up:[10403]= P =

   playte /playt/

   16 bits, by analogy with [10404]nybble and [10405]byte. Usage: rare
   and extremely silly. See also [10406]dynner and [10407]crumb. General
   discussion of such terms is under [10408]nybble.
     _________________________________________________________________

   Node:plingnet, Next:[10409]plokta, Previous:[10410]playte, Up:[10411]=
   P =

   plingnet /pling'net/ n.

   Syn. [10412]UUCPNET. Also see [10413]Commonwealth Hackish, which uses
   `pling' for [10414]bang (as in [10415]bang path).
     _________________________________________________________________

   Node:plokta, Next:[10416]plonk, Previous:[10417]plingnet, Up:[10418]=
   P =

   plokta /plok't*/ v.

   [acronym: Press Lots Of Keys To Abort] To press random keys in an
   attempt to get some response from the system. One might plokta when
   the abort procedure for a program is not known, or when trying to
   figure out if the system is just sluggish or really hung. Plokta can
   also be used while trying to figure out any unknown key sequence for a
   particular operation. Someone going into `plokta mode' usually places
   both hands flat on the keyboard and mashes them down, hoping for some
   useful response.

   A slightly more directed form of plokta can often be seen in mail
   messages or Usenet articles from new users -- the text might end with
        ^X^C
        q
        quit
        :q
        ^C
        end
        x
        exit
        ZZ
        ^D
        ?
        help

   as the user vainly tries to find the right exit sequence, with the
   incorrect tries piling up at the end of the message....
     _________________________________________________________________

   Node:plonk, Next:[10419]plug-and-pray, Previous:[10420]plokta,
   Up:[10421]= P =

   plonk excl.,vt.

   [Usenet: possibly influenced by British slang `plonk' for cheap booze,
   or `plonker' for someone behaving stupidly (latter is lit. equivalent
   to Yiddish `schmuck')] The sound a [10422]newbie makes as he falls to
   the bottom of a [10423]kill file. While it originated in the
   [10424]newsgroup talk.bizarre, this term (usually written "*plonk*")
   is now (1994) widespread on Usenet as a form of public ridicule.
     _________________________________________________________________

   Node:plug-and-pray, Next:[10425]plugh, Previous:[10426]plonk,
   Up:[10427]= P =

   plug-and-pray adj.,vi.

   Parody of the techspeak term `plug-and-play', describing a PC
   peripheral card which is claimed to have no need for hardware
   configuration via DIP switches, and which should be work as soon as it
   is inserted in the PC. Unfortunately, even the PCI bus is not up to
   pulling this off reliably, and people who have to do installation or
   troubleshoot PCs soon find themselves longing for the DIP switches.
     _________________________________________________________________

   Node:plugh, Next:[10428]plumbing, Previous:[10429]plug-and-pray,
   Up:[10430]= P =

   plugh /ploogh/ v.

   [from the [10431]ADVENT game] See [10432]xyzzy.
     _________________________________________________________________

   Node:plumbing, Next:[10433]PM, Previous:[10434]plugh, Up:[10435]= P =

   plumbing n.

   [Unix] Term used for [10436]shell code, so called because of the
   prevalence of `pipelines' that feed the output of one program to the
   input of another. Under Unix, user utilities can often be implemented
   or at least prototyped by a suitable collection of pipelines and
   temp-file grinding encapsulated in a shell script; this is much less
   effort than writing C every time, and the capability is considered one
   of Unix's major winning features. A few other OSs such as IBM's VM/CMS
   support similar facilities. Esp. used in the construction `hairy
   plumbing' (see [10437]hairy). "You can kluge together a basic
   spell-checker out of sort(1), comm(1), and tr(1) with a little
   plumbing." See also [10438]tee.
     _________________________________________________________________

   Node:PM, Next:[10439]pnambic, Previous:[10440]plumbing, Up:[10441]= P
   =

   PM /P-M/

   1. v. (from `preventive maintenance') To bring down a machine for
   inspection or test purposes. See [10442]provocative maintenance; see
   also [10443]scratch monkey. 2. n. Abbrev. for `Presentation Manager',
   an [10444]elephantine OS/2 graphical user interface.
     _________________________________________________________________

   Node:pnambic, Next:[10445]pod, Previous:[10446]PM, Up:[10447]= P =

   pnambic /p*-nam'bik/

   [Acronym from the scene in the film version of "The Wizard of Oz" in
   which the true nature of the wizard is first discovered: "Pay no
   attention to the man behind the curtain."] 1. A stage of development
   of a process or function that, owing to incomplete implementation or
   to the complexity of the system, requires human interaction to
   simulate or replace some or all of the actions, inputs, or outputs of
   the process or function. 2. Of or pertaining to a process or function
   whose apparent operations are wholly or partially falsified. 3.
   Requiring [10448]prestidigitization.

   The ultimate pnambic product was "Dan Bricklin's Demo", a program
   which supported flashy user-interface design prototyping. There is a
   related maxim among hackers: "Any sufficiently advanced technology is
   indistinguishable from a rigged demo." See [10449]magic, sense 1, for
   illumination of this point.
     _________________________________________________________________

   Node:pod, Next:[10450]point-and-drool interface,
   Previous:[10451]pnambic, Up:[10452]= P =

   pod n.

   [allegedly from abbreviation POD for `Prince Of Darkness'] A Diablo
   630 (or, latterly, any letter-quality impact printer). From the DEC-10
   PODTYPE program used to feed formatted text to it. Not to be confused
   with [10453]P.O.D..
     _________________________________________________________________

   Node:point-and-drool interface, Next:[10454]pointy hat,
   Previous:[10455]pod, Up:[10456]= P =

   point-and-drool interface n.

   Parody of the techspeak term `point-and-shoot interface', describing a
   windows, icons, and mouse-based interface such as is found on the
   Macintosh. The implication, of course, is that such an interface is
   only suitable for idiots. See [10457]for the rest of us, [10458]WIMP
   environment, [10459]Macintrash, [10460]drool-proof paper. Also
   `point-and-grunt interface'.
     _________________________________________________________________

   Node:pointy hat, Next:[10461]pointy-haired,
   Previous:[10462]point-and-drool interface, Up:[10463]= P =

   pointy hat n.

   See [10464]wizard hat. This synonym specifically refers to the wizards
   of Unseen University in Terry Pratchett's "Discworld" serious of
   humorous fantasies; these books are extremely popular among hackers.
     _________________________________________________________________

   Node:pointy-haired, Next:[10465]poke, Previous:[10466]pointy hat,
   Up:[10467]= P =

   pointy-haired adj.

   [after the character in the [10468]Dilbert comic strip] Describes the
   extreme form of the property that separates [10469]suits and
   [10470]marketroids from hackers. Compare [10471]brain-dead;
   [10472]demented; see [10473]PHB. Always applied to people, never to
   ideas. The plural form is often used as a noun. "The pointy-haireds
   ordered me to use Windows NT, but I set up a Linux server with Samba
   instead."
     _________________________________________________________________

   Node:poke, Next:[10474]poll, Previous:[10475]pointy-haired,
   Up:[10476]= P =

   poke n.,vt.

   See [10477]peek.
     _________________________________________________________________

   Node:poll, Next:[10478]polygon pusher, Previous:[10479]poke,
   Up:[10480]= P =

   poll v.,n.

   1. [techspeak] The action of checking the status of an input line,
   sensor, or memory location to see if a particular external event has
   been registered. 2. To repeatedly call or check with someone: "I keep
   polling him, but he's not answering his phone; he must be swapped
   out." 3. To ask. "Lunch? I poll for a takeout order daily."
     _________________________________________________________________

   Node:polygon pusher, Next:[10481]POM, Previous:[10482]poll,
   Up:[10483]= P =

   polygon pusher n.

   A chip designer who spends most of his or her time at the physical
   layout level (which requires drawing lots of multi-colored polygons).
   Also `rectangle slinger'.
     _________________________________________________________________

   Node:POM, Next:[10484]pop, Previous:[10485]polygon pusher, Up:[10486]=
   P =

   POM /P-O-M/ n.

   Common abbreviation for [10487]phase of the moon. Usage: usually in
   the phrase `POM-dependent', which means [10488]flaky.
     _________________________________________________________________

   Node:pop, Next:[10489]POPJ, Previous:[10490]POM, Up:[10491]= P =

   pop /pop/

   [from the operation that removes the top of a stack, and the fact that
   procedure return addresses are usually saved on the stack] (also
   capitalized `POP') 1. vt. To remove something from a [10492]stack or
   [10493]PDL. If a person says he/she has popped something from his
   stack, that means he/she has finally finished working on it and can
   now remove it from the list of things hanging overhead. 2. When a
   discussion gets to a level of detail so deep that the main point of
   the discussion is being lost, someone will shout "Pop!", meaning "Get
   back up to a higher level!" The shout is frequently accompanied by an
   upthrust arm with a finger pointing to the ceiling. 3. [all-caps, as
   `POP'] Point of Presence, a bank of dial-in lines allowing customers
   to make (local) calls into an ISP. This is borderline techspeak.
     _________________________________________________________________

   Node:POPJ, Next:[10494]poser, Previous:[10495]pop, Up:[10496]= P =

   POPJ /pop'J/ n.,v.

   [from a [10497]PDP-10 return-from-subroutine instruction] To return
   from a digression. By verb doubling, "Popj, popj" means roughly "Now
   let's see, where were we?" See [10498]RTI.
     _________________________________________________________________

   Node:poser, Next:[10499]post, Previous:[10500]POPJ, Up:[10501]= P =

   poser n.

   A [10502]wannabee; not hacker slang, but used among crackers, phreaks
   and [10503]warez d00dz. Not as negative as [10504]lamer or
   [10505]leech. Probably derives from a similar usage among punk-rockers
   and metalheads, putting down those who "talk the talk but don't walk
   the walk".
     _________________________________________________________________

   Node:post, Next:[10506]postcardware, Previous:[10507]poser,
   Up:[10508]= P =

   post v.

   To send a message to a [10509]mailing list or [10510]newsgroup.
   Distinguished in context from `mail'; one might ask, for example: "Are
   you going to post the patch or mail it to known users?"
     _________________________________________________________________

   Node:postcardware, Next:[10511]posting, Previous:[10512]post,
   Up:[10513]= P =

   postcardware n.

   A kind of [10514]shareware that borders on [10515]freeware, in that
   the author requests only that satisfied users send a postcard of their
   home town or something. (This practice, silly as it might seem, serves
   to remind users that they are otherwise getting something for nothing,
   and may also be psychologically related to real estate `sales' in
   which $1 changes hands just to keep the transaction from being a
   gift.)
     _________________________________________________________________

   Node:posting, Next:[10516]postmaster, Previous:[10517]postcardware,
   Up:[10518]= P =

   posting n.

   Noun corresp. to v. [10519]post (but note that [10520]post can be
   nouned). Distinguished from a `letter' or ordinary [10521]email
   message by the fact that it is broadcast rather than point-to-point.
   It is not clear whether messages sent to a small mailing list are
   postings or email; perhaps the best dividing line is that if you don't
   know the names of all the potential recipients, it is a posting.
     _________________________________________________________________

   Node:postmaster, Next:[10522]PostScript, Previous:[10523]posting,
   Up:[10524]= P =

   postmaster n.

   The email contact and maintenance person at a site connected to the
   Internet or UUCPNET. Often, but not always, the same as the
   [10525]admin. The Internet standard for electronic mail
   ([10526]RFC-822) requires each machine to have a `postmaster' address;
   usually it is aliased to this person.
     _________________________________________________________________

   Node:PostScript, Next:[10527]pound on, Previous:[10528]postmaster,
   Up:[10529]= P =

   PostScript n.

   A Page Description Language ([10530]PDL), based on work originally
   done by John Gaffney at Evans and Sutherland in 1976, evolving through
   `JaM' (`John and Martin', Martin Newell) at [10531]XEROX PARC, and
   finally implemented in its current form by John Warnock et al. after
   he and Chuck Geschke founded Adobe Systems Incorporated in 1982.
   PostScript gets its leverage by using a full programming language,
   rather than a series of low-level escape sequences, to describe an
   image to be printed on a laser printer or other output device (in this
   it parallels [10532]EMACS, which exploited a similar insight about
   editing tasks). It is also noteworthy for implementing on-the fly
   rasterization, from Bezier curve descriptions, of high-quality fonts
   at low (e.g. 300 dpi) resolution (it was formerly believed that
   hand-tuned bitmap fonts were required for this task). Hackers consider
   PostScript to be among the most elegant hacks of all time, and the
   combination of technical merits and widespread availability has made
   PostScript the language of choice for graphical output.
     _________________________________________________________________

   Node:pound on, Next:[10533]power cycle, Previous:[10534]PostScript,
   Up:[10535]= P =

   pound on vt.

   Syn. [10536]bang on.
     _________________________________________________________________

   Node:power cycle, Next:[10537]power hit, Previous:[10538]pound on,
   Up:[10539]= P =

   power cycle vt.

   (also, `cycle power' or just `cycle') To power off a machine and then
   power it on immediately, with the intention of clearing some kind of
   [10540]hung or [10541]gronked state. Syn. [10542]120 reset; see also
   [10543]Big Red Switch. Compare [10544]Vulcan nerve pinch,
   [10545]bounce (sense 4), and [10546]boot, and see the "[10547]Some AI
   Koans" (in Appendix A) about Tom Knight and the novice.
     _________________________________________________________________

   Node:power hit, Next:[10548]PPN, Previous:[10549]power cycle,
   Up:[10550]= P =

   power hit n.

   A spike or drop-out in the electricity supplying your machine; a power
   [10551]glitch. These can cause crashes and even permanent damage to
   your machine(s).
     _________________________________________________________________

   Node:PPN, Next:[10552]pr0n, Previous:[10553]power hit, Up:[10554]= P =

   PPN /P-P-N/, /pip'n/ n. obs.

   [from `Project-Programmer Number'] A user-ID under [10555]TOPS-10 and
   its various mutant progeny at SAIL, BBN, CompuServe, and elsewhere.
   Old-time hackers from the PDP-10 era sometimes use this to refer to
   user IDs on other systems as well.
     _________________________________________________________________

   Node:pr0n, Next:[10556]precedence lossage, Previous:[10557]PPN,
   Up:[10558]= P =

   pr0n //

   [Usenet, IRC] Pornography. Originally this referred only to Internet
   porn but since then it has expanded to refer to just about anything.
   The term comes from the [10559]warez kiddies tendency to replace
   letters with numbers. At some point on IRC someone mistyped, swapped
   the middle two letters, and the name stuck, then propagated over into
   mainstream hacker usage. Compare [10560]filk, [10561]grilf,
   [10562]hing and [10563]newsfroup.
     _________________________________________________________________

   Node:precedence lossage, Next:[10564]prepend, Previous:[10565]pr0n,
   Up:[10566]= P =

   precedence lossage /pre's*-dens los'*j/ n.

   [C programmers] Coding error in an expression due to unexpected
   grouping of arithmetic or logical operators by the compiler. Used esp.
   of certain common coding errors in C due to the nonintuitively low
   precedence levels of &, |, ^, <<, and >> (for this reason, experienced
   C programmers deliberately forget the language's [10567]baroque
   precedence hierarchy and parenthesize defensively). Can always be
   avoided by suitable use of parentheses. [10568]LISP fans enjoy
   pointing out that this can't happen in their favorite language, which
   eschews precedence entirely, requiring one to use explicit parentheses
   everywhere. See [10569]aliasing bug, [10570]memory leak, [10571]memory
   smash, [10572]smash the stack, [10573]fandango on core, [10574]overrun
   screw.
     _________________________________________________________________

   Node:prepend, Next:[10575]prestidigitization,
   Previous:[10576]precedence lossage, Up:[10577]= P =

   prepend /pree`pend'/ vt.

   [by analogy with `append'] To prefix. As with `append' (but not
   `prefix' or `suffix' as a verb), the direct object is always the thing
   being added and not the original word (or character string, or
   whatever). "If you prepend a semicolon to the line, the translation
   routine will pass it through unaltered."
     _________________________________________________________________

   Node:prestidigitization, Next:[10578]pretty pictures,
   Previous:[10579]prepend, Up:[10580]= P =

   prestidigitization /pres`t*-di`j*-ti:-zay'sh*n/ n.

   1. The act of putting something into digital notation via sleight of
   hand. 2. Data entry through legerdemain.
     _________________________________________________________________

   Node:pretty pictures, Next:[10581]prettyprint,
   Previous:[10582]prestidigitization, Up:[10583]= P =

   pretty pictures n.

   [scientific computation] The next step up from [10584]numbers.
   Interesting graphical output from a program that may not have any
   sensible relationship to the system the program is intended to model.
   Good for showing to [10585]management.
     _________________________________________________________________

   Node:prettyprint, Next:[10586]pretzel key, Previous:[10587]pretty
   pictures, Up:[10588]= P =

   prettyprint /prit'ee-print/ v.

   (alt. `pretty-print') 1. To generate `pretty' human-readable output
   from a [10589]hairy internal representation; esp. used for the process
   of [10590]grinding (sense 1) program code, and most esp. for LISP
   code. 2. To format in some particularly slick and nontrivial way.
     _________________________________________________________________

   Node:pretzel key, Next:[10591]priesthood, Previous:[10592]prettyprint,
   Up:[10593]= P =

   pretzel key n.

   [Mac users] See [10594]feature key.
     _________________________________________________________________

   Node:priesthood, Next:[10595]prime time, Previous:[10596]pretzel key,
   Up:[10597]= P =

   priesthood n. obs.

   [TMRC] The select group of system managers responsible for the
   operation and maintenance of a batch operated computer system. On
   these computers, a user never had direct access to a computer, but had
   to submit his/her data and programs to a priest for execution. Results
   were returned days or even weeks later. See [10598]acolyte.
     _________________________________________________________________

   Node:prime time, Next:[10599]print, Previous:[10600]priesthood,
   Up:[10601]= P =

   prime time n.

   [from TV programming] Normal high-usage hours on a system or network.
   Back in the days of big timesharing machines `prime time' was when
   lots of people were competing for limited cycles, usually the day
   shift. Avoidance of prime time was traditionally given as a major
   reason for [10602]night mode hacking. The term fell into disuse during
   the early PC era, but has been revived to refer to times of day or
   evening at which the Internet tends to be heavily loaded, making Web
   access slow. The hackish tendency to late-night [10603]hacking runs
   has changed not a bit.
     _________________________________________________________________

   Node:print, Next:[10604]printing discussion, Previous:[10605]prime
   time, Up:[10606]= P =

   print v.

   To output, even if to a screen. If a hacker says that a program
   "printed a message", he means this; if he refers to printing a file,
   he probably means it in the conventional sense of writing to a
   hardcopy device (compounds like `print job' and `printout', on the
   other hand, always refer to the latter). This very common term is
   likely a holdover from the days when printing terminals were the norm,
   perpetuated by programming language constructs like [10607]C's
   printf(3). See senses 1 and 2 of [10608]tty.
     _________________________________________________________________

   Node:printing discussion, Next:[10609]priority interrupt,
   Previous:[10610]print, Up:[10611]= P =

   printing discussion n.

   [XEROX PARC] A protracted, low-level, time-consuming, generally
   pointless discussion of something only peripherally interesting to
   all.
     _________________________________________________________________

   Node:priority interrupt, Next:[10612]profile, Previous:[10613]printing
   discussion, Up:[10614]= P =

   priority interrupt n.

   [from the hardware term] Describes any stimulus compelling enough to
   yank one right out of [10615]hack mode. Classically used to describe
   being dragged away by an [10616]SO for immediate sex, but may also
   refer to more mundane interruptions such as a fire alarm going off in
   the near vicinity. Also called an [10617]NMI (non-maskable interrupt),
   especially in PC-land.
     _________________________________________________________________

   Node:profile, Next:[10618]progasm, Previous:[10619]priority interrupt,
   Up:[10620]= P =

   profile n.

   1. A control file for a program, esp. a text file automatically read
   from each user's home directory and intended to be easily modified by
   the user in order to customize the program's behavior. Used to avoid
   [10621]hardcoded choices (see also [10622]dot file, [10623]rc file).
   2. [techspeak] A report on the amounts of time spent in each routine
   of a program, used to find and [10624]tune away the [10625]hot spots
   in it. This sense is often verbed. Some profiling modes report units
   other than time (such as call counts) and/or report at granularities
   other than per-routine, but the idea is similar. 3.[techspeak] A
   subset of a standard used for a particular purpose. This sense
   confuses hackers who wander into the weird world of ISO standards no
   end!
     _________________________________________________________________

   Node:progasm, Next:[10626]proggy, Previous:[10627]profile, Up:[10628]=
   P =

   progasm /proh'gaz-m/ n.

   [University of Wisconsin] The euphoria experienced upon the completion
   of a program or other computer-related project.
     _________________________________________________________________

   Node:proggy, Next:[10629]proglet, Previous:[10630]progasm, Up:[10631]=
   P =

   proggy n.

   1. Any computer program that is considered a full application. 2. Any
   computer program that is made up of or otherwise contains
   [10632]proglets. 3. Any computer program that is large enough to be
   normally distributed as an RPM or [10633]tarball.
     _________________________________________________________________

   Node:proglet, Next:[10634]program, Previous:[10635]proggy, Up:[10636]=
   P =

   proglet /prog'let/ n.

   [UK] A short extempore program written to meet an immediate, transient
   need. Often written in BASIC, rarely more than a dozen lines long, and
   containing no subroutines. The largest amount of code that can be
   written off the top of one's head, that does not need any editing, and
   that runs correctly the first time (this amount varies significantly
   according to one's skill and the language one is using). Compare
   [10637]toy program, [10638]noddy, [10639]one-liner wars.
     _________________________________________________________________

   Node:program, Next:[10640]Programmer's Cheer, Previous:[10641]proglet,
   Up:[10642]= P =

   program n.

   1. A magic spell cast over a computer allowing it to turn one's input
   into error messages. 2. An exercise in experimental epistemology. 3. A
   form of art, ostensibly intended for the instruction of computers,
   which is nevertheless almost inevitably a failure if other programmers
   can't understand it.
     _________________________________________________________________

   Node:Programmer's Cheer, Next:[10643]programming,
   Previous:[10644]program, Up:[10645]= P =

   Programmer's Cheer

   "Shift to the left! Shift to the right! Pop up, push down! Byte! Byte!
   Byte!" A joke so old it has hair on it.
     _________________________________________________________________

   Node:programming, Next:[10646]programming fluid,
   Previous:[10647]Programmer's Cheer, Up:[10648]= P =

   programming n.

   1. The art of debugging a blank sheet of paper (or, in these days of
   on-line editing, the art of debugging an empty file). "Bloody
   instructions which, being taught, return to plague their inventor"
   ("Macbeth", Act 1, Scene 7) 2. A pastime similar to banging one's head
   against a wall, but with fewer opportunities for reward. 3. The most
   fun you can have with your clothes on. 4. The least fun you can have
   with your clothes off.
     _________________________________________________________________

   Node:programming fluid, Next:[10649]propeller head,
   Previous:[10650]programming, Up:[10651]= P =

   programming fluid n.

   1. Coffee. 2. Cola. 3. Any caffeinacious stimulant. Many hackers
   consider these essential for those all-night hacking runs. See
   [10652]wirewater.
     _________________________________________________________________

   Node:propeller head, Next:[10653]propeller key,
   Previous:[10654]programming fluid, Up:[10655]= P =

   propeller head n.

   Used by hackers, this is syn. with [10656]computer geek. Non-hackers
   sometimes use it to describe all techies. Prob. derives from SF
   fandom's tradition (originally invented by old-time fan Ray Faraday
   Nelson) of propeller beanies as fannish insignia (though nobody
   actually wears them except as a joke).
     _________________________________________________________________

   Node:propeller key, Next:[10657]proprietary, Previous:[10658]propeller
   head, Up:[10659]= P =

   propeller key n.

   [Mac users] See [10660]feature key.
     _________________________________________________________________

   Node:proprietary, Next:[10661]protocol, Previous:[10662]propeller key,
   Up:[10663]= P =

   proprietary adj.

   1. In [10664]marketroid-speak, superior; implies a product imbued with
   exclusive magic by the unmatched brilliance of the company's own
   hardware or software designers. 2. In the language of hackers and
   users, inferior; implies a product not conforming to open-systems
   standards, and thus one that puts the customer at the mercy of a
   vendor able to gouge freely on service and upgrade charges after the
   initial sale has locked the customer in. Often in the phrase
   "proprietary crap". 3. Synonym for closed-source, e.g. software issued
   in binary without source and under a restructive license.

   Since the coining of the term [10665]open source, many hackers have
   made a conscious effort to distinguish between `proprietary' and
   `commercial' software. It is possible for software to be commercial
   (that is, intended to make a profit for the producers) without being
   proprietary. The reverse is also possible, for example in binary-only
   freeware.
     _________________________________________________________________

   Node:protocol, Next:[10666]provocative maintenance,
   Previous:[10667]proprietary, Up:[10668]= P =

   protocol n.

   As used by hackers, this never refers to niceties about the proper
   form for addressing letters to the Papal Nuncio or the order in which
   one should use the forks in a Russian-style place setting; hackers
   don't care about such things. It is used instead to describe any set
   of rules that allow different machines or pieces of software to
   coordinate with each other without ambiguity. So, for example, it does
   include niceties about the proper form for addressing packets on a
   network or the order in which one should use the forks in the Dining
   Philosophers Problem. It implies that there is some common message
   format and an accepted set of primitives or commands that all parties
   involved understand, and that transactions among them follow
   predictable logical sequences. See also [10669]handshaking, [10670]do
   protocol.
     _________________________________________________________________

   Node:provocative maintenance, Next:[10671]prowler,
   Previous:[10672]protocol, Up:[10673]= P =

   provocative maintenance n.

   [common ironic mutation of `preventive maintenance'] Actions performed
   upon a machine at regularly scheduled intervals to ensure that the
   system remains in a usable state. So called because it is all too
   often performed by a [10674]field servoid who doesn't know what he is
   doing; such `maintenance' often induces problems, or otherwise results
   in the machine's remaining in an unusable state for an indeterminate
   amount of time. See also [10675]scratch monkey.
     _________________________________________________________________

   Node:prowler, Next:[10676]pseudo, Previous:[10677]provocative
   maintenance, Up:[10678]= P =

   prowler n.

   [Unix] A [10679]daemon that is run periodically (typically once a
   week) to seek out and erase [10680]core files, truncate administrative
   logfiles, nuke lost+found directories, and otherwise clean up the
   [10681]cruft that tends to pile up in the corners of a file system.
   See also [10682]GFR, [10683]reaper, [10684]skulker.
     _________________________________________________________________

   Node:pseudo, Next:[10685]pseudoprime, Previous:[10686]prowler,
   Up:[10687]= P =

   pseudo /soo'doh/ n.

   [Usenet: truncation of `pseudonym'] 1. An electronic-mail or
   [10688]Usenet persona adopted by a human for amusement value or as a
   means of avoiding negative repercussions of one's net.behavior; a `nom
   de Usenet', often associated with forged postings designed to conceal
   message origins. Perhaps the best-known and funniest hoax of this type
   is [10689]B1FF. See also [10690]tentacle. 2. Notionally, a
   [10691]flamage-generating AI program simulating a Usenet user. Many
   flamers have been accused of actually being such entities, despite the
   fact that no AI program of the required sophistication yet exists.
   However, in 1989 there was a famous series of forged postings that
   used a phrase-frequency-based travesty generator to simulate the
   styles of several well-known flamers; it was based on large samples of
   their back postings (compare [10692]Dissociated Press). A significant
   number of people were fooled by the forgeries, and the debate over
   their authenticity was settled only when the perpetrator came forward
   to publicly admit the hoax.
     _________________________________________________________________

   Node:pseudoprime, Next:[10693]pseudosuit, Previous:[10694]pseudo,
   Up:[10695]= P =

   pseudoprime n.

   A backgammon prime (six consecutive occupied points) with one point
   missing. This term is an esoteric pun derived from number theory: a
   number that passes a certain kind of "primality test" may be called a
   `pseudoprime' (all primes pass any such test, but so do some composite
   numbers), and any number that passes several is, in some sense, almost
   certainly prime. The hacker backgammon usage stems from the idea that
   a pseudoprime is almost as good as a prime: it will do the same job
   unless you are unlucky.
     _________________________________________________________________

   Node:pseudosuit, Next:[10696]psychedelicware,
   Previous:[10697]pseudoprime, Up:[10698]= P =

   pseudosuit /soo'doh-s[y]oot`/ n.

   A [10699]suit wannabee; a hacker who has decided that he wants to be
   in management or administration and begins wearing ties, sport coats,
   and (shudder!) suits voluntarily. It's his funeral. See also
   [10700]lobotomy.
     _________________________________________________________________

   Node:psychedelicware, Next:[10701]psyton, Previous:[10702]pseudosuit,
   Up:[10703]= P =

   psychedelicware /si:`k*-del'-ik-weir/ n.

   [UK] Syn. [10704]display hack. See also [10705]smoking clover.
     _________________________________________________________________

   Node:psyton, Next:[10706]pubic directory,
   Previous:[10707]psychedelicware, Up:[10708]= P =

   psyton /si:'ton/ n.

   [TMRC] The elementary particle carrying the sinister force. The
   probability of a process losing is proportional to the number of
   psytons falling on it. Psytons are generated by observers, which is
   why demos are more likely to fail when lots of people are watching.
   [This term appears to have been largely superseded by [10709]bogon;
   see also [10710]quantum bogodynamics. --ESR]
     _________________________________________________________________

   Node:pubic directory, Next:[10711]puff, Previous:[10712]psyton,
   Up:[10713]= P =

   pubic directory /pyoob'ik d*-rek't*-ree/) n.

   [NYU] (also `pube directory' /pyoob' d*-rek't*-ree/) The `pub'
   (public) directory on a machine that allows [10714]FTP access. So
   called because it is the default location for [10715]SEX (sense 1).
   "I'll have the source in the pube directory by Friday."
     _________________________________________________________________

   Node:puff, Next:[10716]pumpkin holder, Previous:[10717]pubic
   directory, Up:[10718]= P =

   puff vt.

   To decompress data that has been crunched by Huffman coding. At least
   one widely distributed Huffman decoder program was actually named
   `PUFF', but these days it is usually packaged with the encoder. Oppose
   [10719]huff, see [10720]inflate.
     _________________________________________________________________

   Node:pumpkin holder, Next:[10721]pumpking, Previous:[10722]puff,
   Up:[10723]= P =

   pumpkin holder n.

   See [10724]patch pumpkin.
     _________________________________________________________________

   Node:pumpking, Next:[10725]punched card, Previous:[10726]pumpkin
   holder, Up:[10727]= P =

   pumpking n.

   Syn. for [10728]pumpkin holder; see [10729]patch pumpkin.
     _________________________________________________________________

   Node:punched card, Next:[10730]punt, Previous:[10731]pumpking,
   Up:[10732]= P =

   punched card n.obs.

   [techspeak] (alt. `punch card') The signature medium of computing's
   [10733]Stone Age, now obsolescent outside of some IBM shops. The
   punched card actually predated computers considerably, originating in
   1801 as a control device for mechanical looms. The version patented by
   Hollerith and used with mechanical tabulating machines in the 1890
   U.S. Census was a piece of cardboard about 90 mm by 215 mm. There is a
   widespread myth that it was designed to fit in the currency trays used
   for that era's larger dollar bills, but recent investigations have
   falsified this.

   IBM (which originated as a tabulating-machine manufacturer) married
   the punched card to computers, encoding binary information as patterns
   of small rectangular holes; one character per column, 80 columns per
   card. Other coding schemes, sizes of card, and hole shapes were tried
   at various times.

   The 80-column width of most character terminals is a legacy of the IBM
   punched card; so is the size of the quick-reference cards distributed
   with many varieties of computers even today. See [10734]chad,
   [10735]chad box, [10736]eighty-column mind, [10737]green card,
   [10738]dusty deck, [10739]lace card, [10740]card walloper.
     _________________________________________________________________

   Node:punt, Next:[10741]Purple Book, Previous:[10742]punched card,
   Up:[10743]= P =

   punt v.

   [from the punch line of an old joke referring to American football:
   "Drop back 15 yards and punt!"] 1. To give up, typically without any
   intention of retrying. "Let's punt the movie tonight." "I was going to
   hack all night to get this feature in, but I decided to punt" may mean
   that you've decided not to stay up all night, and may also mean you're
   not ever even going to put in the feature. 2. More specifically, to
   give up on figuring out what the [10744]Right Thing is and resort to
   an inefficient hack. 3. A design decision to defer solving a problem,
   typically because one cannot define what is desirable sufficiently
   well to frame an algorithmic solution. "No way to know what the right
   form to dump the graph in is -- we'll punt that for now." 4. To hand a
   tricky implementation problem off to some other section of the design.
   "It's too hard to get the compiler to do that; let's punt to the
   runtime system." 5. To knock someone off an Internet or chat
   connection; a `punter' thus, is a person or program that does this.
     _________________________________________________________________

   Node:Purple Book, Next:[10745]purple wire, Previous:[10746]punt,
   Up:[10747]= P =

   Purple Book n.

   1. The "System V Interface Definition". The covers of the first
   editions were an amazingly nauseating shade of off-lavender. 2. Syn.
   [10748]Wizard Book. Donald Lewine's "POSIX Programmer's Guide"
   (O'Reilly, 1991, ISBN 0-937175-73-0). See also [10749]book titles.
     _________________________________________________________________

   Node:purple wire, Next:[10750]push, Previous:[10751]Purple Book,
   Up:[10752]= P =

   purple wire n.

   [IBM] Wire installed by Field Engineers to work around problems
   discovered during testing or debugging. These are called `purple
   wires' even when (as is frequently the case) their actual physical
   color is yellow.... Compare [10753]blue wire, [10754]yellow wire, and
   [10755]red wire.
     _________________________________________________________________

   Node:push, Next:[10756]Python, Previous:[10757]purple wire,
   Up:[10758]= P =

   push

   [from the operation that puts the current information on a stack, and
   the fact that procedure return addresses are saved on a stack] (Also
   PUSH /push/ or PUSHJ /push'J/, the latter based on the PDP-10
   procedure call instruction.) 1. To put something onto a [10759]stack
   or [10760]PDL. If one says that something has been pushed onto one's
   stack, it means that the Damoclean list of things hanging over ones's
   head has grown longer and heavier yet. This may also imply that one
   will deal with it before other pending items; otherwise one might say
   that the thing was `added to my queue'. 2. vi. To enter upon a
   digression, to save the current discussion for later. Antonym of
   [10761]pop; see also [10762]stack, [10763]PDL.
     _________________________________________________________________

   Node:Python, Next:[10764]quad, Previous:[10765]push, Up:[10766]= P =

   Python /pi:'thon/

   In the words of its author, "the other scripting language" (other than
   [10767]Perl, that is). Python's design is notably clean, elegant, and
   well thought through; it tends to attract the sort of programmers who
   find Perl grubby and exiguous. Python's relationship with Perl is
   rather like the [10768]BSD community's relationship to [10769]Linux -
   it's the smaller party in a (usually friendly) rivalry, but the
   average quality of its developers is generally conceded to be rather
   higher than in the larger community it competes with. There's a Python
   resource page at [10770]http://www.python.org. See also [10771]Guido.
     _________________________________________________________________

   Node:= Q =, Next:[10772]= R =, Previous:[10773]= P =, Up:[10774]The
   Jargon Lexicon

= Q =

     * [10775]quad:
     * [10776]quadruple bucky:
     * [10777]quantifiers:
     * [10778]quantum bogodynamics:
     * [10779]quarter:
     * [10780]ques:
     * [10781]quick-and-dirty:
     * [10782]quine:
     * [10783]quote chapter and verse:
     * [10784]quotient:
     * [10785]quux:
     * [10786]qux:
     * [10787]QWERTY:
     _________________________________________________________________

   Node:quad, Next:[10788]quadruple bucky, Previous:[10789]Python,
   Up:[10790]= Q =

   quad n.

   1. Two bits; syn. for [10791]quarter, [10792]crumb, [10793]tayste. 2.
   A four-pack of anything (compare [10794]hex, sense 2). 3. The
   rectangle or box glyph used in the APL language for various arcane
   purposes mostly related to I/O. Former Ivy-Leaguers and Oxford types
   are said to associate it with nostalgic memories of dear old
   University.
     _________________________________________________________________

   Node:quadruple bucky, Next:[10795]quantifiers, Previous:[10796]quad,
   Up:[10797]= Q =

   quadruple bucky n. obs.

   1. On an MIT [10798]space-cadet keyboard, use of all four of the
   shifting keys (control, meta, hyper, and super) while typing a
   character key. 2. On a Stanford or MIT keyboard in [10799]raw mode,
   use of four shift keys while typing a fifth character, where the four
   shift keys are the control and meta keys on both sides of the
   keyboard. This was very difficult to do! One accepted technique was to
   press the left-control and left-meta keys with your left hand, the
   right-control and right-meta keys with your right hand, and the fifth
   key with your nose.

   Quadruple-bucky combinations were very seldom used in practice,
   because when one invented a new command one usually assigned it to
   some character that was easier to type. If you want to imply that a
   program has ridiculously many commands or features, you can say
   something like: "Oh, the command that makes it spin the tapes while
   whistling Beethoven's Fifth Symphony is quadruple-bucky-cokebottle."
   See [10800]double bucky, [10801]bucky bits, [10802]cokebottle.
     _________________________________________________________________

   Node:quantifiers, Next:[10803]quantum bogodynamics,
   Previous:[10804]quadruple bucky, Up:[10805]= Q =

   quantifiers

   In techspeak and jargon, the standard metric prefixes used in the SI
   (Système International) conventions for scientific measurement have
   dual uses. With units of time or things that come in powers of 10,
   such as money, they retain their usual meanings of multiplication by
   powers of 1000 = 10^3. But when used with bytes or other things that
   naturally come in powers of 2, they usually denote multiplication by
   powers of 1024 = 2^(10).

   Here are the SI magnifying prefixes, along with the corresponding
   binary interpretations in common use:
prefix  decimal  binary
kilo-   1000^1   1024^1 = 2^10 = 1,024

mega-   1000^2   1024^2 = 2^20 = 1,048,576

giga-   1000^3   1024^3 = 2^30 = 1,073,741,824

tera-   1000^4   1024^4 = 2^40 = 1,099,511,627,776

peta-   1000^5   1024^5 = 2^50 = 1,125,899,906,842,624

exa-    1000^6   1024^6 = 2^60 = 1,152,921,504,606,846,976

zetta-  1000^7   1024^7 = 2^70 = 1,180,591,620,717,411,303,424

yotta-  1000^8   1024^8 = 2^80 = 1,208,925,819,614,629,174,706,176

   Here are the SI fractional prefixes:
prefix  decimal     jargon usage
milli-  1000^-1     (seldom used in jargon)
micro-  1000^-2     small or human-scale (see [10806]micro-)
nano-   1000^-3     even smaller (see [10807]nano-)
pico-   1000^-4     even smaller yet (see [10808]pico-)
femto-  1000^-5     (not used in jargon---yet)
atto-   1000^-6     (not used in jargon---yet)
zepto-  1000^-7     (not used in jargon---yet)
yocto-  1000^-8     (not used in jargon---yet)

   The prefixes zetta-, yotta-, zepto-, and yocto- have been included in
   these tables purely for completeness and giggle value; they were
   adopted in 1990 by the `19th Conference Generale des Poids et
   Mesures'. The binary peta- and exa- loadings, though well established,
   are not in jargon use either -- yet. The prefix milli-, denoting
   multiplication by 1/1000, has always been rare in jargon (there is,
   however, a standard joke about the `millihelen' -- notionally, the
   amount of beauty required to launch one ship). See the entries on
   [10809]micro-, [10810]pico-, and [10811]nano- for more information on
   connotative jargon use of these terms. `Femto' and `atto' (which,
   interestingly, derive not from Greek but from Danish) have not yet
   acquired jargon loadings, though it is easy to predict what those will
   be once computing technology enters the required realms of magnitude
   (however, see [10812]attoparsec).

   There are, of course, some standard unit prefixes for powers of 10. In
   the following table, the `prefix' column is the international standard
   suffix for the appropriate power of ten; the `binary' column lists
   jargon abbreviations and words for the corresponding power of 2. The
   B-suffixed forms are commonly used for byte quantities; the words
   `meg' and `gig' are nouns that may (but do not always) pluralize with
   `s'.
prefix   decimal   binary       pronunciation
kilo-       k      K, KB,       /kay/
mega-       M      M, MB, meg   /meg/
giga-       G      G, GB, gig   /gig/,/jig/

   Confusingly, hackers often use K or M as though they were suffix or
   numeric multipliers rather than a prefix; thus "2K dollars", "2M of
   disk space". This is also true (though less commonly) of G.

   Note that the formal SI metric prefix for 1000 is `k'; some use this
   strictly, reserving `K' for multiplication by 1024 (KB is thus
   `kilobytes').

   K, M, and G used alone refer to quantities of bytes; thus, 64G is 64
   gigabytes and `a K' is a kilobyte (compare mainstream use of `a G' as
   short for `a grand', that is, $1000). Whether one pronounces `gig'
   with hard or soft `g' depends on what one thinks the proper
   pronunciation of `giga-' is.

   Confusing 1000 and 1024 (or other powers of 2 and 10 close in
   magnitude) -- for example, describing a memory in units of 500K or
   524K instead of 512K -- is a sure sign of the [10813]marketroid. One
   example of this: it is common to refer to the capacity of 3.5"
   [10814]microfloppies as `1.44 MB' In fact, this is a completely
   [10815]bogus number. The correct size is 1440 KB, that is, 1440 * 1024
   = 1474560 bytes. So the `mega' in `1.44 MB' is compounded of two
   `kilos', one of which is 1024 and the other of which is 1000. The
   correct number of megabytes would of course be 1440 / 1024 = 1.40625.
   Alas, this fine point is probably lost on the world forever.

   [1993 update: hacker Morgan Burke has proposed, to general approval on
   Usenet, the following additional prefixes:

   groucho
          10^(-30)

   harpo
          10^(-27)

   harpi
          10^(27)

   grouchi
          10^(30)

   We observe that this would leave the prefixes zeppo-, gummo-, and
   chico- available for future expansion. Sadly, there is little
   immediate prospect that Mr. Burke's eminently sensible proposal will
   be ratified.]

   [1999 upate: there is an [10816]IEC proposal for binary multipliers,
   but no evidence that any of its proposals are in live use.]
     _________________________________________________________________

   Node:quantum bogodynamics, Next:[10817]quarter,
   Previous:[10818]quantifiers, Up:[10819]= Q =

   quantum bogodynamics /kwon'tm boh`goh-di:-nam'iks/ n.

   A theory that characterizes the universe in terms of bogon sources
   (such as politicians, used-car salesmen, TV evangelists, and
   [10820]suits in general), bogon sinks (such as taxpayers and
   computers), and bogosity potential fields. Bogon absorption, of
   course, causes human beings to behave mindlessly and machines to fail
   (and may also cause both to emit secondary bogons); however, the
   precise mechanics of the bogon-computron interaction are not yet
   understood and remain to be elucidated. Quantum bogodynamics is most
   often invoked to explain the sharp increase in hardware and software
   failures in the presence of suits; the latter emit bogons, which the
   former absorb. See [10821]bogon, [10822]computron, [10823]suit,
   [10824]psyton.
     _________________________________________________________________

   Node:quarter, Next:[10825]ques, Previous:[10826]quantum bogodynamics,
   Up:[10827]= Q =

   quarter n.

   Two bits. This in turn comes from the `pieces of eight' famed in
   pirate movies -- Spanish silver crowns that could be broken into eight
   pie-slice-shaped `bits' to make change. Early in American history the
   Spanish coin was considered equal to a dollar, so each of these `bits'
   was considered worth 12.5 cents. Syn. [10828]tayste, [10829]crumb,
   [10830]quad. Usage: rare. General discussion of such terms is under
   [10831]nybble.
     _________________________________________________________________

   Node:ques, Next:[10832]quick-and-dirty, Previous:[10833]quarter,
   Up:[10834]= Q =

   ques /kwes/

   1. n. The question mark character (?, ASCII 0111111). 2. interj. What?
   Also frequently verb-doubled as "Ques ques?" See [10835]wall.
     _________________________________________________________________

   Node:quick-and-dirty, Next:[10836]quine, Previous:[10837]ques,
   Up:[10838]= Q =

   quick-and-dirty adj.

   [common] Describes a [10839]crock put together under time or user
   pressure. Used esp. when you want to convey that you think the fast
   way might lead to trouble further down the road. "I can have a
   quick-and-dirty fix in place tonight, but I'll have to rewrite the
   whole module to solve the underlying design problem." See also
   [10840]kluge.
     _________________________________________________________________

   Node:quine, Next:[10841]quote chapter and verse,
   Previous:[10842]quick-and-dirty, Up:[10843]= Q =

   quine /kwi:n/ n.

   [from the name of the logician Willard van Orman Quine, via Douglas
   Hofstadter] A program that generates a copy of its own source text as
   its complete output. Devising the shortest possible quine in some
   given programming language is a common hackish amusement. (We ignore
   some variants of BASIC in which a program consisting of a single empty
   string literal reproduces itself trivially.) Here is one classic
   quine:
((lambda (x)
  (list x (list (quote quote) x)))
 (quote
    (lambda (x)
      (list x (list (quote quote) x)))))

   This one works in LISP or Scheme. It's relatively easy to write quines
   in other languages such as Postscript which readily handle programs as
   data; much harder (and thus more challenging!) in languages like C
   which do not. Here is a classic C quine for ASCII machines:
char*f="char*f=%c%s%c;main()
{printf(f,34,f,34,10);}%c";
main(){printf(f,34,f,34,10);}

   For excruciatingly exact quinishness, remove the interior line breaks.
   Here is another elegant quine in ANSI C:
#define q(k)main(){return!puts(#k"\nq("#k")");}
q(#define q(k)main(){return!puts(#k"\nq("#k")");})

   Some infamous [10844]Obfuscated C Contest entries have been quines
   that reproduced in exotic ways. There is an amusing [10845]Quine Home
   Page.
     _________________________________________________________________

   Node:quote chapter and verse, Next:[10846]quotient,
   Previous:[10847]quine, Up:[10848]= Q =

   quote chapter and verse v.

   [by analogy with the mainstream phrase] To cite a relevant excerpt
   from an appropriate [10849]bible. "I don't care if rn gets it wrong;
   `Followup-To: poster' is explicitly permitted by [10850]RFC-1036. I'll
   quote chapter and verse if you don't believe me." See also
   [10851]legalese, [10852]language lawyer, [10853]RTFS (sense 2).
     _________________________________________________________________

   Node:quotient, Next:[10854]quux, Previous:[10855]quote chapter and
   verse, Up:[10856]= Q =

   quotient n.

   See [10857]coefficient of X.
     _________________________________________________________________

   Node:quux, Next:[10858]qux, Previous:[10859]quotient, Up:[10860]= Q =

   quux /kwuhks/ n.

   [Mythically, from the Latin semi-deponent verb quuxo, quuxare,
   quuxandum iri; noun form variously `quux' (plural `quuces', anglicized
   to `quuxes') and `quuxu' (genitive plural is `quuxuum', for four
   u-letters out of seven in all, using up all the `u' letters in
   Scrabble).] 1. Originally, a [10861]metasyntactic variable like
   [10862]foo and [10863]foobar. Invented by Guy Steele for precisely
   this purpose when he was young and naive and not yet interacting with
   the real computing community. Many people invent such words; this one
   seems simply to have been lucky enough to have spread a little. In an
   eloquent display of poetic justice, it has returned to the originator
   in the form of a nickname. 2. interj. See [10864]foo; however, denotes
   very little disgust, and is uttered mostly for the sake of the sound
   of it. 3. Guy Steele in his persona as `The Great Quux', which is
   somewhat infamous for light verse and for the `Crunchly' cartoons. 4.
   In some circles, used as a punning opposite of `crux'. "Ah, that's the
   quux of the matter!" implies that the point is not crucial (compare
   [10865]tip of the ice-cube). 5. quuxy: adj. Of or pertaining to a
   quux.
     _________________________________________________________________

   Node:qux, Next:[10866]QWERTY, Previous:[10867]quux, Up:[10868]= Q =

   qux /kwuhks/

   The fourth of the standard [10869]metasyntactic variable, after
   [10870]baz and before the quu(u...)x series. See [10871]foo,
   [10872]bar, [10873]baz, [10874]quux. This appears to be a recent
   mutation from [10875]quux, and many versions (especially older
   versions) of the standard series just run [10876]foo, [10877]bar,
   [10878]baz, [10879]quux, ....
     _________________________________________________________________

   Node:QWERTY, Next:[10880]rabbit job, Previous:[10881]qux, Up:[10882]=
   Q =

   QWERTY /kwer'tee/ adj.

   [from the keycaps at the upper left] Pertaining to a standard
   English-language typewriter keyboard (sometimes called the Sholes
   keyboard after its inventor), as opposed to Dvorak or non-US-ASCII
   layouts or a [10883]space-cadet keyboard or APL keyboard.

   Historical note: The QWERTY layout is a fine example of a
   [10884]fossil. It is sometimes said that it was designed to slow down
   the typist, but this is wrong; it was designed to allow faster typing
   -- under a constraint now long obsolete. In early typewriters, fast
   typing using nearby type-bars jammed the mechanism. So Sholes fiddled
   the layout to separate the letters of many common digraphs (he did a
   far from perfect job, though; `th', `tr', `ed', and `er', for example,
   each use two nearby keys). Also, putting the letters of `typewriter'
   on one line allowed it to be typed with particular speed and accuracy
   for [10885]demos. The jamming problem was essentially solved soon
   afterward by a suitable use of springs, but the keyboard layout lives
   on.

   The QWERTY keyboard has also spawned some unhelpful economic myths
   about how technical standards get and stay established; see
   [10886]http://www.reasonmag.com/9606/Fe.QWERTY.html.
     _________________________________________________________________

   Node:= R =, Next:[10887]= S =, Previous:[10888]= Q =, Up:[10889]The
   Jargon Lexicon

= R =

     * [10890]rabbit job:
     * [10891]rain dance:
     * [10892]rainbow series:
     * [10893]random:
     * [10894]Random Number God:
     * [10895]random numbers:
     * [10896]randomness:
     * [10897]rape:
     * [10898]rare mode:
     * [10899]raster blaster:
     * [10900]raster burn:
     * [10901]rasterbation:
     * [10902]rat belt:
     * [10903]rat dance:
     * [10904]ratio site:
     * [10905]rave:
     * [10906]rave on!:
     * [10907]ravs:
     * [10908]raw mode:
     * [10909]RBL:
     * [10910]rc file:
     * [10911]RE:
     * [10912]read-only user:
     * [10913]README file:
     * [10914]real:
     * [10915]real estate:
     * [10916]real hack:
     * [10917]real operating system:
     * [10918]Real Programmer:
     * [10919]Real Soon Now:
     * [10920]real time:
     * [10921]real user:
     * [10922]Real World:
     * [10923]reality check:
     * [10924]reality-distortion field:
     * [10925]reaper:
     * [10926]recompile the world:
     * [10927]rectangle slinger:
     * [10928]recursion:
     * [10929]recursive acronym:
     * [10930]Red Book:
     * [10931]red wire:
     * [10932]regexp:
     * [10933]register dancing:
     * [10934]rehi:
     * [10935]reincarnation cycle of:
     * [10936]reinvent the wheel:
     * [10937]relay rape:
     * [10938]religion of CHI:
     * [10939]religious issues:
     * [10940]replicator:
     * [10941]reply:
     * [10942]restriction:
     * [10943]retcon:
     * [10944]RETI:
     * [10945]retrocomputing:
     * [10946]return from the dead:
     * [10947]RFC:
     * [10948]RFE:
     * [10949]rib site:
     * [10950]rice box:
     * [10951]Right Thing:
     * [10952]rip:
     * [10953]ripoff:
     * [10954]RL:
     * [10955]roach:
     * [10956]robocanceller:
     * [10957]robot:
     * [10958]robust:
     * [10959]rococo:
     * [10960]rogue:
     * [10961]room-temperature IQ:
     * [10962]root:
     * [10963]root mode:
     * [10964]rot13:
     * [10965]rotary debugger:
     * [10966]round tape:
     * [10967]RSN:
     * [10968]RTBM:
     * [10969]RTFAQ:
     * [10970]RTFB:
     * [10971]RTFM:
     * [10972]RTFS:
     * [10973]RTI:
     * [10974]RTM:
     * [10975]RTS:
     * [10976]rude:
     * [10977]runes:
     * [10978]runic:
     * [10979]rusty iron:
     * [10980]rusty memory:
     * [10981]rusty wire:
     _________________________________________________________________

   Node:rabbit job, Next:[10982]rain dance, Previous:[10983]QWERTY,
   Up:[10984]= R =

   rabbit job n.

   [Cambridge] A batch job that does little, if any, real work, but
   creates one or more copies of itself, breeding like rabbits. Compare
   [10985]wabbit, [10986]fork bomb.
     _________________________________________________________________

   Node:rain dance, Next:[10987]rainbow series, Previous:[10988]rabbit
   job, Up:[10989]= R =

   rain dance n.

   1. Any ceremonial action taken to correct a hardware problem, with the
   expectation that nothing will be accomplished. This especially applies
   to reseating printed circuit boards, reconnecting cables, etc. "I
   can't boot up the machine. We'll have to wait for Greg to do his rain
   dance." 2. Any arcane sequence of actions performed with computers or
   software in order to achieve some goal; the term is usually restricted
   to rituals that include both an [10990]incantation or two and physical
   activity or motion. Compare [10991]magic, [10992]voodoo programming,
   [10993]black art, [10994]cargo cult programming, [10995]wave a dead
   chicken; see also [10996]casting the runes.
     _________________________________________________________________

   Node:rainbow series, Next:[10997]random, Previous:[10998]rain dance,
   Up:[10999]= R =

   rainbow series n.

   Any of several series of technical manuals distinguished by cover
   color. The original rainbow series was the NCSC security manuals (see
   [11000]Orange Book, [11001]crayola books); the term has also been
   commonly applied to the PostScript reference set (see [11002]Red Book,
   [11003]Green Book, [11004]Blue Book, [11005]White Book). Which books
   are meant by "`the' rainbow series" unqualified is thus dependent on
   one's local technical culture.
     _________________________________________________________________

   Node:random, Next:[11006]Random Number God, Previous:[11007]rainbow
   series, Up:[11008]= R =

   random adj.

   1. Unpredictable (closest to mathematical definition); weird. "The
   system's been behaving pretty randomly." 2. Assorted; undistinguished.
   "Who was at the conference?" "Just a bunch of random business types."
   3. (pejorative) Frivolous; unproductive; undirected. "He's just a
   random loser." 4. Incoherent or inelegant; poorly chosen; not well
   organized. "The program has a random set of misfeatures." "That's a
   random name for that function." "Well, all the names were chosen
   pretty randomly." 5. In no particular order, though deterministic.
   "The I/O channels are in a pool, and when a file is opened one is
   chosen randomly." 6. Arbitrary. "It generates a random name for the
   scratch file." 7. Gratuitously wrong, i.e., poorly done and for no
   good apparent reason. For example, a program that handles file name
   defaulting in a particularly useless way, or an assembler routine that
   could easily have been coded using only three registers, but
   redundantly uses seven for values with non-overlapping lifetimes, so
   that no one else can invoke it without first saving four extra
   registers. What [11009]randomness! 8. n. A random hacker; used
   particularly of high-school students who soak up computer time and
   generally get in the way. 9. n. Anyone who is not a hacker (or,
   sometimes, anyone not known to the hacker speaking); the noun form of
   sense 2. "I went to the talk, but the audience was full of randoms
   asking bogus questions". 10. n. (occasional MIT usage) One who lives
   at Random Hall. See also [11010]J. Random, [11011]some random X. 11.
   [UK] Conversationally, a non sequitur or something similarly
   out-of-the-blue. As in: "Stop being so random!" This sense equates to
   `hatstand', taken from the Viz comic character "Roger Irrelevant -
   He's completely Hatstand."
     _________________________________________________________________

   Node:Random Number God, Next:[11012]random numbers,
   Previous:[11013]random, Up:[11014]= R =

   Random Number God

   [rec.games.roguelike.angband; often abbreviated `RNG'] The malign
   force which lurks behind the random number generator in [11015]Angband
   (and by extension elsewhere). A dark god that demands sacrifices and
   toys with its victims. "I just found a really great item; I suppose
   the RNG is about to punish me..." Apparently, Angband's random number
   generator occasionally gets locked in a repetition, so you get
   something with a 3% chance happening 8 times in a row. Improbable, but
   far too common to be pure chance. Compare [11016]Shub-Internet.
     _________________________________________________________________

   Node:random numbers, Next:[11017]randomness, Previous:[11018]Random
   Number God, Up:[11019]= R =

   random numbers n.

   When one wishes to specify a large but random number of things, and
   the context is inappropriate for [11020]N, certain numbers are
   preferred by hacker tradition (that is, easily recognized as
   placeholders). These include the following:

   17
          Long described at MIT as `the least random number'; see 23.

   23
          Sacred number of Eris, Goddess of Discord (along with 17 and
          5).

   42
          The Answer to the Ultimate Question of Life, the Universe, and
          Everything. (Note that this answer is completely fortuitous.
          :-))

   69
          From the sexual act. This one was favored in MIT's ITS culture.

   105
          69 hex = 105 decimal, and 69 decimal = 105 octal.

   666
          The Number of the Beast.

   For further enlightenment, study the "Principia Discordia",
   "[11021]The Hitchhiker's Guide to the Galaxy", "The Joy of Sex", and
   the Christian Bible (Revelation 13:18). See also [11022]Discordianism
   or consult your pineal gland. See also [11023]for values of.
     _________________________________________________________________

   Node:randomness, Next:[11024]rape, Previous:[11025]random numbers,
   Up:[11026]= R =

   randomness n.

   1. An inexplicable misfeature; gratuitous inelegance. 2. A [11027]hack
   or [11028]crock that depends on a complex combination of coincidences
   (or, possibly, the combination upon which the crock depends for its
   accidental failure to malfunction). "This hack can output characters
   40-57 by putting the character in the four-bit accumulator field of an
   XCT and then extracting six bits -- the low 2 bits of the XCT opcode
   are the right thing." "What randomness!" 3. Of people, synonymous with
   `flakiness'. The connotation is that the person so described is
   behaving weirdly, incompetently, or inappropriately for reasons which
   are (a) too tiresome to bother inquiring into, (b) are probably as
   inscrutable as quantum phenomena anyway, and (c) are likely to pass
   with time. "Maybe he has a real complaint, or maybe it's just
   randomness. See if he calls back."

   Despite the negative connotations jargon uses of this term have, it is
   worth noting that randomness can actually be a valuable resource, very
   useful for applications in cryptography and elsewhere. Computers are
   so thoroughly deterministic that they have a hard time generating
   high-quality randomess, so hackers have sometimes felt the need to
   built special-purpose contraptions for this purpose alone. One
   well-known website offers random bits [11029]generated by radioactive
   decay. Another derives random bits from [11030]images of Lava Lite
   lamps. (Hackers invariably find the latter hilarious. If you have to
   ask why, you'll never get it.)
     _________________________________________________________________

   Node:rape, Next:[11031]rare mode, Previous:[11032]randomness,
   Up:[11033]= R =

   rape vt.

   1. To [11034]screw someone or something, violently; in particular, to
   destroy a program or information irrecoverably. Often used in
   describing file-system damage. "So-and-so was running a program that
   did absolute disk I/O and ended up raping the master directory." 2. To
   strip a piece of hardware for parts. 3. [CMU/Pitt] To mass-copy files
   from an anonymous ftp site. "Last night I raped Simtel's dskutl
   directory."
     _________________________________________________________________

   Node:rare mode, Next:[11035]raster blaster, Previous:[11036]rape,
   Up:[11037]= R =

   rare mode adj.

   [Unix] CBREAK mode (character-by-character with interrupts enabled).
   Distinguished from [11038]raw mode and [11039]cooked mode; the phrase
   "a sort of half-cooked (rare?) mode" is used in the V7/BSD manuals to
   describe the mode. Usage: rare.
     _________________________________________________________________

   Node:raster blaster, Next:[11040]raster burn, Previous:[11041]rare
   mode, Up:[11042]= R =

   raster blaster n.

   [Cambridge] Specialized hardware for [11043]bitblt operations (a
   [11044]blitter). Allegedly inspired by `Rasta Blasta', British slang
   for the sort of portable stereo Americans call a `boom box' or `ghetto
   blaster'.
     _________________________________________________________________

   Node:raster burn, Next:[11045]rasterbation, Previous:[11046]raster
   blaster, Up:[11047]= R =

   raster burn n.

   Eyestrain brought on by too many hours of looking at low-res, poorly
   tuned, or glare-ridden monitors, esp. graphics monitors. See
   [11048]terminal illness.
     _________________________________________________________________

   Node:rasterbation, Next:[11049]rat belt, Previous:[11050]raster burn,
   Up:[11051]= R =

   rasterbation n.

   [portmanteau: raster + masturbation] The gratuituous use of comuputer
   generated images and effects in movies and graphic art which would
   have been better without them. Especially employed as a term of abuse
   by Photoshop/GIMP users and graphic artists.
     _________________________________________________________________

   Node:rat belt, Next:[11052]rat dance, Previous:[11053]rasterbation,
   Up:[11054]= R =

   rat belt n.

   A cable tie, esp. the sawtoothed, self-locking plastic kind that you
   can remove only by cutting (as opposed to a random twist of wire or a
   twist tie or one of those humongous metal clip frobs). Small cable
   ties are `mouse belts'.
     _________________________________________________________________

   Node:rat dance, Next:[11055]ratio site, Previous:[11056]rat belt,
   Up:[11057]= R =

   rat dance n.

   [From the [11058]Dilbert comic strip of November 14, 1995] A
   [11059]hacking run that produces results which, while superficially
   coherent, have little or nothing to do with its original objectives.
   There are strong connotations that the coding process and the
   objectives themselves were pretty [11060]random. (In the original
   comic strip, the Ratbert is invited to dance on Dilbert's keyboard in
   order to produce bugs for him to fix, and authors a Web browser
   instead.) Compare [11061]Infinite-Monkey Theorem.

   This term seems to have become widely recognized quite rapidly after
   the original strip, a fact which testifies to Dilbert's huge
   popularity among hackers. All too many find the perverse incentives
   and Kafkaesque atmosphere of Dilbert's mythical workplace reflective
   of their own experiences.
     _________________________________________________________________

   Node:ratio site, Next:[11062]rave, Previous:[11063]rat dance,
   Up:[11064]= R =

   ratio site

   [warez d00dz] A FTP site storing pirated files where one must first
   upload something before being able to download. There is a ratio,
   based on bytes or files count, between the uploads and download. For
   instance, on a 2:1 site, to download a 4 Mb file, one must first
   upload at least 2 Mb of files. The hotter the contents of the server
   are, the smaller the ratio is. More often than not, the server refuses
   uploads because its disk is full, making it useless for downloading -
   or the connection magically breaks after one has uploaded a large
   amount of files, just before the downloading phase begins. See also
   [11065]banner site, [11066]leech mode.
     _________________________________________________________________

   Node:rave, Next:[11067]rave on!, Previous:[11068]ratio site,
   Up:[11069]= R =

   rave vi.

   [WPI] 1. To persist in discussing a specific subject. 2. To speak
   authoritatively on a subject about which one knows very little. 3. To
   complain to a person who is not in a position to correct the
   difficulty. 4. To purposely annoy another person verbally. 5. To
   evangelize. See [11070]flame. 6. Also used to describe a less negative
   form of blather, such as friendly bullshitting. `Rave' differs
   slightly from [11071]flame in that `rave' implies that it is the
   persistence or obliviousness of the person speaking that is annoying,
   while [11072]flame implies somewhat more strongly that the tone or
   content is offensive as well.
     _________________________________________________________________

   Node:rave on!, Next:[11073]ravs, Previous:[11074]rave, Up:[11075]= R =

   rave on! imp.

   Sarcastic invitation to continue a [11076]rave, often by someone who
   wishes the raver would get a clue but realizes this is unlikely.
     _________________________________________________________________

   Node:ravs, Next:[11077]raw mode, Previous:[11078]rave on!, Up:[11079]=
   R =

   ravs /ravz/, also `Chinese ravs' n.

   [primarily MIT/Boston usage] Jiao-zi (steamed or boiled) or Guo-tie
   (pan-fried). A Chinese appetizer, known variously in the plural as
   dumplings, pot stickers (the literal translation of guo-tie), and
   (around Boston) `Peking Ravioli'. The term `rav' is short for
   `ravioli', and among hackers always means the Chinese kind rather than
   the Italian kind. Both consist of a filling in a pasta shell, but the
   Chinese kind includes no cheese, uses a thinner pasta, has a
   pork-vegetable filling (good ones include Chinese chives), and is
   cooked differently, either by steaming or frying. A rav or dumpling
   can be cooked any way, but a potsticker is always the pan-fried kind
   (so called because it sticks to the frying pot and has to be scraped
   off). "Let's get hot-and-sour soup and three orders of ravs." See also
   [11080]oriental food.
     _________________________________________________________________

   Node:raw mode, Next:[11081]RBL, Previous:[11082]ravs, Up:[11083]= R =

   raw mode n.

   A mode that allows a program to transfer bits directly to or from an
   I/O device (or, under [11084]bogus operating systems that make a
   distinction, a disk file) without any processing, abstraction, or
   interpretation by the operating system. Compare [11085]rare mode,
   [11086]cooked mode. This is techspeak under Unix, jargon elsewhere.
     _________________________________________________________________

   Node:RBL, Next:[11087]rc file, Previous:[11088]raw mode, Up:[11089]= R
   =

   RBL /R-B-L/

   Abbreviation: "Realtime Blackhole List". A service that allows people
   to blacklist sites for emitting [11090]spam, and makes the blacklist
   available in real time to electronic-mail transport programs that know
   how to use RBL so they can filter out mail from those sites. Drastic
   (and controversial) but effective. There is an [11091]RBL home page.
     _________________________________________________________________

   Node:rc file, Next:[11092]RE, Previous:[11093]RBL, Up:[11094]= R =

   rc file /R-C fi:l/ n.

   [Unix: from `runcom files' on the [11095]CTSS system 1962-63, via the
   startup script /etc/rc] Script file containing startup instructions
   for an application program (or an entire operating system), usually a
   text file containing commands of the sort that might have been invoked
   manually once the system was running but are to be executed
   automatically each time the system starts up. See also [11096]dot
   file, [11097]profile (sense 1).
     _________________________________________________________________

   Node:RE, Next:[11098]read-only user, Previous:[11099]rc file,
   Up:[11100]= R =

   RE /R-E/ n.

   Common spoken and written shorthand for [11101]regexp.
     _________________________________________________________________

   Node:read-only user, Next:[11102]README file, Previous:[11103]RE,
   Up:[11104]= R =

   read-only user n.

   Describes a [11105]luser who uses computers almost exclusively for
   reading Usenet, bulletin boards, and/or email, rather than writing
   code or purveying useful information. See [11106]twink,
   [11107]terminal junkie, [11108]lurker.
     _________________________________________________________________

   Node:README file, Next:[11109]real, Previous:[11110]read-only user,
   Up:[11111]= R =

   README file n.

   Hacker's-eye introduction traditionally included in the top-level
   directory of a Unix source distribution, containing a pointer to more
   detailed documentation, credits, miscellaneous revision history,
   notes, etc. (The file may be named README, or READ.ME, or rarely
   ReadMe or readme.txt or some other variant.) In the Mac and PC worlds,
   software is not usually distributed in source form, and the README is
   more likely to contain user-oriented material like last-minute
   documentation changes, error workarounds, and restrictions. When
   asked, hackers invariably relate the README convention to the famous
   scene in Lewis Carroll's "Alice's Adventures In Wonderland" in which
   Alice confronts magic munchies labeled "Eat Me" and "Drink Me".
     _________________________________________________________________

   Node:real, Next:[11112]real estate, Previous:[11113]README file,
   Up:[11114]= R =

   real adj.

   Not simulated. Often used as a specific antonym to [11115]virtual in
   any of its jargon senses.
     _________________________________________________________________

   Node:real estate, Next:[11116]real hack, Previous:[11117]real,
   Up:[11118]= R =

   real estate n.

   May be used for any critical resource measured in units of area. Most
   frequently used of `chip real estate', the area available for logic on
   the surface of an integrated circuit (see also [11119]nanoacre). May
   also be used of floor space in a [11120]dinosaur pen, or even space on
   a crowded desktop (whether physical or electronic).
     _________________________________________________________________

   Node:real hack, Next:[11121]real operating system,
   Previous:[11122]real estate, Up:[11123]= R =

   real hack n.

   A [11124]crock. This is sometimes used affectionately; see
   [11125]hack.
     _________________________________________________________________

   Node:real operating system, Next:[11126]Real Programmer,
   Previous:[11127]real hack, Up:[11128]= R =

   real operating system n.

   The sort the speaker is used to. People from the BSDophilic academic
   community are likely to issue comments like "System V? Why don't you
   use a real operating system?", people from the commercial/industrial
   Unix sector are known to complain "BSD? Why don't you use a real
   operating system?", and people from IBM object "Unix? Why don't you
   use a real operating system?" Only [11129]MS-DOS is universally
   considered unreal. See [11130]holy wars, [11131]religious issues,
   [11132]proprietary, [11133]Get a real computer!
     _________________________________________________________________

   Node:Real Programmer, Next:[11134]Real Soon Now, Previous:[11135]real
   operating system, Up:[11136]= R =

   Real Programmer n.

   [indirectly, from the book "Real Men Don't Eat Quiche"] A particular
   sub-variety of hacker: one possessed of a flippant attitude toward
   complexity that is arrogant even when justified by experience. The
   archetypal `Real Programmer' likes to program on the [11137]bare metal
   and is very good at same, remembers the binary opcodes for every
   machine he has ever programmed, thinks that HLLs are sissy, and uses a
   debugger to edit his code because full-screen editors are for wimps.
   Real Programmers aren't satisfied with code that hasn't been
   [11138]bummed into a state of [11139]tenseness just short of rupture.
   Real Programmers never use comments or write documentation: "If it was
   hard to write", says the Real Programmer, "it should be hard to
   understand." Real Programmers can make machines do things that were
   never in their spec sheets; in fact, they are seldom really happy
   unless doing so. A Real Programmer's code can awe with its fiendish
   brilliance, even as its crockishness appalls. Real Programmers live on
   junk food and coffee, hang line-printer art on their walls, and
   terrify the crap out of other programmers -- because someday, somebody
   else might have to try to understand their code in order to change it.
   Their successors generally consider it a [11140]Good Thing that there
   aren't many Real Programmers around any more. For a famous (and
   somewhat more positive) portrait of a Real Programmer, see "[11141]The
   Story of Mel" in Appendix A. The term itself was popularized by a 1983
   Datamation article "Real Programmers Don't Use Pascal" by Ed Post,
   still circulating on Usenet and Internet in on-line form. You can
   browse "Real Programmers Don't Use Pascal" from the Datamation home
   page [11142]http://www.datamation.com.
     _________________________________________________________________

   Node:Real Soon Now, Next:[11143]real time, Previous:[11144]Real
   Programmer, Up:[11145]= R =

   Real Soon Now adv.

   [orig. from SF's fanzine community, popularized by Jerry Pournelle's
   column in "BYTE"] 1. Supposed to be available (or fixed, or cheap, or
   whatever) real soon now according to somebody, but the speaker is
   quite skeptical. 2. When one's gods, fates, or other time commitments
   permit one to get to it (in other words, don't hold your breath).
   Often abbreviated RSN. Compare [11146]copious free time.
     _________________________________________________________________

   Node:real time, Next:[11147]real user, Previous:[11148]Real Soon Now,
   Up:[11149]= R =

   real time

   1. [techspeak] adj. Describes an application which requires a program
   to respond to stimuli within some small upper limit of response time
   (typically milli- or microseconds). Process control at a chemical
   plant is the [11150]canonical example. Such applications often require
   special operating systems (because everything else must take a back
   seat to response time) and speed-tuned hardware. 2. adv. In jargon,
   refers to doing something while people are watching or waiting. "I
   asked her how to find the calling procedure's program counter on the
   stack and she came up with an algorithm in real time."
     _________________________________________________________________

   Node:real user, Next:[11151]Real World, Previous:[11152]real time,
   Up:[11153]= R =

   real user n.

   1. A commercial user. One who is paying real money for his computer
   usage. 2. A non-hacker. Someone using the system for an explicit
   purpose (a research project, a course, etc.) other than pure
   exploration. See [11154]user. Hackers who are also students may also
   be real users. "I need this fixed so I can do a problem set. I'm not
   complaining out of randomness, but as a real user." See also
   [11155]luser.
     _________________________________________________________________

   Node:Real World, Next:[11156]reality check, Previous:[11157]real user,
   Up:[11158]= R =

   Real World n.

   1. Those institutions at which `programming' may be used in the same
   sentence as `FORTRAN', `[11159]COBOL', `RPG', `[11160]IBM', `DBASE',
   etc. Places where programs do such commercially necessary but
   intellectually uninspiring things as generating payroll checks and
   invoices. 2. The location of non-programmers and activities not
   related to programming. 3. A bizarre dimension in which the standard
   dress is shirt and tie and in which a person's working hours are
   defined as 9 to 5 (see [11161]code grinder). 4. Anywhere outside a
   university. "Poor fellow, he's left MIT and gone into the Real World."
   Used pejoratively by those not in residence there. In conversation,
   talking of someone who has entered the Real World is not unlike
   speaking of a deceased person. It is also noteworthy that on the
   campus of Cambridge University in England, there is a gaily-painted
   lamp-post which bears the label `REALITY CHECKPOINT'. It marks the
   boundary between university and the Real World; check your notions of
   reality before passing. This joke is funnier because the Cambridge
   `campus' is actually coextensive with the center of Cambridge town.
   See also [11162]fear and loathing, [11163]mundane, and
   [11164]uninteresting.
     _________________________________________________________________

   Node:reality check, Next:[11165]reality-distortion field,
   Previous:[11166]Real World, Up:[11167]= R =

   reality check n.

   1. The simplest kind of test of software or hardware; doing the
   equivalent of asking it what 2 + 2 is and seeing if you get 4. The
   software equivalent of a [11168]smoke test. 2. The act of letting a
   [11169]real user try out prototype software. Compare [11170]sanity
   check.
     _________________________________________________________________

   Node:reality-distortion field, Next:[11171]reaper,
   Previous:[11172]reality check, Up:[11173]= R =

   reality-distortion field n.

   An expression used to describe the persuasive ability of managers like
   Steve Jobs (the term originated at Apple in the 1980s to describe his
   peculiar charisma). Those close to these managers become passionately
   committed to possibly insane projects, without regard to the
   practicality of their implementation or competitive forces in the
   marketpace.
     _________________________________________________________________

   Node:reaper, Next:[11174]recompile the world,
   Previous:[11175]reality-distortion field, Up:[11176]= R =

   reaper n.

   A [11177]prowler that [11178]GFRs files. A file removed in this way is
   said to have been `reaped'.
     _________________________________________________________________

   Node:recompile the world, Next:[11179]rectangle slinger,
   Previous:[11180]reaper, Up:[11181]= R =

   recompile the world

   The surprisingly large amount of work that needs to be done as the
   result of any small but globally visible program change. "The world"
   may mean the entirety of some huge program, or may in theory refer to
   every program of a certain class in the entire known universe. For
   instance, "Add one #define to stdio.h, and you have to recompile the
   world." This means that any minor change to the standard-I/O header
   file theoretically mandates recompiling every C program in existence,
   even if only to verify that the change didn't screw something else up.
   In practice, you may not actually have to recompile the world, but the
   implication is that some human cleverness is required to figure out
   what parts can be safely left out.
     _________________________________________________________________

   Node:rectangle slinger, Next:[11182]recursion,
   Previous:[11183]recompile the world, Up:[11184]= R =

   rectangle slinger n.

   See [11185]polygon pusher.
     _________________________________________________________________

   Node:recursion, Next:[11186]recursive acronym,
   Previous:[11187]rectangle slinger, Up:[11188]= R =

   recursion n.

   See [11189]recursion. See also [11190]tail recursion.
     _________________________________________________________________

   Node:recursive acronym, Next:[11191]Red Book,
   Previous:[11192]recursion, Up:[11193]= R =

   recursive acronym n.

   A hackish (and especially MIT) tradition is to choose
   acronyms/abbreviations that refer humorously to themselves or to other
   acronyms/abbreviations. The classic examples were two MIT editors
   called EINE ("EINE Is Not EMACS") and ZWEI ("ZWEI Was EINE
   Initially"). More recently, there is a Scheme compiler called LIAR
   (Liar Imitates Apply Recursively), and [11194]GNU (q.v., sense 1)
   stands for "GNU's Not Unix!" -- and a company with the name Cygnus,
   which expands to "Cygnus, Your GNU Support" (though Cygnus people say
   this is a [11195]backronym). See also [11196]mung, [11197]EMACS.
     _________________________________________________________________

   Node:Red Book, Next:[11198]red wire, Previous:[11199]recursive
   acronym, Up:[11200]= R =

   Red Book n.

   1. Informal name for one of the four standard references on
   [11201]PostScript ("PostScript Language Reference Manual", Adobe
   Systems (Addison-Wesley, 1985; QA76.73.P67P67; ISBN 0-201-10174-2, or
   the 1990 second edition ISBN 0-201-18127-4); the others are known as
   the [11202]Green Book, the [11203]Blue Book, and the [11204]White Book
   (sense 2). 2. Informal name for one of the 3 standard references on
   Smalltalk ("Smalltalk-80: The Interactive Programming Environment" by
   Adele Goldberg (Addison-Wesley, 1984; QA76.8.S635G638; ISBN
   0-201-11372-4); this too is associated with blue and green books). 3.
   Any of the 1984 standards issued by the CCITT eighth plenary assembly.
   These include, among other things, the X.400 email spec and the Group
   1 through 4 fax standards. 4. The new version of the [11205]Green Book
   (sense 4) -- IEEE 1003.1-1990, a.k.a ISO 9945-1 -- is (because of the
   color and the fact that it is printed on A4 paper) known in the USA as
   "the Ugly Red Book That Won't Fit On The Shelf" and in Europe as "the
   Ugly Red Book That's A Sensible Size". 5. The NSA "Trusted Network
   Interpretation" companion to the [11206]Orange Book. 6. Nemeth,
   Snyder, Seebass, Hein; "Unix System Administration Handbook, Second
   Edition" (Prentice Hall PTR, New Jersey; 1995; QA76.76.063N45; ISBN
   0-13-151051-7). See also [11207]book titles.
     _________________________________________________________________

   Node:red wire, Next:[11208]regexp, Previous:[11209]Red Book,
   Up:[11210]= R =

   red wire n.

   [IBM] Patch wires installed by programmers who have no business
   mucking with the hardware. It is said that the only thing more
   dangerous than a hardware guy with a code patch is a [11211]softy with
   a soldering iron.... Compare [11212]blue wire, [11213]yellow wire,
   [11214]purple wire.
     _________________________________________________________________

   Node:regexp, Next:[11215]register dancing, Previous:[11216]red wire,
   Up:[11217]= R =

   regexp /reg'eksp/ n.

   [Unix] (alt. `regex' or `reg-ex') 1. Common written and spoken
   abbreviation for `regular expression', one of the wildcard patterns
   used, e.g., by Unix utilities such as grep(1), sed(1), and awk(1).
   These use conventions similar to but more elaborate than those
   described under [11218]glob. For purposes of this lexicon, it is
   sufficient to note that regexps also allow complemented character sets
   using ^; thus, one can specify `any non-alphabetic character' with
   [^A-Za-z]. 2. Name of a well-known PD regexp-handling package in
   portable C, written by revered Usenetter Henry Spencer
   [11219]<henry@zoo.toronto.edu>.
     _________________________________________________________________

   Node:register dancing, Next:[11220]rehi, Previous:[11221]regexp,
   Up:[11222]= R =

   register dancing n.

   Many older processor architectures suffer from a serious shortage of
   general-purpose registers. This is especially a problem for
   compiler-writers, because their generated code needs places to store
   temporaries for things like intermediate values in expression
   evaluation. Some designs with this problem, like the Intel 80x86, do
   have a handful of special-purpose registers that can be pressed into
   service, providing suitable care is taken to avoid unpleasant side
   effects on the state of the processor: while the special-purpose
   register is being used to hold an intermediate value, a delicate
   minuet is required in which the previous value of the register is
   saved and then restored just before the official function (and value)
   of the special-purpose register is again needed.
     _________________________________________________________________

   Node:rehi, Next:[11223]reincarnation cycle of,
   Previous:[11224]register dancing, Up:[11225]= R =

   rehi

   [IRC, MUD] "Hello again." Very commonly used to greet people upon
   returning to an IRC channel after [11226]channel hopping.
     _________________________________________________________________

   Node:reincarnation cycle of, Next:[11227]reinvent the wheel,
   Previous:[11228]rehi, Up:[11229]= R =

   reincarnation, cycle of n.

   See [11230]cycle of reincarnation.
     _________________________________________________________________

   Node:reinvent the wheel, Next:[11231]relay rape,
   Previous:[11232]reincarnation cycle of, Up:[11233]= R =

   reinvent the wheel v.

   To design or implement a tool equivalent to an existing one or part of
   one, with the implication that doing so is silly or a waste of time.
   This is often a valid criticism. On the other hand, automobiles don't
   use wooden rollers, and some kinds of wheel have to be reinvented many
   times before you get them right. On the third hand, people reinventing
   the wheel do tend to come up with the moral equivalent of a trapezoid
   with an offset axle.
     _________________________________________________________________

   Node:relay rape, Next:[11234]religion of CHI, Previous:[11235]reinvent
   the wheel, Up:[11236]= R =

   relay rape n.

   The hijacking of a third party's unsecured mail server to deliver
   [11237]spam.
     _________________________________________________________________

   Node:religion of CHI, Next:[11238]religious issues,
   Previous:[11239]relay rape, Up:[11240]= R =

   religion of CHI /ki:/ n.

   [Case Western Reserve University] Yet another hackish parody religion
   (see also [11241]Church of the SubGenius, [11242]Discordianism). In
   the mid-70s, the canonical "Introduction to Programming" courses at
   CWRU were taught in Algol, and student exercises were punched on cards
   and run on a Univac 1108 system using a homebrew operating system
   named CHI. The religion had no doctrines and but one ritual: whenever
   the worshipper noted that a digital clock read 11:08, he or she would
   recite the phrase "It is 11:08; ABS, ALPHABETIC, ARCSIN, ARCCOS,
   ARCTAN." The last five words were the first five functions in the
   appropriate chapter of the Algol manual; note the special
   pronunciations /obz/ and /ark'sin/ rather than the more common /ahbz/
   and /ark'si:n/. Using an alarm clock to warn of 11:08's arrival was
   [11243]considered harmful.
     _________________________________________________________________

   Node:religious issues, Next:[11244]replicator,
   Previous:[11245]religion of CHI, Up:[11246]= R =

   religious issues n.

   Questions which seemingly cannot be raised without touching off
   [11247]holy wars, such as "What is the best operating system (or
   editor, language, architecture, shell, mail reader, news reader)?",
   "What about that Heinlein guy, eh?", "What should we add to the new
   Jargon File?" See [11248]holy wars; see also [11249]theology,
   [11250]bigot.

   This term is a prime example of [11251]ha ha only serious. People
   actually develop the most amazing and religiously intense attachments
   to their tools, even when the tools are intangible. The most
   constructive thing one can do when one stumbles into the crossfire is
   mumble [11252]Get a life! and leave -- unless, of course, one's own
   unassailably rational and obviously correct choices are being slammed.
     _________________________________________________________________

   Node:replicator, Next:[11253]reply, Previous:[11254]religious issues,
   Up:[11255]= R =

   replicator n.

   Any construct that acts to produce copies of itself; this could be a
   living organism, an idea (see [11256]meme), a program (see
   [11257]quine, [11258]worm, [11259]wabbit, [11260]fork bomb, and
   [11261]virus), a pattern in a cellular automaton (see [11262]life,
   sense 1), or (speculatively) a robot or [11263]nanobot. It is even
   claimed by some that [11264]Unix and [11265]C are the symbiotic halves
   of an extremely successful replicator; see [11266]Unix conspiracy.
     _________________________________________________________________

   Node:reply, Next:[11267]restriction, Previous:[11268]replicator,
   Up:[11269]= R =

   reply n.

   See [11270]followup.
     _________________________________________________________________

   Node:restriction, Next:[11271]retcon, Previous:[11272]reply,
   Up:[11273]= R =

   restriction n.

   A [11274]bug or design error that limits a program's capabilities, and
   which is sufficiently egregious that nobody can quite work up enough
   nerve to describe it as a [11275]feature. Often used (esp. by
   [11276]marketroid types) to make it sound as though some crippling
   bogosity had been intended by the designers all along, or was forced
   upon them by arcane technical constraints of a nature no mere user
   could possibly comprehend (these claims are almost invariably false).

   Old-time hacker Joseph M. Newcomer advises that whenever choosing a
   quantifiable but arbitrary restriction, you should make it either a
   power of 2 or a power of 2 minus 1. If you impose a limit of 107 items
   in a list, everyone will know it is a random number -- on the other
   hand, a limit of 15 or 16 suggests some deep reason (involving 0- or
   1-based indexing in binary) and you will get less [11277]flamage for
   it. Limits which are round numbers in base 10 are always especially
   suspect.
     _________________________________________________________________

   Node:retcon, Next:[11278]RETI, Previous:[11279]restriction,
   Up:[11280]= R =

   retcon /ret'kon/

   [short for `retroactive continuity', from the Usenet newsgroup
   rec.arts.comics] 1. n. The common situation in pulp fiction (esp.
   comics or soap operas) where a new story `reveals' things about events
   in previous stories, usually leaving the `facts' the same (thus
   preserving continuity) while completely changing their interpretation.
   For example, revealing that a whole season of "Dallas" was a dream was
   a retcon. 2. vt. To write such a story about a character or fictitious
   object. "Byrne has retconned Superman's cape so that it is no longer
   unbreakable." "Marvelman's old adventures were retconned into
   synthetic dreams." "Swamp Thing was retconned from a transformed
   person into a sentient vegetable." "Darth Vader was retconned into
   Luke Skywalker's father in "The Empire Strikes Back".

   [This term is included because it is a good example of hackish
   linguistic innovation in a field completely unrelated to computers.
   The word `retcon' will probably spread through comics fandom and lose
   its association with hackerdom within a couple of years; for the
   record, it started here. --ESR]

   [1993 update: some comics fans on the net now claim that retcon was
   independently in use in comics fandom before rec.arts.comics. In
   lexicography, nothing is ever simple. --ESR]
     _________________________________________________________________

   Node:RETI, Next:[11281]retrocomputing, Previous:[11282]retcon,
   Up:[11283]= R =

   RETI v.

   Syn. [11284]RTI
     _________________________________________________________________

   Node:retrocomputing, Next:[11285]return from the dead,
   Previous:[11286]RETI, Up:[11287]= R =

   retrocomputing /ret'-roh-k*m-pyoo'ting/ n.

   Refers to emulations of way-behind-the-state-of-the-art hardware or
   software, or implementations of never-was-state-of-the-art; esp. if
   such implementations are elaborate practical jokes and/or parodies,
   written mostly for [11288]hack value, of more `serious' designs.
   Perhaps the most widely distributed retrocomputing utility was the
   pnch(6) or bcd(6) program on V7 and other early Unix versions, which
   would accept up to 80 characters of text argument and display the
   corresponding pattern in [11289]punched card code. Other well-known
   retrocomputing hacks have included the programming language
   [11290]INTERCAL, a [11291]JCL-emulating shell for Unix, the
   card-punch-emulating editor named 029, and various elaborate PDP-11
   hardware emulators and RT-11 OS emulators written just to keep an old,
   sourceless [11292]Zork binary running.

   A tasty selection of retrocomputing programs are made available at the
   Retrocomputing Museum, [11293]http://www.ccil.org/retro.
     _________________________________________________________________

   Node:return from the dead, Next:[11294]RFC,
   Previous:[11295]retrocomputing, Up:[11296]= R =

   return from the dead v.

   To regain access to the net after a long absence. Compare
   [11297]person of no account.
     _________________________________________________________________

   Node:RFC, Next:[11298]RFE, Previous:[11299]return from the dead,
   Up:[11300]= R =

   RFC /R-F-C/ n.

   [Request For Comment] One of a long-established series of numbered
   Internet informational documents and standards widely followed by
   commercial software and freeware in the Internet and Unix communities.
   Perhaps the single most influential one has been RFC-822 (the Internet
   mail-format standard). The RFCs are unusual in that they are floated
   by technical experts acting on their own initiative and reviewed by
   the Internet at large, rather than formally promulgated through an
   institution such as ANSI. For this reason, they remain known as RFCs
   even once adopted as standards.

   The RFC tradition of pragmatic, experience-driven, after-the-fact
   standard writing done by individuals or small working groups has
   important advantages over the more formal, committee-driven process
   typical of ANSI or ISO. Emblematic of some of these advantages is the
   existence of a flourishing tradition of `joke' RFCs; usually at least
   one a year is published, usually on April 1st. Well-known joke RFCs
   have included 527 ("ARPAWOCKY", R. Merryman, UCSD; 22 June 1973), 748
   ("Telnet Randomly-Lose Option", Mark R. Crispin; 1 April 1978), and
   1149 ("A Standard for the Transmission of IP Datagrams on Avian
   Carriers", D. Waitzman, BBN STC; 1 April 1990). The first was a Lewis
   Carroll pastiche; the second a parody of the TCP-IP documentation
   style, and the third a deadpan skewering of standards-document
   legalese, describing protocols for transmitting Internet data packets
   by carrier pigeon.

   The RFCs are most remarkable for how well they work -- they manage to
   have neither the ambiguities that are usually rife in informal
   specifications, nor the committee-perpetrated misfeatures that often
   haunt formal standards, and they define a network that has grown to
   truly worldwide proportions.
     _________________________________________________________________

   Node:RFE, Next:[11301]rib site, Previous:[11302]RFC, Up:[11303]= R =

   RFE /R-F-E/ n.

   1. [techspeak] Request For Enhancement (compare [11304]RFC). 2. [from
   `Radio Free Europe', Bellcore and Sun] Radio Free Ethernet, a system
   (originated by Peter Langston) for broadcasting audio among Sun
   SPARCstations over the ethernet.
     _________________________________________________________________

   Node:rib site, Next:[11305]rice box, Previous:[11306]RFE, Up:[11307]=
   R =

   rib site n.

   [by analogy with [11308]backbone site] A machine that has an on-demand
   high-speed link to a [11309]backbone site and serves as a regional
   distribution point for lots of third-party traffic in email and Usenet
   news. Compare [11310]leaf site, [11311]backbone site.
     _________________________________________________________________

   Node:rice box, Next:[11312]Right Thing, Previous:[11313]rib site,
   Up:[11314]= R =

   rice box n.

   [from ham radio slang] Any Asian-made commodity computer, esp. an
   80x86-based machine built to IBM PC-compatible ISA or EISA-bus
   standards.
     _________________________________________________________________

   Node:Right Thing, Next:[11315]rip, Previous:[11316]rice box,
   Up:[11317]= R =

   Right Thing n.

   That which is compellingly the correct or appropriate thing to use,
   do, say, etc. Often capitalized, always emphasized in speech as though
   capitalized. Use of this term often implies that in fact reasonable
   people may disagree. "What's the right thing for LISP to do when it
   sees (mod a 0)? Should it return a, or give a divide-by-0 error?"
   Oppose [11318]Wrong Thing.
     _________________________________________________________________

   Node:rip, Next:[11319]ripoff, Previous:[11320]Right Thing, Up:[11321]=
   R =

   rip v.

   1. To extract the digital representation of a piece of music from an
   audio CD. Software that does this is often called a "CD ripper". 2.
   [Amiga hackers] To extract sound or graphics from a program that they
   have been compiled/assembled into, or which generates them at
   run-time. In the case of older Amiga games this entails searching
   through memory shortly after a reboot. This sense has been in use for
   many years and probably gave rise to the (now more common) sense 1.
     _________________________________________________________________

   Node:ripoff, Next:[11322]RL, Previous:[11323]rip, Up:[11324]= R =

   ripoff n.

   Synonym for [11325]chad, sense 1.
     _________________________________________________________________

   Node:RL, Next:[11326]roach, Previous:[11327]ripoff, Up:[11328]= R =

   RL // n.

   [MUD community] Real Life. "Firiss laughs in RL" means that Firiss's
   player is laughing. Compare [11329]meatspace; oppose [11330]VR.
     _________________________________________________________________

   Node:roach, Next:[11331]robocanceller, Previous:[11332]RL, Up:[11333]=
   R =

   roach vt.

   [Bell Labs] To destroy, esp. of a data structure. Hardware gets
   [11334]toasted or [11335]fried, software gets roached.
     _________________________________________________________________

   Node:robocanceller, Next:[11336]robot, Previous:[11337]roach,
   Up:[11338]= R =

   robocanceller /roh-boh-kan'sel-*r/

   A program that monitors Usenet feeds, attempting to detect and
   eliminate [11339]spam by sending appropriate cancel messages .
   Robocancellers may use the [11340]Breidbart Index as a trigger.
   Programming them is not a game for amateurs; see [11341]ARMM. See also
   [11342]Dave the Resurrector.
     _________________________________________________________________

   Node:robot, Next:[11343]robust, Previous:[11344]robocanceller,
   Up:[11345]= R =

   robot n.

   See [11346]bot.
     _________________________________________________________________

   Node:robust, Next:[11347]rococo, Previous:[11348]robot, Up:[11349]= R
   =

   robust adj.

   Said of a system that has demonstrated an ability to recover
   gracefully from the whole range of exceptional inputs and situations
   in a given environment. One step below [11350]bulletproof. Carries the
   additional connotation of elegance in addition to just careful
   attention to detail. Compare [11351]smart, oppose [11352]brittle.
     _________________________________________________________________

   Node:rococo, Next:[11353]rogue, Previous:[11354]robust, Up:[11355]= R
   =

   rococo adj.

   Terminally [11356]baroque. Used to imply that a program has become so
   encrusted with the software equivalent of gold leaf and curlicues that
   they have completely swamped the underlying design. Called after the
   later and more extreme forms of Baroque architecture and decoration
   prevalent during the mid-1700s in Europe. Alan Perlis said: "Every
   program eventually becomes rococo, and then rubble." Compare
   [11357]critical mass.
     _________________________________________________________________

   Node:rogue, Next:[11358]room-temperature IQ, Previous:[11359]rococo,
   Up:[11360]= R =

   rogue

   1. [Unix] n. A Dungeons-and-Dragons-like game using character
   graphics, written under BSD Unix and subsequently ported to other Unix
   systems. The original BSD curses(3) screen-handling package was hacked
   together by Ken Arnold primarily to support games, and the development
   of rogue(6) popularized its use; it has since become one of Unix's
   most important and heavily used application libraries. Nethack, Omega,
   Larn, Angband, and an entire subgenre of computer dungeon games (all
   known as `roguelikes') all took off from the inspiration provided by
   rogue(6); the popular Windows game Diablo, though graphics-intensive,
   has very similar play logic. See also [11361]nethack. 2. [Usenet] adj.
   An [11362]ISP which permits net abuse (usually in the form of
   [11363]spamming) by its customers, or which itself engages in such
   activities. Rogue ISPs are sometimes subject to [11364]IDPs or
   [11365]UDPs. Sometimes deliberately mispelled as "rouge". See also
   [11366]nethack, [11367]moria, [11368]Angband.
     _________________________________________________________________

   Node:room-temperature IQ, Next:[11369]root, Previous:[11370]rogue,
   Up:[11371]= R =

   room-temperature IQ quant.

   [IBM] 80 or below (nominal room temperature is 72 degrees Fahrenheit,
   22 degrees Celsius). Used in describing the expected intelligence
   range of the [11372]luser. "Well, but how's this interface going to
   play with the room-temperature IQ crowd?" See [11373]drool-proof
   paper. This is a much more insulting phrase in countries that use
   Celsius thermometers.
     _________________________________________________________________

   Node:root, Next:[11374]root mode, Previous:[11375]room-temperature IQ,
   Up:[11376]= R =

   root n.

   [Unix] 1. The [11377]superuser account (with user name `root') that
   ignores permission bits, user number 0 on a Unix system. The term
   [11378]avatar is also used. 2. The top node of the system directory
   structure; historically the home directory of the root user, but
   probably named after the root of an (inverted) tree. 3. By extension,
   the privileged system-maintenance login on any OS. See [11379]root
   mode, [11380]go root, see also [11381]wheel.
     _________________________________________________________________

   Node:root mode, Next:[11382]rot13, Previous:[11383]root, Up:[11384]= R
   =

   root mode n.

   Syn. with [11385]wizard mode or `wheel mode'. Like these, it is often
   generalized to describe privileged states in systems other than OSes.
     _________________________________________________________________

   Node:rot13, Next:[11386]rotary debugger, Previous:[11387]root mode,
   Up:[11388]= R =

   rot13 /rot ther'teen/ n.,v.

   [Usenet: from `rotate alphabet 13 places'] The simple Caesar-cypher
   encryption that replaces each English letter with the one 13 places
   forward or back along the alphabet, so that "The butler did it!"
   becomes "Gur ohgyre qvq vg!" Most Usenet news reading and posting
   programs include a rot13 feature. It is used to enclose the text in a
   sealed wrapper that the reader must choose to open -- e.g., for
   posting things that might offend some readers, or [11389]spoilers. A
   major advantage of rot13 over rot(N) for other N is that it is
   self-inverse, so the same code can be used for encoding and decoding.
   See also [11390]spoiler space, which has partly displaced rot13 since
   non-Unix-based newsreaders became common.
     _________________________________________________________________

   Node:rotary debugger, Next:[11391]round tape, Previous:[11392]rot13,
   Up:[11393]= R =

   rotary debugger n.

   [Commodore] Essential equipment for those late-night or early-morning
   debugging sessions. Mainly used as sustenance for the hacker. Comes in
   many decorator colors, such as Sausage, Pepperoni, and Garbage. See
   [11394]ANSI standard pizza.
     _________________________________________________________________

   Node:round tape, Next:[11395]RSN, Previous:[11396]rotary debugger,
   Up:[11397]= R =

   round tape n.

   Industry-standard 1/2-inch magnetic tape (7- or 9-track) on
   traditional circular reels. See [11398]macrotape, oppose [11399]square
   tape.
     _________________________________________________________________

   Node:RSN, Next:[11400]RTBM, Previous:[11401]round tape, Up:[11402]= R
   =

   RSN /R-S-N/ adj.

   See [11403]Real Soon Now.
     _________________________________________________________________

   Node:RTBM, Next:[11404]RTFAQ, Previous:[11405]RSN, Up:[11406]= R =

   RTBM /R-T-B-M/ imp.

   [Unix] Commonwealth Hackish variant of [11407]RTFM; expands to `Read
   The Bloody Manual'. RTBM is often the entire text of the first reply
   to a question from a [11408]newbie; the second would escalate to
   "RTFM".
     _________________________________________________________________

   Node:RTFAQ, Next:[11409]RTFB, Previous:[11410]RTBM, Up:[11411]= R =

   RTFAQ /R-T-F-A-Q/ imp.

   [Usenet: primarily written, by analogy with [11412]RTFM] Abbrev. for
   `Read the FAQ!', an exhortation that the person addressed ought to
   read the newsgroup's [11413]FAQ list before posting questions.
     _________________________________________________________________

   Node:RTFB, Next:[11414]RTFM, Previous:[11415]RTFAQ, Up:[11416]= R =

   RTFB /R-T-F-B/ imp.

   [Unix] Abbreviation for `Read The Fucking Binary'. Used when neither
   documentation nor source for the problem at hand exists, and the only
   thing to do is use some debugger or monitor and directly analyze the
   assembler or even the machine code. "No source for the buggy port
   driver? Aaargh! I hate proprietary operating systems. Time to RTFB."

   Of the various RTF? forms, `RTFB' is the least pejorative against
   anyone asking a question for which RTFB is the answer; the anger here
   is directed at the absence of both source and adequate documentation.
     _________________________________________________________________

   Node:RTFM, Next:[11417]RTFS, Previous:[11418]RTFB, Up:[11419]= R =

   RTFM /R-T-F-M/ imp.

   [Unix] Abbreviation for `Read The Fucking Manual'. 1. Used by
   [11420]gurus to brush off questions they consider trivial or annoying.
   Compare [11421]Don't do that then!. 2. Used when reporting a problem
   to indicate that you aren't just asking out of [11422]randomness. "No,
   I can't figure out how to interface Unix to my toaster, and yes, I
   have RTFM." Unlike sense 1, this use is considered polite. See also
   [11423]FM, [11424]RTFAQ, [11425]RTFB, [11426]RTFS, [11427]STFW,
   [11428]RTM, all of which mutated from RTFM, and compare [11429]UTSL.
     _________________________________________________________________

   Node:RTFS, Next:[11430]RTI, Previous:[11431]RTFM, Up:[11432]= R =

   RTFS /R-T-F-S/

   [Unix] 1. imp. Abbreviation for `Read The Fucking Source'. Variant
   form of [11433]RTFM, used when the problem at hand is not necessarily
   obvious and not answerable from the manuals -- or the manuals are not
   yet written and maybe never will be. For even trickier situations, see
   [11434]RTFB. Unlike RTFM, the anger inherent in RTFS is not usually
   directed at the person asking the question, but rather at the people
   who failed to provide adequate documentation. 2. imp. `Read The
   Fucking Standard'; this oath can only be used when the problem area
   (e.g., a language or operating system interface) has actually been
   codified in a ratified standards document. The existence of these
   standards documents (and the technically inappropriate but politically
   mandated compromises that they inevitably contain, and the
   impenetrable [11435]legalese in which they are invariably written, and
   the unbelievably tedious bureaucratic process by which they are
   produced) can be unnerving to hackers, who are used to a certain
   amount of ambiguity in the specifications of the systems they use.
   (Hackers feel that such ambiguities are acceptable as long as the
   [11436]Right Thing to do is obvious to any thinking observer; sadly,
   this casual attitude towards specifications becomes unworkable when a
   system becomes popular in the [11437]Real World.) Since a hacker is
   likely to feel that a standards document is both unnecessary and
   technically deficient, the deprecation inherent in this term may be
   directed as much against the standard as against the person who ought
   to read it.
     _________________________________________________________________

   Node:RTI, Next:[11438]RTM, Previous:[11439]RTFS, Up:[11440]= R =

   RTI /R-T-I/ interj.

   The mnemonic for the `return from interrupt' instruction on many
   computers including the 6502 and 6800. The variant `RETI' is found
   among former Z80 hackers (almost nobody programs these things in
   assembler anymore). Equivalent to "Now, where was I?" or used to end a
   conversational digression. See [11441]pop; see also [11442]POPJ.
     _________________________________________________________________

   Node:RTM, Next:[11443]RTS, Previous:[11444]RTI, Up:[11445]= R =

   RTM /R-T-M/

   [Usenet: abbreviation for `Read The Manual'] 1. Politer variant of
   [11446]RTFM. 2. Robert Tappan Morris, perpetrator of the great
   Internet worm of 1988 (see [11447]Great Worm); villain to many, naive
   hacker gone wrong to a few. Morris claimed that the worm that brought
   the Internet to its knees was a benign experiment that got out of
   control as the result of a coding error. After the storm of negative
   publicity that followed this blunder, Morris's username on ITS was
   hacked from RTM to [11448]RTFM.
     _________________________________________________________________

   Node:RTS, Next:[11449]rude, Previous:[11450]RTM, Up:[11451]= R =

   RTS /R-T-S/ imp.

   Abbreviation for `Read The Screen'. Mainly used by hackers in the
   microcomputer world. Refers to what one would like to tell the
   [11452]suit one is forced to explain an extremely simple application
   to. Particularly appropriate when the suit failed to notice the `Press
   any key to continue' prompt, and wishes to know `why won't it do
   anything'. Also seen as `RTFS' in especially deserving cases.
     _________________________________________________________________

   Node:rude, Next:[11453]runes, Previous:[11454]RTS, Up:[11455]= R =

   rude [WPI] adj.

   1. (of a program) Badly written. 2. Functionally poor, e.g., a program
   that is very difficult to use because of gratuitously poor (random?)
   design decisions. Oppose [11456]cuspy. 3. Anything that manipulates a
   shared resource without regard for its other users in such a way as to
   cause a (non-fatal) problem. Examples: programs that change tty modes
   without resetting them on exit, or windowing programs that keep
   forcing themselves to the top of the window stack. Compare
   [11457]all-elbows.
     _________________________________________________________________

   Node:runes, Next:[11458]runic, Previous:[11459]rude, Up:[11460]= R =

   runes pl.n.

   1. Anything that requires [11461]heavy wizardry or [11462]black art to
   [11463]parse: core dumps, JCL commands, APL, or code in a language you
   haven't a clue how to read. Not quite as bad as [11464]line noise, but
   close. Compare [11465]casting the runes, [11466]Great Runes. 2.
   Special display characters (for example, the high-half graphics on an
   IBM PC). 3. [borderline techspeak] 16-bit characters from the Unicode
   multilingual character set.
     _________________________________________________________________

   Node:runic, Next:[11467]rusty iron, Previous:[11468]runes, Up:[11469]=
   R =

   runic adj.

   Syn. [11470]obscure. VMS fans sometimes refer to Unix as `Runix'; Unix
   fans return the compliment by expanding VMS to `Very Messy Syntax' or
   `Vachement Mauvais Système' (French idiom, "Hugely Bad System").
     _________________________________________________________________

   Node:rusty iron, Next:[11471]rusty memory, Previous:[11472]runic,
   Up:[11473]= R =

   rusty iron n.

   Syn. [11474]tired iron. It has been claimed that this is the
   inevitable fate of [11475]water MIPS.
     _________________________________________________________________

   Node:rusty memory, Next:[11476]rusty wire, Previous:[11477]rusty iron,
   Up:[11478]= R =

   rusty memory n.

   Mass-storage that uses iron-oxide-based magnetic media (esp. tape and
   the pre-Winchester removable disk packs used in [11479]washing
   machines). Compare [11480]donuts.
     _________________________________________________________________

   Node:rusty wire, Next:[11481]S/N ratio, Previous:[11482]rusty memory,
   Up:[11483]= R =

   rusty wire n.

   [Amateur Packet Radio] Any very noisy network medium, in which the
   packets are subject to frequent corruption. Most prevalent in
   reference to wireless links subject to all the vagaries of RF noise
   and marginal propagation conditions. "Yes, but how good is your
   whizbang new protocol on really rusty wire?".
     _________________________________________________________________

   Node:= S =, Next:[11484]= T =, Previous:[11485]= R =, Up:[11486]The
   Jargon Lexicon

= S =

     * [11487]S/N ratio:
     * [11488]sacred:
     * [11489]saga:
     * [11490]sagan:
     * [11491]SAIL:
     * [11492]salescritter:
     * [11493]salt:
     * [11494]salt mines:
     * [11495]salt substrate:
     * [11496]same-day service:
     * [11497]samizdat:
     * [11498]samurai:
     * [11499]sandbender:
     * [11500]sandbox:
     * [11501]sanity check:
     * [11502]Saturday-night special:
     * [11503]say:
     * [11504]scag:
     * [11505]scanno:
     * [11506]scary devil monastery:
     * [11507]schroedinbug:
     * [11508]science-fiction fandom:
     * [11509]scram switch:
     * [11510]scratch:
     * [11511]scratch monkey:
     * [11512]scream and die:
     * [11513]screaming tty:
     * [11514]screen:
     * [11515]screen name:
     * [11516]screw:
     * [11517]screwage:
     * [11518]scribble:
     * [11519]script kiddies:
     * [11520]scrog:
     * [11521]scrool:
     * [11522]scrozzle:
     * [11523]scruffies:
     * [11524]SCSI:
     * [11525]ScumOS:
     * [11526]search-and-destroy mode:
     * [11527]second-system effect:
     * [11528]secondary damage:
     * [11529]security through obscurity:
     * [11530]SED:
     * [11531]segfault:
     * [11532]seggie:
     * [11533]segment:
     * [11534]segmentation fault:
     * [11535]segv:
     * [11536]self-reference:
     * [11537]selvage:
     * [11538]semi:
     * [11539]semi-automated:
     * [11540]semi-infinite:
     * [11541]senior bit:
     * [11542]September that never ended:
     * [11543]server:
     * [11544]SEX:
     * [11545]sex changer:
     * [11546]shambolic link:
     * [11547]shar file:
     * [11548]sharchive:
     * [11549]Share and enjoy!:
     * [11550]shareware:
     * [11551]sharing violation:
     * [11552]shebang:
     * [11553]shelfware:
     * [11554]shell:
     * [11555]shell out:
     * [11556]shift left (or right) logical:
     * [11557]shim:
     * [11558]shitogram:
     * [11559]short card:
     * [11560]shotgun debugging:
     * [11561]shovelware:
     * [11562]showstopper:
     * [11563]shriek:
     * [11564]Shub-Internet:
     * [11565]sidecar:
     * [11566]SIG:
     * [11567]sig block:
     * [11568]sig quote:
     * [11569]sig virus:
     * [11570]signal-to-noise ratio:
     * [11571]silicon:
     * [11572]silly walk:
     * [11573]silo:
     * [11574]Silver Book:
     * [11575]since time T equals minus infinity:
     * [11576]sitename:
     * [11577]skrog:
     * [11578]skulker:
     * [11579]slab:
     * [11580]slack:
     * [11581]slap on the side:
     * [11582]slash:
     * [11583]slashdot effect:
     * [11584]sleep:
     * [11585]slim:
     * [11586]slop:
     * [11587]slopsucker:
     * [11588]Slowlaris:
     * [11589]slurp:
     * [11590]smart:
     * [11591]smart terminal:
     * [11592]smash case:
     * [11593]smash the stack:
     * [11594]smiley:
     * [11595]smoke:
     * [11596]smoke and mirrors:
     * [11597]smoke test:
     * [11598]smoking clover:
     * [11599]smoot:
     * [11600]SMOP:
     * [11601]smurf:
     * [11602]SNAFU principle:
     * [11603]snail:
     * [11604]snail-mail:
     * [11605]snap:
     * [11606]snarf:
     * [11607]snarf & barf:
     * [11608]snarf down:
     * [11609]snark:
     * [11610]sneaker:
     * [11611]sneakernet:
     * [11612]sniff:
     * [11613]snivitz:
     * [11614]'Snooze:
     * [11615]SO:
     * [11616]social engineering:
     * [11617]social science number:
     * [11618]sock puppet:
     * [11619]sodium substrate:
     * [11620]soft boot:
     * [11621]softcopy:
     * [11622]software bloat:
     * [11623]software hoarding:
     * [11624]software laser:
     * [11625]software rot:
     * [11626]softwarily:
     * [11627]softy:
     * [11628]some random X:
     * [11629]sorcerer's apprentice mode:
     * [11630]SOS:
     * [11631]source:
     * [11632]source of all good bits:
     * [11633]space-cadet keyboard:
     * [11634]spaceship operator:
     * [11635]SPACEWAR:
     * [11636]spaghetti code:
     * [11637]spaghetti inheritance:
     * [11638]spam:
     * [11639]spam bait:
     * [11640]spamblock:
     * [11641]spamhaus:
     * [11642]spamvertize:
     * [11643]spangle:
     * [11644]spawn:
     * [11645]special-case:
     * [11646]speedometer:
     * [11647]spell:
     * [11648]spelling flame:
     * [11649]spider:
     * [11650]spider food:
     * [11651]spiffy:
     * [11652]spike:
     * [11653]spin:
     * [11654]spl:
     * [11655]splash screen:
     * [11656]splat:
     * [11657]splat out:
     * [11658]spod:
     * [11659]spoiler:
     * [11660]spoiler space:
     * [11661]sponge:
     * [11662]spoof:
     * [11663]spool:
     * [11664]spool file:
     * [11665]spungle:
     * [11666]square tape:
     * [11667]squirrelcide:
     * [11668]stack:
     * [11669]stack puke:
     * [11670]stale pointer bug:
     * [11671]star out:
     * [11672]state:
     * [11673]stealth manager:
     * [11674]steam-powered:
     * [11675]STFW:
     * [11676]stiffy:
     * [11677]stir-fried random:
     * [11678]stomp on:
     * [11679]Stone Age:
     * [11680]stone knives and bearskins:
     * [11681]stoppage:
     * [11682]store:
     * [11683]strided:
     * [11684]stroke:
     * [11685]strudel:
     * [11686]stubroutine:
     * [11687]studly:
     * [11688]studlycaps:
     * [11689]stunning:
     * [11690]stupid-sort:
     * [11691]Stupids:
     * [11692]Sturgeon's Law:
     * [11693]sucking mud:
     * [11694]sufficiently small:
     * [11695]suit:
     * [11696]suitable win:
     * [11697]suitably small:
     * [11698]Sun:
     * [11699]sun lounge:
     * [11700]sun-stools:
     * [11701]sunspots:
     * [11702]super source quench:
     * [11703]superloser:
     * [11704]superprogrammer:
     * [11705]superuser:
     * [11706]support:
     * [11707]surf:
     * [11708]Suzie COBOL:
     * [11709]swab:
     * [11710]swap:
     * [11711]swap space:
     * [11712]swapped in:
     * [11713]swapped out:
     * [11714]swizzle:
     * [11715]sync:
     * [11716]syntactic salt:
     * [11717]syntactic sugar:
     * [11718]sys-frog:
     * [11719]sysadmin:
     * [11720]sysape:
     * [11721]sysop:
     * [11722]system:
     * [11723]systems jock:
     * [11724]system mangler:
     * [11725]SysVile:
     _________________________________________________________________

   Node:S/N ratio, Next:[11726]sacred, Previous:[11727]rusty wire,
   Up:[11728]= S =

   S/N ratio // n.

   (also `s/n ratio', `s:n ratio'). Syn. [11729]signal-to-noise ratio.
   Often abbreviated `SNR'.
     _________________________________________________________________

   Node:sacred, Next:[11730]saga, Previous:[11731]S/N ratio, Up:[11732]=
   S =

   sacred adj.

   Reserved for the exclusive use of something (an extension of the
   standard meaning). Often means that anyone may look at the sacred
   object, but clobbering it will screw whatever it is sacred to. The
   comment "Register 7 is sacred to the interrupt handler" appearing in a
   program would be interpreted by a hacker to mean that if any other
   part of the program changes the contents of register 7, dire
   consequences are likely to ensue.
     _________________________________________________________________

   Node:saga, Next:[11733]sagan, Previous:[11734]sacred, Up:[11735]= S =

   saga n.

   [WPI] A cuspy but bogus raving story about N random broken people.

   Here is a classic example of the saga form, as told by Guy L. Steele:

     Jon L. White (login name JONL) and I (GLS) were office mates at MIT
     for many years. One April, we both flew from Boston to California
     for a week on research business, to consult face-to-face with some
     people at Stanford, particularly our mutual friend Richard P.
     Gabriel (RPG; see [11736]gabriel).

     RPG picked us up at the San Francisco airport and drove us back to
     Palo Alto (going [11737]logical south on route 101, parallel to
     [11738]El Camino Bignum). Palo Alto is adjacent to Stanford
     University and about 40 miles south of San Francisco. We ate at The
     Good Earth, a `health food' restaurant, very popular, the sort
     whose milkshakes all contain honey and protein powder. JONL ordered
     such a shake -- the waitress claimed the flavor of the day was
     "lalaberry". I still have no idea what that might be, but it became
     a running joke. It was the color of raspberry, and JONL said it
     tasted rather bitter. I ate a better tostada there than I have ever
     had in a Mexican restaurant.

     After this we went to the local Uncle Gaylord's Old Fashioned Ice
     Cream Parlor. They make ice cream fresh daily, in a variety of
     intriguing flavors. It's a chain, and they have a slogan: "If you
     don't live near an Uncle Gaylord's -- MOVE!" Also, Uncle Gaylord (a
     real person) wages a constant battle to force big-name ice cream
     makers to print their ingredients on the package (like air and
     plastic and other non-natural garbage). JONL and I had first
     discovered Uncle Gaylord's the previous August, when we had flown
     to a computer-science conference in Berkeley, California, the first
     time either of us had been on the West Coast. When not in the
     conference sessions, we had spent our time wandering the length of
     Telegraph Avenue, which (like Harvard Square in Cambridge) was
     lined with picturesque street vendors and interesting little shops.
     On that street we discovered Uncle Gaylord's Berkeley store. The
     ice cream there was very good. During that August visit JONL went
     absolutely bananas (so to speak) over one particular flavor, ginger
     honey.

     Therefore, after eating at The Good Earth -- indeed, after every
     lunch and dinner and before bed during our April visit -- a trip to
     Uncle Gaylord's (the one in Palo Alto) was mandatory. We had
     arrived on a Wednesday, and by Thursday evening we had been there
     at least four times. Each time, JONL would get ginger honey ice
     cream, and proclaim to all bystanders that "Ginger was the spice
     that drove the Europeans mad! That's why they sought a route to the
     East! They used it to preserve their otherwise off-taste meat."
     After the third or fourth repetition RPG and I were getting a
     little tired of this spiel, and began to paraphrase him: "Wow!
     Ginger! The spice that makes rotten meat taste good!" "Say! Why
     don't we find some dog that's been run over and sat in the sun for
     a week and put some ginger on it for dinner?!" "Right! With a
     lalaberry shake!" And so on. This failed to faze JONL; he took it
     in good humor, as long as we kept returning to Uncle Gaylord's. He
     loves ginger honey ice cream.

     Now RPG and his then-wife KBT (Kathy Tracy) were putting us up
     (putting up with us?) in their home for our visit, so to thank them
     JONL and I took them out to a nice French restaurant of their
     choosing. I unadventurously chose the filet mignon, and KBT had je
     ne sais quoi du jour, but RPG and JONL had lapin (rabbit).
     (Waitress: "Oui, we have fresh rabbit, fresh today." RPG: "Well,
     JONL, I guess we won't need any ginger!")

     We finished the meal late, about 11 P.M., which is 2 A.M Boston
     time, so JONL and I were rather droopy. But it wasn't yet midnight.
     Off to Uncle Gaylord's!

     Now the French restaurant was in Redwood City, north of Palo Alto.
     In leaving Redwood City, we somehow got onto route 101 going north
     instead of south. JONL and I wouldn't have known the difference had
     RPG not mentioned it. We still knew very little of the local
     geography. I did figure out, however, that we were headed in the
     direction of Berkeley, and half-jokingly suggested that we continue
     north and go to Uncle Gaylord's in Berkeley.

     RPG said "Fine!" and we drove on for a while and talked. I was
     drowsy, and JONL actually dropped off to sleep for 5 minutes. When
     he awoke, RPG said, "Gee, JONL, you must have slept all the way
     over the bridge!", referring to the one spanning San Francisco Bay.
     Just then we came to a sign that said "University Avenue". I
     mumbled something about working our way over to Telegraph Avenue;
     RPG said "Right!" and maneuvered some more. Eventually we pulled up
     in front of an Uncle Gaylord's.

     Now, I hadn't really been paying attention because I was so sleepy,
     and I didn't really understand what was happening until RPG let me
     in on it a few moments later, but I was just alert enough to notice
     that we had somehow come to the Palo Alto Uncle Gaylord's after
     all.

     JONL noticed the resemblance to the Palo Alto store, but hadn't
     caught on. (The place is lit with red and yellow lights at night,
     and looks much different from the way it does in daylight.) He
     said, "This isn't the Uncle Gaylord's I went to in Berkeley! It
     looked like a barn! But this place looks just like the one back in
     Palo Alto!"

     RPG deadpanned, "Well, this is the one I always come to when I'm in
     Berkeley. They've got two in San Francisco, too. Remember, they're
     a chain."

     JONL accepted this bit of wisdom. And he was not totally ignorant
     -- he knew perfectly well that University Avenue was in Berkeley,
     not far from Telegraph Avenue. What he didn't know was that there
     is a completely different University Avenue in Palo Alto.

     JONL went up to the counter and asked for ginger honey. The guy at
     the counter asked whether JONL would like to taste it first,
     evidently their standard procedure with that flavor, as not too
     many people like it.

     JONL said, "I'm sure I like it. Just give me a cone." The guy
     behind the counter insisted that JONL try just a taste first. "Some
     people think it tastes like soap." JONL insisted, "Look, I love
     ginger. I eat Chinese food. I eat raw ginger roots. I already went
     through this hassle with the guy back in Palo Alto. I know I like
     that flavor!"

     At the words "back in Palo Alto" the guy behind the counter got a
     very strange look on his face, but said nothing. KBT caught his eye
     and winked. Through my stupor I still hadn't quite grasped what was
     going on, and thought RPG was rolling on the floor laughing and
     clutching his stomach just because JONL had launched into his spiel
     ("makes rotten meat a dish for princes") for the forty-third time.
     At this point, RPG clued me in fully.

     RPG, KBT, and I retreated to a table, trying to stifle our
     chuckles. JONL remained at the counter, talking about ice cream
     with the guy b.t.c., comparing Uncle Gaylord's to other ice cream
     shops and generally having a good old time.

     At length the g.b.t.c. said, "How's the ginger honey?" JONL said,
     "Fine! I wonder what exactly is in it?" Now Uncle Gaylord publishes
     all his recipes and even teaches classes on how to make his ice
     cream at home. So the g.b.t.c. got out the recipe, and he and JONL
     pored over it for a while. But the g.b.t.c. could contain his
     curiosity no longer, and asked again, "You really like that stuff,
     huh?" JONL said, "Yeah, I've been eating it constantly back in Palo
     Alto for the past two days. In fact, I think this batch is about as
     good as the cones I got back in Palo Alto!"

     G.b.t.c. looked him straight in the eye and said, "You're in Palo
     Alto!"

     JONL turned slowly around, and saw the three of us collapse in a
     fit of giggles. He clapped a hand to his forehead and exclaimed,
     "I've been hacked!"

   [My spies on the West Coast inform me that there is a close relative
   of the raspberry found out there called an `ollalieberry' --ESR]

   [Ironic footnote: the [11739]meme about ginger vs. rotting meat is an
   urban legend. It's not borne out by an examination of medieval recipes
   or period purchase records for spices, and appears full-blown in the
   works of Samuel Pegge, a gourmand and notorious flake case who
   originated numerous food myths. The truth seems to be that ginger was
   used to cover not rot but the extreme salt taste of meat packed in
   brine, which was the best method available before refrigeration.
   --ESR]
     _________________________________________________________________

   Node:sagan, Next:[11740]SAIL, Previous:[11741]saga, Up:[11742]= S =

   sagan /say'gn/ n.

   [from Carl Sagan's TV series "Cosmos"; think "billions and billions"]
   A large quantity of anything. "There's a sagan different ways to tweak
   EMACS." "The U.S. Government spends sagans on bombs and welfare --
   hard to say which is more destructive."
     _________________________________________________________________

   Node:SAIL, Next:[11743]salescritter, Previous:[11744]sagan,
   Up:[11745]= S =

   SAIL /sayl/, not /S-A-I-L/ n.

   1. The Stanford Artificial Intelligence Lab. An important site in the
   early development of LISP; with the MIT AI Lab, BBN, CMU, XEROX PARC,
   and the Unix community, one of the major wellsprings of technical
   innovation and hacker-culture traditions (see the [11746]WAITS entry
   for details). The SAIL machines were shut down in late May 1990, scant
   weeks after the MIT AI Lab's ITS cluster was officially
   decommissioned. 2. The Stanford Artificial Intelligence Language used
   at SAIL (sense 1). It was an Algol-60 derivative with a coroutining
   facility and some new data types intended for building search trees
   and association lists.
     _________________________________________________________________

   Node:salescritter, Next:[11747]salt, Previous:[11748]SAIL, Up:[11749]=
   S =

   salescritter /sayls'kri`tr/ n.

   Pejorative hackerism for a computer salesperson. Hackers tell the
   following joke:
Q. What's the difference between a used-car dealer and a
   computer salesman?
A. The used-car dealer knows he's lying.  [Some versions add:
   ...and probably knows how to drive.]

   This reflects the widespread hacker belief that salescritters are
   self-selected for stupidity (after all, if they had brains and the
   inclination to use them, they'd be in programming). The terms
   `salesthing' and `salesdroid' are also common. Compare
   [11750]marketroid, [11751]suit, [11752]droid.
     _________________________________________________________________

   Node:salt, Next:[11753]salt mines, Previous:[11754]salescritter,
   Up:[11755]= S =

   salt n.

   A tiny bit of near-random data inserted where too much regularity
   would be undesirable; a data [11756]frob (sense 1). For example, the
   Unix crypt(3) man page mentions that "the salt string is used to
   perturb the DES algorithm in one of 4096 different ways."
     _________________________________________________________________

   Node:salt mines, Next:[11757]salt substrate, Previous:[11758]salt,
   Up:[11759]= S =

   salt mines n.

   Dense quarters housing large numbers of programmers working long hours
   on grungy projects, with some hope of seeing the end of the tunnel in
   N years. Noted for their absence of sunshine. Compare [11760]playpen,
   [11761]sandbox.
     _________________________________________________________________

   Node:salt substrate, Next:[11762]same-day service,
   Previous:[11763]salt mines, Up:[11764]= S =

   salt substrate n.

   [MIT] Collective noun used to refer to potato chips, pretzels,
   saltines, or any other form of snack food designed primarily as a
   carrier for sodium chloride. Also `sodium substrate'. From the
   technical term `chip substrate', used to refer to the silicon on the
   top of which the active parts of integrated circuits are deposited.
     _________________________________________________________________

   Node:same-day service, Next:[11765]samizdat, Previous:[11766]salt
   substrate, Up:[11767]= S =

   same-day service n.

   Ironic term used to describe long response time, particularly with
   respect to [11768]MS-DOS system calls (which ought to require only a
   tiny fraction of a second to execute). Such response time is a major
   incentive for programmers to write programs that are not
   [11769]well-behaved. See also [11770]PC-ism.
     _________________________________________________________________

   Node:samizdat, Next:[11771]samurai, Previous:[11772]same-day service,
   Up:[11773]= S =

   samizdat /sahm-iz-daht/ n.

   [Russian, literally "self publishing"] The process of disseminating
   documentation via underground channels. Originally referred to
   underground duplication and distribution of banned books in the Soviet
   Union; now refers by obvious extension to any less-than-official
   promulgation of textual material, esp. rare, obsolete, or
   never-formally-published computer documentation. Samizdat is obviously
   much easier when one has access to high-bandwidth networks and
   high-quality laser printers. Note that samizdat is properly used only
   with respect to documents which contain needed information (see also
   [11774]hacker ethic) but which are for some reason otherwise
   unavailable, but not in the context of documents which are available
   through normal channels, for which unauthorized duplication would be
   unethical copyright violation. See [11775]Lions Book for a historical
   example.
     _________________________________________________________________

   Node:samurai, Next:[11776]sandbender, Previous:[11777]samizdat,
   Up:[11778]= S =

   samurai n.

   A hacker who hires out for legal cracking jobs, snooping for factions
   in corporate political fights, lawyers pursuing privacy-rights and
   First Amendment cases, and other parties with legitimate reasons to
   need an electronic locksmith. In 1991, mainstream media reported the
   existence of a loose-knit culture of samurai that meets electronically
   on BBS systems, mostly bright teenagers with personal micros; they
   have modeled themselves explicitly on the historical samurai of Japan
   and on the "net cowboys" of William Gibson's [11779]cyberpunk novels.
   Those interviewed claim to adhere to a rigid ethic of loyalty to their
   employers and to disdain the vandalism and theft practiced by criminal
   crackers as beneath them and contrary to the hacker ethic; some quote
   Miyamoto Musashi's "Book of Five Rings", a classic of historical
   samurai doctrine, in support of these principles. See also
   [11780]sneaker, [11781]Stupids, [11782]social engineering,
   [11783]cracker, [11784]hacker ethic, and [11785]dark-side hacker.
     _________________________________________________________________

   Node:sandbender, Next:[11786]sandbox, Previous:[11787]samurai,
   Up:[11788]= S =

   sandbender n.

   [IBM] A person involved with silicon lithography and the physical
   design of chips. Compare [11789]ironmonger, [11790]polygon pusher.
     _________________________________________________________________

   Node:sandbox, Next:[11791]sanity check, Previous:[11792]sandbender,
   Up:[11793]= S =

   sandbox n.

   1. (also `sandbox, the') Common term for the R&D department at many
   software and computer companies (where hackers in commercial
   environments are likely to be found). Half-derisive, but reflects the
   truth that research is a form of creative play. Compare
   [11794]playpen. 2. Syn. [11795]link farm. 3. A controlled environment
   within which potentially dangerous programs are run. Used esp. in
   reference to Java implementations.
     _________________________________________________________________

   Node:sanity check, Next:[11796]Saturday-night special,
   Previous:[11797]sandbox, Up:[11798]= S =

   sanity check n.

   [very common] 1. The act of checking a piece of code (or anything
   else, e.g., a Usenet posting) for completely stupid mistakes. Implies
   that the check is to make sure the author was sane when it was
   written; e.g., if a piece of scientific software relied on a
   particular formula and was giving unexpected results, one might first
   look at the nesting of parentheses or the coding of the formula, as a
   `sanity check', before looking at the more complex I/O or data
   structure manipulation routines, much less the algorithm itself.
   Compare [11799]reality check. 2. A run-time test, either validating
   input or ensuring that the program hasn't screwed up internally
   (producing an inconsistent value or state).
     _________________________________________________________________

   Node:Saturday-night special, Next:[11800]say, Previous:[11801]sanity
   check, Up:[11802]= S =

   Saturday-night special n.

   [from police slang for a cheap handgun] A [11803]quick-and-dirty
   program or feature kluged together during off hours, under a deadline,
   and in response to pressure from a [11804]salescritter. Such hacks are
   dangerously unreliable, but all too often sneak into a production
   release after insufficient review.
     _________________________________________________________________

   Node:say, Next:[11805]scag, Previous:[11806]Saturday-night special,
   Up:[11807]= S =

   say vt.

   1. To type to a terminal. "To list a directory verbosely, you have to
   say ls -l." Tends to imply a [11808]newline-terminated command (a
   `sentence'). 2. A computer may also be said to `say' things to you,
   even if it doesn't have a speech synthesizer, by displaying them on a
   terminal in response to your commands. Hackers find it odd that this
   usage confuses [11809]mundanes.
     _________________________________________________________________

   Node:scag, Next:[11810]scanno, Previous:[11811]say, Up:[11812]= S =

   scag vt.

   To destroy the data on a disk, either by corrupting the filesystem or
   by causing media damage. "That last power hit scagged the system
   disk." Compare [11813]scrog, [11814]roach.
     _________________________________________________________________

   Node:scanno, Next:[11815]scary devil monastery, Previous:[11816]scag,
   Up:[11817]= S =

   scanno /skan'oh/ n.

   An error in a document caused by a scanner glitch, analogous to a typo
   or [11818]thinko.
     _________________________________________________________________

   Node:scary devil monastery, Next:[11819]schroedinbug,
   Previous:[11820]scanno, Up:[11821]= S =

   scary devil monastery n.

   Anagram frequently used to refer to the newsgroup
   alt.sysadmin.recovery, which is populated with characters that rather
   justify the reference.
     _________________________________________________________________

   Node:schroedinbug, Next:[11822]science-fiction fandom,
   Previous:[11823]scary devil monastery, Up:[11824]= S =

   schroedinbug /shroh'din-buhg/ n.

   [MIT: from the Schroedinger's Cat thought-experiment in quantum
   physics] A design or implementation bug in a program that doesn't
   manifest until someone reading source or using the program in an
   unusual way notices that it never should have worked, at which point
   the program promptly stops working for everybody until fixed. Though
   (like [11825]bit rot) this sounds impossible, it happens; some
   programs have harbored latent schroedinbugs for years. Compare
   [11826]heisenbug, [11827]Bohr bug, [11828]mandelbug.
     _________________________________________________________________

   Node:science-fiction fandom, Next:[11829]scram switch,
   Previous:[11830]schroedinbug, Up:[11831]= S =

   science-fiction fandom n.

   Another voluntary subculture having a very heavy overlap with
   hackerdom; most hackers read SF and/or fantasy fiction avidly, and
   many go to `cons' (SF conventions) or are involved in fandom-connected
   activities such as the Society for Creative Anachronism. Some hacker
   jargon originated in SF fandom; see [11832]defenestration,
   [11833]great-wall, [11834]cyberpunk, [11835]h, [11836]ha ha only
   serious, [11837]IMHO, [11838]mundane, [11839]neep-neep, [11840]Real
   Soon Now. Additionally, the jargon terms [11841]cowboy,
   [11842]cyberspace, [11843]de-rezz, [11844]go flatline, [11845]ice,
   [11846]phage, [11847]virus, [11848]wetware, [11849]wirehead, and
   [11850]worm originated in SF stories.
     _________________________________________________________________

   Node:scram switch, Next:[11851]scratch,
   Previous:[11852]science-fiction fandom, Up:[11853]= S =

   scram switch n.

   [from the nuclear power industry] An emergency-power-off switch (see
   [11854]Big Red Switch), esp. one positioned to be easily hit by
   evacuating personnel. In general, this is not something you
   [11855]frob lightly; these often initiate expensive events (such as
   Halon dumps) and are installed in a [11856]dinosaur pen for use in
   case of electrical fire or in case some luckless [11857]field servoid
   should put 120 volts across himself while [11858]Easter egging. (See
   also [11859]molly-guard, [11860]TMRC.)

   A correspondent reports a legend that "Scram" is an acronym for "Start
   Cutting Right Away, Man" (another less plausible variant of this
   legend refers to "Safety Control Rod Axe Man"; these are almost
   certainly both [11861]backronyms). The story goes that in the earliest
   nuclear power experiments the engineers recognized the possibility
   that the reactor wouldn't behave exactly as predicted by their
   mathematical models. Accordingly, they made sure that they had
   mechanisms in place that would rapidly drop the control rods back into
   the reactor. One mechanism took the form of `scram technicians'. These
   individuals stood next to the ropes or cables that raised and lowered
   the control rods. Equipped with axes or cable-cutters, these
   technicians stood ready for the (literal) `scram' command. If
   necessary, they would cut the cables, and gravity would expeditiously
   return the control rods to the reactor, thereby averting yet another
   kind of [11862]core dump.

   Modern reactor control rods are held in place with claw-like devices,
   held closed by current. SCRAM switches are circuit breakers that
   immediately open the circuit to the rod arms, resulting in the rapid
   insertion and subsequent bottoming of the control rods.
     _________________________________________________________________

   Node:scratch, Next:[11863]scratch monkey, Previous:[11864]scram
   switch, Up:[11865]= S =

   scratch

   1. [from `scratchpad'] adj. Describes a data structure or recording
   medium attached to a machine for testing or temporary-use purposes;
   one that can be [11866]scribbled on without loss. Usually in the
   combining forms `scratch memory', `scratch register', `scratch disk',
   `scratch tape', `scratch volume'. See also [11867]scratch monkey. 2.
   [primarily IBM] vt. To delete (as in a file).
     _________________________________________________________________

   Node:scratch monkey, Next:[11868]scream and die,
   Previous:[11869]scratch, Up:[11870]= S =

   scratch monkey n.

   As in "Before testing or reconfiguring, always mount a [11871]scratch
   monkey", a proverb used to advise caution when dealing with
   irreplaceable data or devices. Used to refer to any scratch volume
   hooked to a computer during any risky operation as a replacement for
   some precious resource or data that might otherwise get trashed.

   This term preserves the memory of Mabel, the Swimming Wonder Monkey,
   star of a biological research program at the University of Toronto.
   Mabel was not (so the legend goes) your ordinary monkey; the
   university had spent years teaching her how to swim, breathing through
   a regulator, in order to study the effects of different gas mixtures
   on her physiology. Mabel suffered an untimely demise one day when a
   [11872]DEC [11873]field circus engineer troubleshooting a crash on the
   program's VAX inadvertently interfered with some custom hardware that
   was wired to Mabel.

   It is reported that, after calming down an understandably irate
   customer sufficiently to ascertain the facts of the matter, a DEC
   troubleshooter called up the [11874]field circus manager responsible
   and asked him sweetly, "Can you swim?"

   Not all the consequences to humans were so amusing; the sysop of the
   machine in question was nearly thrown in jail at the behest of certain
   clueless [11875]droids at the local `humane' society. The moral is
   clear: When in doubt, always mount a scratch monkey.

   [The actual incident occured in 1979 or 1980. There is a version of
   this story, complete with reported dialogue between one of the project
   people and DEC field service, that has been circulating on Internet
   since 1986. It is hilarious and mythic, but gets some facts wrong. For
   example, it reports the machine as a PDP-11 and alleges that Mabel's
   demise occurred when DEC [11876]PMed the machine. Earlier versions of
   this entry were based on that story; this one has been corrected from
   an interview with the hapless sysop. --ESR]
     _________________________________________________________________

   Node:scream and die, Next:[11877]screaming tty,
   Previous:[11878]scratch monkey, Up:[11879]= S =

   scream and die v.

   Syn. [11880]cough and die, but connotes that an error message was
   printed or displayed before the program crashed.
     _________________________________________________________________

   Node:screaming tty, Next:[11881]screen, Previous:[11882]scream and
   die, Up:[11883]= S =

   screaming tty n.

   [Unix] A terminal line which spews an infinite number of random
   characters at the operating system. This can happen if the terminal is
   either disconnected or connected to a powered-off terminal but still
   enabled for login; misconfiguration, misimplementation, or simple bad
   luck can start such a terminal screaming. A screaming tty or two can
   seriously degrade the performance of a vanilla Unix system; the
   arriving "characters" are treated as userid/password pairs and tested
   as such. The Unix password encryption algorithm is designed to be
   computationally intensive in order to foil brute-force crack attacks,
   so although none of the logins succeeds; the overhead of rejecting
   them all can be substantial.
     _________________________________________________________________

   Node:screen, Next:[11884]screen name, Previous:[11885]screaming tty,
   Up:[11886]= S =

   screen n.

   [Atari ST [11887]demoscene] One [11888]demoeffect or one screenful of
   them. Probably comes from old Sierra-style adventures or shoot-em-ups
   where one travels from one place to another one screenful at a time.
     _________________________________________________________________

   Node:screen name, Next:[11889]screw, Previous:[11890]screen,
   Up:[11891]= S =

   screen name n.

   A [11892]handle sense 1. This term has been common among users of IRC,
   MUDs, and commercial on-line services since the mid-1990s. Hackers
   recognize the term but don't generally use it.
     _________________________________________________________________

   Node:screw, Next:[11893]screwage, Previous:[11894]screen name,
   Up:[11895]= S =

   screw n.

   [MIT] A [11896]lose, usually in software. Especially used for
   user-visible misbehavior caused by a bug or misfeature. This use has
   become quite widespread outside MIT.
     _________________________________________________________________

   Node:screwage, Next:[11897]scribble, Previous:[11898]screw,
   Up:[11899]= S =

   screwage /skroo'*j/ n.

   Like [11900]lossage but connotes that the failure is due to a
   designed-in misfeature rather than a simple inadequacy or a mere bug.
     _________________________________________________________________

   Node:scribble, Next:[11901]script kiddies, Previous:[11902]screwage,
   Up:[11903]= S =

   scribble n.

   To modify a data structure in a random and unintentionally destructive
   way. "Bletch! Somebody's disk-compactor program went berserk and
   scribbled on the i-node table." "It was working fine until one of the
   allocation routines scribbled on low core." Synonymous with
   [11904]trash; compare [11905]mung, which conveys a bit more intention,
   and [11906]mangle, which is more violent and final.
     _________________________________________________________________

   Node:script kiddies, Next:[11907]scrog, Previous:[11908]scribble,
   Up:[11909]= S =

   script kiddies pl.n.

   1. The lowest form of [11910]cracker; script kiddies do mischief with
   scripts and programs written by others, often without understanding
   the [11911]exploit. 2. People who cannot program, but who create tacky
   HTML pages by copying JavaScript routines from other tacky HTML pages.
   More generally, a script kiddie writes (or more likely cuts and
   pastes) code without either having or desiring to have a mental model
   of what the code does; someone who thinks of code as magical
   incantations and asks only "what do I need to type to make this
   happen?"
     _________________________________________________________________

   Node:scrog, Next:[11912]scrool, Previous:[11913]script kiddies,
   Up:[11914]= S =

   scrog /skrog/ vt.

   [Bell Labs] To damage, trash, or corrupt a data structure. "The list
   header got scrogged." Also reported as `skrog', and ascribed to the
   comic strip "The Wizard of Id". Compare [11915]scag; possibly the two
   are related. Equivalent to [11916]scribble or [11917]mangle.
     _________________________________________________________________

   Node:scrool, Next:[11918]scrozzle, Previous:[11919]scrog, Up:[11920]=
   S =

   scrool /skrool/ n.

   [from the pioneering Roundtable chat system in Houston ca. 1984; prob.
   originated as a typo for `scroll'] The log of old messages, available
   for later perusal or to help one get back in synch with the
   conversation. It was originally called the `scrool monster', because
   an early version of the roundtable software had a bug where it would
   dump all 8K of scrool on a user's terminal.
     _________________________________________________________________

   Node:scrozzle, Next:[11921]scruffies, Previous:[11922]scrool,
   Up:[11923]= S =

   scrozzle /skroz'l/ vt.

   Used when a self-modifying code segment runs incorrectly and corrupts
   the running program or vital data. "The damn compiler scrozzled itself
   again!"
     _________________________________________________________________

   Node:scruffies, Next:[11924]SCSI, Previous:[11925]scrozzle,
   Up:[11926]= S =

   scruffies n.

   See [11927]neats vs. scruffies.
     _________________________________________________________________

   Node:SCSI, Next:[11928]ScumOS, Previous:[11929]scruffies, Up:[11930]=
   S =

   SCSI n.

   [Small Computer System Interface] A bus-independent standard for
   system-level interfacing between a computer and intelligent devices.
   Typically annotated in literature with `sexy' (/sek'see/), `sissy'
   (/sis'ee/), and `scuzzy' (/skuh'zee/) as pronunciation guides -- the
   last being the overwhelmingly predominant form, much to the dismay of
   the designers and their marketing people. One can usually assume that
   a person who pronounces it /S-C-S-I/ is clueless.
     _________________________________________________________________

   Node:ScumOS, Next:[11931]search-and-destroy mode,
   Previous:[11932]SCSI, Up:[11933]= S =

   ScumOS /skuhm'os/ or /skuhm'O-S/ n.

   Unflattering hackerism for SunOS, the BSD Unix variant supported on
   Sun Microsystems's Unix workstations (see also [11934]sun-stools), and
   compare [11935]AIDX, [11936]Macintrash, [11937]Nominal Semidestructor,
   [11938]HP-SUX. Despite what this term might suggest, Sun was founded
   by hackers and still enjoys excellent relations with hackerdom; usage
   is more often in exasperation than outright loathing.
     _________________________________________________________________

   Node:search-and-destroy mode, Next:[11939]second-system effect,
   Previous:[11940]ScumOS, Up:[11941]= S =

   search-and-destroy mode n.

   Hackerism for a noninteractive search-and-replace facility in an
   editor, so called because an incautiously chosen match pattern can
   cause [11942]infinite damage.
     _________________________________________________________________

   Node:second-system effect, Next:[11943]secondary damage,
   Previous:[11944]search-and-destroy mode, Up:[11945]= S =

   second-system effect n.

   (sometimes, more euphoniously, `second-system syndrome') When one is
   designing the successor to a relatively small, elegant, and successful
   system, there is a tendency to become grandiose in one's success and
   design an [11946]elephantine feature-laden monstrosity. The term was
   first used by Fred Brooks in his classic "The Mythical Man-Month:
   Essays on Software Engineering" (Addison-Wesley, 1975; ISBN
   0-201-00650-2). It described the jump from a set of nice, simple
   operating systems on the IBM 70xx series to OS/360 on the 360 series.
   A similar effect can also happen in an evolving system; see
   [11947]Brooks's Law, [11948]creeping elegance, [11949]creeping
   featurism. See also [11950]Multics, [11951]OS/2, [11952]X,
   [11953]software bloat.

   This version of the jargon lexicon has been described (with altogether
   too much truth for comfort) as an example of second-system effect run
   amok on jargon-1....
     _________________________________________________________________

   Node:secondary damage, Next:[11954]security through obscurity,
   Previous:[11955]second-system effect, Up:[11956]= S =

   secondary damage n.

   When a fatal error occurs (esp. a [11957]segfault) the immediate cause
   may be that a pointer has been trashed due to a previous
   [11958]fandango on core. However, this fandango may have been due to
   an earlier fandango, so no amount of analysis will reveal (directly)
   how the damage occurred. "The data structure was clobbered, but it was
   secondary damage."

   By extension, the corruption resulting from N cascaded fandangoes on
   core is `Nth-level damage'. There is at least one case on record in
   which 17 hours of [11959]grovelling with adb actually dug up the
   underlying bug behind an instance of seventh-level damage! The hacker
   who accomplished this near-superhuman feat was presented with an award
   by his fellows.
     _________________________________________________________________

   Node:security through obscurity, Next:[11960]SED,
   Previous:[11961]secondary damage, Up:[11962]= S =

   security through obscurity

   (alt. `security by obscurity') A term applied by hackers to most OS
   vendors' favorite way of coping with security holes -- namely,
   ignoring them, documenting neither any known holes nor the underlying
   security algorithms, trusting that nobody will find out about them and
   that people who do find out about them won't exploit them. This
   "strategy" never works for long and occasionally sets the world up for
   debacles like the [11963]RTM worm of 1988 (see [11964]Great Worm), but
   once the brief moments of panic created by such events subside most
   vendors are all too willing to turn over and go back to sleep. After
   all, actually fixing the bugs would siphon off the resources needed to
   implement the next user-interface frill on marketing's wish list --
   and besides, if they started fixing security bugs customers might
   begin to expect it and imagine that their warranties of
   merchantability gave them some sort of right to a system with fewer
   holes in it than a shotgunned Swiss cheese, and then where would we
   be?

   Historical note: There are conflicting stories about the origin of
   this term. It has been claimed that it was first used in the Usenet
   newsgroup in comp.sys.apollo during a campaign to get HP/Apollo to fix
   security problems in its Unix-[11965]clone Aegis/DomainOS (they didn't
   change a thing). [11966]ITS fans, on the other hand, say it was coined
   years earlier in opposition to the incredibly paranoid [11967]Multics
   people down the hall, for whom security was everything. In the ITS
   culture it referred to (1) the fact that by the time a tourist figured
   out how to make trouble he'd generally gotten over the urge to make
   it, because he felt part of the community; and (2) (self-mockingly)
   the poor coverage of the documentation and obscurity of many commands.
   One instance of deliberate security through obscurity is recorded; the
   command to allow patching the running ITS system (escape escape
   control-R) echoed as $$^D. If you actually typed alt alt ^D, that set
   a flag that would prevent patching the system even if you later got it
   right.
     _________________________________________________________________

   Node:SED, Next:[11968]segfault, Previous:[11969]security through
   obscurity, Up:[11970]= S =

   SED /S-E-D/ n.

   [TMRC, from `Light-Emitting Diode'] Smoke-emitting diode. A
   [11971]friode that lost the war. See also [11972]LER.
     _________________________________________________________________

   Node:segfault, Next:[11973]seggie, Previous:[11974]SED, Up:[11975]= S
   =

   segfault n.,vi.

   Syn. [11976]segment, [11977]segmentation fault.
     _________________________________________________________________

   Node:seggie, Next:[11978]segment, Previous:[11979]segfault,
   Up:[11980]= S =

   seggie /seg'ee/ n.

   [Unix] Shorthand for [11981]segmentation fault reported from Britain.
     _________________________________________________________________

   Node:segment, Next:[11982]segmentation fault, Previous:[11983]seggie,
   Up:[11984]= S =

   segment /seg'ment/ vi.

   To experience a [11985]segmentation fault. Confusingly, this is often
   pronounced more like the noun `segment' than like mainstream v.
   segment; this is because it is actually a noun shorthand that has been
   verbed.
     _________________________________________________________________

   Node:segmentation fault, Next:[11986]segv, Previous:[11987]segment,
   Up:[11988]= S =

   segmentation fault n.

   [Unix] 1. [techspeak] An error in which a running program attempts to
   access memory not allocated to it and [11989]core dumps with a
   segmentation violation error. This is often caused by improper usage
   of pointers in the source code, dereferencing a null pointer, or (in
   C) inadvertently using a non-pointer variable as a pointer. The
   classic example is:
   int i;
   scanf ("%d", i);  /* should have used &i */

   2. To lose a train of thought or a line of reasoning. Also uttered as
   an exclamation at the point of befuddlement.
     _________________________________________________________________

   Node:segv, Next:[11990]self-reference, Previous:[11991]segmentation
   fault, Up:[11992]= S =

   segv /seg'vee/ n.,vi.

   Yet another synonym for [11993]segmentation fault (actually, in this
   case, `segmentation violation').
     _________________________________________________________________

   Node:self-reference, Next:[11994]selvage, Previous:[11995]segv,
   Up:[11996]= S =

   self-reference n.

   See [11997]self-reference.
     _________________________________________________________________

   Node:selvage, Next:[11998]semi, Previous:[11999]self-reference,
   Up:[12000]= S =

   selvage /sel'v*j/ n.

   [from sewing and weaving] See [12001]chad (sense 1).
     _________________________________________________________________

   Node:semi, Next:[12002]semi-automated, Previous:[12003]selvage,
   Up:[12004]= S =

   semi /se'mee/ or /se'mi:/

   1. n. Abbreviation for `semicolon', when speaking. "Commands to
   [12005]grind are prefixed by semi-semi-star" means that the prefix is
   ;;*, not 1/4 of a star. 2. A prefix used with words such as
   `immediately' as a qualifier. "When is the system coming up?"
   "Semi-immediately." (That is, maybe not for an hour.) "We did consider
   that possibility semi-seriously." See also [12006]infinite.
     _________________________________________________________________

   Node:semi-automated, Next:[12007]semi-infinite, Previous:[12008]semi,
   Up:[12009]= S =

   semi-automated adj.

   [US Geological Survey] A procedure that has yet to be completely
   automated; it still requires a smidge of clueful human interaction.
   Semi-automated programs usually come with written-out operator
   instructions that are worth their weight in gold - without them, very
   nasty things can happen. At USGS semi-automated programs are often
   referred to as "semi-automated weapons".
     _________________________________________________________________

   Node:semi-infinite, Next:[12010]senior bit,
   Previous:[12011]semi-automated, Up:[12012]= S =

   semi-infinite n.

   See [12013]infinite.
     _________________________________________________________________

   Node:senior bit, Next:[12014]September that never ended,
   Previous:[12015]semi-infinite, Up:[12016]= S =

   senior bit n.

   [IBM; rare] Syn. [12017]meta bit.
     _________________________________________________________________

   Node:September that never ended, Next:[12018]server,
   Previous:[12019]senior bit, Up:[12020]= S =

   September that never ended

   All time since September 1993. One of the seasonal rhythms of the
   Usenet used to be the annual September influx of clueless newbies who,
   lacking any sense of [12021]netiquette, made a general nuisance of
   themselves. This coincided with people starting college, getting their
   first internet accounts, and plunging in without bothering to learn
   what was acceptable. These relatively small drafts of newbies could be
   assimilated within a few months. But in September 1993, AOL users
   became able to post to Usenet, nearly overwhelming the old-timers'
   capacity to acculturate them; to those who nostalgically recall the
   period before hand, this triggered an inexorable decline in the
   quality of discussions on newsgroups. See also [12022]AOL!.
     _________________________________________________________________

   Node:server, Next:[12023]SEX, Previous:[12024]September that never
   ended, Up:[12025]= S =

   server n.

   A kind of [12026]daemon that performs a service for the requester and
   which often runs on a computer other than the one on which the server
   runs. A particularly common term on the Internet, which is rife with
   `web servers', `name servers', `domain servers', `news servers',
   `finger servers', and the like.
     _________________________________________________________________

   Node:SEX, Next:[12027]sex changer, Previous:[12028]server, Up:[12029]=
   S =

   SEX /seks/

   [Sun Users' Group & elsewhere] n. 1. Software EXchange. A technique
   invented by the blue-green algae hundreds of millions of years ago to
   speed up their evolution, which had been terribly slow up until then.
   Today, SEX parties are popular among hackers and others (of course,
   these are no longer limited to exchanges of genetic software). In
   general, SEX parties are a [12030]Good Thing, but unprotected SEX can
   propagate a [12031]virus. See also [12032]pubic directory. 2. The
   rather Freudian mnemonic often used for Sign EXtend, a machine
   instruction found in the PDP-11 and many other architectures. The RCA
   1802 chip used in the early Elf and SuperElf personal computers had a
   `SEt X register' SEX instruction, but this seems to have had little
   folkloric impact. The Data General instruction set also had SEX.

   [12033]DEC's engineers nearly got a PDP-11 assembler that used the SEX
   mnemonic out the door at one time, but (for once) marketing wasn't
   asleep and forced a change. That wasn't the last time this happened,
   either. The author of "The Intel 8086 Primer", who was one of the
   original designers of the 8086, noted that there was originally a SEX
   instruction on that processor, too. He says that Intel management got
   cold feet and decreed that it be changed, and thus the instruction was
   renamed CBW and CWD (depending on what was being extended). Amusingly,
   the Intel 8048 (the microcontroller used in IBM PC keyboards) is also
   missing straight SEX but has logical-or and logical-and instructions
   ORL and ANL.

   The Motorola 6809, used in the Radio Shack Color Computer and in
   U.K.'s `Dragon 32' personal computer, actually had an official SEX
   instruction; the 6502 in the Apple II with which it competed did not.
   British hackers thought this made perfect mythic sense; after all, it
   was commonly observed, you could (on some theoretical level) have sex
   with a dragon, but you can't have sex with an apple.
     _________________________________________________________________

   Node:sex changer, Next:[12034]shambolic link, Previous:[12035]SEX,
   Up:[12036]= S =

   sex changer n.

   Syn. [12037]gender mender.
     _________________________________________________________________

   Node:shambolic link, Next:[12038]shar file, Previous:[12039]sex
   changer, Up:[12040]= S =

   shambolic link /sham-bol'ik link/ n.

   A Unix symbolic link, particularly when it confuses you, points to
   nothing at all, or results in your ending up in some completely
   unexpected part of the filesystem....
     _________________________________________________________________

   Node:shar file, Next:[12041]sharchive, Previous:[12042]shambolic link,
   Up:[12043]= S =

   shar file /shar' fi:l/ n.

   Syn. [12044]sharchive.
     _________________________________________________________________

   Node:sharchive, Next:[12045]Share and enjoy!, Previous:[12046]shar
   file, Up:[12047]= S =

   sharchive /shar'ki:v/ n.

   [Unix and Usenet; from /bin/sh archive] A [12048]flattened
   representation of a set of one or more files, with the unique property
   that it can be unflattened (the original files restored) by feeding it
   through a standard Unix shell; thus, a sharchive can be distributed to
   anyone running Unix, and no special unpacking software is required.
   Sharchives are also intriguing in that they are typically created by
   shell scripts; the script that produces sharchives is thus a script
   which produces self-unpacking scripts, which may themselves contain
   scripts. (The downsides of sharchives are that they are an ideal venue
   for [12049]Trojan horse attacks and that, for recipients not running
   Unix, no simple un-sharchiving program is possible; sharchives can and
   do make use of arbitrarily-powerful shell features.) Sharchives are
   also commonly referred to as `shar files' after the name of the most
   common program for generating them.
     _________________________________________________________________

   Node:Share and enjoy!, Next:[12050]shareware,
   Previous:[12051]sharchive, Up:[12052]= S =

   Share and enjoy! imp.

   1. Commonly found at the end of software release announcements and
   [12053]README files, this phrase indicates allegiance to the hacker
   ethic of free information sharing (see [12054]hacker ethic, sense 1).
   2. The motto of the complaints division of Sirius Cybernetics
   Corporation (the ultimate gaggle of incompetent [12055]suits) in
   Douglas Adams's "Hitch Hiker's Guide to the Galaxy". The irony of
   using this as a cultural recognition signal appeals to hackers.
     _________________________________________________________________

   Node:shareware, Next:[12056]sharing violation, Previous:[12057]Share
   and enjoy!, Up:[12058]= S =

   shareware /sheir'weir/ n.

   A kind of [12059]freeware (sense 1) for which the author requests some
   payment, usually in the accompanying documentation files or in an
   announcement made by the software itself. Such payment may or may not
   buy additional support or functionality. See also [12060]careware,
   [12061]charityware, [12062]crippleware, [12063]FRS, [12064]guiltware,
   [12065]postcardware, and [12066]-ware; compare [12067]payware.
     _________________________________________________________________

   Node:sharing violation, Next:[12068]shebang,
   Previous:[12069]shareware, Up:[12070]= S =

   sharing violation

   [From a file error common to several [12071]OSs] A response to
   receiving information, typically of an excessively personal nature,
   that you were probably happier not knowing. "You know those little
   noises that Pat makes in bed..?" "Whoa! Sharing violation!" In
   contrast to the original file error, which indicated that you were not
   being given data that you did want.
     _________________________________________________________________

   Node:shebang, Next:[12072]shelfware, Previous:[12073]sharing
   violation, Up:[12074]= S =

   shebang /sh*-bang/ n.

   The character sequence "#!" that frequently begins executable shell
   scripts under Unix. Probably derived from "shell bang" under the
   influence of American slang "the whole shebang" (everything, the
   works).
     _________________________________________________________________

   Node:shelfware, Next:[12075]shell, Previous:[12076]shebang,
   Up:[12077]= S =

   shelfware /shelf'weir/ n.

   Software purchased on a whim (by an individual user) or in accordance
   with policy (by a corporation or government agency), but not actually
   required for any particular use. Therefore, it often ends up on some
   shelf.
     _________________________________________________________________

   Node:shell, Next:[12078]shell out, Previous:[12079]shelfware,
   Up:[12080]= S =

   shell [orig. [12081]Multics n.

   techspeak, widely propagated via Unix] 1. [techspeak] The command
   interpreter used to pass commands to an operating system; so called
   because it is the part of the operating system that interfaces with
   the outside world. 2. More generally, any interface program that
   mediates access to a special resource or [12082]server for
   convenience, efficiency, or security reasons; for this meaning, the
   usage is usually `a shell around' whatever. This sort of program is
   also called a `wrapper'. 3. A skeleton program, created by hand or by
   another program (like, say, a parser generator), which provides the
   necessary [12083]incantations to set up some task and the control flow
   to drive it (the term [12084]driver is sometimes used synonymously).
   The user is meant to fill in whatever code is needed to get real work
   done. This usage is common in the AI and Microsoft Windows worlds, and
   confuses Unix hackers.

   Historical note: Apparently, the original Multics shell (sense 1) was
   so called because it was a shell (sense 3); it ran user programs not
   by starting up separate processes, but by dynamically linking the
   programs into its own code, calling them as subroutines, and then
   dynamically de-linking them on return. The VMS command interpreter
   still does something very like this.
     _________________________________________________________________

   Node:shell out, Next:[12085]shift left (or right) logical,
   Previous:[12086]shell, Up:[12087]= S =

   shell out vi.

   [Unix] To [12088]spawn an interactive subshell from within a program
   (e.g., a mailer or editor). "Bang foo runs foo in a subshell, while
   bang alone shells out."
     _________________________________________________________________

   Node:shift left (or right) logical, Next:[12089]shim,
   Previous:[12090]shell out, Up:[12091]= S =

   shift left (or right) logical

   [from any of various machines' instruction sets] 1. vi. To move
   oneself to the left (right). To move out of the way. 2. imper. "Get
   out of that (my) seat! You can shift to that empty one to the left
   (right)." Often used without the `logical', or as `left shift' instead
   of `shift left'. Sometimes heard as LSH /lish/, from the [12092]PDP-10
   instruction set. See [12093]Programmer's Cheer.
     _________________________________________________________________

   Node:shim, Next:[12094]shitogram, Previous:[12095]shift left (or
   right) logical, Up:[12096]= S =

   shim n.

   A small piece of data inserted in order to achieve a desired memory
   alignment or other addressing property. For example, the PDP-11 Unix
   linker, in split I&D (instructions and data) mode, inserts a two-byte
   shim at location 0 in data space so that no data object will have an
   address of 0 (and be confused with the C null pointer). See also
   [12097]loose bytes.
     _________________________________________________________________

   Node:shitogram, Next:[12098]short card, Previous:[12099]shim,
   Up:[12100]= S =

   shitogram /shit'oh-gram/ n.

   A really nasty piece of email. Compare [12101]nastygram, [12102]flame.
     _________________________________________________________________

   Node:short card, Next:[12103]shotgun debugging,
   Previous:[12104]shitogram, Up:[12105]= S =

   short card n.

   A half-length IBM XT expansion card or adapter that will fit in one of
   the two short slots located towards the right rear of a standard
   chassis (tucked behind the floppy disk drives). See also [12106]tall
   card.
     _________________________________________________________________

   Node:shotgun debugging, Next:[12107]shovelware, Previous:[12108]short
   card, Up:[12109]= S =

   shotgun debugging n.

   The software equivalent of [12110]Easter egging; the making of
   relatively undirected changes to software in the hope that a bug will
   be perturbed out of existence. This almost never works, and usually
   introduces more bugs.
     _________________________________________________________________

   Node:shovelware, Next:[12111]showstopper, Previous:[12112]shotgun
   debugging, Up:[12113]= S =

   shovelware /shuh'v*l-weir`/ n.

   1. Extra software dumped onto a CD-ROM or tape to fill up the
   remaining space on the medium after the software distribution it's
   intended to carry, but not integrated with the distribution. 2. A
   slipshod compilation of software dumped onto a CD-ROM without much
   care for organization or even usability.
     _________________________________________________________________

   Node:showstopper, Next:[12114]shriek, Previous:[12115]shovelware,
   Up:[12116]= S =

   showstopper n.

   A hardware or (especially) software bug that makes an implementation
   effectively unusable; one that absolutely has to be fixed before
   development can go on. Opposite in connotation from its original
   theatrical use, which refers to something stunningly good.
     _________________________________________________________________

   Node:shriek, Next:[12117]Shub-Internet, Previous:[12118]showstopper,
   Up:[12119]= S =

   shriek n.

   See [12120]excl. Occasional CMU usage, also in common use among APL
   fans and mathematicians, especially category theorists.
     _________________________________________________________________

   Node:Shub-Internet, Next:[12121]sidecar, Previous:[12122]shriek,
   Up:[12123]= S =

   Shub-Internet /shuhb' in't*r-net/ n.

   [MUD: from H. P. Lovecraft's evil fictional deity Shub-Niggurath, the
   Black Goat with a Thousand Young] The harsh personification of the
   Internet: Beast of a Thousand Processes, Eater of Characters, Avatar
   of Line Noise, and Imp of Call Waiting; the hideous multi-tendriled
   entity formed of all the manifold connections of the net. A sect of
   MUDders worships Shub-Internet, sacrificing objects and praying for
   good connections. To no avail -- its purpose is malign and evil, and
   is the cause of all network slowdown. Often heard as in "Freela casts
   a tac nuke at Shub-Internet for slowing her down." (A forged response
   often follows along the lines of: "Shub-Internet gulps down the tac
   nuke and burps happily.") Also cursed by users of the Web, [12124]FTP
   and [12125]TELNET when the system slows down. The dread name of
   Shub-Internet is seldom spoken aloud, as it is said that repeating it
   three times will cause the being to wake, deep within its lair beneath
   the Pentagon. Compare [12126]Random Number God.

   [January 1996: It develops that one of the computer administrators in
   the basement of the Pentagon read this entry and fell over laughing.
   As a result, you too can now poke Shub-Internet by [12127]pinging
   shub-internet.ims.disa.mil. See also [12128]kremvax. - ESR]

   [April 1999: shub-internet.ims.disa.mil is no more, alas. But
   Shub-Internet lives o^$#$*^ - ESR]
     _________________________________________________________________

   Node:sidecar, Next:[12129]SIG, Previous:[12130]Shub-Internet,
   Up:[12131]= S =

   sidecar n.

   1. Syn. [12132]slap on the side. Esp. used of add-ons for the late and
   unlamented IBM PCjr. 2. The IBM PC compatibility box that could be
   bolted onto the side of an Amiga. Designed and produced by Commodore,
   it broke all of the company's own design rules. If it worked with any
   other peripherals, it was by [12133]magic. 3. More generally, any of
   various devices designed to be connected to the expansion slot on the
   left side of the Amiga 500 (and later, 600 & 1200), which included a
   hard drive controller, a hard drive, and additional memory.
     _________________________________________________________________

   Node:SIG, Next:[12134]sig block, Previous:[12135]sidecar, Up:[12136]=
   S =

   SIG /sig/ n.

   (also common as a prefix in combining forms) A Special Interest Group,
   in one of several technical areas, sponsored by the Association for
   Computing Machinery; well-known ones include SIGPLAN (the Special
   Interest Group on Programming Languages), SIGARCH (the Special
   Interest Group for Computer Architecture) and SIGGRAPH (the Special
   Interest Group for Computer Graphics). Hackers, not surprisingly, like
   to overextend this naming convention to less formal associations like
   SIGBEER (at ACM conferences) and SIGFOOD (at University of Illinois).
     _________________________________________________________________

   Node:sig block, Next:[12137]sig quote, Previous:[12138]SIG,
   Up:[12139]= S =

   sig block /sig blok/ n.

   [Unix; often written `.sig' there] Short for `signature', used
   specifically to refer to the electronic signature block that most Unix
   mail- and news-posting software will [12140]automagically append to
   outgoing mail and news. The composition of one's sig can be quite an
   art form, including an ASCII logo or one's choice of witty sayings
   (see [12141]sig quote, [12142]fool file); but many consider large sigs
   a waste of [12143]bandwidth, and it has been observed that the size of
   one's sig block is usually inversely proportional to one's longevity
   and level of prestige on the net. See also [12144]doubled sig.
     _________________________________________________________________

   Node:sig quote, Next:[12145]sig virus, Previous:[12146]sig block,
   Up:[12147]= S =

   sig quote /sig kwoht/ n.

   [Usenet] A maxim, quote, proverb, joke, or slogan embedded in one's
   [12148]sig block and intended to convey something of one's
   philosophical stance, pet peeves, or sense of humor. "Calm down, it's
   only ones and zeroes."
     _________________________________________________________________

   Node:sig virus, Next:[12149]signal-to-noise ratio, Previous:[12150]sig
   quote, Up:[12151]= S =

   sig virus n.

   A parasitic [12152]meme embedded in a [12153]sig block. There was a
   [12154]meme plague or fad for these on Usenet in late 1991. Most were
   equivalents of "I am a .sig virus. Please reproduce me in your .sig
   block.". Of course, the .sig virus's memetic hook is the giggle value
   of going along with the gag; this, however, was a self-limiting
   phenomenon as more and more people picked up on the idea. There were
   creative variants on it; some people stuck `sig virus antibody' texts
   in their sigs, and there was at least one instance of a sig virus
   eater.
     _________________________________________________________________

   Node:signal-to-noise ratio, Next:[12155]silicon, Previous:[12156]sig
   virus, Up:[12157]= S =

   signal-to-noise ratio [from analog electronics] n.

   Used by hackers in a generalization of its technical meaning. `Signal'
   refers to useful information conveyed by some communications medium,
   and `noise' to anything else on that medium. Hence a low ratio implies
   that it is not worth paying attention to the medium in question.
   Figures for such metaphorical ratios are never given. The term is most
   often applied to [12158]Usenet newsgroups during [12159]flame wars.
   Compare [12160]bandwidth. See also [12161]coefficient of X,
   [12162]lost in the noise.
     _________________________________________________________________

   Node:silicon, Next:[12163]silly walk, Previous:[12164]signal-to-noise
   ratio, Up:[12165]= S =

   silicon n.

   Hardware, esp. ICs or microprocessor-based computer systems (compare
   [12166]iron). Contrasted with software. See also [12167]sandbender.
     _________________________________________________________________

   Node:silly walk, Next:[12168]silo, Previous:[12169]silicon,
   Up:[12170]= S =

   silly walk vi.

   [from Monty Python's Flying Circus] 1. A ridiculous procedure required
   to accomplish a task. Like [12171]grovel, but more [12172]random and
   humorous. "I had to silly-walk through half the /usr directories to
   find the maps file." 2. Syn. [12173]fandango on core.
     _________________________________________________________________

   Node:silo, Next:[12174]Silver Book, Previous:[12175]silly walk,
   Up:[12176]= S =

   silo n.

   The FIFO input-character buffer in an RS-232 line card. So called from
   [12177]DEC terminology used on DH and DZ line cards for the VAX and
   PDP-11, presumably because it was a storage space for fungible stuff
   that went in at the top and came out at the bottom.
     _________________________________________________________________

   Node:Silver Book, Next:[12178]since time T equals minus infinity,
   Previous:[12179]silo, Up:[12180]= S =

   Silver Book n.

   Jensen and Wirth's infamous "Pascal User Manual and Report", so called
   because of the silver cover of the widely distributed Springer-Verlag
   second edition of 1978 (ISBN 0-387-90144-2). See [12181]book titles,
   [12182]Pascal.
     _________________________________________________________________

   Node:since time T equals minus infinity, Next:[12183]sitename,
   Previous:[12184]Silver Book, Up:[12185]= S =

   since time T equals minus infinity adv.

   A long time ago; for as long as anyone can remember; at the time that
   some particular frob was first designed. Usually the word `time' is
   omitted. See also [12186]time T; contrast [12187]epoch.
     _________________________________________________________________

   Node:sitename, Next:[12188]skrog, Previous:[12189]since time T equals
   minus infinity, Up:[12190]= S =

   sitename /si:t'naym/ n.

   [Unix/Internet] The unique electronic name of a computer system, used
   to identify it in UUCP mail, Usenet, or other forms of electronic
   information interchange. The folklore interest of sitenames stems from
   the creativity and humor they often display. Interpreting a sitename
   is not unlike interpreting a vanity license plate; one has to mentally
   unpack it, allowing for mono-case and length restrictions and the lack
   of whitespace. Hacker tradition deprecates dull,
   institutional-sounding names in favor of punchy, humorous, and clever
   coinages (except that it is considered appropriate for the official
   public gateway machine of an organization to bear the organization's
   name or acronym). Mythological references, cartoon characters, animal
   names, and allusions to SF or fantasy literature are probably the most
   popular sources for sitenames (in roughly descending order). The
   obligatory comment when discussing these is Harris's Lament: "All the
   good ones are taken!" See also [12191]network address.
     _________________________________________________________________

   Node:skrog, Next:[12192]skulker, Previous:[12193]sitename, Up:[12194]=
   S =

   skrog v.

   Syn. [12195]scrog.
     _________________________________________________________________

   Node:skulker, Next:[12196]slab, Previous:[12197]skrog, Up:[12198]= S =

   skulker n.

   Syn. [12199]prowler.
     _________________________________________________________________

   Node:slab, Next:[12200]slack, Previous:[12201]skulker, Up:[12202]= S =

   slab [Apple]

   1. n. A continuous horizontal line of pixels, all with the same color.
   2. vi. To paint a slab on an output device. Apple's QuickDraw, like
   most other professional-level graphics systems, renders polygons and
   lines not with Bresenham's algorithm, but by calculating `slab points'
   for each scan line on the screen in succession, and then slabbing in
   the actual image pixels.
     _________________________________________________________________

   Node:slack, Next:[12203]slap on the side, Previous:[12204]slab,
   Up:[12205]= S =

   slack n.

   1. Space allocated to a disk file but not actually used to store
   useful information. The techspeak equivalent is `internal
   fragmentation'. Antonym: [12206]hole. 2. In the theology of the
   [12207]Church of the SubGenius, a mystical substance or quality that
   is the prerequisite of all human happiness.

   Since Unix files are stored compactly, except for the unavoidable
   wastage in the last block or fragment, it might be said that "Unix has
   no slack". See [12208]ha ha only serious.
     _________________________________________________________________

   Node:slap on the side, Next:[12209]slash, Previous:[12210]slack,
   Up:[12211]= S =

   slap on the side n.

   (also called a [12212]sidecar, or abbreviated `SOTS'.) A type of
   external expansion hardware marketed by computer manufacturers (e.g.,
   Commodore for the Amiga 500/1000 series and IBM for the hideous
   failure called `PCjr'). Various SOTS boxes provided necessities such
   as memory, hard drive controllers, and conventional expansion slots.
     _________________________________________________________________

   Node:slash, Next:[12213]slashdot effect, Previous:[12214]slap on the
   side, Up:[12215]= S =

   slash n.

   Common name for the slant (`/', ASCII 0101111) character. See
   [12216]ASCII for other synonyms.
     _________________________________________________________________

   Node:slashdot effect, Next:[12217]sleep, Previous:[12218]slash,
   Up:[12219]= S =

   slashdot effect n.

   1. Also spelled "/. effect"; what is said to have happened when a
   website being virtually unreachable because too many people are
   hitting it after the site was mentioned in an interesting article on
   the popular [12220]Slashdot news service. The term is quite widely
   used by /. readers, including variants like "That site has been
   slashdotted again!" 2. In a perhaps inevitable generation, the term is
   being used to describe any similar effect from being listed on a
   popular site. This would better be described as a [12221]flash crowd.
     _________________________________________________________________

   Node:sleep, Next:[12222]slim, Previous:[12223]slashdot effect,
   Up:[12224]= S =

   sleep vi.

   1. [techspeak] To relinquish a claim (of a process on a multitasking
   system) for service; to indicate to the scheduler that a process may
   be deactivated until some given event occurs or a specified time delay
   elapses. 2. In jargon, used very similarly to v. [12225]block; also in
   `sleep on', syn. with `block on'. Often used to indicate that the
   speaker has relinquished a demand for resources until some (possibly
   unspecified) external event: "They can't get the fix I've been asking
   for into the next release, so I'm going to sleep on it until the
   release, then start hassling them again."
     _________________________________________________________________

   Node:slim, Next:[12226]slop, Previous:[12227]sleep, Up:[12228]= S =

   slim n.

   A small, derivative change (e.g., to code).
     _________________________________________________________________

   Node:slop, Next:[12229]slopsucker, Previous:[12230]slim, Up:[12231]= S
   =

   slop n.

   1. A one-sided [12232]fudge factor, that is, an allowance for error
   but in only one of two directions. For example, if you need a piece of
   wire 10 feet long and have to guess when you cut it, you make very
   sure to cut it too long, by a large amount if necessary, rather than
   too short by even a little bit, because you can always cut off the
   slop but you can't paste it back on again. When discrete quantities
   are involved, slop is often introduced to avoid the possibility of
   being on the losing side of a [12233]fencepost error. 2. The
   percentage of `extra' code generated by a compiler over the size of
   equivalent assembler code produced by [12234]hand-hacking; i.e., the
   space (or maybe time) you lose because you didn't do it yourself. This
   number is often used as a measure of the goodness of a compiler; slop
   below 5% is very good, and 10% is usually acceptable. With modern
   compiler technology, esp. on RISC machines, the compiler's slop may
   actually be negative; that is, humans may be unable to generate code
   as good. This is one of the reasons assembler programming is no longer
   common.
     _________________________________________________________________

   Node:slopsucker, Next:[12235]Slowlaris, Previous:[12236]slop,
   Up:[12237]= S =

   slopsucker /slop'suhk-r/ n.

   A lowest-priority task that waits around until everything else has
   `had its fill' of machine resources. Only when the machine would
   otherwise be idle is the task allowed to `suck up the slop'. Also
   called a `hungry puppy' or `bottom feeder'. One common variety of
   slopsucker hunts for large prime numbers. Compare [12238]background.
     _________________________________________________________________

   Node:Slowlaris, Next:[12239]slurp, Previous:[12240]slopsucker,
   Up:[12241]= S =

   Slowlaris /slo'-lahr-is/ n.

   [Usenet; poss. from the variety of prosimian called a "slow loris".
   The variant `Slowlartus' is also common, related to [12242]LART]
   Common hackish term for Solaris, Sun's System VR4 version of UNIX that
   came out of the standardization wars of the early 1990s. So named
   because especially on older hardware, responsiveness was much less
   crisp than under the preceding SunOS. Early releases of Solaris (that
   is, Solaris 2, as some [12243]marketroids at Sun retroactively
   rechristened SunOS as Solaris 1) were quite buggy, and Sun was forced
   by customer demand to support SunOS for quite some time. Newer
   versions are acknowledged to be among the best commercial UNIX
   variants in 1998, but still lose single-processor benchmarks to Sparc
   [12244]Linux. Compare [12245]AIDX, [12246]HP-SUX, [12247]Nominal
   Semidestructor, [12248]Telerat, [12249]sun-stools.
     _________________________________________________________________

   Node:slurp, Next:[12250]smart, Previous:[12251]Slowlaris, Up:[12252]=
   S =

   slurp vt.

   To read a large data file entirely into [12253]core before working on
   it. This may be contrasted with the strategy of reading a small piece
   at a time, processing it, and then reading the next piece. "This
   program slurps in a 1K-by-1K matrix and does an FFT." See also
   [12254]sponge.
     _________________________________________________________________

   Node:smart, Next:[12255]smart terminal, Previous:[12256]slurp,
   Up:[12257]= S =

   smart adj.

   Said of a program that does the [12258]Right Thing in a wide variety
   of complicated circumstances. There is a difference between calling a
   program smart and calling it intelligent; in particular, there do not
   exist any intelligent programs (yet -- see [12259]AI-complete).
   Compare [12260]robust (smart programs can be [12261]brittle).
     _________________________________________________________________

   Node:smart terminal, Next:[12262]smash case, Previous:[12263]smart,
   Up:[12264]= S =

   smart terminal n.

   1. A terminal that has enough computing capability to render graphics
   or to offload some kind of front-end processing from the computer it
   talks to. The development of workstations and personal computers has
   made this term and the product it describes semi-obsolescent, but one
   may still hear variants of the phrase `act like a smart terminal' used
   to describe the behavior of workstations or PCs with respect to
   programs that execute almost entirely out of a remote [12265]server's
   storage, using local devices as displays. 2. obs. Any terminal with an
   addressable cursor; the opposite of a [12266]glass tty. Today, a
   terminal with merely an addressable cursor, but with none of the
   more-powerful features mentioned in sense 1, is called a [12267]dumb
   terminal.

   There is a classic quote from Rob Pike (inventor of the [12268]blit
   terminal): "A smart terminal is not a smartass terminal, but rather a
   terminal you can educate." This illustrates a common design problem:
   The attempt to make peripherals (or anything else) intelligent
   sometimes results in finicky, rigid `special features' that become
   just so much dead weight if you try to use the device in any way the
   designer didn't anticipate. Flexibility and programmability, on the
   other hand, are really smart. Compare [12269]hook.
     _________________________________________________________________

   Node:smash case, Next:[12270]smash the stack, Previous:[12271]smart
   terminal, Up:[12272]= S =

   smash case vi.

   To lose or obliterate the uppercase/lowercase distinction in text
   input. "MS-DOS will automatically smash case in the names of all the
   files you create." Compare [12273]fold case.
     _________________________________________________________________

   Node:smash the stack, Next:[12274]smiley, Previous:[12275]smash case,
   Up:[12276]= S =

   smash the stack n.

   [C programming] To corrupt the execution stack by writing past the end
   of a local array or other data structure. Code that smashes the stack
   can cause a return from the routine to jump to a random address,
   resulting in some of the most insidious data-dependent bugs known to
   mankind. Variants include `trash' the stack, [12277]scribble the
   stack, [12278]mangle the stack; the term **[12279]mung the stack is
   not used, as this is never done intentionally. See [12280]spam; see
   also [12281]aliasing bug, [12282]fandango on core, [12283]memory leak,
   [12284]memory smash, [12285]precedence lossage, [12286]overrun screw.
     _________________________________________________________________

   Node:smiley, Next:[12287]smoke, Previous:[12288]smash the stack,
   Up:[12289]= S =

   smiley n.

   See [12290]emoticon.
     _________________________________________________________________

   Node:smoke, Next:[12291]smoke and mirrors, Previous:[12292]smiley,
   Up:[12293]= S =

   smoke vi.

   1. To [12294]crash or blow up, usually spectacularly. "The new version
   smoked, just like the last one." Used for both hardware (where it
   often describes an actual physical event), and software (where it's
   merely colorful). 2. [from automotive slang] To be conspicuously fast.
   "That processor really smokes." Compare [12295]magic smoke.
     _________________________________________________________________

   Node:smoke and mirrors, Next:[12296]smoke test, Previous:[12297]smoke,
   Up:[12298]= S =

   smoke and mirrors n.

   Marketing deceptions. The term is mainstream in this general sense.
   Among hackers it's strongly associated with bogus demos and crocked
   [12299]benchmarks (see also [12300]MIPS, [12301]machoflops). "They
   claim their new box cranks 50 MIPS for under $5000, but didn't specify
   the instruction mix -- sounds like smoke and mirrors to me." The
   phrase, popularized by newspaper columnist Jimmy Breslin c.1975, has
   been said to derive from carnie slang for magic acts and `freak show'
   displays that depend on `trompe l'oeil' effects, but also calls to
   mind the fierce Aztec god Tezcatlipoca (lit. "Smoking Mirror") for
   whom the hearts of huge numbers of human sacrificial victims were
   regularly cut out. Upon hearing about a rigged demo or yet another
   round of fantasy-based marketing promises, hackers often feel
   analogously disheartened. See also [12302]stealth manager.
     _________________________________________________________________

   Node:smoke test, Next:[12303]smoking clover, Previous:[12304]smoke and
   mirrors, Up:[12305]= S =

   smoke test n.

   1. A rudimentary form of testing applied to electronic equipment
   following repair or reconfiguration, in which power is applied and the
   tester checks for sparks, smoke, or other dramatic signs of
   fundamental failure. See [12306]magic smoke. 2. By extension, the
   first run of a piece of software after construction or a critical
   change. See and compare [12307]reality check.

   There is an interesting semi-parallel to this term among typographers
   and printers: When new typefaces are being punch-cut by hand, a `smoke
   test' (hold the letter in candle smoke, then press it onto paper) is
   used to check out new dies.
     _________________________________________________________________

   Node:smoking clover, Next:[12308]smoot, Previous:[12309]smoke test,
   Up:[12310]= S =

   smoking clover n.

   [ITS] A [12311]display hack originally due to Bill Gosper. Many
   convergent lines are drawn on a color monitor in such a way that every
   pixel struck has its color incremented. The lines all have one
   endpoint in the middle of the screen; the other endpoints are spaced
   one pixel apart around the perimeter of a large square. The color map
   is then repeatedly rotated. This results in a striking, rainbow-hued,
   shimmering four-leaf clover. Gosper joked about keeping it hidden from
   the FDA (the U.S.'s Food and Drug Administration) lest its
   hallucinogenic properties cause it to be banned.
     _________________________________________________________________

   Node:smoot, Next:[12312]SMOP, Previous:[12313]smoking clover,
   Up:[12314]= S =

   smoot /smoot/ n.

   [MIT] A unit of length equal five feet seven inches. The length of the
   Harvard Bridge in Boston is famously 364.4 smoots plus or minus an ear
   (the ear stands for [12315]epsilon). This legend began with a
   fraternity prank in 1958 during which the body length of Oliver Smoot
   (class of '62) was actually used to measure out that distance. It is
   commemorated by smoot marks that MIT students repaint every few years;
   the tradition even survived the demolition and rebuilding of the
   bridge in the late 1980s. The Boston police have been known to use
   smoot markers to indicate accident locations on the bridge.
     _________________________________________________________________

   Node:SMOP, Next:[12316]smurf, Previous:[12317]smoot, Up:[12318]= S =

   SMOP /S-M-O-P/ n.

   [Simple (or Small) Matter of Programming] 1. A piece of code, not yet
   written, whose anticipated length is significantly greater than its
   complexity. Used to refer to a program that could obviously be
   written, but is not worth the trouble. Also used ironically to imply
   that a difficult problem can be easily solved because a program can be
   written to do it; the irony is that it is very clear that writing such
   a program will be a great deal of work. "It's easy to enhance a
   FORTRAN compiler to compile COBOL as well; it's just an SMOP." 2.
   Often used ironically by the intended victim when a suggestion for a
   program is made which seems easy to the suggester, but is obviously
   (to the victim) a lot of work.
     _________________________________________________________________

   Node:smurf, Next:[12319]SNAFU principle, Previous:[12320]SMOP,
   Up:[12321]= S =

   smurf /smerf/ n.

   1. [from the soc.motss newsgroup on Usenet, after some obnoxiously
   gooey cartoon characters] A newsgroup regular with a habitual style
   that is irreverent, silly, and cute. Like many other hackish terms for
   people, this one may be praise or insult depending on who uses it. In
   general, being referred to as a smurf is probably not going to make
   your day unless you've previously adopted the label yourself in a
   spirit of irony. Compare [12322]old fart. 2. [techspeak] A ping packet
   with a forged source address sent to some other network's broadcast
   address. All the machines on the destination network will send a ping
   response to the forged source address (the victim). This both
   overloads the victim's network and hides the location of the attacker.
     _________________________________________________________________

   Node:SNAFU principle, Next:[12323]snail, Previous:[12324]smurf,
   Up:[12325]= S =

   SNAFU principle /sna'foo prin'si-pl/ n.

   [from a WWII Army acronym for `Situation Normal, All Fucked Up'] "True
   communication is possible only between equals, because inferiors are
   more consistently rewarded for telling their superiors pleasant lies
   than for telling the truth." -- a central tenet of
   [12326]Discordianism, often invoked by hackers to explain why
   authoritarian hierarchies screw up so reliably and systematically. The
   effect of the SNAFU principle is a progressive disconnection of
   decision-makers from reality. This lightly adapted version of a fable
   dating back to the early 1960s illustrates the phenomenon perfectly:

     In the beginning was the plan,
     and then the specification;
     And the plan was without form,
     and the specification was void.

     And darkness
     was on the faces of the implementors thereof;
     And they spake unto their leader,
     saying:
     "It is a crock of shit,
     and smells as of a sewer."

     And the leader took pity on them,
     and spoke to the project leader:
     "It is a crock of excrement,
     and none may abide the odor thereof."

     And the project leader
     spake unto his section head, saying:
     "It is a container of excrement,
     and it is very strong, such that none may abide it."

     The section head then hurried to his department manager,
     and informed him thus:
     "It is a vessel of fertilizer,
     and none may abide its strength."

     The department manager carried these words
     to his general manager,
     and spoke unto him
     saying:
     "It containeth that which aideth the growth of plants,
     and it is very strong."

     And so it was that the general manager rejoiced
     and delivered the good news unto the Vice President.
     "It promoteth growth,
     and it is very powerful."

     The Vice President rushed to the President's side,
     and joyously exclaimed:
     "This powerful new software product
     will promote the growth of the company!"

     And the President looked upon the product,
     and saw that it was very good.

   After the subsequent and inevitable disaster, the [12327]suits protect
   themselves by saying "I was misinformed!", and the implementors are
   demoted or fired. Compare [12328]Conway's Law.
     _________________________________________________________________

   Node:snail, Next:[12329]snail-mail, Previous:[12330]SNAFU principle,
   Up:[12331]= S =

   snail vt.

   To [12332]snail-mail something. "Snail me a copy of those graphics,
   will you?"
     _________________________________________________________________

   Node:snail-mail, Next:[12333]snap, Previous:[12334]snail, Up:[12335]=
   S =

   snail-mail n.

   Paper mail, as opposed to electronic. Sometimes written as the single
   word `SnailMail'. One's postal address is, correspondingly, a `snail
   address'. Derives from earlier coinage `USnail' (from `U.S. Mail'),
   for which there have even been parody posters and stamps made. Also
   (less commonly) called `P-mail', from `paper mail' or `physical mail'.
   Oppose [12336]email.
     _________________________________________________________________

   Node:snap, Next:[12337]snarf, Previous:[12338]snail-mail, Up:[12339]=
   S =

   snap v.

   To replace a pointer to a pointer with a direct pointer; to replace an
   old address with the forwarding address found there. If you telephone
   the main number for an institution and ask for a particular person by
   name, the operator may tell you that person's extension before
   connecting you, in the hopes that you will `snap your pointer' and
   dial direct next time. The underlying metaphor may be that of a rubber
   band stretched through a number of intermediate points; if you remove
   all the thumbtacks in the middle, it snaps into a straight line from
   first to last. See [12340]chase pointers.

   Often, the behavior of a [12341]trampoline is to perform an error
   check once and then snap the pointer that invoked it so as henceforth
   to bypass the trampoline (and its one-shot error check). In this
   context one also speaks of `snapping links'. For example, in a LISP
   implementation, a function interface trampoline might check to make
   sure that the caller is passing the correct number of arguments; if it
   is, and if the caller and the callee are both compiled, then snapping
   the link allows that particular path to use a direct procedure-call
   instruction with no further overhead.
     _________________________________________________________________

   Node:snarf, Next:[12342]snarf & barf, Previous:[12343]snap,
   Up:[12344]= S =

   snarf /snarf/ vt.

   1. To grab, esp. to grab a large document or file for the purpose of
   using it with or without the author's permission. See also [12345]BLT.
   2. [in the Unix community] To fetch a file or set of files across a
   network. See also [12346]blast. This term was mainstream in the late
   1960s, meaning `to eat piggishly'. It may still have this connotation
   in context. "He's in the snarfing phase of hacking -- [12347]FTPing
   megs of stuff a day." 3. To acquire, with little concern for legal
   forms or politesse (but not quite by stealing). "They were giving away
   samples, so I snarfed a bunch of them." 4. Syn. for [12348]slurp.
   "This program starts by snarfing the entire database into core,
   then...." 5. [GEnie] To spray food or [12349]programming fluids due to
   laughing at the wrong moment. "I was drinking coffee, and when I read
   your post I snarfed all over my desk." "If I keep reading this topic,
   I think I'll have to snarf-proof my computer with a keyboard
   [12350]condom." [This sense appears to be widespread among mundane
   teenagers --ESR]
     _________________________________________________________________

   Node:snarf & barf, Next:[12351]snarf down, Previous:[12352]snarf,
   Up:[12353]= S =

   snarf & barf /snarf'n-barf`/ n.

   Under a [12354]WIMP environment, the act of grabbing a region of text
   and then stuffing the contents of that region into another region (or
   the same one) to avoid retyping a command line. In the late 1960s,
   this was a mainstream expression for an `eat now, regret it later'
   cheap-restaurant expedition.
     _________________________________________________________________

   Node:snarf down, Next:[12355]snark, Previous:[12356]snarf & barf,
   Up:[12357]= S =

   snarf down v.

   To [12358]snarf, with the connotation of absorbing, processing, or
   understanding. "I'll snarf down the latest version of the
   [12359]nethack user's guide -- it's been a while since I played last
   and I don't know what's changed recently."
     _________________________________________________________________

   Node:snark, Next:[12360]sneaker, Previous:[12361]snarf down,
   Up:[12362]= S =

   snark n.

   [Lewis Carroll, via the Michigan Terminal System] 1. A system failure.
   When a user's process bombed, the operator would get the message
   "Help, Help, Snark in MTS!" 2. More generally, any kind of unexplained
   or threatening event on a computer (especially if it might be a
   boojum). Often used to refer to an event or a log file entry that
   might indicate an attempted security violation. See [12363]snivitz. 3.
   UUCP name of snark.thyrsus.com, home site of the Jargon File versions
   from 2.*.* on (i.e., this lexicon).
     _________________________________________________________________

   Node:sneaker, Next:[12364]sneakernet, Previous:[12365]snark,
   Up:[12366]= S =

   sneaker n.

   An individual hired to break into places in order to test their
   security; analogous to [12367]tiger team. Compare [12368]samurai.
     _________________________________________________________________

   Node:sneakernet, Next:[12369]sniff, Previous:[12370]sneaker,
   Up:[12371]= S =

   sneakernet /snee'ker-net/ n.

   Term used (generally with ironic intent) for transfer of electronic
   information by physically carrying tape, disks, or some other media
   from one machine to another. "Never underestimate the bandwidth of a
   station wagon filled with magtape, or a 747 filled with CD-ROMs." Also
   called `Tennis-Net', `Armpit-Net', `Floppy-Net' or `Shoenet'; in the
   1990s, `Nike network' after a well-known sneaker brand.
     _________________________________________________________________

   Node:sniff, Next:[12372]snivitz, Previous:[12373]sneakernet,
   Up:[12374]= S =

   sniff v.,n.

   1. To watch IP packets traversing a local network. Most often in the
   phrase `packet sniffer', a program for doing same. 2.Synonym for
   [12375]poll.
     _________________________________________________________________

   Node:snivitz, Next:[12376]'Snooze, Previous:[12377]sniff, Up:[12378]=
   S =

   snivitz /sniv'itz/ n.

   A hiccup in hardware or software; a small, transient problem of
   unknown origin (less serious than a [12379]snark). Compare
   [12380]glitch.
     _________________________________________________________________

   Node:'Snooze, Next:[12381]SO, Previous:[12382]snivitz, Up:[12383]= S =

   'Snooze /snooz/ [FidoNet] n.

   Fidonews, the weekly official on-line newsletter of FidoNet. As the
   editorial policy of Fidonews is "anything that arrives, we print",
   there are often large articles completely unrelated to FidoNet, which
   in turn tend to elicit [12384]flamage in subsequent issues.
     _________________________________________________________________

   Node:SO, Next:[12385]social engineering, Previous:[12386]'Snooze,
   Up:[12387]= S =

   SO /S-O/ n.

   1. (also `S.O.') Abbrev. for Significant Other, almost invariably
   written abbreviated and pronounced /S-O/ by hackers. Used to refer to
   one's primary relationship, esp. a live-in to whom one is not married.
   See [12388]MOTAS, [12389]MOTOS, [12390]MOTSS. 2. [techspeak] The Shift
   Out control character in ASCII (Control-N, 0001110).
     _________________________________________________________________

   Node:social engineering, Next:[12391]social science number,
   Previous:[12392]SO, Up:[12393]= S =

   social engineering n.

   Term used among [12394]crackers and [12395]samurai for cracking
   techniques that rely on weaknesses in [12396]wetware rather than
   software; the aim is to trick people into revealing passwords or other
   information that compromises a target system's security. Classic scams
   include phoning up a mark who has the required information and posing
   as a field service tech or a fellow employee with an urgent access
   problem. See also the [12397]tiger team story in the [12398]patch
   entry.
     _________________________________________________________________

   Node:social science number, Next:[12399]sock puppet,
   Previous:[12400]social engineering, Up:[12401]= S =

   social science number n. //

   [IBM] A statistic that is [12402]content-free, or nearly so. A measure
   derived via methods of questionable validity from data of a dubious
   and vague nature. Predictively, having a social science number in hand
   is seldom much better than nothing, and can be considerably worse. As
   a rule, [12403]management loves them. See also [12404]numbers,
   [12405]math-out, [12406]pretty pictures.
     _________________________________________________________________

   Node:sock puppet, Next:[12407]sodium substrate, Previous:[12408]social
   science number, Up:[12409]= S =

   sock puppet n.

   [Usenet: from the act of placing a sock over your hand and talking to
   it and pretending it's talking back] In Usenet parlance, a
   [12410]pseudo through which the puppeteer posts follow-ups to their
   own original message to give the appearance that a number of people
   support the views held in the original message.
     _________________________________________________________________

   Node:sodium substrate, Next:[12411]soft boot, Previous:[12412]sock
   puppet, Up:[12413]= S =

   sodium substrate n.

   Syn [12414]salt substrate.
     _________________________________________________________________

   Node:soft boot, Next:[12415]softcopy, Previous:[12416]sodium
   substrate, Up:[12417]= S =

   soft boot n.

   See [12418]boot.
     _________________________________________________________________

   Node:softcopy, Next:[12419]software bloat, Previous:[12420]soft boot,
   Up:[12421]= S =

   softcopy /soft'kop-ee/ n.

   [by analogy with `hardcopy'] A machine-readable form of corresponding
   hardcopy. See [12422]bits, [12423]machinable.
     _________________________________________________________________

   Node:software bloat, Next:[12424]software hoarding,
   Previous:[12425]softcopy, Up:[12426]= S =

   software bloat n.

   The results of [12427]second-system effect or [12428]creeping
   featuritis. Commonly cited examples include ls(1), [12429]X,
   [12430]BSD, [12431]Missed'em-five, and [12432]OS/2.
     _________________________________________________________________

   Node:software hoarding, Next:[12433]software laser,
   Previous:[12434]software bloat, Up:[12435]= S =

   software hoarding n.

   Pejorative term employed by members and adherents of the [12436]GNU
   project to describe the act of holding software proprietary, keeping
   it under trade secret or license terms which prohibit free
   redistribution and modification. Used primarily in Free Software
   Foundation propaganda. For a summary of related issues, see
   [12437]GNU.
     _________________________________________________________________

   Node:software laser, Next:[12438]software rot,
   Previous:[12439]software hoarding, Up:[12440]= S =

   software laser n.

   An optical laser works by bouncing photons back and forth between two
   mirrors, one totally reflective and one partially reflective. If the
   lasing material (usually a crystal) has the right properties, photons
   scattering off the atoms in the crystal will excite cascades of more
   photons, all in lockstep. Eventually the beam will escape through the
   partially-reflective mirror. One kind of [12441]sorcerer's apprentice
   mode involving [12442]bounce messages can produce closely analogous
   results, with a [12443]cascade of messages escaping to flood nearby
   systems. By mid-1993 there had been at least two publicized incidents
   of this kind.
     _________________________________________________________________

   Node:software rot, Next:[12444]softwarily, Previous:[12445]software
   laser, Up:[12446]= S =

   software rot n.

   Term used to describe the tendency of software that has not been used
   in a while to [12447]lose; such failure may be semi-humorously
   ascribed to [12448]bit rot. More commonly, `software rot' strikes when
   a program's assumptions become out of date. If the design was
   insufficiently [12449]robust, this may cause it to fail in mysterious
   ways. Syn. `code rot'. See also [12450]link rot.

   For example, owing to endemic shortsightedness in the design of COBOL
   programs, a good number of them succumbed to software rot when their
   2-digit year counters underwent [12451]wrap around at the beginning of
   the year 2000. Actually, related lossages often afflict centenarians
   who have to deal with computer software designed by unimaginative
   clods. One such incident became the focus of a minor public flap in
   1990, when a gentleman born in 1889 applied for a driver's license
   renewal in Raleigh, North Carolina. The new system refused to issue
   the card, probably because with 2-digit years the ages 101 and 1
   cannot be distinguished.

   Historical note: Software rot in an even funnier sense than the
   mythical one was a real problem on early research computers (e.g., the
   R1; see [12452]grind crank). If a program that depended on a peculiar
   instruction hadn't been run in quite a while, the user might discover
   that the opcodes no longer did the same things they once did. ("Hey,
   so-and-so needs an instruction to do such-and-such. We can
   [12453]snarf this opcode, right? No one uses it.")

   Another classic example of this sprang from the time an MIT hacker
   found a simple way to double the speed of the unconditional jump
   instruction on a PDP-6, so he patched the hardware. Unfortunately,
   this broke some fragile timing software in a music-playing program,
   throwing its output out of tune. This was fixed by adding a defensive
   initialization routine to compare the speed of a timing loop with the
   real-time clock; in other words, it figured out how fast the PDP-6 was
   that day, and corrected appropriately.

   Compare [12454]bit rot.
     _________________________________________________________________

   Node:softwarily, Next:[12455]softy, Previous:[12456]software rot,
   Up:[12457]= S =

   softwarily /soft-weir'i-lee/ adv.

   In a way pertaining to software. "The system is softwarily
   unreliable." The adjective **`softwary' is not used. See
   [12458]hardwarily.
     _________________________________________________________________

   Node:softy, Next:[12459]some random X, Previous:[12460]softwarily,
   Up:[12461]= S =

   softy n.

   [IBM] Hardware hackers' term for a software expert who is largely
   ignorant of the mysteries of hardware.
     _________________________________________________________________

   Node:some random X, Next:[12462]sorcerer's apprentice mode,
   Previous:[12463]softy, Up:[12464]= S =

   some random X adj.

   Used to indicate a member of class X, with the implication that Xs are
   interchangeable. "I think some random cracker tripped over the guest
   timeout last night." See also [12465]J. Random.
     _________________________________________________________________

   Node:sorcerer's apprentice mode, Next:[12466]SOS, Previous:[12467]some
   random X, Up:[12468]= S =

   sorcerer's apprentice mode n.

   [from Goethe's "Der Zauberlehrling" via Paul Dukas's "L'apprenti
   sorcier" the film "Fantasia"] A bug in a protocol where, under some
   circumstances, the receipt of a message causes multiple messages to be
   sent, each of which, when received, triggers the same bug. Used esp.
   of such behavior caused by [12469]bounce message loops in [12470]email
   software. Compare [12471]broadcast storm, [12472]network meltdown,
   [12473]software laser, [12474]ARMM.
     _________________________________________________________________

   Node:SOS, Next:[12475]source, Previous:[12476]sorcerer's apprentice
   mode, Up:[12477]= S =

   SOS /S-O-S/

   n.,obs. An infamously [12478]losing text editor. Once, back in the
   1960s, when a text editor was needed for the PDP-6, a hacker crufted
   together a [12479]quick-and-dirty `stopgap editor' to be used until a
   better one was written. Unfortunately, the old one was never really
   discarded when new ones came along. SOS is a descendant (`Son of
   Stopgap') of that editor, and many PDP-10 users gained the dubious
   pleasure of its acquaintance. Since then other programs similar in
   style to SOS have been written, notably the early font editor BILOS
   /bye'lohs/, the Brother-In-Law Of Stopgap (the alternate expansion
   `Bastard Issue, Loins of Stopgap' has been proposed).
     _________________________________________________________________

   Node:source, Next:[12480]source of all good bits, Previous:[12481]SOS,
   Up:[12482]= S =

   source n.

   [very common] In reference to software, `source' is invariably
   shorthand for `source code', the preferred human-readable and
   human-modifiable form of the program. This is as opposed to object
   code, the derived binary executable form of a program. This shorthand
   readily takes derivative forms; one may speak of "the sources of a
   system" or of "having source".
     _________________________________________________________________

   Node:source of all good bits, Next:[12483]space-cadet keyboard,
   Previous:[12484]source, Up:[12485]= S =

   source of all good bits n.

   A person from whom (or a place from which) useful information may be
   obtained. If you need to know about a program, a [12486]guru might be
   the source of all good bits. The title is often applied to a
   particularly competent secretary.
     _________________________________________________________________

   Node:space-cadet keyboard, Next:[12487]spaceship operator,
   Previous:[12488]source of all good bits, Up:[12489]= S =

   space-cadet keyboard n.

   A now-legendary device used on MIT LISP machines, which inspired
   several still-current jargon terms and influenced the design of
   [12490]EMACS. It was equipped with no fewer than seven shift keys:
   four keys for [12491]bucky bits (`control', `meta', `hyper', and
   `super') and three like regular shift keys, called `shift', `top', and
   `front'. Many keys had three symbols on them: a letter and a symbol on
   the top, and a Greek letter on the front. For example, the `L' key had
   an `L' and a two-way arrow on the top, and the Greek letter lambda on
   the front. By pressing this key with the right hand while playing an
   appropriate `chord' with the left hand on the shift keys, you could
   get the following results:

   L
          lowercase l

   shift-L
          uppercase L

   front-L
          lowercase lambda

   front-shift-L
          uppercase lambda

   top-L
          two-way arrow (front and shift are ignored)

   And of course each of these might also be typed with any combination
   of the control, meta, hyper, and super keys. On this keyboard, you
   could type over 8000 different characters! This allowed the user to
   type very complicated mathematical text, and also to have thousands of
   single-character commands at his disposal. Many hackers were actually
   willing to memorize the command meanings of that many characters if it
   reduced typing time (this attitude obviously shaped the interface of
   EMACS). Other hackers, however, thought having that many bucky bits
   was overkill, and objected that such a keyboard can require three or
   four hands to operate. See [12492]bucky bits, [12493]cokebottle,
   [12494]double bucky, [12495]meta bit, [12496]quadruple bucky.

   Note: early versions of this entry incorrectly identified the
   space-cadet keyboard with the `Knight keyboard'. Though both were
   designed by Tom Knight, the latter term was properly applied only to a
   keyboard used for ITS on the PDP-10 and modeled on the Stanford
   keyboard (as described under [12497]bucky bits). The true space-cadet
   keyboard evolved from the first Knight keyboard.
     _________________________________________________________________

   Node:spaceship operator, Next:[12498]SPACEWAR,
   Previous:[12499]space-cadet keyboard, Up:[12500]= S =

   spaceship operator n.

   The glyph <=>, so-called apparently because in the low-resolution
   constant-width font used on many terminals it vaguely resembles a
   flying saucer. [12501]Perl uses this to denote the
   signum-of-difference operation.
     _________________________________________________________________

   Node:SPACEWAR, Next:[12502]spaghetti code, Previous:[12503]spaceship
   operator, Up:[12504]= S =

   SPACEWAR n.

   A space-combat simulation game, inspired by E. E. "Doc" Smith's
   "Lensman" books, in which two spaceships duel around a central sun,
   shooting torpedoes at each other and jumping through hyperspace. This
   game was first implemented on the PDP-1 at MIT in 1962. In 1968-69, a
   descendant of the game motivated Ken Thompson to build, in his spare
   time on a scavenged PDP-7, the operating system that became
   [12505]Unix. Less than nine years after that, SPACEWAR was
   commercialized as one of the first video games; descendants are still
   [12506]feeping in video arcades everywhere.
     _________________________________________________________________

   Node:spaghetti code, Next:[12507]spaghetti inheritance,
   Previous:[12508]SPACEWAR, Up:[12509]= S =

   spaghetti code n.

   Code with a complex and tangled control structure, esp. one using many
   GOTOs, exceptions, or other `unstructured' branching constructs.
   Pejorative. The synonym `kangaroo code' has been reported, doubtless
   because such code has so many jumps in it.
     _________________________________________________________________

   Node:spaghetti inheritance, Next:[12510]spam,
   Previous:[12511]spaghetti code, Up:[12512]= S =

   spaghetti inheritance n.

   [encountered among users of object-oriented languages that use
   inheritance, such as Smalltalk] A convoluted class-subclass graph,
   often resulting from carelessly deriving subclasses from other classes
   just for the sake of reusing their code. Coined in a (successful)
   attempt to discourage such practice, through guilt-by-association with
   [12513]spaghetti code.
     _________________________________________________________________

   Node:spam, Next:[12514]spam bait, Previous:[12515]spaghetti
   inheritance, Up:[12516]= S =

   spam vt.,vi.,n.

   [from "Monty Python's Flying Circus"] 1. To crash a program by
   overrunning a fixed-size buffer with excessively large input data. See
   also [12517]buffer overflow, [12518]overrun screw, [12519]smash the
   stack. 2. To cause a newsgroup to be flooded with irrelevant or
   inappropriate messages. You can spam a newsgroup with as little as one
   well- (or ill-) planned message (e.g. asking "What do you think of
   abortion?" on soc.women). This is often done with [12520]cross-posting
   (e.g. any message which is crossposted to alt.rush-limbaugh and
   alt.politics.homosexuality will almost inevitably spam both groups).
   This overlaps with [12521]troll behavior; the latter more specific
   term has become more common. 3. To send many identical or
   nearly-identical messages separately to a large number of Usenet
   newsgroups. This is more specifically called `ECP', Excessive
   Cross-Posting. This is one sure way to infuriate nearly everyone on
   the Net. See also [12522]velveeta and [12523]jello. 4. To bombard a
   newsgroup with multiple copies of a message. This is more specifically
   called `EMP', Excessive Multi-Posting. 5. To mass-mail unrequested
   identical or nearly-identical email messages, particularly those
   containing advertising. Especially used when the mail addresses have
   been culled from network traffic or databases without the consent of
   the recipients. Synonyms include [12524]UCE, [12525]UBE. 6. Any large,
   annoying, quantity of output. For instance, someone on IRC who walks
   away from their screen and comes back to find 200 lines of text might
   say "Oh no, spam".

   The later definitions have become much more prevalent as the Internet
   has opened up to non-techies, and to most people senses 3 4 and 5 are
   now primary. All three behaviors are considered abuse of the net, and
   are almost universally grounds for termination of the originator's
   email account or network connection. In these senses the term `spam'
   has gone mainstream, though without its original sense or folkloric
   freight - there is apparently a widespread myth among [12526]lusers
   that "spamming" is what happens when you dump cans of Spam into a
   revolving fan.
     _________________________________________________________________

   Node:spam bait, Next:[12527]spamblock, Previous:[12528]spam,
   Up:[12529]= S =

   spam bait n.

   Email addresses included in, or comprising the entirety of, a usenet
   message so that spammers mining a newsgroup with an [12530]address
   harvester will collect them. These addresses can be people who have
   offended or annoyed the poster, or who are included so that a spammer
   will spam an official, thereby causing himself trouble. One
   particularly effective form of spam bait is the address of a
   [12531]teergrube.
     _________________________________________________________________

   Node:spamblock, Next:[12532]spamhaus, Previous:[12533]spam bait,
   Up:[12534]= S =

   spamblock /spam'blok/ n.

   [poss. by analogy to sunblock] Text inserted in an email address to
   render it invalid and thus useless to spammers. For example, the
   address `jrandom@hacker.org' might be transformed to
   `jrandom@NOSPAM.hacker.org'. Adding spamblock to an address is often
   referred to as `munging' it (see [12535]munge)-. This evasion tactic
   depends on the fact that most spammers collect names with some sort of
   [12536]address harvester on volumes too high to de-mung by hand, but
   individual humans reading an email message can readily spot and remove
   a spamblock in the from address.

   Note: This is not actually a very effective tactic, and may already be
   passing out of use in early 1999 after about two years of life. In
   both mail and news, it's essentially impossible to keep a smart
   address harvester from mining out the addresses in the message header
   and trace lines. Therefore the only people who can be protected are
   third parties mentioned by email address in the message - not a common
   enough case to interest spammers.
     _________________________________________________________________

   Node:spamhaus, Next:[12537]spamvertize, Previous:[12538]spamblock,
   Up:[12539]= S =

   spamhaus spam'hows n.

   Pejorative term for an internet service provider that permits or even
   encourages [12540]spam mailings from its systems. The plural is
   `spamhausen'. There is a web page devoted to [12541]tracking
   spamhausen.

   The most notorious of the spamhausen was Sanford Wallace's Cyber
   Promotions Inc., shut down by a lawsuit on 16 October 1997. The
   anniversary of the shutdown is celebrated on Usenet as Spam Freedom
   Day, but lesser imitators of the Spamford still infest various murky
   corners of the net. Since prosecution of spammers became routine under
   the junk-fax laws and statues specifically targeting spam, spamhausen
   have declined in relative importance; today, hit-and-run attacks by
   spammers using [12542]relay rape and [12543]throwaway accounts on
   reputable ISPs seem to account for most of the flow.
     _________________________________________________________________

   Node:spamvertize, Next:[12544]spangle, Previous:[12545]spamhaus,
   Up:[12546]= S =

   spamvertize v.

   To advertise using [12547]spam. Pejorative.
     _________________________________________________________________

   Node:spangle, Next:[12548]spawn, Previous:[12549]spamvertize,
   Up:[12550]= S =

   spangle n.

   [UK] The singular of [12551]bells and whistles. See also
   [12552]spungle.
     _________________________________________________________________

   Node:spawn, Next:[12553]special-case, Previous:[12554]spangle,
   Up:[12555]= S =

   spawn n.,vi.

   1. [techspeak] In UNIX parlance, to create a child process from within
   a process. Technically this is a `fork'; the term `spawn' is a bit
   more general and is used for threads (lightweight processes) as well
   as traditional heavyweight processes. 2. In gaming, meant to indicate
   where (`spawn-point') and when a player comes to life (or `re-spawns')
   after being killed. Opposite of [12556]frag.
     _________________________________________________________________

   Node:special-case, Next:[12557]speedometer, Previous:[12558]spawn,
   Up:[12559]= S =

   special-case vt.

   To write unique code to handle input to or situations arising in a
   program that are somehow distinguished from normal processing. This
   would be used for processing of mode switches or interrupt characters
   in an interactive interface (as opposed, say, to text entry or normal
   commands), or for processing of [12560]hidden flags in the input of a
   batch program or [12561]filter.
     _________________________________________________________________

   Node:speedometer, Next:[12562]spell, Previous:[12563]special-case,
   Up:[12564]= S =

   speedometer n.

   A pattern of lights displayed on a linear set of LEDs (today) or nixie
   tubes (yesterday, on ancient mainframes). The pattern is shifted left
   every N times the operating system goes through its [12565]main loop.
   A swiftly moving pattern indicates that the system is mostly idle; the
   speedometer slows down as the system becomes overloaded. The
   speedometer on Sun Microsystems hardware bounces back and forth like
   the eyes on one of the Cylons from the wretched "Battlestar Galactica"
   TV series.

   Historical note: One computer, the GE 600 (later Honeywell 6000)
   actually had an analog speedometer on the front panel, calibrated in
   instructions executed per second.
     _________________________________________________________________

   Node:spell, Next:[12566]spelling flame, Previous:[12567]speedometer,
   Up:[12568]= S =

   spell n.

   Syn. [12569]incantation.
     _________________________________________________________________

   Node:spelling flame, Next:[12570]spider, Previous:[12571]spell,
   Up:[12572]= S =

   spelling flame n. //

   [Usenet] A posting ostentatiously correcting a previous article's
   spelling as a way of casting scorn on the point the article was trying
   to make, instead of actually responding to that point (compare
   [12573]dictionary flame). Of course, people who are more than usually
   slovenly spellers are prone to think any correction is a spelling
   flame. It's an amusing comment on human nature that spelling flames
   themselves often contain spelling errors.
     _________________________________________________________________

   Node:spider, Next:[12574]spider food, Previous:[12575]spelling flame,
   Up:[12576]= S =

   spider

   The Web-walking part of a search engine that collects pages for
   indexing in the search engine's database. Also called a [12577]bot.
   The best-known spider is Scooter, the web-walker for the Alta Vista
   search engine.
     _________________________________________________________________

   Node:spider food, Next:[12578]spiffy, Previous:[12579]spider,
   Up:[12580]= S =

   spider food n.

   Keywords embedded (usually invisibly) into a web page to attract
   search engines (spiders). The intended result of including spider food
   in one's web page is to insure that the page appears high on the list
   of matching entries to a search engine query. There are right and
   wrong ways to do this; the right way is a discreet `meta keywords'
   tag, the wrong way is to embed many repeats of a keyword in comments
   (and many search engines now detect and ignore the latter).
     _________________________________________________________________

   Node:spiffy, Next:[12581]spike, Previous:[12582]spider food,
   Up:[12583]= S =

   spiffy /spi'fee/ adj.

   1. Said of programs having a pretty, clever, or exceptionally
   well-designed interface. "Have you seen the spiffy [12584]X version of
   [12585]empire yet?" 2. Said sarcastically of a program that is
   perceived to have little more than a flashy interface going for it.
   Which meaning should be drawn depends delicately on tone of voice and
   context. This word was common mainstream slang during the 1940s, in a
   sense close to 1.
     _________________________________________________________________

   Node:spike, Next:[12586]spin, Previous:[12587]spiffy, Up:[12588]= S =

   spike v.

   To defeat a selection mechanism by introducing a (sometimes temporary)
   device that forces a specific result. The word is used in several
   industries; telephone engineers refer to spiking a relay by inserting
   a pin to hold the relay in either the closed or open state, and
   railroaders refer to spiking a track switch so that it cannot be
   moved. In programming environments it normally refers to a temporary
   change, usually for testing purposes (as opposed to a permanent
   change, which would be called [12589]hardwired).
     _________________________________________________________________

   Node:spin, Next:[12590]spl, Previous:[12591]spike, Up:[12592]= S =

   spin vi.

   Equivalent to [12593]buzz. More common among C and Unix programmers.
   See the discussion of `spinlock' under [12594]busy-wait.
     _________________________________________________________________

   Node:spl, Next:[12595]splash screen, Previous:[12596]spin, Up:[12597]=
   S =

   spl /S-P-L/

   [abbrev, from Set Priority Level] The way traditional Unix kernels
   implement mutual exclusion by running code at high interrupt levels.
   Used in jargon to describe the act of tuning in or tuning out ordinary
   communication. Classically, spl levels run from 1 to 7; "Fred's at spl
   6 today" would mean that he is very hard to interrupt. "Wait till I
   finish this; I'll spl down then." See also [12598]interrupts locked
   out.
     _________________________________________________________________

   Node:splash screen, Next:[12599]splat, Previous:[12600]spl,
   Up:[12601]= S =

   splash screen n.

   [Mac users] Syn. [12602]banner, sense 3.
     _________________________________________________________________

   Node:splat, Next:[12603]splat out, Previous:[12604]splash screen,
   Up:[12605]= S =

   splat n.

   1. Name used in many places (DEC, IBM, and others) for the asterisk
   (*) character (ASCII 0101010). This may derive from the `squashed-bug'
   appearance of the asterisk on many early line printers. 2. [MIT] Name
   used by some people for the # character (ASCII 0100011). 3. The
   [12606]feature key on a Mac (same as [12607]alt, sense 2). 4. obs.
   Name used by some people for the Stanford/ITS extended ASCII circle-x
   character. This character is also called `blobby' and `frob', among
   other names; it is sometimes used by mathematicians as a notation for
   `tensor product'. 5. obs. Name for the semi-mythical Stanford extended
   ASCII circle-plus character. See also [12608]ASCII.
     _________________________________________________________________

   Node:splat out, Next:[12609]spod, Previous:[12610]splat, Up:[12611]= S
   =

   splat out v.

   [Usenet] To partially obscure a potentially provocative word by
   substituting [12612]splat characters for some of its letters (usually,
   but not always, the vowels). The purpose is not to make the word
   unrecognizable but to make it a mention rather than a use, so that no
   flamewar ensues. Words often splatted out include N*z* (see
   [12613]Godwin's Law), *v*l*t**n (anywhere fundamentalists might be
   lurking), *b*rt**n, and g*n c*ntr*l. Compare [12614]UN*X.
     _________________________________________________________________

   Node:spod, Next:[12615]spoiler, Previous:[12616]splat out, Up:[12617]=
   S =

   spod n.

   [UK] 1. A lower form of life found on [12618]talker systems and
   [12619]MUDs. The spod has few friends in [12620]RL and uses talkers
   instead, finding communication easier and preferable over the net. He
   has all the negative traits of the [12621]computer geek without having
   any interest in computers per se. Lacking any knowledge of or interest
   in how networks work, and considering his access a God-given right, he
   is a major irritant to sysadmins, clogging up lines in order to reach
   new MUDs, following passed-on instructions on how to sneak his way
   onto Internet ("Wow! It's in America!") and complaining when he is not
   allowed to use busy routes. A true spod will start any conversation
   with "Are you male or female?" (and follow it up with "Got any good
   numbers/IDs/passwords?") and will not talk to someone physically
   present in the same terminal room until they log onto the same machine
   that he is using and enter talk mode. Compare [12622]newbie,
   [12623]tourist, [12624]weenie, [12625]twink, [12626]terminal junkie,
   [12627]warez d00dz. 2. A [12628]backronym for "Sole Purpose, Obtain a
   Degree"; according to some self-described spods, this term is used by
   indifferent students to condemn their harder-working fellows. Compare
   the defiant adoption of the term `geek' in the mid-1990s by people who
   would previously have been stigmatized by it (see [12629]computer
   geek). 3. [obs.] An ordinary person; a [12630]random. This is the
   meaning with which the term was coined, but the inventor informs us he
   has himself accepted sense 1.
     _________________________________________________________________

   Node:spoiler, Next:[12631]spoiler space, Previous:[12632]spod,
   Up:[12633]= S =

   spoiler n.

   [Usenet] 1. A remark which reveals important plot elements from books
   or movies, thus denying the reader (of the article) the proper
   suspense when reading the book or watching the movie. 2. Any remark
   which telegraphs the solution of a problem or puzzle, thus denying the
   reader the pleasure of working out the correct answer (see also
   [12634]interesting). Either sense readily forms compounds like `total
   spoiler', `quasi-spoiler' and even `pseudo-spoiler'.

   By convention, articles which are spoilers in either sense should
   contain the word `spoiler' in the Subject: line, or guarantee via
   various tricks that the answer appears only after several screens-full
   of warning, or conceal the sensitive information via [12635]rot13,
   [12636]spoiler space or some combination of these techniques.
     _________________________________________________________________

   Node:spoiler space, Next:[12637]sponge, Previous:[12638]spoiler,
   Up:[12639]= S =

   spoiler space

   [also `spoiler spoo'] A screenful of blank lines (and, often,
   form-feeds) deliberately inserted in a message following a
   [12640]spoiler warning, so the actual spoiler can't be seen without
   hitting a key.
     _________________________________________________________________

   Node:sponge, Next:[12641]spoof, Previous:[12642]spoiler space,
   Up:[12643]= S =

   sponge n.

   [Unix] A special case of a [12644]filter that reads its entire input
   before writing any output; the canonical example is a sort utility.
   Unlike most filters, a sponge can conveniently overwrite the input
   file with the output data stream. If a file system has versioning (as
   ITS did and VMS does now) the sponge/filter distinction loses its
   usefulness, because directing filter output would just write a new
   version. See also [12645]slurp.
     _________________________________________________________________

   Node:spoof, Next:[12646]spool, Previous:[12647]sponge, Up:[12648]= S =

   spoof vi.

   To capture, alter, and retransmit a communication stream in a way that
   misleads the recipient. As used by hackers, refers especially to
   altering TCP/IP packet source addresses or other packet-header data in
   order to masquerade as a trusted machine. This term has become very
   widespread and is borderline techspeak.
     _________________________________________________________________

   Node:spool, Next:[12649]spool file, Previous:[12650]spoof, Up:[12651]=
   S =

   spool vi.

   [from early IBM `Simultaneous Peripheral Operation On-Line', but is
   widely thought to be a [12652]backronym] To send files to some device
   or program (a `spooler') that queues them up and does something useful
   with them later. Without qualification, the spooler is the `print
   spooler' controlling output of jobs to a printer; but the term has
   been used in connection with other peripherals (especially plotters
   and graphics devices) and occasionally even for input devices. See
   also [12653]demon.
     _________________________________________________________________

   Node:spool file, Next:[12654]spungle, Previous:[12655]spool,
   Up:[12656]= S =

   spool file n.

   Any file to which data is [12657]spooled to await the next stage of
   processing. Especially used in circumstances where spooling the data
   copes with a mismatch between speeds in two devices or pieces of
   software. For example, when you send mail under Unix, it's typically
   copied to a spool file to await a transport [12658]demon's attentions.
   This is borderline techspeak.
     _________________________________________________________________

   Node:spungle, Next:[12659]square tape, Previous:[12660]spool file,
   Up:[12661]= S =

   spungle n.

   [Durham, UK; portmanteau, [12662]spangle + bungle] A [12663]spangle of
   no actual usefulness. Example: Roger the Bent Paperclip in Microsoft
   Word '98. A spungle's only virtue is that it looks pretty, unless you
   find creeping featurism ugly.
     _________________________________________________________________

   Node:square tape, Next:[12664]squirrelcide, Previous:[12665]spungle,
   Up:[12666]= S =

   square tape n.

   Mainframe magnetic tape cartridges for use with IBM 3480 or compatible
   tape drives; or QIC tapes used on workstations and micros. The term
   comes from the square (actually rectangular) shape of the cartridges;
   contrast [12667]round tape.
     _________________________________________________________________

   Node:squirrelcide, Next:[12668]stack, Previous:[12669]square tape,
   Up:[12670]= S =

   squirrelcide n.

   [common on Usenet's comp.risks newsgroup.] (alt. `squirrelicide') What
   all too frequently happens when a squirrel decides to exercise its
   species's unfortunate penchant for shorting out power lines with their
   little furry bodies. Result: one dead squirrel, one down computer
   installation. In this situation, the computer system is said to have
   been squirrelcided.
     _________________________________________________________________

   Node:stack, Next:[12671]stack puke, Previous:[12672]squirrelcide,
   Up:[12673]= S =

   stack n.

   The set of things a person has to do in the future. One speaks of the
   next project to be attacked as having risen to the top of the stack.
   "I'm afraid I've got real work to do, so this'll have to be pushed way
   down on my stack." "I haven't done it yet because every time I pop my
   stack something new gets pushed." If you are interrupted several times
   in the middle of a conversation, "My stack overflowed" means "I forget
   what we were talking about." The implication is that more items were
   pushed onto the stack than could be remembered, so the least recent
   items were lost. The usual physical example of a stack is to be found
   in a cafeteria: a pile of plates or trays sitting on a spring in a
   well, so that when you put one on the top they all sink down, and when
   you take one off the top the rest spring up a bit. See also
   [12674]push and [12675]pop.

   At MIT, [12676]PDL used to be a more common synonym for [12677]stack
   in all these contexts, and this may still be true. Everywhere else
   [12678]stack seems to be the preferred term. [12679]Knuth ("The Art of
   Computer Programming", second edition, vol. 1, p. 236) says:

     Many people who realized the importance of stacks and queues
     independently have given other names to these structures: stacks
     have been called push-down lists, reversion storages, cellars,
     nesting stores, piles, last-in-first-out ("LIFO") lists, and even
     yo-yo lists!
     _________________________________________________________________

   Node:stack puke, Next:[12680]stale pointer bug, Previous:[12681]stack,
   Up:[12682]= S =

   stack puke n.

   Some processor architectures are said to `puke their guts onto the
   stack' to save their internal state during exception processing. The
   Motorola 68020, for example, regurgitates up to 92 bytes on a bus
   fault. On a pipelined machine, this can take a while.
     _________________________________________________________________

   Node:stale pointer bug, Next:[12683]star out, Previous:[12684]stack
   puke, Up:[12685]= S =

   stale pointer bug n.

   Synonym for [12686]aliasing bug used esp. among microcomputer hackers.
     _________________________________________________________________

   Node:star out, Next:[12687]state, Previous:[12688]stale pointer bug,
   Up:[12689]= S =

   star out v.

   [University of York, England] To replace a user's encrypted password
   in /etc/passwd with a single asterisk. Under Unix this is not a legal
   encryption of any password; hence the user is not permitted to log in.
   In general, accounts like adm, news, and daemon are permanently
   "starred out"; occasionally a real user might have the this inflicted
   upon him/her as a punishment, e.g. "Graham was starred out for playing
   Omega in working hours". Also occasionally known as The Order Of The
   Gold Star in this context. "Don't do that, or you'll be awarded the
   Order of the Gold Star..." Compare [12690]disusered.
     _________________________________________________________________

   Node:state, Next:[12691]stealth manager, Previous:[12692]star out,
   Up:[12693]= S =

   state n.

   1. Condition, situation. "What's the state of your latest hack?" "It's
   winning away." "The system tried to read and write the disk
   simultaneously and got into a totally [12694]wedged state." The
   standard question "What's your state?" means "What are you doing?" or
   "What are you about to do?" Typical answers are "about to gronk out",
   or "hungry". Another standard question is "What's the state of the
   world?", meaning "What's new?" or "What's going on?". The more terse
   and humorous way of asking these questions would be "State-p?".
   Another way of phrasing the first question under sense 1 would be
   "state-p latest hack?". 2. Information being maintained in
   non-permanent memory (electronic or human).
     _________________________________________________________________

   Node:stealth manager, Next:[12695]steam-powered,
   Previous:[12696]state, Up:[12697]= S =

   stealth manager n.

   [Corporate DP] A manager that appears out of nowhere, promises
   undeliverable software to unknown end users, and vanishes before the
   programming staff realizes what has happened. See [12698]smoke and
   mirrors.
     _________________________________________________________________

   Node:steam-powered, Next:[12699]STFW, Previous:[12700]stealth manager,
   Up:[12701]= S =

   steam-powered adj.

   Old-fashioned or underpowered; archaic. This term does not have a
   strong negative loading and may even be used semi-affectionately for
   something that clanks and wheezes a lot but hangs in there doing the
   job.
     _________________________________________________________________

   Node:STFW, Next:[12702]stiffy, Previous:[12703]steam-powered,
   Up:[12704]= S =

   STFW imp. /S-T-F-W/

   [Usenet] Commmon abbreviation for "Search The Fucking Web", a
   suggestion that what you're asking for is a query better handled by a
   search engine than a human being. Usage is common and exactly parallel
   to both senses of [12705]RTFM.
     _________________________________________________________________

   Node:stiffy, Next:[12706]stir-fried random, Previous:[12707]STFW,
   Up:[12708]= S =

   stiffy n.

   3.5-inch [12709]microfloppies, so called because their jackets are
   more rigid than those of the 5.25-inch and the (now totally obsolete)
   8-inch floppy. Elsewhere this might be called a `firmy'. For some odd
   reason, several sources have taken the trouble to inform us that this
   term is widespread in South Africa.
     _________________________________________________________________

   Node:stir-fried random, Next:[12710]stomp on, Previous:[12711]stiffy,
   Up:[12712]= S =

   stir-fried random n.

   (alt. `stir-fried mumble') Term used for the best dish of many of
   those hackers who can cook. Consists of random fresh veggies and meat
   wokked with random spices. Tasty and economical. See [12713]random,
   [12714]great-wall, [12715]ravs, [12716]laser chicken, [12717]oriental
   food; see also [12718]mumble.
     _________________________________________________________________

   Node:stomp on, Next:[12719]Stone Age, Previous:[12720]stir-fried
   random, Up:[12721]= S =

   stomp on vt.

   To inadvertently overwrite something important, usually automatically.
   "All the work I did this weekend got stomped on last night by the
   nightly server script." Compare [12722]scribble, [12723]mangle,
   [12724]trash, [12725]scrog, [12726]roach.
     _________________________________________________________________

   Node:Stone Age, Next:[12727]stone knives and bearskins,
   Previous:[12728]stomp on, Up:[12729]= S =

   Stone Age n.,adj.

   1. In computer folklore, an ill-defined period from ENIAC (ca. 1943)
   to the mid-1950s; the great age of electromechanical [12730]dinosaurs.
   Sometimes used for the entire period up to 1960-61 (see [12731]Iron
   Age); however, it is funnier and more descriptive to characterize the
   latter period in terms of a `Bronze Age' era of transistor-logic,
   pre-ferrite-[12732]core machines with drum or CRT mass storage (as
   opposed to just mercury delay lines and/or relays). See also
   [12733]Iron Age. 2. More generally, a pejorative for any crufty,
   ancient piece of hardware or software technology. Note that this is
   used even by people who were there for the [12734]Stone Age (sense 1).
     _________________________________________________________________

   Node:stone knives and bearskins, Next:[12735]stoppage,
   Previous:[12736]Stone Age, Up:[12737]= S =

   stone knives and bearskins n.

   [from the Star Trek Classic episode "The City on the Edge of Forever"]
   A term traditionally used to describe (and deprecate) computing
   environments that are grotesquely primitive in light of what is known
   about good ways to design things. As in "Don't get too used to the
   facilities here. Once you leave SAIL it's stone knives and bearskins
   as far as the eye can see". Compare [12738]steam-powered.
     _________________________________________________________________

   Node:stoppage, Next:[12739]store, Previous:[12740]stone knives and
   bearskins, Up:[12741]= S =

   stoppage /sto'p*j/ n.

   Extreme [12742]lossage that renders something (usually something
   vital) completely unusable. "The recent system stoppage was caused by
   a [12743]fried transformer."
     _________________________________________________________________

   Node:store, Next:[12744]strided, Previous:[12745]stoppage, Up:[12746]=
   S =

   store n.

   [prob. from techspeak `main store'] In some varieties of Commonwealth
   hackish, the preferred synonym for [12747]core. Thus, `bringing a
   program into store' means not that one is returning shrink-wrapped
   software but that a program is being [12748]swapped in.
     _________________________________________________________________

   Node:strided, Next:[12749]stroke, Previous:[12750]store, Up:[12751]= S
   =

   strided /stri:'d*d/ adj.

   [scientific computing] Said of a sequence of memory reads and writes
   to addresses, each of which is separated from the last by a constant
   interval called the `stride length'. These can be a worst-case access
   pattern for the standard memory-caching schemes when the stride length
   is a multiple of the cache line size. Strided references are often
   generated by loops through an array, and (if your data is large enough
   that access-time is significant) it can be worthwhile to tune for
   better locality by inverting double loops or by partially unrolling
   the outer loop of a loop nest. This usage is borderline techspeak; the
   related term `memory stride' is definitely techspeak.
     _________________________________________________________________

   Node:stroke, Next:[12752]strudel, Previous:[12753]strided, Up:[12754]=
   S =

   stroke n.

   Common name for the slant (`/', ASCII 0101111) character. See
   [12755]ASCII for other synonyms.
     _________________________________________________________________

   Node:strudel, Next:[12756]stubroutine, Previous:[12757]stroke,
   Up:[12758]= S =

   strudel n.

   Common (spoken) name for the at-sign (`@', ASCII 1000000) character.
   See [12759]ASCII for other synonyms.
     _________________________________________________________________

   Node:stubroutine, Next:[12760]studly, Previous:[12761]strudel,
   Up:[12762]= S =

   stubroutine /stuhb'roo-teen/ n.

   [contraction of `stub subroutine'] Tiny, often vacuous placeholder for
   a subroutine that is to be written or fleshed out later.
     _________________________________________________________________

   Node:studly, Next:[12763]studlycaps, Previous:[12764]stubroutine,
   Up:[12765]= S =

   studly adj.

   Impressive; powerful. Said of code and designs which exhibit both
   complexity and a virtuoso flair. Has connotations similar to
   [12766]hairy but is more positive in tone. Often in the emphatic `most
   studly' or as noun-form `studliness'. "Smail 3.0's configuration
   parser is most studly."
     _________________________________________________________________

   Node:studlycaps, Next:[12767]stunning, Previous:[12768]studly,
   Up:[12769]= S =

   studlycaps /stuhd'lee-kaps/ n.

   A hackish form of silliness similar to [12770]BiCapitalization for
   trademarks, but applied randomly and to arbitrary text rather than to
   trademarks. ThE oRigiN and SigNificaNce of thIs pRacTicE iS oBscuRe.
     _________________________________________________________________

   Node:stunning, Next:[12771]stupid-sort, Previous:[12772]studlycaps,
   Up:[12773]= S =

   stunning adj.

   Mind-bogglingly stupid. Usually used in sarcasm. "You want to code
   what in ADA? That's a ... stunning idea!"
     _________________________________________________________________

   Node:stupid-sort, Next:[12774]Stupids, Previous:[12775]stunning,
   Up:[12776]= S =

   stupid-sort n.

   Syn. [12777]bogo-sort.
     _________________________________________________________________

   Node:Stupids, Next:[12778]Sturgeon's Law, Previous:[12779]stupid-sort,
   Up:[12780]= S =

   Stupids n.

   Term used by [12781]samurai for the [12782]suits who employ them;
   succinctly expresses an attitude at least as common, though usually
   better disguised, among other subcultures of hackers. There may be
   intended reference here to an SF story originally published in 1952
   but much anthologized since, Mark Clifton's "Star, Bright". In it, a
   super-genius child classifies humans into a very few `Brights' like
   herself, a huge majority of `Stupids', and a minority of `Tweens', the
   merely ordinary geniuses.
     _________________________________________________________________

   Node:Sturgeon's Law, Next:[12783]sucking mud, Previous:[12784]Stupids,
   Up:[12785]= S =

   Sturgeon's Law prov.

   "Ninety percent of everything is crap". Derived from a quote by
   science fiction author Theodore Sturgeon, who once said, "Sure, 90% of
   science fiction is crud. That's because 90% of everything is crud."
   Oddly, when Sturgeon's Law is cited, the final word is almost
   invariably changed to `crap'. Compare [12786]Hanlon's Razor,
   [12787]Ninety-Ninety Rule. Though this maxim originated in SF fandom,
   most hackers recognize it and are all too aware of its truth.
     _________________________________________________________________

   Node:sucking mud, Next:[12788]sufficiently small,
   Previous:[12789]Sturgeon's Law, Up:[12790]= S =

   sucking mud adj.

   [Applied Data Research] (also `pumping mud') Crashed or [12791]wedged.
   Usually said of a machine that provides some service to a network,
   such as a file server. This Dallas regionalism derives from the East
   Texas oilfield lament, "Shut 'er down, Ma, she's a-suckin' mud". Often
   used as a query. "We are going to reconfigure the network, are you
   ready to suck mud?"
     _________________________________________________________________

   Node:sufficiently small, Next:[12792]suit, Previous:[12793]sucking
   mud, Up:[12794]= S =

   sufficiently small adj.

   Syn. [12795]suitably small.
     _________________________________________________________________

   Node:suit, Next:[12796]suitable win, Previous:[12797]sufficiently
   small, Up:[12798]= S =

   suit n.

   1. Ugly and uncomfortable `business clothing' often worn by
   non-hackers. Invariably worn with a `tie', a strangulation device that
   partially cuts off the blood supply to the brain. It is thought that
   this explains much about the behavior of suit-wearers. Compare
   [12799]droid. 2. A person who habitually wears suits, as distinct from
   a techie or hacker. See [12800]pointy-haired, [12801]burble,
   [12802]management, [12803]Stupids, [12804]SNAFU principle, [12805]PHB,
   and [12806]brain-damaged.
     _________________________________________________________________

   Node:suitable win, Next:[12807]suitably small, Previous:[12808]suit,
   Up:[12809]= S =

   suitable win n.

   See [12810]win.
     _________________________________________________________________

   Node:suitably small, Next:[12811]Sun, Previous:[12812]suitable win,
   Up:[12813]= S =

   suitably small adj.

   [perverted from mathematical jargon]

   An expression used ironically to characterize unquantifiable behavior
   that differs from expected or required behavior. For example, suppose
   a newly created program came up with a correct full-screen display,
   and one publicly exclaimed: "It works!" Then, if the program dumped
   core on the first mouse click, one might add: "Well, for suitably
   small values of `works'." Compare the characterization of pi under
   [12814]random numbers.
     _________________________________________________________________

   Node:Sun, Next:[12815]sun lounge, Previous:[12816]suitably small,
   Up:[12817]= S =

   Sun n.

   Sun Microsystems. Hackers remember that the name was originally an
   acronym, Stanford University Network. Sun started out around 1980 with
   some hardware hackers (mainly) from Stanford talking to some software
   hackers (mainly) from UC Berkeley; Sun's original technology concept
   married a clever board design based on the Motorola 68000 to
   [12818]BSD Unix. Sun went on to lead the worstation industry through
   the 1980s, and for years afterwards remained an engineering-driven
   company and a good place for hackers to work. Though Sun drifted away
   from its techie origins after 1990 and has since made some strategic
   moves that disappointed and annoyed many hackers (especially by
   maintaining proprietary control of Java and rejecting Linux), it's
   still considered within the family in much the same way [12819]DEC was
   in the 1970s and early 1980s.
     _________________________________________________________________

   Node:sun lounge, Next:[12820]sun-stools, Previous:[12821]Sun,
   Up:[12822]= S =

   sun lounge n.

   [UK] The room where all the Sun workstations live. The humor in this
   term comes from the fact that it's also in mainstream use to describe
   a solarium, and all those Sun workstations clustered together give off
   an amazing amount of heat.
     _________________________________________________________________

   Node:sun-stools, Next:[12823]sunspots, Previous:[12824]sun lounge,
   Up:[12825]= S =

   sun-stools n.

   Unflattering hackerism for SunTools, a pre-X windowing environment
   notorious in its day for size, slowness, and misfeatures. [12826]X,
   however, is larger and (some claim) slower; see [12827]second-system
   effect.
     _________________________________________________________________

   Node:sunspots, Next:[12828]super source quench,
   Previous:[12829]sun-stools, Up:[12830]= S =

   sunspots n.

   1. Notional cause of an odd error. "Why did the program suddenly turn
   the screen blue?" "Sunspots, I guess." 2. Also the cause of [12831]bit
   rot -- from the myth that sunspots will increase [12832]cosmic rays,
   which can flip single bits in memory. See also [12833]phase of the
   moon.
     _________________________________________________________________

   Node:super source quench, Next:[12834]superloser,
   Previous:[12835]sunspots, Up:[12836]= S =

   super source quench n.

   A special packet designed to shut up an Internet host. The Internet
   Protocol (IP) has a control message called Source Quench that asks a
   host to transmit more slowly on a particular connection to avoid
   congestion. It also has a Redirect control message intended to
   instruct a host to send certain packets to a different local router. A
   "super source quench" is actually a redirect control packet, forged to
   look like it came from a local router, that instructs a host to send
   all packets to its own local loopback address. This will effectively
   tie many Internet hosts up in knots. Compare [12837]Godzillagram,
   [12838]breath-of-life packet.
     _________________________________________________________________

   Node:superloser, Next:[12839]superprogrammer, Previous:[12840]super
   source quench, Up:[12841]= S =

   superloser n.

   [Unix] A superuser with no clue - someone with root privileges on a
   Unix system and no idea what he/she is doing, the moral equivalent of
   a three-year-old with an unsafetied Uzi. Anyone who thinks this is an
   uncommon situation reckons without the territorial urges of
   [12842]management.
     _________________________________________________________________

   Node:superprogrammer, Next:[12843]superuser,
   Previous:[12844]superloser, Up:[12845]= S =

   superprogrammer n.

   A prolific programmer; one who can code exceedingly well and quickly.
   Not all hackers are superprogrammers, but many are. (Productivity can
   vary from one programmer to another by three orders of magnitude. For
   example, one programmer might be able to write an average of 3 lines
   of working code in one day, while another, with the proper tools,
   might be able to write 3,000. This range is astonishing; it is matched
   in very few other areas of human endeavor.) The term `superprogrammer'
   is more commonly used within such places as IBM than in the hacker
   community. It tends to stress naive measures of productivity and to
   underweight creativity, ingenuity, and getting the job done -- and to
   sidestep the question of whether the 3,000 lines of code do more or
   less useful work than three lines that do the [12846]Right Thing.
   Hackers tend to prefer the terms [12847]hacker and [12848]wizard.
     _________________________________________________________________

   Node:superuser, Next:[12849]support, Previous:[12850]superprogrammer,
   Up:[12851]= S =

   superuser n.

   [Unix] Syn. [12852]root, [12853]avatar. This usage has spread to
   non-Unix environments; the superuser is any account with all
   [12854]wheel bits on. A more specific term than [12855]wheel.
     _________________________________________________________________

   Node:support, Next:[12856]surf, Previous:[12857]superuser, Up:[12858]=
   S =

   support n.

   After-sale handholding; something many software vendors promise but
   few deliver. To hackers, most support people are useless -- because by
   the time a hacker calls support he or she will usually know the
   software and the relevant manuals better than the support people
   (sadly, this is not a joke or exaggeration). A hacker's idea of
   `support' is a tête-à-tête with the software's designer.
     _________________________________________________________________

   Node:surf, Next:[12859]Suzie COBOL, Previous:[12860]support,
   Up:[12861]= S =

   surf v.

   [from the `surf' idiom for rapidly flipping TV channels] To traverse
   the Internet in search of interesting stuff, used esp. if one is doing
   so with a World Wide Web browser. It is also common to speak of
   `surfing in' to a particular resource.

   Hackers adopted this term early, but many have stopped using it since
   it went completely mainstream around 1995. The passive, couch-potato
   connotations that go with TV channel surfing were never pleasant, and
   hearing non-hackers wax enthusiastic about "surfing the net" tends to
   make hackers feel a bit as though their home is being overrun by
   ignorami.
     _________________________________________________________________

   Node:Suzie COBOL, Next:[12862]swab, Previous:[12863]surf, Up:[12864]=
   S =

   Suzie COBOL /soo'zee koh'bol/

   1. [IBM: prob. from Frank Zappa's `Suzy Creamcheese'] n. A coder
   straight out of training school who knows everything except the value
   of comments in plain English. Also (fashionable among personkind
   wishing to avoid accusations of sexism) `Sammy Cobol' or (in some
   non-IBM circles) `Cobol Charlie'. 2. [proposed] Meta-name for any
   [12865]code grinder, analogous to [12866]J. Random Hacker.
     _________________________________________________________________

   Node:swab, Next:[12867]swap, Previous:[12868]Suzie COBOL, Up:[12869]=
   S =

   swab /swob/

   [From the mnemonic for the PDP-11 `SWAp Byte' instruction, as
   immortalized in the dd(1) option conv=swab (see [12870]dd)] 1. vt. To
   solve the [12871]NUXI problem by swapping bytes in a file. 2. n. The
   program in V7 Unix used to perform this action, or anything
   functionally equivalent to it. See also [12872]big-endian,
   [12873]little-endian, [12874]middle-endian, [12875]bytesexual.
     _________________________________________________________________

   Node:swap, Next:[12876]swap space, Previous:[12877]swab, Up:[12878]= S
   =

   swap vt.

   1. [techspeak] To move information from a fast-access memory to a
   slow-access memory (`swap out'), or vice versa (`swap in'). Often
   refers specifically to the use of disks as `virtual memory'. As pieces
   of data or program are needed, they are swapped into [12879]core for
   processing; when they are no longer needed they may be swapped out
   again. 2. The jargon use of these terms analogizes people's short-term
   memories with core. Cramming for an exam might be spoken of as
   swapping in. If you temporarily forget someone's name, but then
   remember it, your excuse is that it was swapped out. To `keep
   something swapped in' means to keep it fresh in your memory: "I reread
   the TECO manual every few months to keep it swapped in." If someone
   interrupts you just as you got a good idea, you might say "Wait a
   moment while I swap this out", implying that a piece of paper is your
   extra-somatic memory and that if you don't swap the idea out by
   writing it down it will get overwritten and lost as you talk. Compare
   [12880]page in, [12881]page out.
     _________________________________________________________________

   Node:swap space, Next:[12882]swapped in, Previous:[12883]swap,
   Up:[12884]= S =

   swap space n.

   Storage space, especially temporary storage space used during a move
   or reconfiguration. "I'm just using that corner of the machine room
   for swap space."
     _________________________________________________________________

   Node:swapped in, Next:[12885]swapped out, Previous:[12886]swap space,
   Up:[12887]= S =

   swapped in n.

   See [12888]swap. See also [12889]page in.
     _________________________________________________________________

   Node:swapped out, Next:[12890]swizzle, Previous:[12891]swapped in,
   Up:[12892]= S =

   swapped out n.

   See [12893]swap. See also [12894]page out.
     _________________________________________________________________

   Node:swizzle, Next:[12895]sync, Previous:[12896]swapped out,
   Up:[12897]= S =

   swizzle v.

   To convert external names, array indices, or references within a data
   structure into address pointers when the data structure is brought
   into main memory from external storage (also called `pointer
   swizzling'); this may be done for speed in chasing references or to
   simplify code (e.g., by turning lots of name lookups into pointer
   dereferences). The converse operation is sometimes termed
   `unswizzling'. See also [12898]snap.
     _________________________________________________________________

   Node:sync, Next:[12899]syntactic salt, Previous:[12900]swizzle,
   Up:[12901]= S =

   sync /sink/ n., vi.

   (var. `synch') 1. To synchronize, to bring into synchronization. 2.
   [techspeak] To force all pending I/O to the disk; see [12902]flush,
   sense 2. 3. More generally, to force a number of competing processes
   or agents to a state that would be `safe' if the system were to crash;
   thus, to checkpoint (in the database-theory sense).
     _________________________________________________________________

   Node:syntactic salt, Next:[12903]syntactic sugar,
   Previous:[12904]sync, Up:[12905]= S =

   syntactic salt n.

   The opposite of [12906]syntactic sugar, a feature designed to make it
   harder to write bad code. Specifically, syntactic salt is a hoop the
   programmer must jump through just to prove that he knows what's going
   on, rather than to express a program action. Some programmers consider
   required type declarations to be syntactic salt. A requirement to
   write end if, end while, end do, etc. to terminate the last block
   controlled by a control construct (as opposed to just end) would
   definitely be syntactic salt. Syntactic salt is like the real thing in
   that it tends to raise hackers' blood pressures in an unhealthy way.
   Compare [12907]candygrammar.
     _________________________________________________________________

   Node:syntactic sugar, Next:[12908]sys-frog, Previous:[12909]syntactic
   salt, Up:[12910]= S =

   syntactic sugar n.

   [coined by Peter Landin] Features added to a language or other
   formalism to make it `sweeter' for humans, features which do not
   affect the expressiveness of the formalism (compare [12911]chrome).
   Used esp. when there is an obvious and trivial translation of the
   `sugar' feature into other constructs already present in the notation.
   C's a[i] notation is syntactic sugar for *(a + i). "Syntactic sugar
   causes cancer of the semicolon." -- Alan Perlis.

   The variants `syntactic saccharin' and `syntactic syrup' are also
   recorded. These denote something even more gratuitous, in that
   syntactic sugar serves a purpose (making something more acceptable to
   humans), but syntactic saccharin or syrup serve no purpose at all.
   Compare [12912]candygrammar, [12913]syntactic salt.
     _________________________________________________________________

   Node:sys-frog, Next:[12914]sysadmin, Previous:[12915]syntactic sugar,
   Up:[12916]= S =

   sys-frog /sis'frog/ n.

   [the PLATO system] Playful variant of `sysprog', which is in turn
   short for `systems programmer'.
     _________________________________________________________________

   Node:sysadmin, Next:[12917]sysape, Previous:[12918]sys-frog,
   Up:[12919]= S =

   sysadmin /sis'ad-min/ n.

   Common contraction of `system admin'; see [12920]admin.
     _________________________________________________________________

   Node:sysape, Next:[12921]sysop, Previous:[12922]sysadmin, Up:[12923]=
   S =

   sysape /sys'ayp/ n.

   A rather derogatory term for a computer operator; a play on
   [12924]sysop common at sites that use the banana hierarchy of problem
   complexity (see [12925]one-banana problem).
     _________________________________________________________________

   Node:sysop, Next:[12926]system, Previous:[12927]sysape, Up:[12928]= S
   =

   sysop /sis'op/ n.

   [esp. in the BBS world] The operator (and usually the owner) of a
   bulletin-board system. A common neophyte mistake on [12929]FidoNet is
   to address a message to `sysop' in an international [12930]echo, thus
   sending it to hundreds of sysops around the world.
     _________________________________________________________________

   Node:system, Next:[12931]systems jock, Previous:[12932]sysop,
   Up:[12933]= S =

   system n.

   1. The supervisor program or OS on a computer. 2. The entire computer
   system, including input/output devices, the supervisor program or OS,
   and possibly other software. 3. Any large-scale program. 4. Any method
   or algorithm. 5. `System hacker': one who hacks the system (in senses
   1 and 2 only; for sense 3 one mentions the particular program: e.g.,
   `LISP hacker')
     _________________________________________________________________

   Node:systems jock, Next:[12934]system mangler, Previous:[12935]system,
   Up:[12936]= S =

   systems jock n.

   See [12937]jock, sense 2.
     _________________________________________________________________

   Node:system mangler, Next:[12938]SysVile, Previous:[12939]systems
   jock, Up:[12940]= S =

   system mangler n.

   Humorous synonym for `system manager', poss. from the fact that one
   major IBM OS had a [12941]root account called SYSMANGR. Refers
   specifically to a systems programmer in charge of administration,
   software maintenance, and updates at some site. Unlike [12942]admin,
   this term emphasizes the technical end of the skills involved.
     _________________________________________________________________

   Node:SysVile, Next:[12943]T, Previous:[12944]system mangler,
   Up:[12945]= S =

   SysVile /sis-vi:l'/ n.

   See [12946]Missed'em-five.
     _________________________________________________________________

   Node:= T =, Next:[12947]= U =, Previous:[12948]= S =, Up:[12949]The
   Jargon Lexicon

= T =

     * [12950]T:
     * [12951]tail recursion:
     * [12952]talk mode:
     * [12953]talker system:
     * [12954]tall card:
     * [12955]tanked:
     * [12956]TANSTAAFL:
     * [12957]tape monkey:
     * [12958]tar and feather:
     * [12959]tarball:
     * [12960]tardegy:
     * [12961]taste:
     * [12962]tayste:
     * [12963]TCB:
     * [12964]TCP/IP:
     * [12965]TechRef:
     * [12966]TECO:
     * [12967]tee:
     * [12968]teergrube:
     * [12969]teledildonics:
     * [12970]Telerat:
     * [12971]TELNET:
     * [12972]ten-finger interface:
     * [12973]tense:
     * [12974]tentacle:
     * [12975]tenured graduate student:
     * [12976]tera-:
     * [12977]teraflop club:
     * [12978]terminak:
     * [12979]terminal brain death:
     * [12980]terminal illness:
     * [12981]terminal junkie:
     * [12982]terpri:
     * [12983]test:
     * [12984]TeX:
     * [12985]text:
     * [12986]thanks in advance:
     * [12987]That's not a bug that's a feature!:
     * [12988]the literature:
     * [12989]the network:
     * [12990]the X that can be Y is not the true X:
     * [12991]theology:
     * [12992]theory:
     * [12993]thinko:
     * [12994]This can't happen:
     * [12995]This time for sure!:
     * [12996]thrash:
     * [12997]thread:
     * [12998]three-finger salute:
     * [12999]throwaway account:
     * [13000]thud:
     * [13001]thumb:
     * [13002]thundering herd problem:
     * [13003]thunk:
     * [13004]tick:
     * [13005]tick-list features:
     * [13006]tickle a bug:
     * [13007]tiger team:
     * [13008]time bomb:
     * [13009]time sink:
     * [13010]time T:
     * [13011]times-or-divided-by:
     * [13012]TINC:
     * [13013]Tinkerbell program:
     * [13014]TINLC:
     * [13015]tip of the ice-cube:
     * [13016]tired iron:
     * [13017]tits on a keyboard:
     * [13018]TLA:
     * [13019](TM):
     * [13020]TMRC:
     * [13021]TMRCie:
     * [13022]TMTOWTDI:
     * [13023]to a first approximation:
     * [13024]to a zeroth approximation:
     * [13025]toad:
     * [13026]toast:
     * [13027]toaster:
     * [13028]toeprint:
     * [13029]toggle:
     * [13030]tool:
     * [13031]toolsmith:
     * [13032]toor:
     * [13033]topic drift:
     * [13034]topic group:
     * [13035]TOPS-10:
     * [13036]TOPS-20:
     * [13037]tourist:
     * [13038]tourist information:
     * [13039]touristic:
     * [13040]toy:
     * [13041]toy language:
     * [13042]toy problem:
     * [13043]toy program:
     * [13044]trampoline:
     * [13045]trap:
     * [13046]trap door:
     * [13047]trash:
     * [13048]trawl:
     * [13049]tree-killer:
     * [13050]treeware:
     * [13051]trit:
     * [13052]trivial:
     * [13053]troff:
     * [13054]troglodyte:
     * [13055]troglodyte mode:
     * [13056]Trojan horse:
     * [13057]troll:
     * [13058]Troll-O-Meter:
     * [13059]tron:
     * [13060]true-hacker:
     * [13061]tty:
     * [13062]tube:
     * [13063]tube time:
     * [13064]tunafish:
     * [13065]tune:
     * [13066]turbo nerd:
     * [13067]Turing tar-pit:
     * [13068]turist:
     * [13069]Tux:
     * [13070]tweak:
     * [13071]tweeter:
     * [13072]TWENEX:
     * [13073]twiddle:
     * [13074]twiddle:
     * [13075]twilight zone:
     * [13076]twink:
     * [13077]twirling baton:
     * [13078]two pi:
     * [13079]two-to-the-N:
     * [13080]twonkie:
     _________________________________________________________________

   Node:T, Next:[13081]tail recursion, Previous:[13082]SysVile,
   Up:[13083]= T =

   T /T/

   1. [from LISP terminology for `true'] Yes. Used in reply to a question
   (particularly one asked using [13084]The -P convention). In LISP, the
   constant T means `true', among other things. Some Lisp hackers use `T'
   and `NIL' instead of `Yes' and `No' almost reflexively. This sometimes
   causes misunderstandings. When a waiter or flight attendant asks
   whether a hacker wants coffee, he may absently respond `T', meaning
   that he wants coffee; but of course he will be brought a cup of tea
   instead. Fortunately, most hackers (particularly those who frequent
   Chinese restaurants) like tea at least as well as coffee -- so it is
   not that big a problem. 2. See [13085]time T (also [13086]since time T
   equals minus infinity). 3. [techspeak] In transaction-processing
   circles, an abbreviation for the noun `transaction'. 4. [Purdue]
   Alternate spelling of [13087]tee. 5. A dialect of [13088]LISP
   developed at Yale. (There is an intended allusion to NIL, "New
   Implementation of Lisp", another dialect of Lisp developed for the
   [13089]VAX)
     _________________________________________________________________

   Node:tail recursion, Next:[13090]talk mode, Previous:[13091]T,
   Up:[13092]= T =

   tail recursion n.

   If you aren't sick of it already, see [13093]tail recursion.
     _________________________________________________________________

   Node:talk mode, Next:[13094]talker system, Previous:[13095]tail
   recursion, Up:[13096]= T =

   talk mode n.

   A feature supported by Unix, ITS, and some other OSes that allows two
   or more logged-in users to set up a real-time on-line conversation. It
   combines the immediacy of talking with all the precision (and
   verbosity) that written language entails. It is difficult to
   communicate inflection, though conventions have arisen for some of
   these (see the section on writing style in the Prependices for
   details).

   Talk mode has a special set of jargon words, used to save typing,
   which are not used orally. Some of these are identical to (and
   probably derived from) Morse-code jargon used by ham-radio amateurs
   since the 1920s.

   AFAIAC
          as far as I am concerned

   AFAIK
          as far as I know

   BCNU
          be seeing you

   BTW
          by the way

   BYE?
          are you ready to unlink? (this is the standard way to end a
          talk-mode conversation; the other person types BYE to confirm,
          or else continues the conversation)

   CUL
          see you later

   ENQ?
          are you busy? (expects ACK or NAK in return)

   FOO?
          are you there? (often used on unexpected links, meaning also
          "Sorry if I butted in ..." (linker) or "What's up?" (linkee))

   FWIW
          for what it's worth

   FYI
          for your information

   FYA
          for your amusement

   GA
          go ahead (used when two people have tried to type
          simultaneously; this cedes the right to type to the other)

   GRMBL
          grumble (expresses disquiet or disagreement)

   HELLOP
          hello? (an instance of the `-P' convention)

   IIRC
          if I recall correctly

   JAM
          just a minute (equivalent to SEC....)

   MIN
          same as JAM

   NIL
          no (see [13097]NIL)

   NP
          no problem

   O
          over to you

   OO
          over and out

   /
          another form of "over to you" (from x/y as "x over y")

   \
          lambda (used in discussing LISPy things)

   OBTW
          oh, by the way

   OTOH
          on the other hand

   R U THERE?
          are you there?

   SEC
          wait a second (sometimes written SEC...)

   SYN
          Are you busy? (expects ACK, SYN|ACK, or RST in return; this is
          modeled on the TCP/IP handshake sequence)

   T
          yes (see the main entry for [13098]T)

   TNX
          thanks

   TNX 1.0E6
          thanks a million (humorous)

   TNXE6
          another form of "thanks a million"

   WRT
          with regard to, or with respect to.

   WTF
          the universal interrogative particle; WTF knows what it means?

   WTH
          what the hell?

   <double newline>
          When the typing party has finished, he/she types two newlines
          to signal that he/she is done; this leaves a blank line between
          `speeches' in the conversation, making it easier to reread the
          preceding text.

   <name>:
          When three or more terminals are linked, it is conventional for
          each typist to [13099]prepend his/her login name or handle and
          a colon (or a hyphen) to each line to indicate who is typing
          (some conferencing facilities do this automatically). The login
          name is often shortened to a unique prefix (possibly a single
          letter) during a very long conversation.

   /\/\/\
          A giggle or chuckle. On a MUD, this usually means `earthquake
          fault'.

   Most of the above sub-jargon is used at both Stanford and MIT. Several
   of these expressions are also common in [13100]email, esp. FYI, FYA,
   BTW, BCNU, WTF, and CUL. A few other abbreviations have been reported
   from commercial networks, such as GEnie and CompuServe, where on-line
   `live' chat including more than two people is common and usually
   involves a more `social' context, notably the following:

   <g>
          grin

   <gd&r>
          grinning, ducking, and running

   BBL
          be back later

   BRB
          be right back

   HHOJ
          ha ha only joking

   HHOK
          ha ha only kidding

   HHOS
          [13101]ha ha only serious

   IMHO
          in my humble opinion (see [13102]IMHO)

   LOL
          laughing out loud

   NHOH
          Never Heard of Him/Her (often used in [13103]initgame)

   ROTF
          rolling on the floor

   ROTFL
          rolling on the floor laughing

   AFK
          away from keyboard

   b4
          before

   CU l8tr
          see you later

   MORF
          male or female?

   TTFN
          ta-ta for now

   TTYL
          talk to you later

   OIC
          oh, I see

   rehi
          hello again

   Most of these are not used at universities or in the Unix world,
   though ROTF and TTFN have gained some currency there and IMHO is
   common; conversely, most of the people who know these are unfamiliar
   with FOO?, BCNU, HELLOP, [13104]NIL, and [13105]T.

   The [13106]MUD community uses a mixture of Usenet/Internet emoticons,
   a few of the more natural of the old-style talk-mode abbrevs, and some
   of the `social' list above; specifically, MUD respondents report use
   of BBL, BRB, LOL, b4, BTW, WTF, TTFN, and WTH. The use of `rehi' is
   also common; in fact, mudders are fond of re- compounds and will
   frequently `rehug' or `rebonk' (see [13107]bonk/oif) people. The word
   `re' by itself is taken as `regreet'. In general, though, MUDders
   express a preference for typing things out in full rather than using
   abbreviations; this may be due to the relative youth of the MUD
   cultures, which tend to include many touch typists and to assume
   high-speed links. The following uses specific to MUDs are reported:

   CU l8er
          see you later (mutant of CU l8tr)

   FOAD
          fuck off and die (use of this is generally OTT)

   OTT
          over the top (excessive, uncalled for)

   ppl
          abbrev for "people"

   THX
          thanks (mutant of TNX; clearly this comes in batches of 1138
          (the Lucasian K)).

   UOK?
          are you OK?

   Some [13108]B1FFisms (notably the variant spelling d00d) appear to be
   passing into wider use among some subgroups of MUDders.

   One final note on talk mode style: neophytes, when in talk mode, often
   seem to think they must produce letter-perfect prose because they are
   typing rather than speaking. This is not the best approach. It can be
   very frustrating to wait while your partner pauses to think of a word,
   or repeatedly makes the same spelling error and backs up to fix it. It
   is usually best just to leave typographical errors behind and plunge
   forward, unless severe confusion may result; in that case it is often
   fastest just to type "xxx" and start over from before the mistake.

   See also [13109]hakspek, [13110]emoticon.
     _________________________________________________________________

   Node:talker system, Next:[13111]tall card, Previous:[13112]talk mode,
   Up:[13113]= T =

   talker system n.

   British hackerism for software that enables real-time chat or
   [13114]talk mode.
     _________________________________________________________________

   Node:tall card, Next:[13115]tanked, Previous:[13116]talker system,
   Up:[13117]= T =

   tall card n.

   A PC/AT-size expansion card (these can be larger than IBM PC or XT
   cards because the AT case is bigger). See also [13118]short card. When
   IBM introduced the PS/2 model 30 (its last gasp at supporting the ISA)
   they made the case lower and many industry-standard tall cards
   wouldn't fit; this was felt to be a reincarnation of the
   [13119]connector conspiracy, done with less style.
     _________________________________________________________________

   Node:tanked, Next:[13120]TANSTAAFL, Previous:[13121]tall card,
   Up:[13122]= T =

   tanked adj.

   Same as [13123]down, used primarily by Unix hackers. See also
   [13124]hosed. Popularized as a synonym for `drunk' by Steve Dallas in
   the late lamented "Bloom County" comic strip.
     _________________________________________________________________

   Node:TANSTAAFL, Next:[13125]tape monkey, Previous:[13126]tanked,
   Up:[13127]= T =

   TANSTAAFL /tan'stah-fl/

   [acronym, from Robert Heinlein's classic "The Moon is a Harsh
   Mistress".] "There Ain't No Such Thing As A Free Lunch", often invoked
   when someone is balking at the prospect of using an unpleasantly
   [13128]heavyweight technique, or at the poor quality of some piece of
   software, or at the [13129]signal-to-noise ratio of unmoderated Usenet
   newsgroups. "What? Don't tell me I have to implement a database back
   end to get my address book program to work!" "Well, TANSTAAFL you
   know." This phrase owes some of its popularity to the high
   concentration of science-fiction fans and political libertarians in
   hackerdom (see [13130]Appendix B for discussion).
     _________________________________________________________________

   Node:tape monkey, Next:[13131]tar and feather,
   Previous:[13132]TANSTAAFL, Up:[13133]= T =

   tape monkey n.

   A junior system administrator, one who might plausibly be assigned to
   do physical swapping of tapes and subsequent storage. When a backup
   needs to be restored, one might holler "Tape monkey!" (Compare
   [13134]one-banana problem) Also used to dismiss jobs not worthy of a
   highly trained sysadmin's ineffable talents: "Cable up her PC? You
   must be joking - I'm no tape monkey."
     _________________________________________________________________

   Node:tar and feather, Next:[13135]tarball, Previous:[13136]tape
   monkey, Up:[13137]= T =

   tar and feather vi.

   [from Unix tar(1)] To create a transportable archive from a group of
   files by first sticking them together with tar(1) (the Tape ARchiver)
   and then compressing the result (see [13138]compress). The latter
   action is dubbed `feathering' partly for euphony and (if only for
   contrived effect) by analogy to what you do with an airplane propeller
   to decrease wind resistance, or with an oar to reduce water
   resistance; smaller files, after all, slip through comm links more
   easily. Compare the more common [13139]tarball.
     _________________________________________________________________

   Node:tarball, Next:[13140]tardegy, Previous:[13141]tar and feather,
   Up:[13142]= T =

   tarball n.

   [very common; prob. based on the "tar baby" in the Uncle Remus folk
   tales] An archive, created with the Unix tar(1) utility, containing
   myriad related files. "Here, I'll just ftp you a tarball of the whole
   project." Tarballs have been the standard way to ship around
   source-code distributions since the mid-1980s; in retrospect it seems
   odd that this term did not enter common usage until the late 1990s.
     _________________________________________________________________

   Node:tardegy, Next:[13143]taste, Previous:[13144]tarball, Up:[13145]=
   T =

   tardegy

   n. [deliberate mangling of `tragedy'] An incident in which someone who
   clearly deserves to be selected out of the gene pool on grounds of
   extreme stupidity meets with a messy end. Coined on the Darwin list,
   which is dedicated to chronicling such incidents; but almost all
   hackers would instantly recognize the intention of the term and laugh.
     _________________________________________________________________

   Node:taste, Next:[13146]tayste, Previous:[13147]tardegy, Up:[13148]= T
   =

   taste [primarily MIT] n.

   1. The quality in a program that tends to be inversely proportional to
   the number of features, hacks, and kluges programmed into it. Also
   `tasty', `tasteful', `tastefulness'. "This feature comes in N tasty
   flavors." Although `tasty' and `flavorful' are essentially synonyms,
   `taste' and [13149]flavor are not. Taste refers to sound judgment on
   the part of the creator; a program or feature can exhibit taste but
   cannot have taste. On the other hand, a feature can have
   [13150]flavor. Also, [13151]flavor has the additional meaning of
   `kind' or `variety' not shared by `taste'. The marked sense of
   [13152]flavor is more popular than `taste', though both are widely
   used. See also [13153]elegant. 2. Alt. sp. of [13154]tayste.
     _________________________________________________________________

   Node:tayste, Next:[13155]TCB, Previous:[13156]taste, Up:[13157]= T =

   tayste /tayst/

   n. Two bits; also as [13158]taste. Syn. [13159]crumb, [13160]quarter.
   See [13161]nybble.
     _________________________________________________________________

   Node:TCB, Next:[13162]TCP/IP, Previous:[13163]tayste, Up:[13164]= T =

   TCB /T-C-B/ n.

   [IBM] 1. Trouble Came Back. An intermittent or difficult-to-reproduce
   problem that has failed to respond to neglect or [13165]shotgun
   debugging. Compare [13166]heisenbug. Not to be confused with: 2.
   Trusted Computing Base, an `official' jargon term from the
   [13167]Orange Book.
     _________________________________________________________________

   Node:TCP/IP, Next:[13168]TechRef, Previous:[13169]TCB, Up:[13170]= T =

   TCP/IP /T'C-P I'P/ n.

   1. [Transmission Control Protocol/Internet Protocol] The
   wide-area-networking protocol that makes the Internet work, and the
   only one most hackers can speak the name of without laughing or
   retching. Unlike such allegedly `standard' competitors such as X.25,
   DECnet, and the ISO 7-layer stack, TCP/IP evolved primarily by
   actually being used, rather than being handed down from on high by a
   vendor or a heavily-politicized standards committee. Consequently, it
   (a) works, (b) actually promotes cheap cross-platform connectivity,
   and (c) annoys the hell out of corporate and governmental
   empire-builders everywhere. Hackers value all three of these
   properties. See [13171]creationism. 2. [Amateur Packet Radio] Formerly
   expanded as "The Crap Phil Is Pushing". The reference is to Phil Karn,
   KA9Q, and the context was an ongoing technical/political war between
   the majority of sites still running AX.25 and the TCP/IP relays.
   TCP/IP won.
     _________________________________________________________________

   Node:TechRef, Next:[13172]TECO, Previous:[13173]TCP/IP, Up:[13174]= T
   =

   TechRef /tek'ref/ n.

   [MS-DOS] The original "IBM PC Technical Reference Manual", including
   the BIOS listing and complete schematics for the PC. The only PC
   documentation in the original-issue package that was considered
   serious by real hackers.
     _________________________________________________________________

   Node:TECO, Next:[13175]tee, Previous:[13176]TechRef, Up:[13177]= T =

   TECO /tee'koh/ n.,v. obs.

   1. [originally an acronym for `[paper] Tape Editor and COrrector';
   later, `Text Editor and COrrector'] n. A text editor developed at MIT
   and modified by just about everybody. With all the dialects included,
   TECO may have been the most prolific editor in use before
   [13178]EMACS, to which it was directly ancestral. Noted for its
   powerful programming-language-like features and its unspeakably hairy
   syntax. It is literally the case that every string of characters is a
   valid TECO program (though probably not a useful one); one common game
   used to be mentally working out what the TECO commands corresponding
   to human names did. 2. vt. Originally, to edit using the TECO editor
   in one of its infinite variations (see below). 3. vt.,obs. To edit
   even when TECO is not the editor being used! This usage is rare and
   now primarily historical.

   As an example of TECO's obscurity, here is a TECO program that takes a
   list of names such as:
Loser, J. Random
Quux, The Great
Dick, Moby

   sorts them alphabetically according to surname, and then puts the
   surname last, removing the comma, to produce the following:
Moby Dick
J. Random Loser
The Great Quux

   The program is
[1 J^P$L$$
J <.-Z; .,(S,$ -D .)FX1 @F^B $K :L I $ G1 L>$$

   (where ^B means `Control-B' (ASCII 0000010) and $ is actually an
   [13179]alt or escape (ASCII 0011011) character).

   In fact, this very program was used to produce the second, sorted list
   from the first list. The first hack at it had a [13180]bug: GLS (the
   author) had accidentally omitted the @ in front of F^B, which as
   anyone can see is clearly the [13181]Wrong Thing. It worked fine the
   second time. There is no space to describe all the features of TECO,
   but it may be of interest that ^P means `sort' and J<.-Z; ... L> is an
   idiomatic series of commands for `do once for every line'.

   In mid-1991, TECO is pretty much one with the dust of history, having
   been replaced in the affections of hackerdom by [13182]EMACS.
   Descendants of an early (and somewhat lobotomized) version adopted by
   DEC can still be found lurking on VMS and a couple of crufty PDP-11
   operating systems, however, and ports of the more advanced MIT
   versions remain the focus of some antiquarian interest. See also
   [13183]retrocomputing, [13184]write-only language.
     _________________________________________________________________

   Node:tee, Next:[13185]teergrube, Previous:[13186]TECO, Up:[13187]= T =

   tee n.,vt.

   [Purdue] A carbon copy of an electronic transmission. "Oh, you're
   sending him the [13188]bits to that? Slap on a tee for me." From the
   Unix command tee(1), itself named after a pipe fitting (see
   [13189]plumbing). Can also mean `save one for me', as in "Tee a slice
   for me!" Also spelled `T'.
     _________________________________________________________________

   Node:teergrube, Next:[13190]teledildonics, Previous:[13191]tee,
   Up:[13192]= T =

   teergrube /teer'groob/ n.

   [German for `tar pit'] A trap set to punish spammers who use an
   [13193]address harvester; a mail server deliberately set up to be
   really, really slow. To activate it, scatter addresses that look like
   users on the teergrube's host in places where the address harvester
   will be trolling (one popular way is to embed the fake address in a
   Usenet sig block next to a human-readable warning not to send mail to
   it). The address harvester will dutifully collect the address. When
   the spammer tries to mailbomb it, his mailer will get stuck.
     _________________________________________________________________

   Node:teledildonics, Next:[13194]Telerat, Previous:[13195]teergrube,
   Up:[13196]= T =

   teledildonics /tel`*-dil-do'-niks/ n.

   Sex in a computer simulated virtual reality, esp. computer-mediated
   sexual interaction between the [13197]VR presences of two humans. This
   practice is not yet possible except in the rather limited form of
   erotic conversation on [13198]MUDs and the like. The term, however, is
   widely recognized in the VR community as a [13199]ha ha only serious
   projection of things to come. "When we can sustain a multi-sensory
   surround good enough for teledildonics, then we'll know we're getting
   somewhere." See also [13200]hot chat.
     _________________________________________________________________

   Node:Telerat, Next:[13201]TELNET, Previous:[13202]teledildonics,
   Up:[13203]= T =

   Telerat /tel'*-rat/ n. obs.

   Unflattering hackerism for `Teleray', a now-extinct line of extremely
   losing terminals. Compare [13204]AIDX, [13205]Macintrash
   [13206]Nominal Semidestructor, [13207]ScumOS, [13208]sun-stools,
   [13209]HP-SUX, [13210]Slowlaris.
     _________________________________________________________________

   Node:TELNET, Next:[13211]ten-finger interface,
   Previous:[13212]Telerat, Up:[13213]= T =

   TELNET /tel'net/ vt.

   (also commonly lowercased as `telnet') To communicate with another
   Internet host using the TELNET ([13214]RFC 854) protocol (usually
   using a program of the same name). TOPS-10 people used the word
   IMPCOM, since that was the program name for them. Sometimes
   abbreviated to TN /T-N/. "I usually TN over to SAIL just to read the
   AP News."
     _________________________________________________________________

   Node:ten-finger interface, Next:[13215]tense, Previous:[13216]TELNET,
   Up:[13217]= T =

   ten-finger interface n.

   The interface between two networks that cannot be directly connected
   for security reasons; refers to the practice of placing two terminals
   side by side and having an operator read from one and type into the
   other.
     _________________________________________________________________

   Node:tense, Next:[13218]tentacle, Previous:[13219]ten-finger
   interface, Up:[13220]= T =

   tense adj.

   Of programs, very clever and efficient. A tense piece of code often
   got that way because it was highly [13221]bummed, but sometimes it was
   just based on a great idea. A comment in a clever routine by Mike
   Kazar, once a grad-student hacker at CMU: "This routine is so tense it
   will bring tears to your eyes." A tense programmer is one who produces
   tense code.
     _________________________________________________________________

   Node:tentacle, Next:[13222]tenured graduate student,
   Previous:[13223]tense, Up:[13224]= T =

   tentacle n.

   A covert [13225]pseudo, sense 1. An artificial identity created in
   cyberspace for nefarious and deceptive purposes. The implication is
   that a single person may have multiple tentacles. This term was
   originally floated in some paranoid ravings on the cypherpunks list
   (see [13226]cypherpunk), and adopted in a spirit of irony by other,
   saner members. It has since shown up, used seriously, in the
   documentation for some remailer software, and is now (1994) widely
   recognized on the net.
     _________________________________________________________________

   Node:tenured graduate student, Next:[13227]tera-,
   Previous:[13228]tentacle, Up:[13229]= T =

   tenured graduate student n.

   One who has been in graduate school for 10 years (the usual maximum is
   5 or 6): a `ten-yeared' student (get it?). Actually, this term may be
   used of any grad student beginning in his seventh year. Students don't
   really get tenure, of course, the way professors do, but a tenth-year
   graduate student has probably been around the university longer than
   any untenured professor.
     _________________________________________________________________

   Node:tera-, Next:[13230]teraflop club, Previous:[13231]tenured
   graduate student, Up:[13232]= T =

   tera- /te'r*/ pref.

   [SI] See [13233]quantifiers.
     _________________________________________________________________

   Node:teraflop club, Next:[13234]terminak, Previous:[13235]tera-,
   Up:[13236]= T =

   teraflop club /te'r*-flop kluhb/ n.

   [FLOP = Floating Point Operation] A mythical association of people who
   consume outrageous amounts of computer time in order to produce a few
   simple pictures of glass balls with intricate ray-tracing techniques.
   Caltech professor James Kajiya is said to have been the founder.
   Compare [13237]Knights of the Lambda Calculus.
     _________________________________________________________________

   Node:terminak, Next:[13238]terminal brain death,
   Previous:[13239]teraflop club, Up:[13240]= T =

   terminak /ter'mi-nak`/ n.

   [Caltech, ca. 1979] Any malfunctioning computer terminal. A common
   failure mode of Lear-Siegler ADM 3a terminals caused the `L' key to
   produce the `K' code instead; complaints about this tended to look
   like "Terminak #3 has a bad keyboard. Pkease fix." Compare
   [13241]dread high-bit disease, [13242]frogging; see also [13243]AIDX,
   [13244]Nominal Semidestructor, [13245]ScumOS, [13246]sun-stools,
   [13247]Telerat, [13248]HP-SUX, [13249]Slowlaris.
     _________________________________________________________________

   Node:terminal brain death, Next:[13250]terminal illness,
   Previous:[13251]terminak, Up:[13252]= T =

   terminal brain death n.

   The extreme form of [13253]terminal illness (sense 1). What someone
   who has obviously been hacking continuously for far too long is said
   to be suffering from.
     _________________________________________________________________

   Node:terminal illness, Next:[13254]terminal junkie,
   Previous:[13255]terminal brain death, Up:[13256]= T =

   terminal illness n.

   1. Syn. [13257]raster burn. 2. The `burn-in' condition your CRT tends
   to get if you don't have a screen saver.
     _________________________________________________________________

   Node:terminal junkie, Next:[13258]terpri, Previous:[13259]terminal
   illness, Up:[13260]= T =

   terminal junkie n.

   [UK] A [13261]wannabee or early [13262]larval stage hacker who spends
   most of his or her time wandering the directory tree and writing
   [13263]noddy programs just to get a fix of computer time. Variants
   include `terminal jockey', `console junkie', and [13264]console
   jockey. The term `console jockey' seems to imply more expertise than
   the other three (possibly because of the exalted status of the
   [13265]console relative to an ordinary terminal). See also
   [13266]twink, [13267]read-only user. Appropriately, this term was used
   in the works of William S. Burroughs to describe a heroin addict with
   an unlimited supply.
     _________________________________________________________________

   Node:terpri, Next:[13268]test, Previous:[13269]terminal junkie,
   Up:[13270]= T =

   terpri /ter'pree/ vi.

   [from LISP 1.5 (and later, MacLISP)] To output a [13271]newline. Now
   rare as jargon, though still used as techspeak in Common LISP. It is a
   contraction of `TERminate PRInt line', named for the fact that, on
   some early OSes and hardware, no characters would be printed until a
   complete line was formed, so this operation terminated the line and
   emitted the output.
     _________________________________________________________________

   Node:test, Next:[13272]TeX, Previous:[13273]terpri, Up:[13274]= T =

   test n.

   1. Real users bashing on a prototype long enough to get thoroughly
   acquainted with it, with careful monitoring and followup of the
   results. 2. Some bored random user trying a couple of the simpler
   features with a developer looking over his or her shoulder, ready to
   pounce on mistakes. Judging by the quality of most software, the
   second definition is far more prevalent. See also [13275]demo.
     _________________________________________________________________

   Node:TeX, Next:[13276]text, Previous:[13277]test, Up:[13278]= T =

   TeX /tekh/ n.

   An extremely powerful [13279]macro-based text formatter written by
   Donald E. [13280]Knuth, very popular in the computer-science community
   (it is good enough to have displaced Unix [13281]troff, the other
   favored formatter, even at many Unix installations). TeX fans insist
   on the correct (guttural) pronunciation, and the correct spelling (all
   caps, squished together, with the E depressed below the baseline; the
   mixed-case `TeX' is considered an acceptable kluge on ASCII-only
   devices). Fans like to proliferate names from the word `TeX' -- such
   as TeXnician (TeX user), TeXhacker (TeX programmer), TeXmaster
   (competent TeX programmer), TeXhax, and TeXnique. See also
   [13282]CrApTeX.

   Knuth began TeX because he had become annoyed at the declining quality
   of the typesetting in volumes I-III of his monumental "Art of Computer
   Programming" (see [13283]Knuth, also [13284]bible). In a manifestation
   of the typical hackish urge to solve the problem at hand once and for
   all, he began to design his own typesetting language. He thought he
   would finish it on his sabbatical in 1978; he was wrong by only about
   8 years. The language was finally frozen around 1985, but volume IV of
   "The Art of Computer Programming" is not expected to appear until
   2002. The impact and influence of TeX's design has been such that
   nobody minds this very much. Many grand hackish projects have started
   as a bit of [13285]toolsmithing on the way to something else; Knuth's
   diversion was simply on a grander scale than most.

   TeX has also been a noteworthy example of free, shared, but
   high-quality software. Knuth offers a monetary awards to anyone who
   found and reported bugs dating from before the 1989 code freeze; as
   the years wore on and the few remaining bugs were fixed (and new ones
   even harder to find), the bribe went up. Though well-written, TeX is
   so large (and so full of cutting edge technique) that it is said to
   have unearthed at least one bug in every Pascal system it has been
   compiled with.
     _________________________________________________________________

   Node:text, Next:[13286]thanks in advance, Previous:[13287]TeX,
   Up:[13288]= T =

   text n.

   1. [techspeak] Executable code, esp. a `pure code' portion shared
   between multiple instances of a program running in a multitasking OS.
   Compare [13289]English. 2. Textual material in the mainstream sense;
   data in ordinary [13290]ASCII or [13291]EBCDIC representation (see
   [13292]flat-ASCII). "Those are text files; you can review them using
   the editor." These two contradictory senses confuse hackers, too.
     _________________________________________________________________

   Node:thanks in advance, Next:[13293]That's not a bug that's a
   feature!, Previous:[13294]text, Up:[13295]= T =

   thanks in advance

   [Usenet] Conventional net.politeness ending a posted request for
   information or assistance. Sometimes written `advTHANKSance' or
   `aTdHvAaNnKcSe' or abbreviated `TIA'. See [13296]net.-,
   [13297]netiquette.
     _________________________________________________________________

   Node:That's not a bug that's a feature!, Next:[13298]the literature,
   Previous:[13299]thanks in advance, Up:[13300]= T =

   That's not a bug, that's a feature!

   The [13301]canonical first parry in a debate about a purported bug.
   The complainant, if unconvinced, is likely to retort that the bug is
   then at best a [13302]misfeature. See also [13303]feature.
     _________________________________________________________________

   Node:the literature, Next:[13304]the network, Previous:[13305]That's
   not a bug that's a feature!, Up:[13306]= T =

   the literature n.

   Computer-science journals and other publications, vaguely gestured at
   to answer a question that the speaker believes is [13307]trivial.
   Thus, one might answer an annoying question by saying "It's in the
   literature." Oppose [13308]Knuth, which has no connotation of
   triviality.
     _________________________________________________________________

   Node:the network, Next:[13309]the X that can be Y is not the true X,
   Previous:[13310]the literature, Up:[13311]= T =

   the network n.

   1. Historicaslly, the union of all the major noncommercial, academic,
   and hacker-oriented networks, such as Internet, the pre-1990 ARPANET,
   NSFnet, [13312]BITNET, and the virtual UUCP and [13313]Usenet
   `networks', plus the corporate in-house networks and commercial
   time-sharing services (such as CompuServe, GEnie and AOL) that gateway
   to them. A site is generally considered `on the network' if it can be
   reached through some combination of Internet-style (@-sign) and UUCP
   (bang-path) addresses. See [13314]Internet, [13315]bang path,
   [13316]Internet address, [13317]network address. 2. Following the
   mass-culture discovery of the Internet in 1994 and subsequent
   proliferation of cheap TCP/IP connections, "the network" is
   increasingly synonymous with the Internet itself (as it was before the
   second wave of wide-area computer networking began around 1980). 3. A
   fictional conspiracy of libertarian hacker-subversives and
   anti-authoritarian monkeywrenchers described in Robert Anton Wilson's
   novel "Schrödinger's Cat", to which many hackers have subsequently
   decided they belong (this is an example of [13318]ha ha only serious).

   In sense 1, `the network' is often abbreviated to `the net'. "Are you
   on the net?" is a frequent question when hackers first meet face to
   face, and "See you on the net!" is a frequent goodbye.
     _________________________________________________________________

   Node:the X that can be Y is not the true X, Next:[13319]theology,
   Previous:[13320]the network, Up:[13321]= T =

   the X that can be Y is not the true X

   Yet another instance of hackerdom's peculiar attraction to mystical
   references -- a common humorous way of making exclusive statements
   about a class of things. The template is from the "Tao te Ching": "The
   Tao which can be spoken of is not the true Tao." The implication is
   often that the X is a mystery accessible only to the enlightened. See
   the [13322]trampoline entry for an example, and compare [13323]has the
   X nature.
     _________________________________________________________________

   Node:theology, Next:[13324]theory, Previous:[13325]the X that can be Y
   is not the true X, Up:[13326]= T =

   theology n.

   1. Ironically or humorously used to refer to [13327]religious issues.
   2. Technical fine points of an abstruse nature, esp. those where the
   resolution is of theoretical interest but is relatively
   [13328]marginal with respect to actual use of a design or system. Used
   esp. around software issues with a heavy AI or language-design
   component, such as the smart-data vs. smart-programs dispute in AI.
     _________________________________________________________________

   Node:theory, Next:[13329]thinko, Previous:[13330]theology, Up:[13331]=
   T =

   theory n.

   The consensus, idea, plan, story, or set of rules that is currently
   being used to inform a behavior. This usage is a generalization and
   (deliberate) abuse of the technical meaning. "What's the theory on
   fixing this TECO loss?" "What's the theory on dinner tonight?"
   ("Chinatown, I guess.") "What's the current theory on letting lusers
   on during the day?" "The theory behind this change is to fix the
   following well-known screw...."
     _________________________________________________________________

   Node:thinko, Next:[13332]This can't happen, Previous:[13333]theory,
   Up:[13334]= T =

   thinko /thing'koh/ n.

   [by analogy with `typo'] A momentary, correctable glitch in mental
   processing, especially one involving recall of information learned by
   rote; a bubble in the stream of consciousness. Syn. [13335]braino; see
   also [13336]brain fart. Compare [13337]mouso.
     _________________________________________________________________

   Node:This can't happen, Next:[13338]This time for sure!,
   Previous:[13339]thinko, Up:[13340]= T =

   This can't happen

   Less clipped variant of [13341]can't happen.
     _________________________________________________________________

   Node:This time for sure!, Next:[13342]thrash, Previous:[13343]This
   can't happen, Up:[13344]= T =

   This time, for sure! excl.

   Ritual affirmation frequently uttered during protracted debugging
   sessions involving numerous small obstacles (e.g., attempts to bring
   up a UUCP connection). For the proper effect, this must be uttered in
   a fruity imitation of Bullwinkle J. Moose. Also heard: "Hey, Rocky!
   Watch me pull a rabbit out of my hat!" The [13345]canonical response
   is, of course, "But that trick never works!" See [13346]hacker humor.
     _________________________________________________________________

   Node:thrash, Next:[13347]thread, Previous:[13348]This time for sure!,
   Up:[13349]= T =

   thrash vi.

   To move wildly or violently, without accomplishing anything useful.
   Paging or swapping systems that are overloaded waste most of their
   time moving data into and out of core (rather than performing useful
   computation) and are therefore said to thrash. Someone who keeps
   changing his mind (esp. about what to work on next) is said to be
   thrashing. A person frantically trying to execute too many tasks at
   once (and not spending enough time on any single task) may also be
   described as thrashing. Compare [13350]multitask.
     _________________________________________________________________

   Node:thread, Next:[13351]three-finger salute, Previous:[13352]thrash,
   Up:[13353]= T =

   thread n.

   [Usenet, GEnie, CompuServe] Common abbreviation of `topic thread', a
   more or less continuous chain of postings on a single topic. To
   `follow a thread' is to read a series of Usenet postings sharing a
   common subject or (more correctly) which are connected by Reference
   headers. The better newsreaders can present news in thread order
   automatically. Not to be confused with the techspeak sense of
   `thread', e.g. a lightweight process.

   Interestingly, this is far from a neologism. The OED says: "That which
   connects the successive points in anything, esp. a narrative, train of
   thought, or the like; the sequence of events or ideas continuing
   throughout the whole course of anything;" Citations are given going
   back to 1642!
     _________________________________________________________________

   Node:three-finger salute, Next:[13354]throwaway account,
   Previous:[13355]thread, Up:[13356]= T =

   three-finger salute n.

   Syn. [13357]Vulcan nerve pinch.
     _________________________________________________________________

   Node:throwaway account, Next:[13358]thud, Previous:[13359]three-finger
   salute, Up:[13360]= T =

   throwaway account n.

   1. An inexpensive Internet account purchased on a legitimate
   [13361]ISP for the the sole purpose of spewing [13362]spam. 2. An
   inexpensive Internet account obtained for the sole purpose of doing
   something which requires a valid email address but being able to
   ignore spam since the user will not look at the account again.
     _________________________________________________________________

   Node:thud, Next:[13363]thumb, Previous:[13364]throwaway account,
   Up:[13365]= T =

   thud n.

   1. Yet another [13366]metasyntactic variable (see [13367]foo). It is
   reported that at CMU from the mid-1970s the canonical series of these
   was `foo', `bar', `thud', `blat'. 2. Rare term for the hash character,
   `#' (ASCII 0100011). See [13368]ASCII for other synonyms.
     _________________________________________________________________

   Node:thumb, Next:[13369]thundering herd problem, Previous:[13370]thud,
   Up:[13371]= T =

   thumb n.

   The slider on a window-system scrollbar. So called because moving it
   allows you to browse through the contents of a text window in a way
   analogous to thumbing through a book.
     _________________________________________________________________

   Node:thundering herd problem, Next:[13372]thunk,
   Previous:[13373]thumb, Up:[13374]= T =

   thundering herd problem

   Scheduler thrashing. This can happen under Unix when you have a number
   of processes that are waiting on a single event. When that event (a
   connection to the web server, say) happens, every process which could
   possibly handle the event is awakened. In the end, only one of those
   processes will actually be able to do the work, but, in the meantime,
   all the others wake up and contend for CPU time before being put back
   to sleep. Thus the system thrashes briefly while a herd of processes
   thunders through. If this starts to happen many times per second, the
   performance impact can be significant.
     _________________________________________________________________

   Node:thunk, Next:[13375]tick, Previous:[13376]thundering herd problem,
   Up:[13377]= T =

   thunk /thuhnk/ n.

   1. [obs.]"A piece of coding which provides an address", according to
   P. Z. Ingerman, who invented thunks in 1961 as a way of binding actual
   parameters to their formal definitions in Algol-60 procedure calls. If
   a procedure is called with an expression in the place of a formal
   parameter, the compiler generates a thunk which computes the
   expression and leaves the address of the result in some standard
   location. 2. Later generalized into: an expression, frozen together
   with its environment, for later evaluation if and when needed (similar
   to what in techspeak is called a `closure'). The process of unfreezing
   these thunks is called `forcing'. 3. A [13378]stubroutine, in an
   overlay programming environment, that loads and jumps to the correct
   overlay. Compare [13379]trampoline. 4. People and activities scheduled
   in a thunklike manner. "It occurred to me the other day that I am
   rather accurately modeled by a thunk -- I frequently need to be forced
   to completion." -- paraphrased from a [13380]plan file.

   Historical note: There are a couple of onomatopoeic myths circulating
   about the origin of this term. The most common is that it is the sound
   made by data hitting the stack; another holds that the sound is that
   of the data hitting an accumulator. Yet another suggests that it is
   the sound of the expression being unfrozen at argument-evaluation
   time. In fact, according to the inventors, it was coined after they
   realized (in the wee hours after hours of discussion) that the type of
   an argument in Algol-60 could be figured out in advance with a little
   compile-time thought, simplifying the evaluation machinery. In other
   words, it had `already been thought of'; thus it was christened a
   `thunk', which is "the past tense of `think' at two in the morning".
     _________________________________________________________________

   Node:tick, Next:[13381]tick-list features, Previous:[13382]thunk,
   Up:[13383]= T =

   tick n.

   1. A [13384]jiffy (sense 1). 2. In simulations, the discrete unit of
   time that passes between iterations of the simulation mechanism. In AI
   applications, this amount of time is often left unspecified, since the
   only constraint of interest is the ordering of events. This sort of AI
   simulation is often pejoratively referred to as `tick-tick-tick'
   simulation, especially when the issue of simultaneity of events with
   long, independent chains of causes is [13385]handwaved. 3. In the
   FORTH language, a single quote character.
     _________________________________________________________________

   Node:tick-list features, Next:[13386]tickle a bug,
   Previous:[13387]tick, Up:[13388]= T =

   tick-list features n.

   [Acorn Computers] Features in software or hardware that customers
   insist on but never use (calculators in desktop TSRs and that sort of
   thing). The American equivalent would be `checklist features', but
   this jargon sense of the phrase has not been reported.
     _________________________________________________________________

   Node:tickle a bug, Next:[13389]tiger team, Previous:[13390]tick-list
   features, Up:[13391]= T =

   tickle a bug vt.

   To cause a normally hidden bug to manifest itself through some known
   series of inputs or operations. "You can tickle the bug in the
   Paradise VGA card's highlight handling by trying to set bright yellow
   reverse video."
     _________________________________________________________________

   Node:tiger team, Next:[13392]time bomb, Previous:[13393]tickle a bug,
   Up:[13394]= T =

   tiger team n.

   [U.S. military jargon] 1. Originally, a team (of [13395]sneakers)
   whose purpose is to penetrate security, and thus test security
   measures. These people are paid professionals who do hacker-type
   tricks, e.g., leave cardboard signs saying "bomb" in critical defense
   installations, hand-lettered notes saying "Your codebooks have been
   stolen" (they usually haven't been) inside safes, etc. After a
   successful penetration, some high-ranking security type shows up the
   next morning for a `security review' and finds the sign, note, etc.,
   and all hell breaks loose. Serious successes of tiger teams sometimes
   lead to early retirement for base commanders and security officers
   (see the [13396]patch entry for an example). 2. Recently, and more
   generally, any official inspection team or special [13397]firefighting
   group called in to look at a problem.

   A subset of tiger teams are professional [13398]crackers, testing the
   security of military computer installations by attempting remote
   attacks via networks or supposedly `secure' comm channels. Some of
   their escapades, if declassified, would probably rank among the
   greatest hacks of all times. The term has been adopted in commercial
   computer-security circles in this more specific sense.
     _________________________________________________________________

   Node:time bomb, Next:[13399]time sink, Previous:[13400]tiger team,
   Up:[13401]= T =

   time bomb n.

   A subspecies of [13402]logic bomb that is triggered by reaching some
   preset time, either once or periodically. There are numerous legends
   about time bombs set up by programmers in their employers' machines,
   to go off if the programmer is fired or laid off and is not present to
   perform the appropriate suppressing action periodically.

   Interestingly, the only such incident for which we have been pointed
   to documentary evidence took place in the Soviet Union in 1986! A
   disgruntled programmer at the Volga Automobile Plant (where the Fiat
   clones called Ladas were manufactured) planted a time bomb which, a
   week after he'd left on vacation, stopped the entire main assembly
   line for a day. The case attracted lots of attention in the Soviet
   Union because it was the first cracking case to make it to court
   there. The perpetrator got a suspended sentence of 3 years in jail and
   was barred from future work as a programmer.
     _________________________________________________________________

   Node:time sink, Next:[13403]time T, Previous:[13404]time bomb,
   Up:[13405]= T =

   time sink n.

   [poss. by analogy with `heat sink' or `current sink'] A project that
   consumes unbounded amounts of time.
     _________________________________________________________________

   Node:time T, Next:[13406]times-or-divided-by, Previous:[13407]time
   sink, Up:[13408]= T =

   time T /ti:m T/ n.

   1. An unspecified but usually well-understood time, often used in
   conjunction with a later time T+1. "We'll meet on campus at time T or
   at Louie's at time T+1" means, in the context of going out for dinner:
   "We can meet on campus and go to Louie's, or we can meet at Louie's
   itself a bit later." (Louie's was a Chinese restaurant in Palo Alto
   that was a favorite with hackers.) Had the number 30 been used instead
   of the number 1, it would have implied that the travel time from
   campus to Louie's is 30 minutes; whatever time T is (and that hasn't
   been decided on yet), you can meet half an hour later at Louie's than
   you could on campus and end up eating at the same time. See also
   [13409]since time T equals minus infinity.
     _________________________________________________________________

   Node:times-or-divided-by, Next:[13410]TINC, Previous:[13411]time T,
   Up:[13412]= T =

   times-or-divided-by quant.

   [by analogy with `plus-or-minus'] Term occasionally used when
   describing the uncertainty associated with a scheduling estimate, for
   either humorous or brutally honest effect. For a software project, the
   scheduling uncertainty factor is usually at least 2.
     _________________________________________________________________

   Node:TINC, Next:[13413]Tinkerbell program,
   Previous:[13414]times-or-divided-by, Up:[13415]= T =

   TINC //

   [Usenet] Abbreviation: "There Is No Cabal". See [13416]backbone cabal
   and [13417]NANA, but note that this abbreviation did not enter use
   until long after the dispersal of the backbone cabal.
     _________________________________________________________________

   Node:Tinkerbell program, Next:[13418]TINLC, Previous:[13419]TINC,
   Up:[13420]= T =

   Tinkerbell program n.

   [Great Britain] A monitoring program used to scan incoming network
   calls and generate alerts when calls are received from particular
   sites, or when logins are attempted using certain IDs. Named after
   `Project Tinkerbell', an experimental phone-tapping program developed
   by British Telecom in the early 1980s.
     _________________________________________________________________

   Node:TINLC, Next:[13421]tip of the ice-cube,
   Previous:[13422]Tinkerbell program, Up:[13423]= T =

   TINLC //

   Abbreviation: "There Is No Lumber Cartel". See [13424]Lumber Cartel.
   TINLC is a takeoff on [13425]TINC.
     _________________________________________________________________

   Node:tip of the ice-cube, Next:[13426]tired iron,
   Previous:[13427]TINLC, Up:[13428]= T =

   tip of the ice-cube n. //

   [IBM] The visible part of something small and insignificant. Used as
   an ironic comment in situations where `tip of the iceberg' might be
   appropriate if the subject were at all important.
     _________________________________________________________________

   Node:tired iron, Next:[13429]tits on a keyboard, Previous:[13430]tip
   of the ice-cube, Up:[13431]= T =

   tired iron n.

   [IBM] Hardware that is perfectly functional but far enough behind the
   state of the art to have been superseded by new products, presumably
   with sufficient improvement in bang-per-buck that the old stuff is
   starting to look a bit like a [13432]dinosaur.
     _________________________________________________________________

   Node:tits on a keyboard, Next:[13433]TLA, Previous:[13434]tired iron,
   Up:[13435]= T =

   tits on a keyboard n.

   Small bumps on certain keycaps to keep touch-typists registered.
   Usually on the 5 of a numeric keypad, and on the F and J of a
   [13436]QWERTY keyboard; but older Macs, perverse as usual, had them on
   the D and K keys (this changed in 1999).
     _________________________________________________________________

   Node:TLA, Next:[13437](TM), Previous:[13438]tits on a keyboard,
   Up:[13439]= T =

   TLA /T-L-A/ n.

   [Three-Letter Acronym] 1. Self-describing abbreviation for a species
   with which computing terminology is infested. 2. Any confusing
   acronym. Examples include MCA, FTP, SNA, CPU, MMU, SCCS, DMU, FPU,
   NNTP, TLA. People who like this looser usage argue that not all TLAs
   have three letters, just as not all four-letter words have four
   letters. One also hears of `ETLA' (Extended Three-Letter Acronym,
   pronounced /ee tee el ay/) being used to describe four-letter
   acronyms. The term `SFLA' (Stupid Four-Letter Acronym) has also been
   reported. See also [13440]YABA.

   The self-effacing phrase "TDM TLA" (Too Damn Many...) is often used to
   bemoan the plethora of TLAs in use. In 1989, a random of the
   journalistic persuasion asked hacker Paul Boutin "What do you think
   will be the biggest problem in computing in the 90s?" Paul's
   straight-faced response: "There are only 17,000 three-letter
   acronyms." (To be exact, there are 26^3 = 17,576.) There is probably
   some karmic justice in the fact that Paul Boutin subsequently became a
   journalist.
     _________________________________________________________________

   Node:(TM), Next:[13441]TMRC, Previous:[13442]TLA, Up:[13443]= T =

   (TM) //

   [Usenet] ASCII rendition of the trademark-superscript symbol appended
   to phrases that the author feels should be recorded for posterity,
   perhaps in future editions of this lexicon. Sometimes used ironically
   as a form of protest against the recent spate of software and
   algorithm patents and `look and feel' lawsuits. See also [13444]UN*X.
     _________________________________________________________________

   Node:TMRC, Next:[13445]TMRCie, Previous:[13446](TM), Up:[13447]= T =

   TMRC /tmerk'/ n.

   The Tech Model Railroad Club at MIT, one of the wellsprings of hacker
   culture. The 1959 "Dictionary of the TMRC Language" compiled by Peter
   Samson included several terms that became basics of the hackish
   vocabulary (see esp. [13448]foo, [13449]mung, and [13450]frob).

   By 1962, TMRC's legendary layout was already a marvel of complexity
   and has grown in the years since. All the features described here were
   still present when the old layout was decomissioned in 1998 just
   before the demolition of MIT Building 20, and will almost certainly be
   retained when the old layout is rebuilt (expected in 2003). The
   control system alone featured about 1200 relays. There were
   [13451]scram switches located at numerous places around the room that
   could be thwacked if something undesirable was about to occur, such as
   a train going full-bore at an obstruction. Another feature of the
   system was a digital clock on the dispatch board, which was itself
   something of a wonder in those bygone days before cheap LEDs and
   seven-segment displays. When someone hit a scram switch the clock
   stopped and the display was replaced with the word `FOO'; at TMRC the
   scram switches are therefore called `foo switches'.

   Steven Levy, in his book "Hackers" (see the [13452]Bibliography in
   Appendix C), gives a stimulating account of those early years. TMRC's
   Signals and Power Committee included many of the early PDP-1 hackers
   and the people who later became the core of the MIT AI Lab staff.
   Thirty years later that connection is still very much alive, and this
   lexicon accordingly includes a number of entries from a recent
   revision of the TMRC dictionary.

   TMRC has a web page at [13453]http://web.mit.edu/tmrc/www/.
     _________________________________________________________________

   Node:TMRCie, Next:[13454]TMTOWTDI, Previous:[13455]TMRC, Up:[13456]= T
   =

   TMRCie /tmerk'ee/, n.

   [MIT] A denizen of [13457]TMRC.
     _________________________________________________________________

   Node:TMTOWTDI, Next:[13458]to a first approximation,
   Previous:[13459]TMRCie, Up:[13460]= T =

   TMTOWTDI /tim-toh'-dee/

   There's More Than One Way To Do It. This abbreviation of the official
   motto of [13461]Perl is frequently used on newsgroups and mailing
   lists related to that language.
     _________________________________________________________________

   Node:to a first approximation, Next:[13462]to a zeroth approximation,
   Previous:[13463]TMTOWTDI, Up:[13464]= T =

   to a first approximation adj.

   1. [techspeak] When one is doing certain numerical computations, an
   approximate solution may be computed by any of several heuristic
   methods, then refined to a final value. By using the starting point of
   a first approximation of the answer, one can write an algorithm that
   converges more quickly to the correct result. 2. In jargon, a preface
   to any comment that indicates that the comment is only approximately
   true. The remark "To a first approximation, I feel good" might
   indicate that deeper questioning would reveal that not all is perfect
   (e.g., a nagging cough still remains after an illness).
     _________________________________________________________________

   Node:to a zeroth approximation, Next:[13465]toad, Previous:[13466]to a
   first approximation, Up:[13467]= T =

   to a zeroth approximation

   [from `to a first approximation'] A really sloppy approximation; a
   wild guess. Compare [13468]social science number.
     _________________________________________________________________

   Node:toad, Next:[13469]toast, Previous:[13470]to a zeroth
   approximation, Up:[13471]= T =

   toad vt. [MUD]

   1. Notionally, to change a [13472]MUD player into a toad. 2. To
   permanently and totally exile a player from the MUD. A very serious
   action, which can only be done by a MUD [13473]wizard; often involves
   a lot of debate among the other characters first. See also
   [13474]frog, [13475]FOD.
     _________________________________________________________________

   Node:toast, Next:[13476]toaster, Previous:[13477]toad, Up:[13478]= T =

   toast 1. n.

   Any completely inoperable system or component, esp. one that has just
   crashed and burned: "Uh, oh ... I think the serial board is toast." 2.
   vt. To cause a system to crash accidentally, especially in a manner
   that requires manual rebooting. "Rick just toasted the [13479]firewall
   machine again." Compare [13480]fried.
     _________________________________________________________________

   Node:toaster, Next:[13481]toeprint, Previous:[13482]toast, Up:[13483]=
   T =

   toaster n.

   1. The archetypal really stupid application for an embedded
   microprocessor controller; often used in comments that imply that a
   scheme is inappropriate technology (but see [13484]elevator
   controller). "[13485]DWIM for an assembler? That'd be as silly as
   running Unix on your [13486]toaster!" 2. A very, very dumb computer.
   "You could run this program on any dumb toaster." See [13487]bitty
   box, [13488]Get a real computer!, [13489]toy, [13490]beige toaster. 3.
   A Macintosh, esp. the Classic Mac. Some hold that this is implied by
   sense 2. 4. A peripheral device. "I bought my box without toasters,
   but since then I've added two boards and a second disk drive." 5. A
   specialized computer used as an appliance. See [13491]web toaster,
   [13492]video toaster.
     _________________________________________________________________

   Node:toeprint, Next:[13493]toggle, Previous:[13494]toaster,
   Up:[13495]= T =

   toeprint n.

   A [13496]footprint of especially small size.
     _________________________________________________________________

   Node:toggle, Next:[13497]tool, Previous:[13498]toeprint, Up:[13499]= T
   =

   toggle vt.

   To change a [13500]bit from whatever state it is in to the other
   state; to change from 1 to 0 or from 0 to 1. This comes from `toggle
   switches', such as standard light switches, though the word `toggle'
   actually refers to the mechanism that keeps the switch in the position
   to which it is flipped rather than to the fact that the switch has two
   positions. There are four things you can do to a bit: set it (force it
   to be 1), clear (or zero) it, leave it alone, or toggle it.
   (Mathematically, one would say that there are four distinct
   boolean-valued functions of one boolean argument, but saying that is
   much less fun than talking about toggling bits.)
     _________________________________________________________________

   Node:tool, Next:[13501]toolsmith, Previous:[13502]toggle, Up:[13503]=
   T =

   tool 1. n.

   A program used primarily to create, manipulate, modify, or analyze
   other programs, such as a compiler or an editor or a cross-referencing
   program. Oppose [13504]app, [13505]operating system. 2. [Unix] An
   application program with a simple, `transparent' (typically
   text-stream) interface designed specifically to be used in programmed
   combination with other tools (see [13506]filter, [13507]plumbing). 3.
   [MIT: general to students there] vi. To work; to study (connotes
   tedium). The TMRC Dictionary defined this as "to set one's brain to
   the grindstone". See [13508]hack. 4. n. [MIT] A student who studies
   too much and hacks too little. (MIT's student humor magazine rejoices
   in the name "Tool and Die".)
     _________________________________________________________________

   Node:toolsmith, Next:[13509]toor, Previous:[13510]tool, Up:[13511]= T
   =

   toolsmith n.

   The software equivalent of a tool-and-die specialist; one who
   specializes in making the [13512]tools with which other programmers
   create applications. Many hackers consider this more fun than
   applications per se; to understand why, see [13513]uninteresting. Jon
   Bentley, in the "Bumper-Sticker Computer Science" chapter of his book
   "More Programming Pearls", quotes Dick Sites from [13514]DEC as saying
   "I'd rather write programs to write programs than write programs".
     _________________________________________________________________

   Node:toor, Next:[13515]topic drift, Previous:[13516]toolsmith,
   Up:[13517]= T =

   toor n.

   The Bourne-Again Super-user. An alternate account with UID of 0,
   created on Unix machines where the root user has an inconvenient
   choice of shell. Compare [13518]avatar.
     _________________________________________________________________

   Node:topic drift, Next:[13519]topic group, Previous:[13520]toor,
   Up:[13521]= T =

   topic drift n.

   Term used on GEnie, Usenet and other electronic fora to describe the
   tendency of a [13522]thread to drift away from the original subject of
   discussion (and thus, from the Subject header of the originating
   message), or the results of that tendency. The header in each post can
   be changed to keep current with the posts, but usually isn't due to
   forgetfulness or laziness. A single post may often result in several
   posts each responding to a different point in the original. Some
   subthreads will actually be in response to some off-the-cuff side
   comment, possibly degenerating into a [13523]flame war, or just as
   often evolving into a separate discussion. Hence, discussions aren't
   really so much threads as they are trees. Except that they don't
   really have leaves, or multiple branching roots; usually some lines of
   discussion will just sort of die off after everyone gets tired of
   them. This could take anywhere from hours to weeks, or even longer.

   The term `topic drift' is often used in gentle reminders that the
   discussion has strayed off any useful track. "I think we started with
   a question about Niven's last book, but we've ended up discussing the
   sexual habits of the common marmoset. Now that's topic drift!"
     _________________________________________________________________

   Node:topic group, Next:[13524]TOPS-10, Previous:[13525]topic drift,
   Up:[13526]= T =

   topic group n.

   Syn. [13527]forum.
     _________________________________________________________________

   Node:TOPS-10, Next:[13528]TOPS-20, Previous:[13529]topic group,
   Up:[13530]= T =

   TOPS-10 /tops-ten/ n.

   [13531]DEC's proprietary OS for the fabled [13532]PDP-10 machines,
   long a favorite of hackers but now effectively extinct. A fountain of
   hacker folklore; see Appendix A. See also [13533]ITS, [13534]TOPS-20,
   [13535]TWENEX, [13536]VMS, [13537]operating system. TOPS-10 was
   sometimes called BOTS-10 (from `bottoms-ten') as a comment on the
   inappropriateness of describing it as the top of anything.
     _________________________________________________________________

   Node:TOPS-20, Next:[13538]tourist, Previous:[13539]TOPS-10,
   Up:[13540]= T =

   TOPS-20 /tops-twen'tee/ n.

   See [13541]TWENEX.
     _________________________________________________________________

   Node:tourist, Next:[13542]tourist information,
   Previous:[13543]TOPS-20, Up:[13544]= T =

   tourist n.

   1. [ITS] A guest on the system, especially one who generally logs in
   over a network from a remote location for [13545]comm mode, email,
   games, and other trivial purposes. One step below [13546]luser. ITS
   hackers often used to spell this [13547]turist, perhaps by some sort
   of tenuous analogy with [13548]luser (this usage may also have
   expressed the ITS culture's penchant for six-letterisms, and-or been
   some sort of tribute to Alan Turing). Compare [13549]twink,
   [13550]lurker, [13551]read-only user. 2. [IRC] An [13552]IRC user who
   goes from channel to channel without saying anything; see
   [13553]channel hopping.
     _________________________________________________________________

   Node:tourist information, Next:[13554]touristic,
   Previous:[13555]tourist, Up:[13556]= T =

   tourist information n.

   Information in an on-line display that is not immediately useful, but
   contributes to a viewer's gestalt of what's going on with the software
   or hardware behind it. Whether a given piece of info falls in this
   category depends partly on what the user is looking for at any given
   time. The `bytes free' information at the bottom of an MS-DOS dir
   display is tourist information; so (most of the time) is the TIME
   information in a Unix ps(1) display.
     _________________________________________________________________

   Node:touristic, Next:[13557]toy, Previous:[13558]tourist information,
   Up:[13559]= T =

   touristic adj.

   Having the quality of a [13560]tourist. Often used as a pejorative, as
   in `losing touristic scum'. Often spelled `turistic' or `turistik', so
   that phrase might be more properly rendered `lusing turistic scum'.
     _________________________________________________________________

   Node:toy, Next:[13561]toy language, Previous:[13562]touristic,
   Up:[13563]= T =

   toy n.

   A computer system; always used with qualifiers. 1. `nice toy': One
   that supports the speaker's hacking style adequately. 2. `just a toy':
   A machine that yields insufficient [13564]computrons for the speaker's
   preferred uses. This is not condemnatory, as is [13565]bitty box; toys
   can at least be fun. It is also strongly conditioned by one's
   expectations; Cray XMP users sometimes consider the Cray-1 a `toy',
   and certainly all RISC boxes and mainframes are toys by their
   standards. See also [13566]Get a real computer!.
     _________________________________________________________________

   Node:toy language, Next:[13567]toy problem, Previous:[13568]toy,
   Up:[13569]= T =

   toy language n.

   A language useful for instructional purposes or as a proof-of-concept
   for some aspect of computer-science theory, but inadequate for
   general-purpose programming. [13570]Bad Things can result when a toy
   language is promoted as a general purpose solution for programming
   (see [13571]bondage-and-discipline language); the classic example is
   [13572]Pascal. Several moderately well-known formalisms for conceptual
   tasks such as programming Turing machines also qualify as toy
   languages in a less negative sense. See also [13573]MFTL.
     _________________________________________________________________

   Node:toy problem, Next:[13574]toy program, Previous:[13575]toy
   language, Up:[13576]= T =

   toy problem n.

   [AI] A deliberately oversimplified case of a challenging problem used
   to investigate, prototype, or test algorithms for a real problem.
   Sometimes used pejoratively. See also [13577]gedanken, [13578]toy
   program.
     _________________________________________________________________

   Node:toy program, Next:[13579]trampoline, Previous:[13580]toy problem,
   Up:[13581]= T =

   toy program n.

   1. One that can be readily comprehended; hence, a trivial program
   (compare [13582]noddy). 2. One for which the effort of initial coding
   dominates the costs through its life cycle. See also [13583]noddy.
     _________________________________________________________________

   Node:trampoline, Next:[13584]trap, Previous:[13585]toy program,
   Up:[13586]= T =

   trampoline n.

   An incredibly [13587]hairy technique, found in some [13588]HLL and
   program-overlay implementations (e.g., on the Macintosh), that
   involves on-the-fly generation of small executable (and, likely as
   not, self-modifying) code objects to do indirection between code
   sections. Under BSD and possibly in other Unixes, trampoline code is
   used to transfer control from the kernel back to user mode when a
   signal (which has had a handler installed) is sent to a process. hese
   pieces of [13589]live data are called `trampolines'. Trampolines are
   notoriously difficult to understand in action; in fact, it is said by
   those who use this term that the trampoline that doesn't bend your
   brain is not the true trampoline. See also [13590]snap.
     _________________________________________________________________

   Node:trap, Next:[13591]trap door, Previous:[13592]trampoline,
   Up:[13593]= T =

   trap

   1. n. A program interrupt, usually an interrupt caused by some
   exceptional situation in the user program. In most cases, the OS
   performs some action, then returns control to the program. 2. vi. To
   cause a trap. "These instructions trap to the monitor." Also used
   transitively to indicate the cause of the trap. "The monitor traps all
   input/output instructions."

   This term is associated with assembler programming (`interrupt' or
   `exception' is more common among [13594]HLL programmers) and appears
   to be fading into history among programmers as the role of assembler
   continues to shrink. However, it is still important to computer
   architects and systems hackers (see [13595]system, sense 1), who use
   it to distinguish deterministically repeatable exceptions from
   timing-dependent ones (such as I/O interrupts).
     _________________________________________________________________

   Node:trap door, Next:[13596]trash, Previous:[13597]trap, Up:[13598]= T
   =

   trap door n.

   (alt. `trapdoor') 1. Syn. [13599]back door -- a [13600]Bad Thing. 2.
   [techspeak] A `trap-door function' is one which is easy to compute but
   very difficult to compute the inverse of. Such functions are
   [13601]Good Things with important applications in cryptography,
   specifically in the construction of public-key cryptosystems.
     _________________________________________________________________

   Node:trash, Next:[13602]trawl, Previous:[13603]trap door, Up:[13604]=
   T =

   trash vt.

   To destroy the contents of (said of a data structure). The most common
   of the family of near-synonyms including [13605]mung, [13606]mangle,
   and [13607]scribble.
     _________________________________________________________________

   Node:trawl, Next:[13608]tree-killer, Previous:[13609]trash,
   Up:[13610]= T =

   trawl v.

   To sift through large volumes of data (e.g., Usenet postings, FTP
   archives, or the Jargon File) looking for something of interest.
     _________________________________________________________________

   Node:tree-killer, Next:[13611]treeware, Previous:[13612]trawl,
   Up:[13613]= T =

   tree-killer n.

   [Sun] 1. A printer. 2. A person who wastes paper. This epithet should
   be interpreted in a broad sense; `wasting paper' includes the
   production of [13614]spiffy but [13615]content-free documents. Thus,
   most [13616]suits are tree-killers. The negative loading of this term
   may reflect the epithet `tree-killer' applied by Treebeard the Ent to
   the Orcs in J.R.R. Tolkien's "Lord of the Rings" (see also
   [13617]elvish, [13618]elder days).
     _________________________________________________________________

   Node:treeware, Next:[13619]trit, Previous:[13620]tree-killer,
   Up:[13621]= T =

   treeware /tree'weir/ n.

   Printouts, books, and other information media made from pulped dead
   trees. Compare [13622]tree-killer, see [13623]documentation.
     _________________________________________________________________

   Node:trit, Next:[13624]trivial, Previous:[13625]treeware, Up:[13626]=
   T =

   trit /trit/ n.

   [by analogy with `bit'] One base-3 digit; the amount of information
   conveyed by a selection among one of three equally likely outcomes
   (see also [13627]bit). Trits arise, for example, in the context of a
   [13628]flag that should actually be able to assume three values --
   such as yes, no, or unknown. Trits are sometimes jokingly called
   `3-state bits'. A trit may be semi-seriously referred to as `a bit and
   a half', although it is linearly equivalent to 1.5849625 bits (that
   is, log2(3) bits).
     _________________________________________________________________

   Node:trivial, Next:[13629]troff, Previous:[13630]trit, Up:[13631]= T =

   trivial adj.

   1. Too simple to bother detailing. 2. Not worth the speaker's time. 3.
   Complex, but solvable by methods so well known that anyone not utterly
   [13632]cretinous would have thought of them already. 4. Any problem
   one has already solved (some claim that hackish `trivial' usually
   evaluates to `I've seen it before'). Hackers' notions of triviality
   may be quite at variance with those of non-hackers. See
   [13633]nontrivial, [13634]uninteresting.

   The physicist Richard Feynman, who had the hacker nature to an amazing
   degree (see his essay "Los Alamos From Below" in "Surely You're
   Joking, Mr. Feynman!"), defined `trivial theorem' as "one that has
   already been proved".
     _________________________________________________________________

   Node:troff, Next:[13635]troglodyte, Previous:[13636]trivial,
   Up:[13637]= T =

   troff /T'rof/ or /trof/ n.

   [Unix] The gray eminence of Unix text processing; a formatting and
   phototypesetting program, written originally in PDP-11 assembler and
   then in barely-structured early C by the late Joseph Ossanna, modeled
   after the earlier ROFF which was in turn modeled after the
   [13638]Multics and [13639]CTSS program RUNOFF by Jerome Saltzer (that
   name came from the expression "to run off a copy"). A companion
   program, [13640]nroff, formats output for terminals and line printers.

   In 1979, Brian Kernighan modified troff so that it could drive
   phototypesetters other than the Graphic Systems CAT. His paper
   describing that work ("A Typesetter-independent troff," AT&T CSTR #97)
   explains troff's durability. After discussing the program's "obvious
   deficiencies -- a rebarbative input syntax, mysterious and
   undocumented properties in some areas, and a voracious appetite for
   computer resources" and noting the ugliness and extreme hairiness of
   the code and internals, Kernighan concludes:

     None of these remarks should be taken as denigrating Ossanna's
     accomplishment with TROFF. It has proven a remarkably robust tool,
     taking unbelievable abuse from a variety of preprocessors and being
     forced into uses that were never conceived of in the original
     design, all with considerable grace under fire.

   The success of [13641]TeX and desktop publishing systems have reduced
   troff's relative importance, but this tribute perfectly captures the
   strengths that secured troff a place in hacker folklore; indeed, it
   could be taken more generally as an indication of those qualities of
   good programs that, in the long run, hackers most admire.
     _________________________________________________________________

   Node:troglodyte, Next:[13642]troglodyte mode, Previous:[13643]troff,
   Up:[13644]= T =

   troglodyte n.

   [Commodore] 1. A hacker who never leaves his cubicle. The term `gnoll'
   (from Dungeons & Dragons) is also reported. 2. A curmudgeon attached
   to an obsolescent computing environment. The combination `ITS
   troglodyte' was flung around some during the Usenet and email
   wringle-wrangle attending the 2.x.x revision of the Jargon File; at
   least one of the people it was intended to describe adopted it with
   pride.
     _________________________________________________________________

   Node:troglodyte mode, Next:[13645]Trojan horse,
   Previous:[13646]troglodyte, Up:[13647]= T =

   troglodyte mode n.

   [Rice University] Programming with the lights turned off, sunglasses
   on, and the terminal inverted (black on white) because you've been up
   for so many days straight that your eyes hurt (see [13648]raster
   burn). Loud music blaring from a stereo stacked in the corner is
   optional but recommended. See [13649]larval stage, [13650]hack mode.
     _________________________________________________________________

   Node:Trojan horse, Next:[13651]troll, Previous:[13652]troglodyte mode,
   Up:[13653]= T =

   Trojan horse n.

   [coined by MIT-hacker-turned-NSA-spook Dan Edwards] A malicious,
   security-breaking program that is disguised as something benign, such
   as a directory lister, archiver, game, or (in one notorious 1990 case
   on the Mac) a program to find and destroy viruses! See [13654]back
   door, [13655]virus, [13656]worm, [13657]phage, [13658]mockingbird.
     _________________________________________________________________

   Node:troll, Next:[13659]Troll-O-Meter, Previous:[13660]Trojan horse,
   Up:[13661]= T =

   troll v.,n.

   1. [From the Usenet group alt.folklore.urban] To utter a posting on
   [13662]Usenet designed to attract predictable responses or
   [13663]flames; or, the post itself. Derives from the phrase "trolling
   for [13664]newbies" which in turn comes from mainstream "trolling", a
   style of fishing in which one trails bait through a likely spot hoping
   for a bite. The well-constructed troll is a post that induces lots of
   newbies and flamers to make themselves look even more clueless than
   they already do, while subtly conveying to the more savvy and
   experienced that it is in fact a deliberate troll. If you don't fall
   for the joke, you get to be in on it. See also [13665]YHBT. 2. An
   individual who chronically trolls in sense 1; regularly posts specious
   arguments, flames or personal attacks to a newsgroup, discussion list,
   or in email for no other purpose than to annoy someone or disrupt a
   discussion. Trolls are recognizable by the fact that the have no real
   interest in learning about the topic at hand - they simply want to
   utter flame bait. Like the ugly creatures they are named after, they
   exhibit no redeeming characteristics, and as such, they are recognized
   as a lower form of life on the net, as in, "Oh, ignore him, he's just
   a troll." 3. [Berkeley] Computer lab monitor. A popular campus job for
   CS students. Duties include helping newbies and ensuring that lab
   policies are followed. Probably so-called because it involves lurking
   in dark cavelike corners.

   Some people claim that the troll (sense 1) is properly a narrower
   category than [13666]flame bait, that a troll is categorized by
   containing some assertion that is wrong but not overtly controversial.
   See also [13667]Troll-O-Meter.

   The use of `troll' in either sense is a live metaphor that readily
   produces elaborations and combining forms. For example, one not
   infrequently sees the warning "Do not feed the troll" as part of a
   followup to troll postings.
     _________________________________________________________________

   Node:Troll-O-Meter, Next:[13668]tron, Previous:[13669]troll,
   Up:[13670]= T =

   Troll-O-Meter n.

   Common Usenet jargon for a notional instrument used to measure the
   quality of a Usenet [13671]troll. "Come on, everyone! If the above
   doesn't set off the Troll-O-Meter, we're going to have to get him to
   run around with a big blinking sign saying `I am a troll, I'm only in
   it for the controversy and flames' and shooting random gobs of
   Jell-O(tm) at us before the point is proven." Mentions of the
   Troll-O-Meter are often accompanied by an ASCII picture of an arrow
   pointing at a numeric scale. Compare [13672]bogometer.
     _________________________________________________________________

   Node:tron, Next:[13673]true-hacker, Previous:[13674]Troll-O-Meter,
   Up:[13675]= T =

   tron v.

   [NRL, CMU; prob. fr. the movie "Tron"] To become inaccessible except
   via email or talk(1), especially when one is normally available via
   telephone or in person. Frequently used in the past tense, as in: "Ran
   seems to have tronned on us this week" or "Gee, Ran, glad you were
   able to un-tron yourself". One may also speak of `tron mode'; compare
   [13676]spod.

   Note that many dialects of BASIC have a TRON/TROFF command pair that
   enables/disables line number tracing; this has no obvious relationship
   to the slang usage.
     _________________________________________________________________

   Node:true-hacker, Next:[13677]tty, Previous:[13678]tron, Up:[13679]= T
   =

   true-hacker n.

   [analogy with `trufan' from SF fandom] One who exemplifies the primary
   values of hacker culture, esp. competence and helpfulness to other
   hackers. A high compliment. "He spent 6 hours helping me bring up UUCP
   and netnews on my FOOBAR 4000 last week -- manifestly the act of a
   true-hacker." Compare [13680]demigod, oppose [13681]munchkin.
     _________________________________________________________________

   Node:tty, Next:[13682]tube, Previous:[13683]true-hacker, Up:[13684]= T
   =

   tty /T-T-Y/, /tit'ee/ n.

   The latter pronunciation was primarily ITS, but some Unix people say
   it this way as well; this pronunciation is not considered to have
   sexual undertones. 1. A terminal of the teletype variety,
   characterized by a noisy mechanical printer, a very limited character
   set, and poor print quality. Usage: antiquated (like the TTYs
   themselves). See also [13685]bit-paired keyboard. 2. [especially Unix]
   Any terminal at all; sometimes used to refer to the particular
   terminal controlling a given job. 3. [Unix] Any serial port, whether
   or not the device connected to it is a terminal; so called because
   under Unix such devices have names of the form tty*. Ambiguity between
   senses 2 and 3 is common but seldom bothersome.
     _________________________________________________________________

   Node:tube, Next:[13686]tube time, Previous:[13687]tty, Up:[13688]= T =

   tube

   1. n. A CRT terminal. Never used in the mainstream sense of TV; real
   hackers don't watch TV, except for Loony Toons, Rocky & Bullwinkle,
   Trek Classic, the Simpsons, and the occasional cheesy old swashbuckler
   movie. 2. [IBM] To send a copy of something to someone else's
   terminal. "Tube me that note?"
     _________________________________________________________________

   Node:tube time, Next:[13689]tunafish, Previous:[13690]tube,
   Up:[13691]= T =

   tube time n.

   Time spent at a terminal or console. More inclusive than hacking time;
   commonly used in discussions of what parts of one's environment one
   uses most heavily. "I find I'm spending too much of my tube time
   reading mail since I started this revision."
     _________________________________________________________________

   Node:tunafish, Next:[13692]tune, Previous:[13693]tube time,
   Up:[13694]= T =

   tunafish n.

   In hackish lore, refers to the mutated punchline of an age-old joke to
   be found at the bottom of the manual pages of tunefs(8) in the
   original [13695]BSD 4.2 distribution. The joke was removed in later
   releases once commercial sites started using 4.2, but apparently
   restored on the 4.4BSD tape and in {Net,Free,Open}BSD. Tunefs relates
   to the `tuning' of file-system parameters for optimum performance, and
   at the bottom of a few pages of wizardly inscriptions was a `BUGS'
   section consisting of the line "You can tune a file system, but you
   can't tunafish". Variants of this can be seen in other BSD versions,
   though it has been excised from some versions by humorless management
   [13696]droids. The [nt]roff source for SunOS 4.1.1 contains a comment
   apparently designed to prevent this: "Take this out and a Unix Demon
   will dog your steps from now until the time_t's wrap around."

   [It has since been pointed out that indeed you can tunafish. Usually
   at a canning factory... --ESR]
     _________________________________________________________________

   Node:tune, Next:[13697]turbo nerd, Previous:[13698]tunafish,
   Up:[13699]= T =

   tune vt.

   [from automotive or musical usage] To optimize a program or system for
   a particular environment, esp. by adjusting numerical parameters
   designed as [13700]hooks for tuning, e.g., by changing #define lines
   in C. One may `tune for time' (fastest execution), `tune for space'
   (least memory use), or `tune for configuration' (most efficient use of
   hardware). See [13701]bum, [13702]hot spot, [13703]hand-hacking.
     _________________________________________________________________

   Node:turbo nerd, Next:[13704]Turing tar-pit, Previous:[13705]tune,
   Up:[13706]= T =

   turbo nerd n.

   See [13707]computer geek.
     _________________________________________________________________

   Node:Turing tar-pit, Next:[13708]turist, Previous:[13709]turbo nerd,
   Up:[13710]= T =

   Turing tar-pit n.

   1. A place where anything is possible but nothing of interest is
   practical. Alan Turing helped lay the foundations of computer science
   by showing that all machines and languages capable of expressing a
   certain very primitive set of operations are logically equivalent in
   the kinds of computations they can carry out, and in principle have
   capabilities that differ only in speed from those of the most powerful
   and elegantly designed computers. However, no machine or language
   exactly matching Turing's primitive set has ever been built (other
   than possibly as a classroom exercise), because it would be horribly
   slow and far too painful to use. A `Turing tar-pit' is any computer
   language or other tool that shares this property. That is, it's
   theoretically universal -- but in practice, the harder you struggle to
   get any real work done, the deeper its inadequacies suck you in.
   Compare [13711]bondage-and-discipline language. 2. The perennial
   [13712]holy wars over whether language A or B is the "most powerful".
     _________________________________________________________________

   Node:turist, Next:[13713]Tux, Previous:[13714]Turing tar-pit,
   Up:[13715]= T =

   turist /too'rist/ n.

   Var. sp. of [13716]tourist, q.v. Also in adjectival form, `turistic'.
   Poss. influenced by [13717]luser and `Turing'.
     _________________________________________________________________

   Node:Tux, Next:[13718]tweak, Previous:[13719]turist, Up:[13720]= T =

   Tux

   Tux the Penguin is the official emblem of [13721]Linux, This
   eventuated after a logo contest in 1996, during which Linus Torvalds
   endorsed the idea of a penguin logo in a couple of famously funny
   [13722]postings. Linus explained that he was once bitten by a killer
   penguin in Australia and has felt a special affinity for the species
   ever since. (Linus has since admitted that he was also thinking of
   Feathers McGraw, the evil-genius penguin jewel thief who appeared in a
   Wallace & Grommit feature cartoon, "The Wrong Trousers".)

   Larry Ewing [13723]designed the official Tux logo. It has proved a
   wise choice, amenable to hundreds of recognizable variations used as
   emblems of Linux-related projects, products, and user groups. In fact,
   Tux has spawned an entire mythology, of which the [13724]Gospel
   According to Tux and the mock-epic poem "Tuxowolf" are among the
   best-known examples.

   There is a `real' Tux - a black-footed penguin resident at the Bristol
   Zoo. Several friends of Linux bought a zoo sponsorship for Linus as a
   birthday present in 1996.
     _________________________________________________________________

   Node:tweak, Next:[13725]tweeter, Previous:[13726]Tux, Up:[13727]= T =

   tweak vt.

   1. To change slightly, usually in reference to a value. Also used
   synonymously with [13728]twiddle. If a program is almost correct,
   rather than figure out the precise problem you might just keep
   tweaking it until it works. See [13729]frobnicate and [13730]fudge
   factor; also see [13731]shotgun debugging. 2. To [13732]tune or
   [13733]bum a program; preferred usage in the U.K.
     _________________________________________________________________

   Node:tweeter, Next:[13734]TWENEX, Previous:[13735]tweak, Up:[13736]= T
   =

   tweeter n.

   [University of Waterloo] Syn. [13737]perf, [13738]chad (sense 1). This
   term (like [13739]woofer) has been in use at Waterloo since 1972 but
   is elsewhere unknown. In audio jargon, the word refers to the treble
   speaker(s) on a hi-fi.
     _________________________________________________________________

   Node:TWENEX, Next:[13740]twiddle, Previous:[13741]tweeter, Up:[13742]=
   T =

   TWENEX /twe'neks/ n.

   The TOPS-20 operating system by [13743]DEC -- the second proprietary
   OS for the PDP-10 -- preferred by most PDP-10 hackers over TOPS-10
   (that is, by those who were not [13744]ITS or [13745]WAITS partisans).
   TOPS-20 began in 1969 as Bolt, Beranek & Newman's TENEX operating
   system using special paging hardware. By the early 1970s, almost all
   of the systems on the ARPANET ran TENEX. DEC purchased the rights to
   TENEX from BBN and began work to make it their own. The first in-house
   code name for the operating system was VIROS (VIRtual memory Operating
   System); when customers started asking questions, the name was changed
   to SNARK so DEC could truthfully deny that there was any project
   called VIROS. When the name SNARK became known, the name was briefly
   reversed to become KRANS; this was quickly abandoned when someone
   objected that `krans' meant `funeral wreath' in Swedish (though some
   Swedish speakers have since said it means simply `wreath'; this part
   of the story may be apocryphal). Ultimately DEC picked TOPS-20 as the
   name of the operating system, and it was as TOPS-20 that it was
   marketed. The hacker community, mindful of its origins, quickly dubbed
   it TWENEX (a contraction of `twenty TENEX'), even though by this point
   very little of the original TENEX code remained (analogously to the
   differences between AT&T V6 Unix and BSD). DEC people cringed when
   they heard "TWENEX", but the term caught on nevertheless (the written
   abbreviation `20x' was also used). TWENEX was successful and very
   popular; in fact, there was a period in the early 1980s when it
   commanded as fervent a culture of partisans as Unix or ITS -- but
   DEC's decision to scrap all the internal rivals to the VAX
   architecture and its relatively stodgy VMS OS killed the DEC-20 and
   put a sad end to TWENEX's brief day in the sun. DEC attempted to
   convince TOPS-20 users to convert to [13746]VMS, but instead, by the
   late 1980s, most of the TOPS-20 hackers had migrated to Unix.
     _________________________________________________________________

   Node:twiddle, Next:[13747]twilight zone, Previous:[13748]TWENEX,
   Up:[13749]= T =

   twiddle n.

   1. Tilde (ASCII 1111110, ~). Also called `squiggle', `sqiggle' (sic --
   pronounced /skig'l/), and `twaddle', but twiddle is the most common
   term. 2. A small and insignificant change to a program. Usually fixes
   one bug and generates several new ones (see also [13750]shotgun
   debugging). 3. vt. To change something in a small way. Bits, for
   example, are often twiddled. Twiddling a switch or [13751]knobs
   implies much less sense of purpose than toggling or tweaking it; see
   [13752]frobnicate. To speak of twiddling a bit connotes aimlessness,
   and at best doesn't specify what you're doing to the bit; `toggling a
   bit' has a more specific meaning (see [13753]bit twiddling,
   [13754]toggle). 4. Uncommon name for the [13755]twirling baton prompt.
     _________________________________________________________________

   Node:twilight zone, Next:[13756]twink, Previous:[13757]twiddle,
   Up:[13758]= T =

   twilight zone n. //

   [IRC] Notionally, the area of cyberspace where [13759]IRC operators
   live. An [13760]op is said to have a "connection to the twilight
   zone".
     _________________________________________________________________

   Node:twink, Next:[13761]twirling baton, Previous:[13762]twilight zone,
   Up:[13763]= T =

   twink /twink/ n.

   1. [Berkeley] A clue-repellant user; the next step beyond a clueless
   one. 2. [UCSC] A [13764]read-only user. Also reported on the Usenet
   group soc.motss; may derive from gay slang for a cute young thing with
   nothing upstairs (compare mainstream `chick').
     _________________________________________________________________

   Node:twirling baton, Next:[13765]two pi, Previous:[13766]twink,
   Up:[13767]= T =

   twirling baton n.

   [PLATO] The overstrike sequence -/|\-/|\- which produces an animated
   twirling baton. If you output it with a single backspace between
   characters, the baton spins in place. If you output the sequence BS SP
   between characters, the baton spins from left to right. If you output
   BS SP BS BS between characters, the baton spins from right to left.
   This is also occasionally called a twiddle prompt.

   The twirling baton was a popular component of animated signature files
   on the pioneering PLATO educational timesharing system. The archie
   Internet service is perhaps the best-known baton program today; it
   uses the twirling baton as an idler indicating that the program is
   working on a query. The twirling baton is also used as a boot progress
   indicator on several BSD variants of Unix; if it stops you're probably
   going to have a long and trying day.
     _________________________________________________________________

   Node:two pi, Next:[13768]two-to-the-N, Previous:[13769]twirling baton,
   Up:[13770]= T =

   two pi quant.

   The number of years it takes to finish one's thesis. Occurs in stories
   in the following form: "He started on his thesis; 2 pi years later..."
     _________________________________________________________________

   Node:two-to-the-N, Next:[13771]twonkie, Previous:[13772]two pi,
   Up:[13773]= T =

   two-to-the-N quant.

   An amount much larger than [13774]N but smaller than [13775]infinity.
   "I have 2-to-the-N things to do before I can go out for lunch" means
   you probably won't show up.
     _________________________________________________________________

   Node:twonkie, Next:[13776]u-, Previous:[13777]two-to-the-N,
   Up:[13778]= T =

   twonkie /twon'kee/ n.

   The software equivalent of a Twinkie (a variety of sugar-loaded junk
   food, or (in gay slang with a small t) the male equivalent of
   `chick'); a useless `feature' added to look sexy and placate a
   [13779]marketroid (compare [13780]Saturday-night special). The term
   may also be related to "The Twonky", title menace of a classic SF
   short story by Lewis Padgett (Henry Kuttner and C. L. Moore), first
   published in the September 1942 "Astounding Science Fiction" and
   subsequently much anthologized.
     _________________________________________________________________

   Node:= U =, Next:[13781]= V =, Previous:[13782]= T =, Up:[13783]The
   Jargon Lexicon

= U =

     * [13784]u-:
     * [13785]UBD:
     * [13786]UBE:
     * [13787]UCE:
     * [13788]UDP:
     * [13789]UN*X:
     * [13790]undefined external reference:
     * [13791]under the hood:
     * [13792]undocumented feature:
     * [13793]uninteresting:
     * [13794]Unix:
     * [13795]Unix brain damage:
     * [13796]Unix conspiracy:
     * [13797]Unix weenie:
     * [13798]unixism:
     * [13799]unswizzle:
     * [13800]unwind the stack:
     * [13801]unwind-protect:
     * [13802]up:
     * [13803]upload:
     * [13804]upthread:
     * [13805]urchin:
     * [13806]URL:
     * [13807]Usenet:
     * [13808]Usenet Death Penalty:
     * [13809]user:
     * [13810]user-friendly:
     * [13811]user-obsequious:
     * [13812]userland:
     * [13813]USG Unix:
     * [13814]UTSL:
     * [13815]UUCPNET:
     _________________________________________________________________

   Node:u-, Next:[13816]UBD, Previous:[13817]twonkie, Up:[13818]= U =

   u- pref.

   Written shorthand for [13819]micro-; techspeak when applied to metric
   units, jargon when used otherwise. Derived from the Greek letter "mu",
   the first letter of "micro" (and which letter looks a lot like the
   English letter "u").
     _________________________________________________________________

   Node:UBD, Next:[13820]UBE, Previous:[13821]u-, Up:[13822]= U =

   UBD /U-B-D/ n.

   [abbreviation for `User Brain Damage'] An abbreviation used to close
   out trouble reports obviously due to utter cluelessness on the user's
   part. Compare [13823]pilot error; oppose [13824]PBD; see also
   [13825]brain-damaged.
     _________________________________________________________________

   Node:UBE, Next:[13826]UCE, Previous:[13827]UBD, Up:[13828]= U =

   UBE // n.

   [abbrev., Unsoliclited Bulk Email] A widespread, more formal term for
   email [13829]spam. Compare [13830]UCE. The UBE term recognizes that
   spam is uttered by nonprofit and advocacy groups whose motives are not
   commercial.
     _________________________________________________________________

   Node:UCE, Next:[13831]UDP, Previous:[13832]UBE, Up:[13833]= U =

   UCE n.

   [abbrev., Unsolicited Commercial Email] A widespread, more formal term
   for email [13834]spam. Compare [13835]UBE, which may be superseding
   it.
     _________________________________________________________________

   Node:UDP, Next:[13836]UN*X, Previous:[13837]UCE, Up:[13838]= U =

   UDP /U-D-P/ v.,n.

   [Usenet] Abbreviation for [13839]Usenet Death Penalty. Common
   (probably now more so than the full form), and frequently verbed.
   Compare [13840]IDP.
     _________________________________________________________________

   Node:UN*X, Next:[13841]undefined external reference,
   Previous:[13842]UDP, Up:[13843]= U =

   UN*X n.

   Used to refer to the Unix operating system (a trademark of AT&T, then
   of Novell, then of SCO, and then of Caldera) in writing, but avoiding
   the need for the ugly [13844](TM) typography. Also used to refer to
   any or all varieties of Unixoid operating systems. Ironically, lawyers
   now say that the requirement for the trademark postfix has no legal
   force, but the asterisk usage is entrenched anyhow. It has been
   suggested that there may be a psychological connection to practice in
   certain religions (especially Judaism) in which the name of the deity
   is never written out in full, e.g., `YHWH' or `G-d' is used. See also
   [13845]glob and [13846]splat out.
     _________________________________________________________________

   Node:undefined external reference, Next:[13847]under the hood,
   Previous:[13848]UN*X, Up:[13849]= U =

   undefined external reference excl.

   [Unix] A message from Unix's linker. Used in speech to flag loose ends
   or dangling references in an argument or discussion.
     _________________________________________________________________

   Node:under the hood, Next:[13850]undocumented feature,
   Previous:[13851]undefined external reference, Up:[13852]= U =

   under the hood adj.

   [hot-rodder talk] 1. Used to introduce the underlying implementation
   of a product (hardware, software, or idea). Implies that the
   implementation is not intuitively obvious from the appearance, but the
   speaker is about to enable the listener to [13853]grok it. "Let's now
   look under the hood to see how ...." 2. Can also imply that the
   implementation is much simpler than the appearance would indicate:
   "Under the hood, we are just fork/execing the shell." 3. Inside a
   chassis, as in "Under the hood, this baby has a 40MHz 68030!"
     _________________________________________________________________

   Node:undocumented feature, Next:[13854]uninteresting,
   Previous:[13855]under the hood, Up:[13856]= U =

   undocumented feature n.

   See [13857]feature.
     _________________________________________________________________

   Node:uninteresting, Next:[13858]Unix, Previous:[13859]undocumented
   feature, Up:[13860]= U =

   uninteresting adj.

   1. Said of a problem that, although [13861]nontrivial, can be solved
   simply by throwing sufficient resources at it. 2. Also said of
   problems for which a solution would neither advance the state of the
   art nor be fun to design and code.

   Hackers regard uninteresting problems as intolerable wastes of time,
   to be solved (if at all) by lesser mortals. Real hackers (see
   [13862]toolsmith) generalize uninteresting problems enough to make
   them interesting and solve them -- thus solving the original problem
   as a special case (and, it must be admitted, occasionally turning a
   molehill into a mountain, or a mountain into a tectonic plate). See
   [13863]WOMBAT, [13864]SMOP; compare [13865]toy problem, oppose
   [13866]interesting.
     _________________________________________________________________

   Node:Unix, Next:[13867]Unix brain damage,
   Previous:[13868]uninteresting, Up:[13869]= U =

   Unix /yoo'niks/ n.

   [In the authors' words, "A weak pun on Multics"; very early on it was
   `UNICS'] (also `UNIX') An interactive time-sharing system invented in
   1969 by Ken Thompson after Bell Labs left the Multics project,
   originally so he could play games on his scavenged PDP-7. Dennis
   Ritchie, the inventor of C, is considered a co-author of the system.
   The turning point in Unix's history came when it was reimplemented
   almost entirely in C during 1972-1974, making it the first
   source-portable OS. Unix subsequently underwent mutations and
   expansions at the hands of many different people, resulting in a
   uniquely flexible and developer-friendly environment. By 1991, Unix
   had become the most widely used multiuser general-purpose operating
   system in the world - and since 1996 the variiant called [13870]Linux
   has been at the cutting edge of the [13871]open source movement. Many
   people consider the success of Unix the most important victory yet of
   hackerdom over industry opposition (but see [13872]Unix weenie and
   [13873]Unix conspiracy for an opposing point of view). See
   [13874]Version 7, [13875]BSD, [13876]USG Unix, [13877]Linux.

   Some people are confused over whether this word is appropriately
   `UNIX' or `Unix'; both forms are common, and used interchangeably.
   Dennis Ritchie says that the `UNIX' spelling originally happened in
   CACM's 1974 paper "The UNIX Time-Sharing System" because "we had a new
   typesetter and [13878]troff had just been invented and we were
   intoxicated by being able to produce small caps." Later, dmr tried to
   get the spelling changed to `Unix' in a couple of Bell Labs papers, on
   the grounds that the word is not acronymic. He failed, and eventually
   (his words) "wimped out" on the issue. So, while the trademark today
   is `UNIX', both capitalizations are grounded in ancient usage; the
   Jargon File uses `Unix' in deference to dmr's wishes.
     _________________________________________________________________

   Node:Unix brain damage, Next:[13879]Unix conspiracy,
   Previous:[13880]Unix, Up:[13881]= U =

   Unix brain damage n.

   Something that has to be done to break a network program (typically a
   mailer) on a non-Unix system so that it will interoperate with Unix
   systems. The hack may qualify as `Unix brain damage' if the program
   conforms to published standards and the Unix program in question does
   not. Unix brain damage happens because it is much easier for other
   (minority) systems to change their ways to match non-conforming
   behavior than it is to change all the hundreds of thousands of Unix
   systems out there.

   An example of Unix brain damage is a [13882]kluge in a mail server to
   recognize bare line feed (the Unix newline) as an equivalent form to
   the Internet standard newline, which is a carriage return followed by
   a line feed. Such things can make even a hardened [13883]jock weep.
     _________________________________________________________________

   Node:Unix conspiracy, Next:[13884]Unix weenie, Previous:[13885]Unix
   brain damage, Up:[13886]= U =

   Unix conspiracy n.

   [ITS] According to a conspiracy theory long popular among [13887]ITS
   and [13888]TOPS-20 fans, Unix's growth is the result of a plot,
   hatched during the 1970s at Bell Labs, whose intent was to hobble
   AT&T's competitors by making them dependent upon a system whose future
   evolution was to be under AT&T's control. This would be accomplished
   by disseminating an operating system that is apparently inexpensive
   and easily portable, but also relatively unreliable and insecure (so
   as to require continuing upgrades from AT&T). This theory was lent a
   substantial impetus in 1984 by the paper referenced in the [13889]back
   door entry.

   In this view, Unix was designed to be one of the first computer
   viruses (see [13890]virus) -- but a virus spread to computers
   indirectly by people and market forces, rather than directly through
   disks and networks. Adherents of this `Unix virus' theory like to cite
   the fact that the well-known quotation "Unix is snake oil" was uttered
   by [13891]DEC president Kenneth Olsen shortly before DEC began
   actively promoting its own family of Unix workstations. (Olsen now
   claims to have been misquoted.)

   [If there was ever such a conspiracy, it got thoroughly out of the
   plotters' control after 1990. AT&T sold its UNIX operation to Novell
   around the same time [13892]Linux and other free-UNIX distributions
   were beginning to make noise. --ESR]
     _________________________________________________________________

   Node:Unix weenie, Next:[13893]unixism, Previous:[13894]Unix
   conspiracy, Up:[13895]= U =

   Unix weenie n.

   [ITS] 1. A derogatory play on `Unix wizard', common among hackers who
   use Unix by necessity but would prefer alternatives. The implication
   is that although the person in question may consider mastery of Unix
   arcana to be a wizardly skill, the only real skill involved is the
   ability to tolerate (and the bad taste to wallow in) the incoherence
   and needless complexity that is alleged to infest many Unix programs.
   "This shell script tries to parse its arguments in 69 bletcherous
   ways. It must have been written by a real Unix weenie." 2. A
   derogatory term for anyone who engages in uncritical praise of Unix.
   Often appearing in the context "stupid Unix weenie". See
   [13896]Weenix, [13897]Unix conspiracy. See also [13898]weenie.
     _________________________________________________________________

   Node:unixism, Next:[13899]unswizzle, Previous:[13900]Unix weenie,
   Up:[13901]= U =

   unixism n.

   A piece of code or a coding technique that depends on the protected
   multi-tasking environment with relatively low process-spawn overhead
   that exists on virtual-memory Unix systems. Common [13902]unixisms
   include: gratuitous use of fork(2); the assumption that certain
   undocumented but well-known features of Unix libraries such as
   stdio(3) are supported elsewhere; reliance on [13903]obscure
   side-effects of system calls (use of sleep(2) with a 0 argument to
   clue the scheduler that you're willing to give up your time-slice, for
   example); the assumption that freshly allocated memory is zeroed; and
   the assumption that fragmentation problems won't arise from never
   free()ing memory. Compare [13904]vaxocentrism; see also [13905]New
   Jersey.
     _________________________________________________________________

   Node:unswizzle, Next:[13906]unwind the stack, Previous:[13907]unixism,
   Up:[13908]= U =

   unswizzle v.

   See [13909]swizzle.
     _________________________________________________________________

   Node:unwind the stack, Next:[13910]unwind-protect,
   Previous:[13911]unswizzle, Up:[13912]= U =

   unwind the stack vi.

   1. [techspeak] During the execution of a procedural language, one is
   said to `unwind the stack' from a called procedure up to a caller when
   one discards the stack frame and any number of frames above it,
   popping back up to the level of the given caller. In C this is done
   with longjmp/setjmp, in LISP or C++ with throw/catch. See also
   [13913]smash the stack. 2. People can unwind the stack as well, by
   quickly dealing with a bunch of problems: "Oh heck, let's do lunch.
   Just a second while I unwind my stack."
     _________________________________________________________________

   Node:unwind-protect, Next:[13914]up, Previous:[13915]unwind the stack,
   Up:[13916]= U =

   unwind-protect n.

   [MIT: from the name of a LISP operator] A task you must remember to
   perform before you leave a place or finish a project. "I have an
   unwind-protect to call my advisor."
     _________________________________________________________________

   Node:up, Next:[13917]upload, Previous:[13918]unwind-protect,
   Up:[13919]= U =

   up adj.

   1. Working, in order. "The down escalator is up." Oppose [13920]down.
   2. `bring up': vt. To create a working version and start it. "They
   brought up a down system." 3. `come up' vi. To become ready for
   production use.
     _________________________________________________________________

   Node:upload, Next:[13921]upthread, Previous:[13922]up, Up:[13923]= U =

   upload /uhp'lohd/ v.

   1. [techspeak] To transfer programs or data over a digital
   communications link from a system near you (espercially a smaller or
   peripheral `client' system) to one further away from you (especially a
   larger or central `host' system). A transfer in the other direction
   is, of course, called a [13924]download 2. [speculatively] To move the
   essential patterns and algorithms that make up one's mind from one's
   brain into a computer. Those who are convinced that such patterns and
   algorithms capture the complete essence of the self view this prospect
   with pleasant anticipation.
     _________________________________________________________________

   Node:upthread, Next:[13925]urchin, Previous:[13926]upload, Up:[13927]=
   U =

   upthread adv.

   Earlier in the discussion (see [13928]thread), i.e., `above'. "As Joe
   pointed out upthread, ..." See also [13929]followup.
     _________________________________________________________________

   Node:urchin, Next:[13930]URL, Previous:[13931]upthread, Up:[13932]= U
   =

   urchin n.

   See [13933]munchkin.
     _________________________________________________________________

   Node:URL, Next:[13934]Usenet, Previous:[13935]urchin, Up:[13936]= U =

   URL /U-R-L/ or /erl/ n.

   Uniform Resource Locator, an address widget that identifies a document
   or resource on the World Wide Web. This entry is here primarily to
   record the fact that the term is commonly pronounced both /erl/, and
   /U-R-L/ (the latter predominates in more formal contexts).
     _________________________________________________________________

   Node:Usenet, Next:[13937]Usenet Death Penalty, Previous:[13938]URL,
   Up:[13939]= U =

   Usenet /yoos'net/ or /yooz'net/ n.

   [from `Users' Network'; the original spelling was USENET, but the
   mixed-case form is now widely preferred] A distributed [13940]bboard
   (bulletin board) system supported mainly by Unix machines. Originally
   implemented in 1979-1980 by Steve Bellovin, Jim Ellis, Tom Truscott,
   and Steve Daniel at Duke University, it has swiftly grown to become
   international in scope and is now probably the largest decentralized
   information utility in existence. As of early 1996, it hosts over
   10,000 [13941]newsgroups and an average of over 500 megabytes (the
   equivalent of several thousand paper pages) of new technical articles,
   news, discussion, chatter, and [13942]flamage every day (and that
   leaves out the graphics...).

   By the year the Internet hit the mainstream (1994) the original UUCP
   transport for Usenet was fading out of use (see [13943]UUCPNET) -
   almost all Usenet connections were over Internet links. A lot of
   newbies and journalists began to refer to "Internet newsgroups" as
   though Usenet was and always had been just another Internet service.
   This ignorance greatly annoys experienced Usenetters.
     _________________________________________________________________

   Node:Usenet Death Penalty, Next:[13944]user, Previous:[13945]Usenet,
   Up:[13946]= U =

   Usenet Death Penalty

   [Usenet] A sanction against sites that habitually spew Usenet
   [13947]spam. This can be either passive or active. A passive UDP
   refers to the dropping of all postings by a particular domain so as to
   inhibit propagation. An active UDP refers to third-party cancellation
   of all postings by the UDPed domain. A partial UDP is one which
   applies only to certain newsgroups or hierarchies in Usenet. Compare
   [13948]Internet Death Penalty, with which this term is sometimes
   confused.
     _________________________________________________________________

   Node:user, Next:[13949]user-friendly, Previous:[13950]Usenet Death
   Penalty, Up:[13951]= U =

   user n.

   1. Someone doing `real work' with the computer, using it as a means
   rather than an end. Someone who pays to use a computer. See
   [13952]real user. 2. A programmer who will believe anything you tell
   him. One who asks silly questions. [GLS observes: This is slightly
   unfair. It is true that users ask questions (of necessity). Sometimes
   they are thoughtful or deep. Very often they are annoying or downright
   stupid, apparently because the user failed to think for two seconds or
   look in the documentation before bothering the maintainer.] See
   [13953]luser. 3. Someone who uses a program from the outside, however
   skillfully, without getting into the internals of the program. One who
   reports bugs instead of just going ahead and fixing them.

   The general theory behind this term is that there are two classes of
   people who work with a program: there are implementors (hackers) and
   [13954]lusers. The users are looked down on by hackers to some extent
   because they don't understand the full ramifications of the system in
   all its glory. (The few users who do are known as `real winners'.) The
   term is a relative one: a skilled hacker may be a user with respect to
   some program he himself does not hack. A LISP hacker might be one who
   maintains LISP or one who uses LISP (but with the skill of a hacker).
   A LISP user is one who uses LISP, whether skillfully or not. Thus
   there is some overlap between the two terms; the subtle distinctions
   must be resolved by context.
     _________________________________________________________________

   Node:user-friendly, Next:[13955]user-obsequious, Previous:[13956]user,
   Up:[13957]= U =

   user-friendly adj.

   Programmer-hostile. Generally used by hackers in a critical tone, to
   describe systems that hold the user's hand so obsessively that they
   make it painful for the more experienced and knowledgeable to get any
   work done. See [13958]menuitis, [13959]drool-proof paper,
   [13960]Macintrash, [13961]user-obsequious.
     _________________________________________________________________

   Node:user-obsequious, Next:[13962]userland,
   Previous:[13963]user-friendly, Up:[13964]= U =

   user-obsequious adj.

   Emphatic form of [13965]user-friendly. Connotes a system so verbose,
   inflexible, and determinedly simple-minded that it is nearly unusable.
   "Design a system any fool can use and only a fool will want to use
   it." See [13966]WIMP environment, [13967]Macintrash.
     _________________________________________________________________

   Node:userland, Next:[13968]USG Unix, Previous:[13969]user-obsequious,
   Up:[13970]= U =

   userland n.

   Anywhere outside the kernel. "That code belongs in userland." This
   term has been in common use among [13971]Linux kernel hackers since at
   leat 1997, and seems to have originated in that community.
     _________________________________________________________________

   Node:USG Unix, Next:[13972]UTSL, Previous:[13973]userland, Up:[13974]=
   U =

   USG Unix /U-S-G yoo'niks/ n.,obs.

   Refers to AT&T Unix commercial versions after [13975]Version 7,
   especially System III and System V releases 1, 2, and 3. So called
   because during most of the lifespan of those versions AT&T's support
   crew was called the `Unix Support Group', but it is applied to version
   that pre- and post-dated the USG group but were of the same lineage.
   This term is now historical. See [13976]BSD, [13977]Unix.
     _________________________________________________________________

   Node:UTSL, Next:[13978]UUCPNET, Previous:[13979]USG Unix, Up:[13980]=
   U =

   UTSL // n.

   [Unix] On-line acronym for `Use the Source, Luke' (a pun on Obi-Wan
   Kenobi's "Use the Force, Luke!" in "Star Wars") -- analogous to
   [13981]RTFS (sense 1), but more polite. This is a common way of
   suggesting that someone would be better off reading the source code
   that supports whatever feature is causing confusion, rather than
   making yet another futile pass through the manuals, or broadcasting
   questions on Usenet that haven't attracted [13982]wizards to answer
   them.

   Once upon a time in [13983]elder days, everyone running Unix had
   source. After 1978, AT&T's policy tightened up, so this objurgation
   was in theory appropriately directed only at associates of some outfit
   with a Unix source license. In practice, bootlegs of Unix source code
   (made precisely for reference purposes) were so ubiquitous that one
   could utter it at almost anyone on the network without concern.

   Nowadays, free Unix clones have become widely enough distributed that
   anyone can read source legally. The most widely distributed is
   certainly Linux, with variants of the NET/2 and 4.4BSD distributions
   running second. Cheap commercial Unixes with source such as BSD/OS are
   accelerating this trend.
     _________________________________________________________________

   Node:UUCPNET, Next:[13984]V7, Previous:[13985]UTSL, Up:[13986]= U =

   UUCPNET n. obs.

   The store-and-forward network consisting of all the world's connected
   Unix machines (and others running some clone of the UUCP (Unix-to-Unix
   CoPy) software). Any machine reachable only via a [13987]bang path is
   on UUCPNET. This term has been rendered obsolescent by the spread of
   cheap Internet connections in the 1990s; the few remaining UUCP links
   are essentially slow channels to the Internet rather than an
   autonomous network. See [13988]network address.
     _________________________________________________________________

   Node:= V =, Next:[13989]= W =, Previous:[13990]= U =, Up:[13991]The
   Jargon Lexicon

= V =

     * [13992]V7:
     * [13993]vadding:
     * [13994]vanilla:
     * [13995]vanity domain:
     * [13996]vannevar:
     * [13997]vaporware:
     * [13998]var:
     * [13999]vaston:
     * [14000]VAX:
     * [14001]VAXectomy:
     * [14002]VAXen:
     * [14003]vaxherd:
     * [14004]vaxism:
     * [14005]vaxocentrism:
     * [14006]vdiff:
     * [14007]veeblefester:
     * [14008]velveeta:
     * [14009]ventilator card:
     * [14010]Venus flytrap:
     * [14011]verbage:
     * [14012]verbiage:
     * [14013]Version 7:
     * [14014]vgrep:
     * [14015]vi:
     * [14016]video toaster:
     * [14017]videotex:
     * [14018]virgin:
     * [14019]virtual:
     * [14020]virtual beer:
     * [14021]virtual Friday:
     * [14022]virtual reality:
     * [14023]virtual shredder:
     * [14024]virus:
     * [14025]visionary:
     * [14026]VMS:
     * [14027]voice:
     * [14028]voice-net:
     * [14029]voodoo programming:
     * [14030]VR:
     * [14031]Vulcan nerve pinch:
     * [14032]vulture capitalist:
     _________________________________________________________________

   Node:V7, Next:[14033]vadding, Previous:[14034]UUCPNET, Up:[14035]= V =

   V7 /V'sev'en/ n.

   See [14036]Version 7.
     _________________________________________________________________

   Node:vadding, Next:[14037]vanilla, Previous:[14038]V7, Up:[14039]= V =

   vadding /vad'ing/ n.

   [from VAD, a permutation of ADV (i.e., [14040]ADVENT), used to avoid a
   particular [14041]admin's continual search-and-destroy sweeps for the
   game] A leisure-time activity of certain hackers involving the covert
   exploration of the `secret' parts of large buildings -- basements,
   roofs, freight elevators, maintenance crawlways, steam tunnels, and
   the like. A few go so far as to learn locksmithing in order to
   synthesize vadding keys. The verb is `to vad' (compare
   [14042]phreaking; see also [14043]hack, sense 9). This term dates from
   the late 1970s, before which such activity was simply called
   `hacking'; the older usage is still prevalent at MIT.

   The most extreme and dangerous form of vadding is `elevator rodeo',
   a.k.a. `elevator surfing', a sport played by wrasslin' down a
   thousand-pound elevator car with a 3-foot piece of string, and then
   exploiting this mastery in various stimulating ways (such as elevator
   hopping, shaft exploration, rat-racing, and the ever-popular drop
   experiments). Kids, don't try this at home! See also [14044]hobbit
   (sense 2).
     _________________________________________________________________

   Node:vanilla, Next:[14045]vanity domain, Previous:[14046]vadding,
   Up:[14047]= V =

   vanilla adj.

   [from the default flavor of ice cream in the U.S.] Ordinary
   [14048]flavor, standard. When used of food, very often does not mean
   that the food is flavored with vanilla extract! For example, `vanilla
   wonton soup' means ordinary wonton soup, as opposed to hot-and-sour
   wonton soup. Applied to hardware and software, as in "Vanilla Version
   7 Unix can't run on a vanilla 11/34." Also used to orthogonalize chip
   nomenclature; for instance, a 74V00 means what TI calls a 7400, as
   distinct from a 74LS00, etc. This word differs from [14049]canonical
   in that the latter means `default', whereas vanilla simply means
   `ordinary'. For example, when hackers go on a [14050]great-wall,
   hot-and-sour soup is the [14051]canonical soup to get (because that is
   what most of them usually order) even though it isn't the vanilla
   (wonton) soup.
     _________________________________________________________________

   Node:vanity domain, Next:[14052]vannevar, Previous:[14053]vanilla,
   Up:[14054]= V =

   vanity domain n.

   [common; from `vanity plate' as in car license plate] An Internet
   domain, particularly in the .com or .org top-level domains, apparently
   created for no reason other than boosting the creator's ego.
     _________________________________________________________________

   Node:vannevar, Next:[14055]vaporware, Previous:[14056]vanity domain,
   Up:[14057]= V =

   vannevar /van'*-var/ n.

   A bogus technological prediction or a foredoomed engineering concept,
   esp. one that fails by implicitly assuming that technologies develop
   linearly, incrementally, and in isolation from one another when in
   fact the learning curve tends to be highly nonlinear, revolutions are
   common, and competition is the rule. The prototype was Vannevar Bush's
   prediction of `electronic brains' the size of the Empire State
   Building with a Niagara-Falls-equivalent cooling system for their
   tubes and relays, a prediction made at a time when the semiconductor
   effect had already been demonstrated. Other famous vannevars have
   included magnetic-bubble memory, LISP machines, [14058]videotex, and a
   paper from the late 1970s that computed a purported ultimate limit on
   areal density for ICs that was in fact less than the routine densities
   of 5 years later.
     _________________________________________________________________

   Node:vaporware, Next:[14059]var, Previous:[14060]vannevar, Up:[14061]=
   V =

   vaporware /vay'pr-weir/ n.

   Products announced far in advance of any release (which may or may not
   actually take place). See also [14062]brochureware.
     _________________________________________________________________

   Node:var, Next:[14063]vaston, Previous:[14064]vaporware, Up:[14065]= V
   =

   var /veir/ or /var/ n.

   Short for `variable'. Compare [14066]arg, [14067]param.
     _________________________________________________________________

   Node:vaston, Next:[14068]VAX, Previous:[14069]var, Up:[14070]= V =

   vaston n.

   [Durham, UK] The unit of `load average'. A measure of how much work a
   computer is doing. A meter displaying this as a function of time is
   known as a `vastometer'. First used during a computing practical in
   December 1996.
     _________________________________________________________________

   Node:VAX, Next:[14071]VAXectomy, Previous:[14072]vaston, Up:[14073]= V
   =

   VAX /vaks/ n.

   1. [from Virtual Address eXtension] The most successful minicomputer
   design in industry history, possibly excepting its immediate ancestor,
   the PDP-11. Between its release in 1978 and its eclipse by
   [14074]killer micros after about 1986, the VAX was probably the
   hacker's favorite machine of them all, esp. after the 1982 release of
   4.2 BSD Unix (see [14075]BSD). Esp. noted for its large,
   assembler-programmer-friendly instruction set -- an asset that became
   a liability after the RISC revolution. 2. A major brand of vacuum
   cleaner in Britain. Cited here because its sales pitch, "Nothing sucks
   like a VAX!" became a sort of battle-cry of RISC partisans. It is even
   sometimes claimed that DEC actually entered a cross-licensing deal
   with the vacuum-Vax people that allowed them to market VAX computers
   in the U.K. in return for not challenging the vacuum cleaner trademark
   in the U.S.

   A rival brand actually pioneered the slogan: its original form was
   "Nothing sucks like Electrolux". It has apparently become a classic
   example (used in advertising textbooks) of the perils of not knowing
   the local idiom. But in 1996, the press manager of Electrolux AB,
   while confirming that the company used this slogan in the late 1960s,
   also tells us that their marketing people were fully aware of the
   possible double entendre and intended it to gain attention.

   And gain attention it did - the VAX-vacuum-cleaner people thought the
   slogan a sufficiently good idea to copy it. Several British hackers
   report that VAX's promotions used it in 1986-1987, and we have one
   report from a New Zealander that the infamous slogan surfaced there in
   TV ads for the product in 1992.
     _________________________________________________________________

   Node:VAXectomy, Next:[14076]VAXen, Previous:[14077]VAX, Up:[14078]= V
   =

   VAXectomy /vak-sek't*-mee/ n.

   [by analogy with `vasectomy'] A VAX removal. [14079]DEC's Microvaxen,
   especially, are much slower than newer RISC-based workstations such as
   the SPARC. Thus, if one knows one has a replacement coming, VAX
   removal can be cause for celebration.
     _________________________________________________________________

   Node:VAXen, Next:[14080]vaxherd, Previous:[14081]VAXectomy,
   Up:[14082]= V =

   VAXen /vak'sn/ n.

   [from `oxen', perhaps influenced by `vixen'] (alt. `vaxen') The plural
   canonically used among hackers for the [14083]DEC VAX computers. "Our
   installation has four PDP-10s and twenty vaxen." See [14084]boxen.
     _________________________________________________________________

   Node:vaxherd, Next:[14085]vaxism, Previous:[14086]VAXen, Up:[14087]= V
   =

   vaxherd /vaks'herd/ n. obs.

   [from `oxherd'] A VAX operator. The image is reinforced because VAXen
   actually did tend to come in herds, technically known as `clusters'.
     _________________________________________________________________

   Node:vaxism, Next:[14088]vaxocentrism, Previous:[14089]vaxherd,
   Up:[14090]= V =

   vaxism /vak'sizm/ n.

   A piece of code that exhibits [14091]vaxocentrism in critical areas.
   Compare [14092]PC-ism, [14093]unixism.
     _________________________________________________________________

   Node:vaxocentrism, Next:[14094]vdiff, Previous:[14095]vaxism,
   Up:[14096]= V =

   vaxocentrism /vak`soh-sen'trizm/ n.

   [analogy with `ethnocentrism'] A notional disease said to afflict C
   programmers who persist in coding according to certain assumptions
   that are valid (esp. under Unix) on [14097]VAXen but false elsewhere.
   Among these are:
    1. The assumption that dereferencing a null pointer is safe because
       it is all bits 0, and location 0 is readable and 0. Problem: this
       may instead cause an illegal-address trap on non-VAXen, and even
       on VAXen under OSes other than BSD Unix. Usually this is an
       implicit assumption of sloppy code (forgetting to check the
       pointer before using it), rather than deliberate exploitation of a
       misfeature.
    2. The assumption that characters are signed.
    3. The assumption that a pointer to any one type can freely be cast
       into a pointer to any other type. A stronger form of this is the
       assumption that all pointers are the same size and format, which
       means you don't have to worry about getting the casts or types
       correct in calls. Problem: this fails on word-oriented machines or
       others with multiple pointer formats.
    4. The assumption that the parameters of a routine are stored in
       memory, on a stack, contiguously, and in strictly ascending or
       descending order. Problem: this fails on many RISC architectures.
    5. The assumption that pointer and integer types are the same size,
       and that pointers can be stuffed into integer variables (and
       vice-versa) and drawn back out without being truncated or mangled.
       Problem: this fails on segmented architectures or word-oriented
       machines with funny pointer formats.
    6. The assumption that a data type of any size may begin at any byte
       address in memory (for example, that you can freely construct and
       dereference a pointer to a word- or greater-sized object at an odd
       char address). Problem: this fails on many (esp. RISC)
       architectures better optimized for [14098]HLL execution speed, and
       can cause an illegal address fault or bus error.
    7. The (related) assumption that there is no padding at the end of
       types and that in an array you can thus step right from the last
       byte of a previous component to the first byte of the next one.
       This is not only machine- but compiler-dependent.
    8. The assumption that memory address space is globally flat and that
       the array reference foo[-1] is necessarily valid. Problem: this
       fails at 0, or other places on segment-addressed machines like
       Intel chips (yes, segmentation is universally considered a
       [14099]brain-damaged way to design machines (see [14100]moby), but
       that is a separate issue).
    9. The assumption that objects can be arbitrarily large with no
       special considerations. Problem: this fails on segmented
       architectures and under non-virtual-addressing environments.
   10. The assumption that the stack can be as large as memory. Problem:
       this fails on segmented architectures or almost anything else
       without virtual addressing and a paged stack.
   11. The assumption that bits and addressable units within an object
       are ordered in the same way and that this order is a constant of
       nature. Problem: this fails on [14101]big-endian machines.
   12. The assumption that it is meaningful to compare pointers to
       different objects not located within the same array, or to objects
       of different types. Problem: the former fails on segmented
       architectures, the latter on word-oriented machines or others with
       multiple pointer formats.
   13. The assumption that an int is 32 bits, or (nearly equivalently)
       the assumption that sizeof(int) == sizeof(long). Problem: this
       fails on PDP-11s, 286-based systems and even on 386 and 68000
       systems under some compilers (and on 64-bit systems like the
       Alpha, of course).
   14. The assumption that argv[] is writable. Problem: this fails in
       many embedded-systems C environments and even under a few flavors
       of Unix.

   Note that a programmer can validly be accused of vaxocentrism even if
   he or she has never seen a VAX. Some of these assumptions (esp. 2-5)
   were valid on the PDP-11, the original C machine, and became endemic
   years before the VAX. The terms `vaxocentricity' and
   `all-the-world's-a-VAX syndrome' have been used synonymously.
     _________________________________________________________________

   Node:vdiff, Next:[14102]veeblefester, Previous:[14103]vaxocentrism,
   Up:[14104]= V =

   vdiff /vee'dif/ v.,n.

   Visual diff. The operation of finding differences between two files by
   [14105]eyeball search. The term `optical diff' has also been reported,
   and is sometimes more specifically used for the act of superimposing
   two nearly identical printouts on one another and holding them up to a
   light to spot differences. Though this method is poor for detecting
   omissions in the `rear' file, it can also be used with printouts of
   graphics, a claim few if any diff programs can make. See [14106]diff.
     _________________________________________________________________

   Node:veeblefester, Next:[14107]velveeta, Previous:[14108]vdiff,
   Up:[14109]= V =

   veeblefester /vee'b*l-fes`tr/ n.

   [from the "Born Loser" comix via Commodore; prob. originally from
   "Mad" Magazine's `Veeblefetzer' parodies beginning in #15, 1954] Any
   obnoxious person engaged in the (alleged) professions of marketing or
   management. Antonym of [14110]hacker. Compare [14111]suit,
   [14112]marketroid.
     _________________________________________________________________

   Node:velveeta, Next:[14113]ventilator card,
   Previous:[14114]veeblefester, Up:[14115]= V =

   velveeta n.

   [Usenet: by analogy with [14116]spam. The trade name Velveeta is
   attached in the U.S. to a particularly nasty processed-cheese spread.]
   Also knows as [14117]ECP; a message that is excessively cross-posted,
   as opposed to [14118]spam which is too frequently posted. This term is
   widely recognized but not commonly used; most people refer to both
   kinds of abuse as spam. Compare [14119]jello.
     _________________________________________________________________

   Node:ventilator card, Next:[14120]Venus flytrap,
   Previous:[14121]velveeta, Up:[14122]= V =

   ventilator card n.

   Syn. [14123]lace card.
     _________________________________________________________________

   Node:Venus flytrap, Next:[14124]verbage, Previous:[14125]ventilator
   card, Up:[14126]= V =

   Venus flytrap n.

   [after the insect-eating plant] See [14127]firewall machine.
     _________________________________________________________________

   Node:verbage, Next:[14128]verbiage, Previous:[14129]Venus flytrap,
   Up:[14130]= V =

   verbage /ver'b*j/ n.

   A deliberate misspelling and mispronunciation of [14131]verbiage that
   assimilates it to the word `garbage'. Compare [14132]content-free.
   More pejorative than `verbiage'.
     _________________________________________________________________

   Node:verbiage, Next:[14133]Version 7, Previous:[14134]verbage,
   Up:[14135]= V =

   verbiage n.

   When the context involves a software or hardware system, this refers
   to [14136]documentation. This term borrows the connotations of
   mainstream `verbiage' to suggest that the documentation is of marginal
   utility and that the motives behind its production have little to do
   with the ostensible subject.
     _________________________________________________________________

   Node:Version 7, Next:[14137]vgrep, Previous:[14138]verbiage,
   Up:[14139]= V =

   Version 7 alt. V7 /vee' se'vn/ n.

   The first widely distributed version of [14140]Unix, released
   unsupported by Bell Labs in 1978. The term is used adjectivally to
   describe Unix features and programs that date from that release, and
   are thus guaranteed to be present and portable in all Unix versions
   (this was the standard gauge of portability before the POSIX and IEEE
   1003 standards). Note that this usage does not derive from the release
   being the "seventh version of [14141]Unix"; research [14142]Unix at
   Bell Labs has traditionally been numbered according to the edition of
   the associated documentation. Indeed, only the widely-distributed
   Sixth and Seventh Editions are widely known as V[67]; the OS that
   might today be known as `V10' is instead known in full as "Tenth
   Edition Research Unix" or just "Tenth Edition" for short. For this
   reason, "V7" is often read by cognoscenti as "Seventh Edition". See
   [14143]BSD, [14144]USG Unix, [14145]Unix. Some old-timers impatient
   with commercialization and kernel bloat still maintain that V7 was the
   Last True Unix.
     _________________________________________________________________

   Node:vgrep, Next:[14146]vi, Previous:[14147]Version 7, Up:[14148]= V =

   vgrep /vee'grep/ v.,n.

   Visual grep. The operation of finding patterns in a file optically
   rather than digitally (also called an `optical grep'). See
   [14149]grep; compare [14150]vdiff.
     _________________________________________________________________

   Node:vi, Next:[14151]video toaster, Previous:[14152]vgrep, Up:[14153]=
   V =

   vi /V-I/, not /vi:/ and never /siks/ n.

   [from `Visual Interface'] A screen editor crufted together by Bill Joy
   for an early [14154]BSD release. Became the de facto standard Unix
   editor and a nearly undisputed hacker favorite outside of MIT until
   the rise of [14155]EMACS after about 1984. Tends to frustrate new
   users no end, as it will neither take commands while expecting input
   text nor vice versa, and the default setup on older versions provides
   no indication of which mode the editor is in (years ago, a
   correspondent reported that he has often heard the editor's name
   pronounced /vi:l/; there is now a vi clone named `vile'). Nevertheless
   vi (and variants such as vim and elvis) is still widely used (about
   half the respondents in a 1991 Usenet poll preferred it), and even
   EMACS fans often resort to it as a mail editor and for small editing
   jobs (mainly because it starts up faster than the bulkier versions of
   EMACS). See [14156]holy wars.
     _________________________________________________________________

   Node:video toaster, Next:[14157]videotex, Previous:[14158]vi,
   Up:[14159]= V =

   video toaster n.

   Historically, an Amiga fitted with a particular line of special video
   effects hardware from NewTek - long a popular platform at
   special-effects and video production houses. More generally, any
   computer system designed specifically for video production and
   manipulation. Compare [14160]web toaster and see [14161]toaster.
     _________________________________________________________________

   Node:videotex, Next:[14162]virgin, Previous:[14163]video toaster,
   Up:[14164]= V =

   videotex n. obs.

   An electronic service offering people the privilege of paying to read
   the weather on their television screens instead of having somebody
   read it to them for free while they brush their teeth. The idea bombed
   everywhere it wasn't government-subsidized, because by the time
   videotex was practical the installed base of personal computers could
   hook up to timesharing services and do the things for which videotex
   might have been worthwhile better and cheaper. Videotex planners badly
   overestimated both the appeal of getting information from a computer
   and the cost of local intelligence at the user's end. Like the
   [14165]gorilla arm effect, this has been a cautionary tale to hackers
   ever since. See also [14166]vannevar.
     _________________________________________________________________

   Node:virgin, Next:[14167]virtual, Previous:[14168]videotex,
   Up:[14169]= V =

   virgin adj.

   Unused; pristine; in a known initial state. "Let's bring up a virgin
   system and see if it crashes again." (Esp. useful after contracting a
   [14170]virus through [14171]SEX.) Also, by extension, buffers and the
   like within a program that have not yet been used.
     _________________________________________________________________

   Node:virtual, Next:[14172]virtual beer, Previous:[14173]virgin,
   Up:[14174]= V =

   virtual adj.

   [via the technical term `virtual memory', prob. from the term `virtual
   image' in optics] 1. Common alternative to [14175]logical; often used
   to refer to the artificial objects (like addressable virtual memory
   larger than physical memory) simulated by a computer system as a
   convenient way to manage access to shared resources. 2. Simulated;
   performing the functions of something that isn't really there. An
   imaginative child's doll may be a virtual playmate. Oppose
   [14176]real.
     _________________________________________________________________

   Node:virtual beer, Next:[14177]virtual Friday,
   Previous:[14178]virtual, Up:[14179]= V =

   virtual beer n.

   Praise or thanks. Used universally in the Linux community. Originally
   this term signified cash, after a famous incident in which some some
   Britishers who wanted to buy Linus a beer and sent him money to
   Finland to do so.
     _________________________________________________________________

   Node:virtual Friday, Next:[14180]virtual reality,
   Previous:[14181]virtual beer, Up:[14182]= V =

   virtual Friday n.

   (also `logical Friday') The last day before an extended weekend, if
   that day is not a `real' Friday. For example, the U.S. holiday
   Thanksgiving is always on a Thursday. The next day is often also a
   holiday or taken as an extra day off, in which case Wednesday of that
   week is a virtual Friday (and Thursday is a virtual Saturday, as is
   Friday). There are also `virtual Mondays' that are actually Tuesdays,
   after the three-day weekends associated with many national holidays in
   the U.S.
     _________________________________________________________________

   Node:virtual reality, Next:[14183]virtual shredder,
   Previous:[14184]virtual Friday, Up:[14185]= V =

   virtual reality n.

   1. Computer simulations that use 3-D graphics and devices such as the
   Dataglove to allow the user to interact with the simulation. See
   [14186]cyberspace. 2. A form of network interaction incorporating
   aspects of role-playing games, interactive theater, improvisational
   comedy, and `true confessions' magazines. In a virtual reality forum
   (such as Usenet's alt.callahans newsgroup or the [14187]MUD
   experiments on Internet), interaction between the participants is
   written like a shared novel complete with scenery, `foreground
   characters' that may be personae utterly unlike the people who write
   them, and common `background characters' manipulable by all parties.
   The one iron law is that you may not write irreversible changes to a
   character without the consent of the person who `owns' it. Otherwise
   anything goes. See [14188]bamf, [14189]cyberspace,
   [14190]teledildonics.
     _________________________________________________________________

   Node:virtual shredder, Next:[14191]virus, Previous:[14192]virtual
   reality, Up:[14193]= V =

   virtual shredder n.

   The jargonic equivalent of the [14194]bit bucket at shops using IBM's
   VM/CMS operating system. VM/CMS officially supports a whole bestiary
   of virtual card readers, virtual printers, and other phantom devices;
   these are used to supply some of the same capabilities Unix gets from
   pipes and I/O redirection.
     _________________________________________________________________

   Node:virus, Next:[14195]visionary, Previous:[14196]virtual shredder,
   Up:[14197]= V =

   virus n.

   [from the obvious analogy with biological viruses, via SF] A cracker
   program that searches out other programs and `infects' them by
   embedding a copy of itself in them, so that they become [14198]Trojan
   horses. When these programs are executed, the embedded virus is
   executed too, thus propagating the `infection'. This normally happens
   invisibly to the user. Unlike a [14199]worm, a virus cannot infect
   other computers without assistance. It is propagated by vectors such
   as humans trading programs with their friends (see [14200]SEX). The
   virus may do nothing but propagate itself and then allow the program
   to run normally. Usually, however, after propagating silently for a
   while, it starts doing things like writing cute messages on the
   terminal or playing strange tricks with the display (some viruses
   include nice [14201]display hacks). Many nasty viruses, written by
   particularly perversely minded [14202]crackers, do irreversible
   damage, like nuking all the user's files.

   In the 1990s, viruses became a serious problem, especially among
   Windows users; the lack of security on these machines enables viruses
   to spread easily, even infecting the operating system (Unix machines,
   by contrast, are immune to such attacks). The production of special
   anti-virus software has become an industry, and a number of
   exaggerated media reports have caused outbreaks of near hysteria among
   users; many [14203]lusers tend to blame everything that doesn't work
   as they had expected on virus attacks. Accordingly, this sense of
   `virus' has passed not only into techspeak but into also popular usage
   (where it is often incorrectly used to denote a [14204]worm or even a
   [14205]Trojan horse). See [14206]phage; compare [14207]back door; see
   also [14208]Unix conspiracy.
     _________________________________________________________________

   Node:visionary, Next:[14209]VMS, Previous:[14210]virus, Up:[14211]= V
   =

   visionary n.

   1. One who hacks vision, in the sense of an Artificial Intelligence
   researcher working on the problem of getting computers to `see' things
   using TV cameras. (There isn't any problem in sending information from
   a TV camera to a computer. The problem is, how can the computer be
   programmed to make use of the camera information? See [14212]SMOP,
   [14213]AI-complete.) 2. [IBM] One who reads the outside literature. At
   IBM, apparently, such a penchant is viewed with awe and wonder.
     _________________________________________________________________

   Node:VMS, Next:[14214]voice, Previous:[14215]visionary, Up:[14216]= V
   =

   VMS /V-M-S/ n.

   [14217]DEC's proprietary operating system for its VAX minicomputer;
   one of the seven or so environments that loom largest in hacker
   folklore. Many Unix fans generously concede that VMS would probably be
   the hacker's favorite commercial OS if Unix didn't exist; though true,
   this makes VMS fans furious. One major hacker gripe with VMS concerns
   its slowness -- thus the following limerick:
   There once was a system called VMS
   Of cycles by no means abstemious.
        It's chock-full of hacks
        And runs on a VAX
   And makes my poor stomach all squeamious.
                                    --- The Great Quux

   See also [14218]VAX, [14219]TOPS-10, [14220]TOPS-20, [14221]Unix,
   [14222]runic.
     _________________________________________________________________

   Node:voice, Next:[14223]voice-net, Previous:[14224]VMS, Up:[14225]= V
   =

   voice vt.

   To phone someone, as opposed to emailing them or connecting in
   [14226]talk mode. "I'm busy now; I'll voice you later."
     _________________________________________________________________

   Node:voice-net, Next:[14227]voodoo programming, Previous:[14228]voice,
   Up:[14229]= V =

   voice-net n.

   Hackish way of referring to the telephone system, analogizing it to a
   digital network. Usenet [14230]sig blocks not uncommonly include the
   sender's phone next to a "Voice:" or "Voice-Net:" header; common
   variants of this are "Voicenet" and "V-Net". Compare [14231]paper-net,
   [14232]snail-mail.
     _________________________________________________________________

   Node:voodoo programming, Next:[14233]VR, Previous:[14234]voice-net,
   Up:[14235]= V =

   voodoo programming n.

   [from George Bush's "voodoo economics"] 1. The use by guess or
   cookbook of an [14236]obscure or [14237]hairy system, feature, or
   algorithm that one does not truly understand. The implication is that
   the technique may not work, and if it doesn't, one will never know
   why. Almost synonymous with [14238]black magic, except that black
   magic typically isn't documented and nobody understands it. Compare
   [14239]magic, [14240]deep magic, [14241]heavy wizardry, [14242]rain
   dance, [14243]cargo cult programming, [14244]wave a dead chicken. 2.
   Things programmers do that they know shouldn't work but they try
   anyway, and which sometimes actually work, such as recompiling
   everything.
     _________________________________________________________________

   Node:VR, Next:[14245]Vulcan nerve pinch, Previous:[14246]voodoo
   programming, Up:[14247]= V =

   VR // [MUD] n.

   On-line abbrev for [14248]virtual reality, as opposed to [14249]RL.
     _________________________________________________________________

   Node:Vulcan nerve pinch, Next:[14250]vulture capitalist,
   Previous:[14251]VR, Up:[14252]= V =

   Vulcan nerve pinch n.

   [from the old "Star Trek" TV series via Commodore Amiga hackers] The
   keyboard combination that forces a soft-boot or jump to ROM monitor
   (on machines that support such a feature). On PC clones this is
   Ctrl-Alt-Del; on Suns, L1-A; on Macintoshes, it is <Cmd>-<Power
   switch> or <CMD>-<CTRL>-<POWER>! Also called [14253]three-finger
   salute. Compare [14254]quadruple bucky.
     _________________________________________________________________

   Node:vulture capitalist, Next:[14255]W2K bug, Previous:[14256]Vulcan
   nerve pinch, Up:[14257]= V =

   vulture capitalist n.

   Pejorative hackerism for `venture capitalist', deriving from the
   common practice of pushing contracts that deprive inventors of control
   over their own innovations and most of the money they ought to have
   made from them.
     _________________________________________________________________

   Node:= W =, Next:[14258]= X =, Previous:[14259]= V =, Up:[14260]The
   Jargon Lexicon

= W =

     * [14261]W2K bug:
     * [14262]wabbit:
     * [14263]WAITS:
     * [14264]waldo:
     * [14265]walk:
     * [14266]walk off the end of:
     * [14267]walking drives:
     * [14268]wall:
     * [14269]wall follower:
     * [14270]wall time:
     * [14271]wall wart:
     * [14272]wallpaper:
     * [14273]wango:
     * [14274]wank:
     * [14275]wannabee:
     * [14276]war dialer:
     * [14277]-ware:
     * [14278]warez:
     * [14279]warez d00dz:
     * [14280]warez kiddies:
     * [14281]warlording:
     * [14282]warm boot:
     * [14283]wart:
     * [14284]washing machine:
     * [14285]washing software:
     * [14286]water MIPS:
     * [14287]wave a dead chicken:
     * [14288]weasel:
     * [14289]web pointer:
     * [14290]web toaster:
     * [14291]webify:
     * [14292]webmaster:
     * [14293]web ring:
     * [14294]wedged:
     * [14295]wedgie:
     * [14296]wedgitude:
     * [14297]weeble:
     * [14298]weeds:
     * [14299]weenie:
     * [14300]Weenix:
     * [14301]well-behaved:
     * [14302]well-connected:
     * [14303]wetware:
     * [14304]whack:
     * [14305]whack-a-mole:
     * [14306]whacker:
     * [14307]whales:
     * [14308]whalesong:
     * [14309]What's a spline?:
     * [14310]wheel:
     * [14311]wheel bit:
     * [14312]wheel of reincarnation:
     * [14313]wheel wars:
     * [14314]White Book:
     * [14315]whitelist:
     * [14316]whizzy:
     * [14317]wibble:
     * [14318]WIBNI:
     * [14319]widget:
     * [14320]wiggles:
     * [14321]WIMP environment:
     * [14322]win:
     * [14323]win big:
     * [14324]win win:
     * [14325]Winchester:
     * [14326]windoid:
     * [14327]window shopping:
     * [14328]Windoze:
     * [14329]winged comments:
     * [14330]winkey:
     * [14331]winnage:
     * [14332]winner:
     * [14333]winnitude:
     * [14334]Wintel:
     * [14335]wired:
     * [14336]wirehead:
     * [14337]wirewater:
     * [14338]wish list:
     * [14339]within delta of:
     * [14340]within epsilon of:
     * [14341]wizard:
     * [14342]Wizard Book:
     * [14343]wizard hat:
     * [14344]wizard mode:
     * [14345]wizardly:
     * [14346]wok-on-the-wall:
     * [14347]womb box:
     * [14348]WOMBAT:
     * [14349]womble:
     * [14350]wonky:
     * [14351]woofer:
     * [14352]workaround:
     * [14353]working as designed:
     * [14354]worm:
     * [14355]wormhole:
     * [14356]wound around the axle:
     * [14357]wrap around:
     * [14358]write-only code:
     * [14359]write-only language:
     * [14360]write-only memory:
     * [14361]Wrong Thing:
     * [14362]wugga wugga:
     * [14363]wumpus:
     * [14364]WYSIAYG:
     * [14365]WYSIWYG:
     _________________________________________________________________

   Node:W2K bug, Next:[14366]wabbit, Previous:[14367]vulture capitalist,
   Up:[14368]= W =

   W2K bug

   [from `Y2K bug' for the Year 2000 problem] The upcoming deployment of
   Microsoft's Windows 2000 operating system, which hackers generally
   expect will be among the worst train wrecks in the history of software
   engineering. Such is the power of Microsoft marketing, however, that
   it is also expected this will not become obvious until it has incurred
   hundreds of millions of dollars in downtime and lost opportunity
   costs.
     _________________________________________________________________

   Node:wabbit, Next:[14369]WAITS, Previous:[14370]W2K bug, Up:[14371]= W
   =

   wabbit /wab'it/ n.

   [almost certainly from Elmer Fudd's immortal line "You wascawwy
   wabbit!"] 1. A legendary early hack reported on a System/360 at RPI
   and elsewhere around 1978; this may have descended (if only by
   inspiration) from a hack called RABBITS reported from 1969 on a
   Burroughs 5500 at the University of Washington Computer Center. The
   program would make two copies of itself every time it was run,
   eventually crashing the system. 2. By extension, any hack that
   includes infinite self-replication but is not a [14372]virus or
   [14373]worm. See [14374]fork bomb and [14375]rabbit job, see also
   [14376]cookie monster.
     _________________________________________________________________

   Node:WAITS, Next:[14377]waldo, Previous:[14378]wabbit, Up:[14379]= W =

   WAITS /wayts/ n.

   The mutant cousin of [14380]TOPS-10 used on a handful of systems at
   [14381]SAIL up to 1990. There was never an `official' expansion of
   WAITS (the name itself having been arrived at by a rather sideways
   process), but it was frequently glossed as `West-coast Alternative to
   ITS'. Though WAITS was less visible than ITS, there was frequent
   exchange of people and ideas between the two communities, and
   innovations pioneered at WAITS exerted enormous indirect influence.
   The early screen modes of [14382]EMACS, for example, were directly
   inspired by WAITS's `E' editor -- one of a family of editors that were
   the first to do `real-time editing', in which the editing commands
   were invisible and where one typed text at the point of
   insertion/overwriting. The modern style of multi-region windowing is
   said to have originated there, and WAITS alumni at XEROX PARC and
   elsewhere played major roles in the developments that led to the XEROX
   Star, the Macintosh, and the Sun workstations. Also invented there
   were [14383]bucky bits -- thus, the ALT key on every IBM PC is a WAITS
   legacy. One WAITS feature very notable in pre-Web days was a news-wire
   interface that allowed WAITS hackers to read, store, and filter AP and
   UPI dispatches from their terminals; the system also featured a
   still-unusual level of support for what is now called `multimedia'
   computing, allowing analog audio and video signals to be switched to
   programming terminals.
     _________________________________________________________________

   Node:waldo, Next:[14384]walk, Previous:[14385]WAITS, Up:[14386]= W =

   waldo /wol'doh/ n.

   [From Robert A. Heinlein's story "Waldo"] 1. A mechanical agent, such
   as a gripper arm, controlled by a human limb. When these were
   developed for the nuclear industry in the mid-1940s they were named
   after the invention described by Heinlein in the story, which he wrote
   in 1942. Now known by the more generic term `telefactoring', this
   technology is of intense interest to NASA for tasks like space station
   maintenance. 2. At Harvard (particularly by Tom Cheatham and
   students), this is used instead of [14387]foobar as a metasyntactic
   variable and general nonsense word. See [14388]foo, [14389]bar,
   [14390]foobar, [14391]quux.
     _________________________________________________________________

   Node:walk, Next:[14392]walk off the end of, Previous:[14393]waldo,
   Up:[14394]= W =

   walk n.,vt.

   Traversal of a data structure, especially an array or linked-list data
   structure in [14395]core. See also [14396]codewalker, [14397]silly
   walk, [14398]clobber.
     _________________________________________________________________

   Node:walk off the end of, Next:[14399]walking drives,
   Previous:[14400]walk, Up:[14401]= W =

   walk off the end of vt.

   To run past the end of an array, list, or medium after stepping
   through it -- a good way to land in trouble. Often the result of an
   [14402]off-by-one error. Compare [14403]clobber, [14404]roach,
   [14405]smash the stack.
     _________________________________________________________________

   Node:walking drives, Next:[14406]wall, Previous:[14407]walk off the
   end of, Up:[14408]= W =

   walking drives n.

   An occasional failure mode of magnetic-disk drives back in the days
   when they were huge, clunky [14409]washing machines. Those old
   [14410]dinosaur parts carried terrific angular momentum; the
   combination of a misaligned spindle or worn bearings and stick-slip
   interactions with the floor could cause them to `walk' across a room,
   lurching alternate corners forward a couple of millimeters at a time.
   There is a legend about a drive that walked over to the only door to
   the computer room and jammed it shut; the staff had to cut a hole in
   the wall in order to get at it! Walking could also be induced by
   certain patterns of drive access (a fast seek across the whole width
   of the disk, followed by a slow seek in the other direction). Some
   bands of old-time hackers figured out how to induce disk-accessing
   patterns that would do this to particular drive models and held
   disk-drive races.
     _________________________________________________________________

   Node:wall, Next:[14411]wall follower, Previous:[14412]walking drives,
   Up:[14413]= W =

   wall interj.

   [WPI] 1. An indication of confusion, usually spoken with a quizzical
   tone: "Wall??" 2. A request for further explication. Compare
   [14414]octal forty. 3. [Unix, from `write all'] v. To send a message
   to everyone currently logged in, esp. with the wall(8) utility.

   It is said that sense 1 came from the idiom `like talking to a blank
   wall'. It was originally used in situations where, after you had
   carefully answered a question, the questioner stared at you blankly,
   clearly having understood nothing that was explained. You would then
   throw out a "Hello, wall?" to elicit some sort of response from the
   questioner. Later, confused questioners began voicing "Wall?"
   themselves.
     _________________________________________________________________

   Node:wall follower, Next:[14415]wall time, Previous:[14416]wall,
   Up:[14417]= W =

   wall follower n.

   A person or algorithm that compensates for lack of sophistication or
   native stupidity by efficiently following some simple procedure shown
   to have been effective in the past. Used of an algorithm, this is not
   necessarily pejorative; it recalls `Harvey Wallbanger', the winning
   robot in an early AI contest (named, of course, after the cocktail).
   Harvey successfully solved mazes by keeping a `finger' on one wall and
   running till it came out the other end. This was inelegant, but it was
   mathematically guaranteed to work on simply-connected mazes -- and, in
   fact, Harvey outperformed more sophisticated robots that tried to
   `learn' each maze by building an internal representation of it. Used
   of humans, the term is pejorative and implies an uncreative,
   bureaucratic, by-the-book mentality. See also [14418]code grinder;
   compare [14419]droid.
     _________________________________________________________________

   Node:wall time, Next:[14420]wall wart, Previous:[14421]wall follower,
   Up:[14422]= W =

   wall time n.

   (also `wall clock time') 1. `Real world' time (what the clock on the
   wall shows), as opposed to the system clock's idea of time. 2. The
   real running time of a program, as opposed to the number of
   [14423]ticks required to execute it (on a timesharing system these
   always differ, as no one program gets all the ticks, and on
   multiprocessor systems with good thread support one may get more
   processor time than real time).
     _________________________________________________________________

   Node:wall wart, Next:[14424]wallpaper, Previous:[14425]wall time,
   Up:[14426]= W =

   wall wart n.

   A small power-supply brick with integral male plug, designed to plug
   directly into a wall outlet; called a `wart' because when installed on
   a power strip it tends to block up at least one more socket than it
   uses.. These are frequently associated with modems and other small
   electronic devices which would become unacceptably bulky or hot if
   they had power supplies on board (there are other reasons as well
   having to do with the cost of UL certification).
     _________________________________________________________________

   Node:wallpaper, Next:[14427]wango, Previous:[14428]wall wart,
   Up:[14429]= W =

   wallpaper n.

   1. A file containing a listing (e.g., assembly listing) or a
   transcript, esp. a file containing a transcript of all or part of a
   login session. (The idea was that the paper for such listings was
   essentially good only for wallpaper, as evidenced at Stanford, where
   it was used to cover windows.) Now rare, esp. since other systems have
   developed other terms for it (e.g., PHOTO on TWENEX). However, the
   Unix world doesn't have an equivalent term, so perhaps
   [14430]wallpaper will take hold there. The term probably originated on
   ITS, where the commands to begin and end transcript files were :WALBEG
   and :WALEND, with default file WALL PAPER (the space was a path
   delimiter). 2. The background pattern used on graphical workstations
   (this is techspeak under the `Windows' graphical user interface to
   MS-DOS). 3. `wallpaper file' n. The file that contains the wallpaper
   information before it is actually printed on paper. (Even if you don't
   intend ever to produce a real paper copy of the file, it is still
   called a wallpaper file.)
     _________________________________________________________________

   Node:wango, Next:[14431]wank, Previous:[14432]wallpaper, Up:[14433]= W
   =

   wango /wang'goh/ n.

   Random bit-level [14434]grovelling going on in a system during some
   unspecified operation. Often used in combination with [14435]mumble.
   For example: "You start with the `.o' file, run it through this
   postprocessor that does mumble-wango -- and it comes out a snazzy
   object-oriented executable."
     _________________________________________________________________

   Node:wank, Next:[14436]wannabee, Previous:[14437]wango, Up:[14438]= W
   =

   wank /wangk/ n.,v.,adj.

   [Columbia University: prob. by mutation from Commonwealth slang v.
   `wank', to masturbate] Used much as [14439]hack is elsewhere, as a
   noun denoting a clever technique or person or the result of such
   cleverness. May describe (negatively) the act of hacking for hacking's
   sake ("Quit wanking, let's go get supper!") or (more positively) a
   [14440]wizard. Adj. `wanky' describes something particularly clever (a
   person, program, or algorithm). Conversations can also get wanky when
   there are too many wanks involved. This excess wankiness is signalled
   by an overload of the `wankometer' (compare [14441]bogometer). When
   the wankometer overloads, the conversation's subject must be changed,
   or all non-wanks will leave. Compare `neep-neeping' (under
   [14442]neep-neep). Usage: U.S. only. In Britain and the Commonwealth
   this word is extremely rude and is best avoided unless one intends to
   give offense. Adjectival `wanky' is less offensive and simply means
   `stupid' or `broken' (this is mainstream in Great Britain).
     _________________________________________________________________

   Node:wannabee, Next:[14443]war dialer, Previous:[14444]wank,
   Up:[14445]= W =

   wannabee /won'*-bee/ n.

   (also, more plausibly, spelled `wannabe') [from a term recently used
   to describe Madonna fans who dress, talk, and act like their idol;
   prob. originally from biker slang] A would-be [14446]hacker. The
   connotations of this term differ sharply depending on the age and
   exposure of the subject. Used of a person who is in or might be
   entering [14447]larval stage, it is semi-approving; such wannabees can
   be annoying but most hackers remember that they, too, were once such
   creatures. When used of any professional programmer, CS academic,
   writer, or [14448]suit, it is derogatory, implying that said person is
   trying to cuddle up to the hacker mystique but doesn't, fundamentally,
   have a prayer of understanding what it is all about. Overuse of terms
   from this lexicon is often an indication of the [14449]wannabee
   nature. Compare [14450]newbie.

   Historical note: The wannabee phenomenon has a slightly different
   flavor now (1993) than it did ten or fifteen years ago. When the
   people who are now hackerdom's tribal elders were in [14451]larval
   stage, the process of becoming a hacker was largely unconscious and
   unaffected by models known in popular culture -- communities formed
   spontaneously around people who, as individuals, felt irresistibly
   drawn to do hackerly things, and what wannabees experienced was a
   fairly pure, skill-focused desire to become similarly wizardly. Those
   days of innocence are gone forever; society's adaptation to the advent
   of the microcomputer after 1980 included the elevation of the hacker
   as a new kind of folk hero, and the result is that some people
   semi-consciously set out to be hackers and borrow hackish prestige by
   fitting the popular image of hackers. Fortunately, to do this really
   well, one has to actually become a wizard. Nevertheless, old-time
   hackers tend to share a poorly articulated disquiet about the change;
   among other things, it gives them mixed feelings about the effects of
   public compendia of lore like this one.
     _________________________________________________________________

   Node:war dialer, Next:[14452]-ware, Previous:[14453]wannabee,
   Up:[14454]= W =

   war dialer n.

   A cracking tool, a program that calls a given list or range of phone
   numbers and records those which answer with handshake tones (and so
   might be entry points to computer or telecommunications systems). Some
   of these programs have become quite sophisticated, and can now detect
   modem, fax, or PBX tones and log each one separately. The war dialer
   is one of the most important tools in the [14455]phreaker's kit. These
   programs evolved from early [14456]demon dialers.
     _________________________________________________________________

   Node:-ware, Next:[14457]warez, Previous:[14458]war dialer, Up:[14459]=
   W =

   -ware suff.

   [from `software'] Commonly used to form jargon terms for classes of
   software. For examples, see [14460]annoyware, [14461]careware,
   [14462]crippleware, [14463]crudware, [14464]freeware,
   [14465]fritterware, [14466]guiltware, [14467]liveware,
   [14468]meatware, [14469]payware, [14470]psychedelicware,
   [14471]shareware, [14472]shelfware, [14473]vaporware, [14474]wetware.
     _________________________________________________________________

   Node:warez, Next:[14475]warez d00dz, Previous:[14476]-ware,
   Up:[14477]= W =

   warez /weirz/ n.

   Widely used in [14478]cracker subcultures to denote cracked version of
   commercial software, that is versions from which copy-protection has
   been stripped. Hackers recognize this term but don't use it
   themselves. See [14479]warez d00dz, [14480]courier, [14481]leech,
   [14482]elite.
     _________________________________________________________________

   Node:warez d00dz, Next:[14483]warez kiddies, Previous:[14484]warez,
   Up:[14485]= W =

   warez d00dz /weirz doodz/ n.

   A substantial subculture of [14486]crackers refer to themselves as
   `warez d00dz'; there is evidently some connection with [14487]B1FF
   here. As `Ozone Pilot', one former warez d00d, wrote:

     Warez d00dz get illegal copies of copyrighted software. If it has
     copy protection on it, they break the protection so the software
     can be copied. Then they distribute it around the world via several
     gateways. Warez d00dz form badass group names like RAZOR and the
     like. They put up boards that distribute the latest ware, or pirate
     program. The whole point of the Warez sub-culture is to get the
     pirate program released and distributed before any other group. I
     know, I know. But don't ask, and it won't hurt as much. This is how
     they prove their poweress [sic]. It gives them the right to say, "I
     released King's Quest IVXIX before you so obviously my testicles
     are larger." Again don't ask...

   The studly thing to do if one is a warez d00d, it appears, is emit
   `0-day warez', that is copies of commercial software copied and
   cracked on the same day as its retail release. Warez d00ds also hoard
   software in a big way, collecting untold megabytes of arcade-style
   games, pornographic JPGs, and applications they'll never use onto
   their hard disks. As Ozone Pilot acutely observes:

     [BELONG] is the only word you will need to know. Warez d00dz want
     to belong. They have been shunned by everyone, and thus turn to
     cyberspace for acceptance. That is why they always start groups
     like TGW, FLT, USA and the like. Structure makes them happy. [...]
     Warez d00dz will never have a handle like "Pink Daisy" because
     warez d00dz are insecure. Only someone who is very secure with a
     good dose of self-esteem can stand up to the cries of fag and
     girlie-man. More likely you will find warez d00dz with handles
     like: Doctor Death, Deranged Lunatic, Hellraiser, Mad Prince,
     Dreamdevil, The Unknown, Renegade Chemist, Terminator, and Twin
     Turbo. They like to sound badass when they can hide behind their
     terminals. More likely, if you were given a sample of 100 people,
     the person whose handle is Hellraiser is the last person you'd
     associate with the name.

   The contrast with Internet hackers is stark and instructive. See
   [14488]cracker, [14489]wannabee, [14490]handle, [14491]elite,
   [14492]courier, [14493]leech; compare [14494]weenie, [14495]spod.
     _________________________________________________________________

   Node:warez kiddies, Next:[14496]warlording, Previous:[14497]warez
   d00dz, Up:[14498]= W =

   warez kiddies n.

   Even more derogatory way of referring to [14499]warez d00dz; refers to
   the fact that most warez d00dz are around the age of puberty. Compare
   [14500]script kiddies.
     _________________________________________________________________

   Node:warlording, Next:[14501]warm boot, Previous:[14502]warez kiddies,
   Up:[14503]= W =

   warlording v.

   [from the Usenet group alt.fan.warlord] The act of excoriating a
   bloated, ugly, or derivative [14504]sig block. Common grounds for
   warlording include the presence of a signature rendered in a
   [14505]BUAF, over-used or cliched [14506]sig quotes, ugly [14507]ASCII
   art, or simply excessive size. The original `Warlord' was a
   [14508]B1FF-like [14509]newbie c.1991 who featured in his sig a
   particularly large and obnoxious ASCII graphic resembling the sword of
   Conan the Barbarian in the 1981 John Milius movie; the group name
   alt.fan.warlord was sarcasm, and the characteristic mode of warlording
   is devastatingly sarcastic praise.
     _________________________________________________________________

   Node:warm boot, Next:[14510]wart, Previous:[14511]warlording,
   Up:[14512]= W =

   warm boot n.

   See [14513]boot.
     _________________________________________________________________

   Node:wart, Next:[14514]washing machine, Previous:[14515]warm boot,
   Up:[14516]= W =

   wart n.

   A small, [14517]crocky [14518]feature that sticks out of an otherwise
   [14519]clean design. Something conspicuous for localized ugliness,
   especially a special-case exception to a general rule. For example, in
   some versions of csh(1), single quotes literalize every character
   inside them except !. In ANSI C, the ?? syntax used for obtaining
   ASCII characters in a foreign environment is a wart. See also
   [14520]miswart.
     _________________________________________________________________

   Node:washing machine, Next:[14521]washing software,
   Previous:[14522]wart, Up:[14523]= W =

   washing machine n.

   1. Old-style 14-inch hard disks in floor-standing cabinets. So called
   because of the size of the cabinet and the `top-loading' access to the
   media packs -- and, of course, they were always set on `spin cycle'.
   The washing-machine idiom transcends language barriers; it is even
   used in Russian hacker jargon. See also [14524]walking drives. The
   thick channel cables connecting these were called `bit hoses' (see
   [14525]hose, sense 3). 2. [CMU] A machine used exclusively for
   [14526]washing software. CMU has clusters of these.
     _________________________________________________________________

   Node:washing software, Next:[14527]water MIPS, Previous:[14528]washing
   machine, Up:[14529]= W =

   washing software n.

   The process of recompiling a software distribution (used more often
   when the recompilation is occuring from scratch) to pick up and merge
   together all of the various changes that have been made to the source.
     _________________________________________________________________

   Node:water MIPS, Next:[14530]wave a dead chicken,
   Previous:[14531]washing software, Up:[14532]= W =

   water MIPS n.

   (see [14533]MIPS, sense 2) Large, water-cooled machines of either
   today's ECL-supercomputer flavor or yesterday's traditional
   [14534]mainframe type.
     _________________________________________________________________

   Node:wave a dead chicken, Next:[14535]weasel, Previous:[14536]water
   MIPS, Up:[14537]= W =

   wave a dead chicken v.

   To perform a ritual in the direction of crashed software or hardware
   that one believes to be futile but is nevertheless necessary so that
   others are satisfied that an appropriate degree of effort has been
   expended. "I'll wave a dead chicken over the source code, but I really
   think we've run into an OS bug." Compare [14538]voodoo programming,
   [14539]rain dance; see also [14540]casting the runes.
     _________________________________________________________________

   Node:weasel, Next:[14541]web pointer, Previous:[14542]wave a dead
   chicken, Up:[14543]= W =

   weasel n.

   [Cambridge] A naive user, one who deliberately or accidentally does
   things that are stupid or ill-advised. Roughly synonymous with
   [14544]loser.
     _________________________________________________________________

   Node:web pointer, Next:[14545]web toaster, Previous:[14546]weasel,
   Up:[14547]= W =

   web pointer n.

   A World Wide Web [14548]URL. See also [14549]hotlink, which has
   slightly different connotations.
     _________________________________________________________________

   Node:web toaster, Next:[14550]webify, Previous:[14551]web pointer,
   Up:[14552]= W =

   web toaster n.

   A small specialized computer, shipped with no monitor or keyboard or
   any other external peripherals, pre-configured to be controlled
   through an Ethernet port and function as a WWW server. Products of
   this kind (for example the Cobalt Qube) are often about the size of a
   toaster. See [14553]toaster; compare [14554]video toaster.
     _________________________________________________________________

   Node:webify, Next:[14555]webmaster, Previous:[14556]web toaster,
   Up:[14557]= W =

   webify n.

   To put a piece of (possibly already existing) material on the WWW.
   Frequently used for papers ("Why don't you webify all your
   publications?") or for demos ("They webified their 6.866 final
   project"). This term seems to have been (rather logically)
   independently invented multiple times in the early 1990s.
     _________________________________________________________________

   Node:webmaster, Next:[14558]web ring, Previous:[14559]webify,
   Up:[14560]= W =

   webmaster n.

   [WWW: from [14561]postmaster] The person at a site providing World
   Wide Web information who is responsible for maintaining the public
   pages and keeping the Web server running and properly configured.
     _________________________________________________________________

   Node:web ring, Next:[14562]wedged, Previous:[14563]webmaster,
   Up:[14564]= W =

   web ring n.

   Two or more web sites connected by prominent links between sites
   sharing a common interest or theme. Usually such cliques have the
   topology of a ring, in order to make it easy for visitors to navigate
   through all of them.
     _________________________________________________________________

   Node:wedged, Next:[14565]wedgie, Previous:[14566]web ring, Up:[14567]=
   W =

   wedged adj.

   1. To be stuck, incapable of proceeding without help. This is
   different from having crashed. If the system has crashed, it has
   become totally non-functioning. If the system is wedged, it is trying
   to do something but cannot make progress; it may be capable of doing a
   few things, but not be fully operational. For example, a process may
   become wedged if it [14568]deadlocks with another (but not all
   instances of wedging are deadlocks). See also [14569]gronk,
   [14570]locked up, [14571]hosed, [14572]hung (wedged is more severe
   than [14573]hung). 2. Often refers to humans suffering misconceptions.
   "He's totally wedged -- he's convinced that he can levitate through
   meditation." 3. [Unix] Specifically used to describe the state of a
   TTY left in a losing state by abort of a screen-oriented program or
   one that has messed with the line discipline in some obscure way.

   There is some dispute over the origin of this term. It is usually
   thought to derive from a common description of recto-cranial
   inversion; however, it may actually have originated with older
   `hot-press' printing technology in which physical type elements were
   locked into type frames with wedges driven in by mallets. Once this
   had been done, no changes in the typesetting for that page could be
   made.
     _________________________________________________________________

   Node:wedgie, Next:[14574]wedgitude, Previous:[14575]wedged,
   Up:[14576]= W =

   wedgie n.

   [Fairchild] A bug. Prob. related to [14577]wedged.
     _________________________________________________________________

   Node:wedgitude, Next:[14578]weeble, Previous:[14579]wedgie,
   Up:[14580]= W =

   wedgitude /wedj'i-t[y]ood/ n.

   The quality or state of being [14581]wedged.
     _________________________________________________________________

   Node:weeble, Next:[14582]weeds, Previous:[14583]wedgitude, Up:[14584]=
   W =

   weeble /weeb'l/ interj.

   [Cambridge] Used to denote frustration, usually at amazing stupidity.
   "I stuck the disk in upside down." "Weeble...." Compare [14585]gurfle.
     _________________________________________________________________

   Node:weeds, Next:[14586]weenie, Previous:[14587]weeble, Up:[14588]= W
   =

   weeds n.

   1. Refers to development projects or algorithms that have no possible
   relevance or practical application. Comes from `off in the weeds'.
   Used in phrases like "lexical analysis for microcode is serious
   weeds...." 2. At CDC/ETA before its demise, the phrase `go off in the
   weeds' was equivalent to IBM's [14589]branch to Fishkill and
   mainstream hackerdom's [14590]jump off into never-never land.
     _________________________________________________________________

   Node:weenie, Next:[14591]Weenix, Previous:[14592]weeds, Up:[14593]= W
   =

   weenie n.

   1. [on BBSes] Any of a species of luser resembling a less amusing
   version of [14594]B1FF that infests many [14595]BBS systems. The
   typical weenie is a teenage boy with poor social skills travelling
   under a grandiose [14596]handle derived from fantasy or heavy-metal
   rock lyrics. Among sysops, `the weenie problem' refers to the
   marginally literate and profanity-laden [14597]flamage weenies tend to
   spew all over a newly-discovered BBS. Compare [14598]spod,
   [14599]computer geek, [14600]terminal junkie, [14601]warez d00dz. 2.
   [Among hackers] When used with a qualifier (for example, as in
   [14602]Unix weenie, VMS weenie, IBM weenie) this can be either an
   insult or a term of praise, depending on context, tone of voice, and
   whether or not it is applied by a person who considers him or herself
   to be the same sort of weenie. Implies that the weenie has put a major
   investment of time, effort, and concentration into the area indicated;
   whether this is good or bad depends on the hearer's judgment of how
   the speaker feels about that area. See also [14603]bigot. 3. The
   semicolon character, ; (ASCII 0111011).
     _________________________________________________________________

   Node:Weenix, Next:[14604]well-behaved, Previous:[14605]weenie,
   Up:[14606]= W =

   Weenix /wee'niks/ n.

   1. [ITS] A derogatory term for [14607]Unix, derived from [14608]Unix
   weenie. According to one noted ex-ITSer, it is "the operating system
   preferred by Unix Weenies: typified by poor modularity, poor
   reliability, hard file deletion, no file version numbers, case
   sensitivity everywhere, and users who believe that these are all
   advantages". (Some ITS fans behave as though they believe Unix stole a
   future that rightfully belonged to them. See [14609]ITS, sense 2.) 2.
   [Brown University] A Unix-like OS developed for tutorial purposes at
   Brown University. See
   [14610]http://www.cs.brown.edu/courses/cs167/weenix.html. Named
   independently of the ITS usage.
     _________________________________________________________________

   Node:well-behaved, Next:[14611]well-connected, Previous:[14612]Weenix,
   Up:[14613]= W =

   well-behaved adj.

   1. [primarily [14614]MS-DOS] Said of software conforming to system
   interface guidelines and standards. Well-behaved software uses the
   operating system to do chores such as keyboard input, allocating
   memory and drawing graphics. Oppose [14615]ill-behaved. 2. Software
   that does its job quietly and without counterintuitive effects. Esp.
   said of software having an interface spec sufficiently simple and
   well-defined that it can be used as a [14616]tool by other software.
   See [14617]cat. 3. Said of an algorithm that doesn't [14618]crash or
   [14619]blow up, even when given [14620]pathological input. Implies
   that the stability of the algorithm is intrinsic, which makes this
   somewhat different from [14621]bulletproof.
     _________________________________________________________________

   Node:well-connected, Next:[14622]wetware,
   Previous:[14623]well-behaved, Up:[14624]= W =

   well-connected adj.

   Said of a computer installation, asserts that it has reliable email
   links with the network and/or that it relays a large fraction of
   available [14625]Usenet newsgroups. `Well-known' can be almost
   synonymous, but also implies that the site's name is familiar to many
   (due perhaps to an archive service or active Usenet users).
     _________________________________________________________________

   Node:wetware, Next:[14626]whack, Previous:[14627]well-connected,
   Up:[14628]= W =

   wetware /wet'weir/ n.

   [prob. from the novels of Rudy Rucker] 1. The human nervous system, as
   opposed to computer hardware or software. "Wetware has 7 plus or minus
   2 temporary registers." 2. Human beings (programmers, operators,
   administrators) attached to a computer system, as opposed to the
   system's hardware or software. See [14629]liveware, [14630]meatware.
     _________________________________________________________________

   Node:whack, Next:[14631]whack-a-mole, Previous:[14632]wetware,
   Up:[14633]= W =

   whack v.

   According to arch-hacker James Gosling (designer of [14634]NeWS,
   [14635]GOSMACS and Java), to "...modify a program with no idea
   whatsoever how it works." (See [14636]whacker.) It is actually
   possible to do this in nontrivial circumstances if the change is small
   and well-defined and you are very good at [14637]glarking things from
   context. As a trivial example, it is relatively easy to change all
   stderr writes to stdout writes in a piece of C filter code which
   remains otherwise mysterious.
     _________________________________________________________________

   Node:whack-a-mole, Next:[14638]whacker, Previous:[14639]whack,
   Up:[14640]= W =

   whack-a-mole n.

   [from the carnival game which involves quickly and repeatedly hitting
   the heads of mechanical moles with a mallet as they pop up from their
   holes.] 1. The practice of repeatedly causing spammers'
   [14641]throwaway accounts and drop boxes to be terminated. 2. After
   sense 1 became established in the mid-1990s the term passed into more
   generalized use, and now is commonly found in such combinations as
   `whack-a-mole windows'; the obnoxious pop-ip advertisement windows
   spawned in flocks when you surg to sites like Geocities or Tripod.
     _________________________________________________________________

   Node:whacker, Next:[14642]whales, Previous:[14643]whack-a-mole,
   Up:[14644]= W =

   whacker n.

   [University of Maryland: from [14645]hacker] 1. A person, similar to a
   [14646]hacker, who enjoys exploring the details of programmable
   systems and how to stretch their capabilities. Whereas a hacker tends
   to produce great hacks, a whacker only ends up whacking the system or
   program in question. Whackers are often quite egotistical and eager to
   claim [14647]wizard status, regardless of the views of their peers. 2.
   A person who is good at programming quickly, though rather poorly and
   ineptly.
     _________________________________________________________________

   Node:whales, Next:[14648]whalesong, Previous:[14649]whacker,
   Up:[14650]= W =

   whales n.

   See [14651]like kicking dead whales down the beach.
     _________________________________________________________________

   Node:whalesong, Next:[14652]What's a spline?, Previous:[14653]whales,
   Up:[14654]= W =

   whalesong n.

   The peculiar clicking and whooshing sounds made by a PEP modem such as
   the Telebit Trailblazer as it tries to synchronize with another PEP
   modem for their special high-speed mode. This sound isn't anything
   like the normal two-tone handshake between conventional V-series
   modems and is instantly recognizable to anyone who has heard it more
   than once. It sounds, in fact, very much like whale songs. This noise
   is also called "the moose call" or "moose tones".
     _________________________________________________________________

   Node:What's a spline?, Next:[14655]wheel, Previous:[14656]whalesong,
   Up:[14657]= W =

   What's a spline?

   [XEROX PARC] This phrase expands to: "You have just used a term that
   I've heard for a year and a half, and I feel I should know, but don't.
   My curiosity has finally overcome my guilt." The PARC lexicon adds
   "Moral: don't hesitate to ask questions, even if they seem obvious."
     _________________________________________________________________

   Node:wheel, Next:[14658]wheel bit, Previous:[14659]What's a spline?,
   Up:[14660]= W =

   wheel n.

   [from slang `big wheel' for a powerful person] A person who has an
   active [14661]wheel bit. "We need to find a wheel to unwedge the hung
   tape drives." (See [14662]wedged, sense 1.) The traditional name of
   security group zero in [14663]BSD (to which the major system-internal
   users like [14664]root belong) is `wheel'. Some vendors have expanded
   on this usage, modifying Unix so that only members of group `wheel'
   can [14665]go root.
     _________________________________________________________________

   Node:wheel bit, Next:[14666]wheel of reincarnation,
   Previous:[14667]wheel, Up:[14668]= W =

   wheel bit n.

   A privilege bit that allows the possessor to perform some restricted
   operation on a timesharing system, such as read or write any file on
   the system regardless of protections, change or look at any address in
   the running monitor, crash or reload the system, and kill or create
   jobs and user accounts. The term was invented on the TENEX operating
   system, and carried over to TOPS-20, XEROX-IFS, and others. The state
   of being in a privileged logon is sometimes called `wheel mode'. This
   term entered the Unix culture from TWENEX in the mid-1980s and has
   been gaining popularity there (esp. at university sites). See also
   [14669]root.
     _________________________________________________________________

   Node:wheel of reincarnation, Next:[14670]wheel wars,
   Previous:[14671]wheel bit, Up:[14672]= W =

   wheel of reincarnation

   [coined in a paper by T. H. Myer and I.E. Sutherland "On the Design of
   Display Processors", Comm. ACM, Vol. 11, no. 6, June 1968)] Term used
   to refer to a well-known effect whereby function in a computing system
   family is migrated out to special-purpose peripheral hardware for
   speed, then the peripheral evolves toward more computing power as it
   does its job, then somebody notices that it is inefficient to support
   two asymmetrical processors in the architecture and folds the function
   back into the main CPU, at which point the cycle begins again.

   Several iterations of this cycle have been observed in
   graphics-processor design, and at least one or two in communications
   and floating-point processors. Also known as `the Wheel of Life', `the
   Wheel of Samsara', and other variations of the basic Hindu/Buddhist
   theological idea. See also [14673]blitter, [14674]bit bang.
     _________________________________________________________________

   Node:wheel wars, Next:[14675]White Book, Previous:[14676]wheel of
   reincarnation, Up:[14677]= W =

   wheel wars n.

   [Stanford University] A period in [14678]larval stage during which
   student hackers hassle each other by attempting to log each other out
   of the system, delete each other's files, and otherwise wreak havoc,
   usually at the expense of the lesser users.
     _________________________________________________________________

   Node:White Book, Next:[14679]whitelist, Previous:[14680]wheel wars,
   Up:[14681]= W =

   White Book n.

   1. Syn. [14682]K&R. 2. Adobe's fourth book in the PostScript series,
   describing the previously-secret format of Type 1 fonts; "Adobe Type 1
   Font Format, version 1.1", (Addison-Wesley, 1990, ISBN 0-201-57044-0).
   See also [14683]Red Book, [14684]Green Book, [14685]Blue Book.
     _________________________________________________________________

   Node:whitelist, Next:[14686]whizzy, Previous:[14687]White Book,
   Up:[14688]= W =

   whitelist n.

   The opposite of a blacklist. That is, instead of being an explicit
   list of people who are banned, it's an explicit list of people who are
   to be admitted. Hackers use this especially of lists of email
   addresses that are explicitly enabled to get past strict anti-spam
   filters.
     _________________________________________________________________

   Node:whizzy, Next:[14689]wibble, Previous:[14690]whitelist,
   Up:[14691]= W =

   whizzy adj.

   (alt. `wizzy') [Sun] Describes a [14692]cuspy program; one that is
   feature-rich and well presented.
     _________________________________________________________________

   Node:wibble, Next:[14693]WIBNI, Previous:[14694]whizzy, Up:[14695]= W
   =

   wibble

   [UK, perh. originally from the first "Roger Irrelevant" strip in "VIZ"
   comics, spread via "Your Sinclair magazine in the 1980s and early
   1990s"] 1. n.,v. Commonly used to describe chatter, content-free
   remarks or other essentially meaningless contributions to threads in
   newsgroups. "Oh, rspence is wibbling again". 2. [UK IRC] An explicit
   on-line no-op equivalent to [14696]humma. 3. One of the preferred
   [14697]metasyntactic variables in the UK, forming a series with
   wobble, wubble, and flob (attributed to the hilarious historical
   comedy "Blackadder"). 4. A pronounciation of the letters "www", as
   seen in URLs; i.e., www.[14698]foo.com may be pronounced "wibble dot
   foo dot com" (compare [14699]dub dub dub).

   The ancestral sense of this word is reported to have been "My brain is
   packing it in now. I give up. Tilt! Tilt! Tilt!"
     _________________________________________________________________

   Node:WIBNI, Next:[14700]widget, Previous:[14701]wibble, Up:[14702]= W
   =

   WIBNI // n.

   [Bell Labs: Wouldn't It Be Nice If] What most requirements documents
   and specifications consist entirely of. Compare [14703]IWBNI.
     _________________________________________________________________

   Node:widget, Next:[14704]wiggles, Previous:[14705]WIBNI, Up:[14706]= W
   =

   widget n.

   1. A meta-thing. Used to stand for a real object in didactic examples
   (especially database tutorials). Legend has it that the original
   widgets were holders for buggy whips. "But suppose the parts list for
   a widget has 52 entries...." 2. [poss. evoking `window gadget'] A user
   interface object in [14707]X graphical user interfaces.
     _________________________________________________________________

   Node:wiggles, Next:[14708]WIMP environment, Previous:[14709]widget,
   Up:[14710]= W =

   wiggles n.

   [scientific computation] In solving partial differential equations by
   finite difference and similar methods, wiggles are sawtooth
   (up-down-up-down) oscillations at the shortest wavelength
   representable on the grid. If an algorithm is unstable, this is often
   the most unstable waveform, so it grows to dominate the solution.
   Alternatively, stable (though inaccurate) wiggles can be generated
   near a discontinuity by a Gibbs phenomenon.
     _________________________________________________________________

   Node:WIMP environment, Next:[14711]win, Previous:[14712]wiggles,
   Up:[14713]= W =

   WIMP environment n.

   [acronym: `Window, Icon, Menu, Pointing device (or Pull-down menu)'] A
   graphical-user-interface environment such as [14714]X or the Macintosh
   interface, esp. as described by a hacker who prefers command-line
   interfaces for their superior flexibility and extensibility. However,
   it is also used without negative connotations; one must pay attention
   to voice tone and other signals to interpret correctly. See
   [14715]menuitis, [14716]user-obsequious.
     _________________________________________________________________

   Node:win, Next:[14717]win big, Previous:[14718]WIMP environment,
   Up:[14719]= W =

   win

   [MIT; now common everywhere] 1. vi. To succeed. A program wins if no
   unexpected conditions arise, or (especially) if it sufficiently
   [14720]robust to take exceptions in stride. 2. n. Success, or a
   specific instance thereof. A pleasing outcome. "So it turned out I
   could use a [14721]lexer generator instead of hand-coding my own
   pattern recognizer. What a win!" Emphatic forms: `moby win', `super
   win', `hyper-win' (often used interjectively as a reply). For some
   reason `suitable win' is also common at MIT, usually in reference to a
   satisfactory solution to a problem. Oppose [14722]lose; see also
   [14723]big win, which isn't quite just an intensification of `win'.
     _________________________________________________________________

   Node:win big, Next:[14724]win win, Previous:[14725]win, Up:[14726]= W
   =

   win big vi.

   To experience serendipity. "I went shopping and won big; there was a
   2-for-1 sale." See [14727]big win.
     _________________________________________________________________

   Node:win win, Next:[14728]Winchester, Previous:[14729]win big,
   Up:[14730]= W =

   win win excl.

   Expresses pleasure at a [14731]win.
     _________________________________________________________________

   Node:Winchester, Next:[14732]windoid, Previous:[14733]win win,
   Up:[14734]= W =

   Winchester n.

   Informal generic term for sealed-enclosure magnetic-disk drives in
   which the read-write head planes over the disk surface on an air
   cushion. There is a legend that the name arose because the original
   1973 engineering prototype for what later became the IBM 3340 featured
   two 30-megabyte volumes; 30-30 became `Winchester' when somebody
   noticed the similarity to the common term for a famous Winchester
   rifle (in the latter, the first 30 referred to caliber and the second
   to the grain weight of the charge). (It is sometimes incorrectly
   claimed that Winchester was the laboratory in which the technology was
   developed.)
     _________________________________________________________________

   Node:windoid, Next:[14735]window shopping, Previous:[14736]Winchester,
   Up:[14737]= W =

   windoid n.

   In the Macintosh world, a style of window with much less adornment
   (smaller or missing title bar, zoom box, etc, etc) than a standard
   window.
     _________________________________________________________________

   Node:window shopping, Next:[14738]Windoze, Previous:[14739]windoid,
   Up:[14740]= W =

   window shopping n.

   [US Geological Survey] Among users of [14741]WIMP environments like
   [14742]X or the Macintosh, extended experimentation with new window
   colors, fonts, and icon shapes. This activity can take up hours of
   what might otherwise have been productive working time. "I spent the
   afternoon window shopping until I found the coolest shade of green for
   my active window borders -- now they perfectly match my medium slate
   blue background." Serious window shoppers will spend their days with
   bitmap editors, creating new and different icons and background
   patterns for all to see. Also: `window dressing', the act of applying
   new fonts, colors, etc. See [14743]fritterware, compare
   [14744]macdink.
     _________________________________________________________________

   Node:Windoze, Next:[14745]winged comments, Previous:[14746]window
   shopping, Up:[14747]= W =

   Windoze /win'dohz/ n.

   See [14748]Microsloth Windows.
     _________________________________________________________________

   Node:winged comments, Next:[14749]winkey, Previous:[14750]Windoze,
   Up:[14751]= W =

   winged comments n.

   Comments set on the same line as code, as opposed to [14752]boxed
   comments. In C, for example:
d = sqrt(x*x + y*y);  /* distance from origin */

   Generally these refer only to the action(s) taken on that line.
     _________________________________________________________________

   Node:winkey, Next:[14753]winnage, Previous:[14754]winged comments,
   Up:[14755]= W =

   winkey n.

   (alt. `winkey face') See [14756]emoticon.
     _________________________________________________________________

   Node:winnage, Next:[14757]winner, Previous:[14758]winkey, Up:[14759]=
   W =

   winnage /win'*j/ n.

   The situation when a lossage is corrected, or when something is
   winning.
     _________________________________________________________________

   Node:winner, Next:[14760]winnitude, Previous:[14761]winnage,
   Up:[14762]= W =

   winner

   1. n. An unexpectedly good situation, program, programmer, or person.
   2. `real winner': Often sarcastic, but also used as high praise (see
   also the note under [14763]user). "He's a real winner -- never reports
   a bug till he can duplicate it and send in an example."
     _________________________________________________________________

   Node:winnitude, Next:[14764]Wintel, Previous:[14765]winner,
   Up:[14766]= W =

   winnitude /win'*-t[y]ood/ n.

   The quality of winning (as opposed to [14767]winnage, which is the
   result of winning). "Guess what? They tweaked the microcode and now
   the LISP interpreter runs twice as fast as it used to." "That's really
   great! Boy, what winnitude!" "Yup. I'll probably get a half-hour's
   winnage on the next run of my program." Perhaps curiously, the obvious
   antonym `lossitude' is rare.
     _________________________________________________________________

   Node:Wintel, Next:[14768]wired, Previous:[14769]winnitude, Up:[14770]=
   W =

   Wintel n.

   Microsoft Windows plus Intel - the tacit alliance that dominated
   desktop computing in the 1990s. Now (1999) possibly on the verge of
   breaking up under pressure from [14771]Linux; see [14772]Lintel.
     _________________________________________________________________

   Node:wired, Next:[14773]wirehead, Previous:[14774]Wintel, Up:[14775]=
   W =

   wired n.

   See [14776]hardwired.
     _________________________________________________________________

   Node:wirehead, Next:[14777]wirewater, Previous:[14778]wired,
   Up:[14779]= W =

   wirehead /wi:r'hed/ n.

   [prob. from SF slang for an electrical-brain-stimulation addict] 1. A
   hardware hacker, especially one who concentrates on communications
   hardware. 2. An expert in local-area networks. A wirehead can be a
   network software wizard too, but will always have the ability to deal
   with network hardware, down to the smallest component. Wireheads are
   known for their ability to lash up an Ethernet terminator from spare
   resistors, for example.
     _________________________________________________________________

   Node:wirewater, Next:[14780]wish list, Previous:[14781]wirehead,
   Up:[14782]= W =

   wirewater n.

   Syn. [14783]programming fluid. This melds the mainstream slang
   adjective `wired' (stimulated, up, hyperactive) with `firewater';
   however, it refers to caffeinacious rather than alcoholic beverages.
     _________________________________________________________________

   Node:wish list, Next:[14784]within delta of,
   Previous:[14785]wirewater, Up:[14786]= W =

   wish list n.

   A list of desired features or bug fixes that probably won't get done
   for a long time, usually because the person responsible for the code
   is too busy or can't think of a clean way to do it. "OK, I'll add
   automatic filename completion to the wish list for the new interface."
   Compare [14787]tick-list features.
     _________________________________________________________________

   Node:within delta of, Next:[14788]within epsilon of,
   Previous:[14789]wish list, Up:[14790]= W =

   within delta of adj.

   See [14791]delta.
     _________________________________________________________________

   Node:within epsilon of, Next:[14792]wizard, Previous:[14793]within
   delta of, Up:[14794]= W =

   within epsilon of adj.

   See [14795]epsilon.
     _________________________________________________________________

   Node:wizard, Next:[14796]Wizard Book, Previous:[14797]within epsilon
   of, Up:[14798]= W =

   wizard n.

   1. Transitively, a person who knows how a complex piece of software or
   hardware works (that is, who [14799]groks it); esp. someone who can
   find and fix bugs quickly in an emergency. Someone is a [14800]hacker
   if he or she has general hacking ability, but is a wizard with respect
   to something only if he or she has specific detailed knowledge of that
   thing. A good hacker could become a wizard for something given the
   time to study it. 2. The term `wizard' is also used intransitively of
   someone who has extremely high-level hacking or problem-solving
   ability. 3. A person who is permitted to do things forbidden to
   ordinary people; one who has [14801]wheel privileges on a system. 4. A
   Unix expert, esp. a Unix systems programmer. This usage is well enough
   established that `Unix Wizard' is a recognized job title at some
   corporations and to most headhunters. See [14802]guru, [14803]lord
   high fixer. See also [14804]deep magic, [14805]heavy wizardry,
   [14806]incantation, [14807]magic, [14808]mutter, [14809]rain dance,
   [14810]voodoo programming, [14811]wave a dead chicken.
     _________________________________________________________________

   Node:Wizard Book, Next:[14812]wizard hat, Previous:[14813]wizard,
   Up:[14814]= W =

   Wizard Book n.

   "Structure and Interpretation of Computer Programs" (Hal Abelson,
   Jerry Sussman and Julie Sussman; MIT Press, 1984, 1996; ISBN
   0-262-01153-0), an excellent computer science text used in
   introductory courses at MIT. So called because of the wizard on the
   jacket. One of the [14815]bibles of the LISP/Scheme world. Also, less
   commonly, known as the [14816]Purple Book.
     _________________________________________________________________

   Node:wizard hat, Next:[14817]wizard mode, Previous:[14818]Wizard Book,
   Up:[14819]= W =

   wizard hat n.

   [also, after Terry Pratchett, `pointy hat'] Notional headgear worn by
   whoever is the [14820]wizard in a particular context. The implication
   is that it's a transferable role. "Talk to Alice, she's wearing the
   TCP/IP wizard hat while Bob is on vacation." This metaphor is
   sufficiently live that one may actually see hackers miming the act of
   putting on, taking off, or transferring a phantom hat. Compare
   [14821]patch pumpkin.
     _________________________________________________________________

   Node:wizard mode, Next:[14822]wizardly, Previous:[14823]wizard hat,
   Up:[14824]= W =

   wizard mode n.

   [from [14825]rogue] A special access mode of a program or system,
   usually passworded, that permits some users godlike privileges.
   Generally not used for operating systems themselves (`root mode' or
   `wheel mode' would be used instead). This term is often used with
   respect to games that have editable state.
     _________________________________________________________________

   Node:wizardly, Next:[14826]wok-on-the-wall, Previous:[14827]wizard
   mode, Up:[14828]= W =

   wizardly adj.

   Pertaining to wizards. A wizardly [14829]feature is one that only a
   wizard could understand or use properly.
     _________________________________________________________________

   Node:wok-on-the-wall, Next:[14830]womb box, Previous:[14831]wizardly,
   Up:[14832]= W =

   wok-on-the-wall n.

   A small microwave dish antenna used for cross-campus private network
   circuits, from the obvious resemblance between a microwave dish and
   the Chinese culinary utensil.
     _________________________________________________________________

   Node:womb box, Next:[14833]WOMBAT, Previous:[14834]wok-on-the-wall,
   Up:[14835]= W =

   womb box n.

   1. [TMRC] Storage space for equipment. 2. [proposed] A variety of
   hard-shell equipment case with heavy interior padding and/or shaped
   carrier cutouts in a foam-rubber matrix; mundanely called a `flight
   case'. Used for delicate test equipment, electronics, and musical
   instruments.
     _________________________________________________________________

   Node:WOMBAT, Next:[14836]womble, Previous:[14837]womb box, Up:[14838]=
   W =

   WOMBAT /wom'bat/ adj.

   [acronym: Waste Of Money, Brains, And Time] Applied to problems which
   are both profoundly [14839]uninteresting in themselves and unlikely to
   benefit anyone interesting even if solved. Often used in fanciful
   constructions such as `wrestling with a wombat'. See also
   [14840]crawling horror, [14841]SMOP. Also note the rather different
   usage as a metasyntactic variable in [14842]Commonwealth Hackish.

   Users of the PDP-11 database program DATATRIEVE adopted the wombat as
   their notional mascot; the program's help file responded to "HELP
   WOMBAT" with factual information about Real World wombats.
     _________________________________________________________________

   Node:womble, Next:[14843]wonky, Previous:[14844]WOMBAT, Up:[14845]= W
   =

   womble n.

   [Unisys UK: from British animated characters] A user who has great
   difficulty in communicating their requirements and/or in using the
   resulting software. Extreme case of [14846]luser. An especially senior
   or high-ranking womble is referred to as Great-Uncle Bulgaria.
     _________________________________________________________________

   Node:wonky, Next:[14847]woofer, Previous:[14848]womble, Up:[14849]= W
   =

   wonky /wong'kee/ adj.

   [from Australian slang] Yet another approximate synonym for
   [14850]broken. Specifically connotes a malfunction that produces
   behavior seen as crazy, humorous, or amusingly perverse. "That was the
   day the printer's font logic went wonky and everybody's listings came
   out in Tengwar." Also in `wonked out'. See [14851]funky,
   [14852]demented, [14853]bozotic.
     _________________________________________________________________

   Node:woofer, Next:[14854]workaround, Previous:[14855]wonky,
   Up:[14856]= W =

   woofer n.

   [University of Waterloo] Some varieties of wide paper for printers
   have a perforation 8.5 inches from the left margin that allows the
   excess on the right-hand side to be torn off when the print format is
   80 columns or less wide. The right-hand excess may be called `woofer'.
   This term (like [14857]tweeter) has been in use at Waterloo since
   1972, but is elsewhere unknown. In audio jargon, the word refers to
   the bass speaker(s) on a hi-fi.
     _________________________________________________________________

   Node:workaround, Next:[14858]working as designed,
   Previous:[14859]woofer, Up:[14860]= W =

   workaround n.

   1. A temporary [14861]kluge used to bypass, mask, or otherwise avoid a
   [14862]bug or [14863]misfeature in some system. Theoretically,
   workarounds are always replaced by [14864]fixes; in practice,
   customers often find themselves living with workarounds for long
   periods of time. "The code died on NUL characters in the input, so I
   fixed it to interpret them as spaces." "That's not a fix, that's a
   workaround!" 2. A procedure to be employed by the user in order to do
   what some currently non-working feature should do. Hypothetical
   example: "Using META-F7 [14865]crashes the 4.43 build of Weemax, but
   as a workaround you can type CTRL-R, then SHIFT-F5, and delete the
   remaining [14866]cruft by hand."
     _________________________________________________________________

   Node:working as designed, Next:[14867]worm,
   Previous:[14868]workaround, Up:[14869]= W =

   working as designed adj.

   [IBM] 1. In conformance to a wrong or inappropriate specification;
   useful, but misdesigned. 2. Frequently used as a sardonic comment on a
   program's utility. 3. Unfortunately also used as a bogus reason for
   not accepting a criticism or suggestion. At [14870]IBM, this sense is
   used in official documents! See [14871]BAD.
     _________________________________________________________________

   Node:worm, Next:[14872]wormhole, Previous:[14873]working as designed,
   Up:[14874]= W =

   worm n.

   [from `tapeworm' in John Brunner's novel "The Shockwave Rider", via
   XEROX PARC] A program that propagates itself over a network,
   reproducing itself as it goes. Compare [14875]virus. Nowadays the term
   has negative connotations, as it is assumed that only [14876]crackers
   write worms. Perhaps the best-known example was Robert T. Morris's
   [14877]Great Worm of 1988, a `benign' one that got out of control and
   hogged hundreds of Suns and VAXen across the U.S. See also
   [14878]cracker, [14879]RTM, [14880]Trojan horse, [14881]ice.
     _________________________________________________________________

   Node:wormhole, Next:[14882]wound around the axle,
   Previous:[14883]worm, Up:[14884]= W =

   wormhole /werm'hohl/ n.

   [from the `wormhole' singularities hypothesized in some versions of
   General Relativity theory] 1. [n.,obs.] A location in a monitor which
   contains the address of a routine, with the specific intent of making
   it easy to substitute a different routine. This term is now
   obsolescent; modern operating systems use clusters of wormholes
   extensively (for modularization of I/O handling in particular, as in
   the Unix device-driver organization) but the preferred techspeak for
   these clusters is `device tables', `jump tables' or `capability
   tables'. 2. [Amateur Packet Radio] A network path using a commercial
   satellite link to join two or more amateur VHF networks. So called
   because traffic routed through a wormhole leaves and re-enters the
   amateur network over great distances with usually little clue in the
   message routing header as to how it got from one relay to the other.
   Compare [14885]gopher hole (sense 2).
     _________________________________________________________________

   Node:wound around the axle, Next:[14886]wrap around,
   Previous:[14887]wormhole, Up:[14888]= W =

   wound around the axle adj.

   In an infinite loop. Often used by older computer types.
     _________________________________________________________________

   Node:wrap around, Next:[14889]write-only code, Previous:[14890]wound
   around the axle, Up:[14891]= W =

   wrap around vi.

   (also n. `wraparound' and v. shorthand `wrap') 1. [techspeak] The
   action of a counter that starts over at zero or at `minus infinity'
   (see [14892]infinity) after its maximum value has been reached, and
   continues incrementing, either because it is programmed to do so or
   because of an overflow (as when a car's odometer starts over at 0). 2.
   To change [14893]phase gradually and continuously by maintaining a
   steady wake-sleep cycle somewhat longer than 24 hours, e.g., living
   six long (28-hour) days in a week (or, equivalently, sleeping at the
   rate of 10 microhertz). This sense is also called
   [14894]phase-wrapping.
     _________________________________________________________________

   Node:write-only code, Next:[14895]write-only language,
   Previous:[14896]wrap around, Up:[14897]= W =

   write-only code n.

   [a play on `read-only memory'] Code so arcane, complex, or
   ill-structured that it cannot be modified or even comprehended by
   anyone but its author, and possibly not even by him/her. A [14898]Bad
   Thing.
     _________________________________________________________________

   Node:write-only language, Next:[14899]write-only memory,
   Previous:[14900]write-only code, Up:[14901]= W =

   write-only language n.

   A language with syntax (or semantics) sufficiently dense and bizarre
   that any routine of significant size is automatically
   [14902]write-only code. A sobriquet applied occasionally to C and
   often to APL, though [14903]INTERCAL and [14904]TECO certainly deserve
   it more. See also [14905]Befunge.
     _________________________________________________________________

   Node:write-only memory, Next:[14906]Wrong Thing,
   Previous:[14907]write-only language, Up:[14908]= W =

   write-only memory n.

   The obvious antonym to `read-only memory'. Out of frustration with the
   long and seemingly useless chain of approvals required of component
   specifications, during which no actual checking seemed to occur, an
   engineer at Signetics once created a specification for a write-only
   memory and included it with a bunch of other specifications to be
   approved. This inclusion came to the attention of Signetics
   [14909]management only when regular customers started calling and
   asking for pricing information. Signetics published a corrected
   edition of the data book and requested the return of the `erroneous'
   ones. Later, in 1972, Signetics bought a double-page spread in
   "Electronics" magazine's April issue and used the spec as an April
   Fools' Day joke. Instead of the more conventional characteristic
   curves, the 25120 "fully encoded, 9046 x N, Random Access,
   write-only-memory" data sheet included diagrams of "bit capacity vs.
   Temp.", "Iff vs. Vff", "Number of pins remaining vs. number of socket
   insertions", and "AQL vs. selling price". The 25120 required a 6.3 VAC
   VFF supply, a +10V VCC, and VDD of 0V, +/- 2%.
     _________________________________________________________________

   Node:Wrong Thing, Next:[14910]wugga wugga, Previous:[14911]write-only
   memory, Up:[14912]= W =

   Wrong Thing n.

   A design, action, or decision that is clearly incorrect or
   inappropriate. Often capitalized; always emphasized in speech as if
   capitalized. The opposite of the [14913]Right Thing; more generally,
   anything that is not the Right Thing. In cases where `the good is the
   enemy of the best', the merely good -- although good -- is
   nevertheless the Wrong Thing. "In C, the default is for module-level
   declarations to be visible everywhere, rather than just within the
   module. This is clearly the Wrong Thing."
     _________________________________________________________________

   Node:wugga wugga, Next:[14914]wumpus, Previous:[14915]Wrong Thing,
   Up:[14916]= W =

   wugga wugga /wuh'g* wuh'g*/ n.

   Imaginary sound that a computer program makes as it labors with a
   tedious or difficult task.[14917]grind (sense 4).
     _________________________________________________________________

   Node:wumpus, Next:[14918]WYSIAYG, Previous:[14919]wugga wugga,
   Up:[14920]= W =

   wumpus /wuhm'p*s/ n.

   The central monster (and, in many versions, the name) of a famous
   family of very early computer games called "Hunt The Wumpus'. The
   original was invented in 1970 (several years before [14921]ADVENT) by
   Gregory Yob. The wumpus lived somewhere in a cave with the topology of
   an dodecahedron's edge/vertex graph (later versions supported other
   topologies, including an icosahedron and Möbius strip). The player
   started somewhere at random in the cave with five `crooked arrows';
   these could be shot through up to three connected rooms, and would
   kill the wumpus on a hit (later versions introduced the wounded
   wumpus, which got very angry). Unfortunately for players, the movement
   necessary to map the maze was made hazardous not merely by the wumpus
   (which would eat you if you stepped on him) but also by bottomless
   pits and colonies of super bats that would pick you up and drop you at
   a random location (later versions added `anaerobic termites' that ate
   arrows, bat migrations, and earthquakes that randomly changed pit
   locations).

   This game appears to have been the first to use a non-random
   graph-structured map (as opposed to a rectangular grid like the even
   older Star Trek games). In this respect, as in the dungeon-like
   setting and its terse, amusing messages, it prefigured [14922]ADVENT
   and [14923]Zork and was directly ancestral to the latter (Zork
   acknowledged this heritage by including a super-bat colony). A C
   emulation of the original Basic game is available at the
   Retrocomputing Museum, [14924]http://www.ccil.org/retro.
     _________________________________________________________________

   Node:WYSIAYG, Next:[14925]WYSIWYG, Previous:[14926]wumpus, Up:[14927]=
   W =

   WYSIAYG /wiz'ee-ayg/ adj.

   Describes a user interface under which "What You See Is All You Get";
   an unhappy variant of [14928]WYSIWYG. Visual, `point-and-shoot'-style
   interfaces tend to have easy initial learning curves, but also to lack
   depth; they often frustrate advanced users who would be better served
   by a command-style interface. When this happens, the frustrated user
   has a WYSIAYG problem. This term is most often used of editors, word
   processors, and document formatting programs. WYSIWYG `desktop
   publishing' programs, for example, are a clear win for creating small
   documents with lots of fonts and graphics in them, especially things
   like newsletters and presentation slides. When typesetting book-length
   manuscripts, on the other hand, scale changes the nature of the task;
   one quickly runs into WYSIAYG limitations, and the increased power and
   flexibility of a command-driven formatter like [14929]TeX or Unix's
   [14930]troff becomes not just desirable but a necessity. Compare
   [14931]YAFIYGI.
     _________________________________________________________________

   Node:WYSIWYG, Next:[14932]X, Previous:[14933]WYSIAYG, Up:[14934]= W =

   WYSIWYG /wiz'ee-wig/ adj.

   [Traced to Flip Wilson's "Geraldine" character c.1970] Describes a
   user interface under which "What You See Is What You Get", as opposed
   to one that uses more-or-less obscure commands that do not result in
   immediate visual feedback. True WYSIWYG in environments supporting
   multiple fonts or graphics is a a rarely-attained ideal; there are
   variants of this term to express real-world manifestations including
   WYSIAWYG (What You See Is Almost What You Get) and WYSIMOLWYG (What
   You See Is More or Less What You Get). All these can be mildly
   derogatory, as they are often used to refer to dumbed-down
   [14935]user-friendly interfaces targeted at non-programmers; a hacker
   has no fear of obscure commands (compare [14936]WYSIAYG). On the other
   hand, [14937]EMACS was one of the very first WYSIWYG editors,
   replacing (actually, at first overlaying) the extremely obscure,
   command-based [14938]TECO. See also [14939]WIMP environment. [Oddly
   enough, WYSIWYG has already made it into the OED, in lower case yet.
   --ESR]
     _________________________________________________________________

   Node:= X =, Next:[14940]= Y =, Previous:[14941]= W =, Up:[14942]The
   Jargon Lexicon

= X =

     * [14943]X:
     * [14944]XEROX PARC:
     * [14945]XOFF:
     * [14946]XON:
     * [14947]xor:
     * [14948]xref:
     * [14949]XXX:
     * [14950]xyzzy:
     _________________________________________________________________

   Node:X, Next:[14951]XEROX PARC, Previous:[14952]WYSIWYG, Up:[14953]= X
   =

   X /X/ n.

   1. Used in various speech and writing contexts (also in lowercase) in
   roughly its algebraic sense of `unknown within a set defined by
   context' (compare [14954]N). Thus, the abbreviation 680x0 stands for
   68000, 68010, 68020, 68030, or 68040, and 80x86 stands for 80186,
   80286, 80386, 80486, 80586 or 80686 (note that a Unix hacker might
   write these as 680[0-6]0 and 80[1-6]86 or 680?0 and 80?86
   respectively; see [14955]glob). 2. [after the name of an earlier
   window system called `W'] An over-sized, over-featured,
   over-engineered and incredibly over-complicated window system
   developed at MIT and widely used on Unix systems.
     _________________________________________________________________

   Node:XEROX PARC, Next:[14956]XOFF, Previous:[14957]X, Up:[14958]= X =

   XEROX PARC /zee'roks park'/ n.

   The famed Palo Alto Research Center. For more than a decade, from the
   early 1970s into the mid-1980s, PARC yielded an astonishing volume of
   groundbreaking hardware and software innovations. The modern mice,
   windows, and icons style of software interface was invented there. So
   was the laser printer and the local-area network; and PARC's series of
   D machines anticipated the powerful personal computers of the 1980s by
   a decade. Sadly, the prophets at PARC were without honor in their own
   company, so much so that it became a standard joke to describe PARC as
   a place that specialized in developing brilliant ideas for everyone
   else.

   The stunning shortsightedness and obtusity of XEROX's top-level
   [14959]suits has been well anatomized in "Fumbling The Future: How
   XEROX Invented, Then Ignored, the First Personal Computer" by Douglas
   K. Smith and Robert C. Alexander (William Morrow & Co., 1988, ISBN
   0-688-09511-9).
     _________________________________________________________________

   Node:XOFF, Next:[14960]XON, Previous:[14961]XEROX PARC, Up:[14962]= X
   =

   XOFF /X-of/ n.

   Syn. [14963]control-S.
     _________________________________________________________________

   Node:XON, Next:[14964]xor, Previous:[14965]XOFF, Up:[14966]= X =

   XON /X-on/ n.

   Syn. [14967]control-Q.
     _________________________________________________________________

   Node:xor, Next:[14968]xref, Previous:[14969]XON, Up:[14970]= X =

   xor /X'or/, /kzor/ conj.

   Exclusive or. `A xor B' means `A or B, but not both'. "I want to get
   cherry pie xor a banana split." This derives from the technical use of
   the term as a function on truth-values that is true if exactly one of
   its two arguments is true.
     _________________________________________________________________

   Node:xref, Next:[14971]XXX, Previous:[14972]xor, Up:[14973]= X =

   xref /X'ref/ v.,n.

   Hackish standard abbreviation for `cross-reference'.
     _________________________________________________________________

   Node:XXX, Next:[14974]xyzzy, Previous:[14975]xref, Up:[14976]= X =

   XXX /X-X-X/ n.

   A marker that attention is needed. Commonly used in program comments
   to indicate areas that are kluged up or need to be. Some hackers liken
   `XXX' to the notional heavy-porn movie rating. Compare [14977]FIXME.
     _________________________________________________________________

   Node:xyzzy, Next:[14978]YA-, Previous:[14979]XXX, Up:[14980]= X =

   xyzzy /X-Y-Z-Z-Y/, /X-Y-ziz'ee/, /ziz'ee/, or /ik-ziz'ee/ adj.

   [from the ADVENT game] The [14981]canonical `magic word'. This comes
   from [14982]ADVENT, in which the idea is to explore an underground
   cave with many rooms and to collect the treasures you find there. If
   you type `xyzzy' at the appropriate time, you can move instantly
   between two otherwise distant points. If, therefore, you encounter
   some bit of [14983]magic, you might remark on this quite succinctly by
   saying simply "Xyzzy!" "Ordinarily you can't look at someone else's
   screen if he has protected it, but if you type quadruple-bucky-clear
   the system will let you do it anyway." "Xyzzy!" It's traditional for
   xyzzy to be an [14984]Easter egg in games with text interfaces.

   Xyzzy has actually been implemented as an undocumented no-op command
   on several OSes; in Data General's AOS/VS, for example, it would
   typically respond "Nothing happens", just as [14985]ADVENT did if the
   magic was invoked at the wrong spot or before a player had performed
   the action that enabled the word. In more recent 32-bit versions, by
   the way, AOS/VS responds "Twice as much happens".

   Early versions of the popular `minesweeper' game under Microsoft
   Windows had a cheat mode triggered by the command
   `xyzzy<enter><right-shift>' that turns the top-left pixel of the
   screen different colors depending on whether or not the cursor is over
   a bomb. This feature temporarily diasappeared in Windows 98, but
   reappeared in Windows 2000.

   The following passage from "The Wonderful Wizard of Oz" by L. Frank
   Baum, suggesting a possible pre-ADVENT origin, has recently come to
   light:

   "Ziz-zy, zuz-zy, zik!" said Dorothy, who was now standing on both
   feet. This ended the saying of the charm, and they heard a great
   chattering and flapping of wings, as the band of Winged Monkeys flew
   up to them.

   The text can be viewed at
   [14986]ftp://metalab.unc.edu/pub/docs/books/gutenberg/etext93/wizoz10.
   txt.

   Another possible pre-ADVENT porigin is discussed at
   [14987]http://people.delphi.com/rickadams/adventure/c_xyzzy.html.
     _________________________________________________________________

   Node:= Y =, Next:[14988]= Z =, Previous:[14989]= X =, Up:[14990]The
   Jargon Lexicon

= Y =

     * [14991]YA-:
     * [14992]YABA:
     * [14993]YAFIYGI:
     * [14994]YAUN:
     * [14995]Yellow Book:
     * [14996]yellow card:
     * [14997]yellow wire:
     * [14998]Yet Another:
     * [14999]YHBT:
     * [15000]YKYBHTLW:
     * [15001]YMMV:
     * [15002]You are not expected to understand this:
     * [15003]You know you've been hacking too long when:
     * [15004]Your mileage may vary:
     * [15005]Yow!:
     * [15006]yoyo mode:
     * [15007]Yu-Shiang Whole Fish:
     _________________________________________________________________

   Node:YA-, Next:[15008]YABA, Previous:[15009]xyzzy, Up:[15010]= Y =

   YA- abbrev.

   [Yet Another] In hackish acronyms this almost invariably expands to
   [15011]Yet Another, following the precedent set by Unix yacc(1) (Yet
   Another Compiler-Compiler). See [15012]YABA.
     _________________________________________________________________

   Node:YABA, Next:[15013]YAFIYGI, Previous:[15014]YA-, Up:[15015]= Y =

   YABA /ya'b*/ n.

   [Cambridge] Yet Another Bloody Acronym. Whenever some program is being
   named, someone invariably suggests that it be given a name that is
   acronymic. The response from those with a trace of originality is to
   remark ironically that the proposed name would then be
   `YABA-compatible'. Also used in response to questions like "What is
   WYSIWYG?" See also [15016]TLA.
     _________________________________________________________________

   Node:YAFIYGI, Next:[15017]YAUN, Previous:[15018]YABA, Up:[15019]= Y =

   YAFIYGI /yaf'ee-y*-gee/ adj.

   [coined in response to WYSIWYG] Describes the command-oriented
   ed/vi/nroff/TeX style of word processing or other user interface, the
   opposite of [15020]WYSIWYG. Stands for "You asked for it, you got it",
   because what you actually asked for is often not apparent until long
   after it is too late to do anything about it. Used to denote
   perversity ("Real Programmers use YAFIYGI tools...and like it!") or,
   less often, a necessary tradeoff ("Only a YAFIYGI tool can have full
   programmable flexibility in its interface.").

   This precise sense of "You asked for it, you got it" seems to have
   first appeared in Ed Post's classic parody "Real Programmers don't use
   Pascal" (see [15021]Real Programmers); the acronym is a more recent
   invention.
     _________________________________________________________________

   Node:YAUN, Next:[15022]Yellow Book, Previous:[15023]YAFIYGI,
   Up:[15024]= Y =

   YAUN /yawn/ n.

   [Acronym for `Yet Another Unix Nerd'] Reported from the San Diego
   Computer Society (predominantly a microcomputer users' group) as a
   good-natured punning insult aimed at Unix zealots.
     _________________________________________________________________

   Node:Yellow Book, Next:[15025]yellow card, Previous:[15026]YAUN,
   Up:[15027]= Y =

   Yellow Book n.

   The print version of this Jargon File; "The New Hacker's Dictionary"
   from MIT Press; The book includes essentially all the material the
   File, plus a Foreword by Guy L. Steele Jr. and a Preface by Eric S.
   Raymond. Most importantly, the book version is nicely typeset and
   includes almost all of the infamous Crunchly cartoons by the Great
   Quux, each attached to an appropriate entry. The first edition (1991,
   ISBN 0-262-68069-6) corresponded to the Jargon File version 2.9.6. The
   second edition (1993, ISBN 0-262-68079-3) corresponded to the Jargon
   File 3.0.0. The third (1996, ISBN 0-262-68092-0) corresponded to
   4.0.0.
     _________________________________________________________________

   Node:yellow card, Next:[15028]yellow wire, Previous:[15029]Yellow
   Book, Up:[15030]= Y =

   yellow card n.

   See [15031]green card.
     _________________________________________________________________

   Node:yellow wire, Next:[15032]Yet Another, Previous:[15033]yellow
   card, Up:[15034]= Y =

   yellow wire n.

   [IBM] Repair wires used when connectors (especially ribbon connectors)
   got broken due to some schlemiel pinching them, or to reconnect cut
   traces after the FE mistakenly cut one. Compare [15035]blue wire,
   [15036]purple wire, [15037]red wire.
     _________________________________________________________________

   Node:Yet Another, Next:[15038]YHBT, Previous:[15039]yellow wire,
   Up:[15040]= Y =

   Yet Another adj.

   [From Unix's yacc(1), `Yet Another Compiler-Compiler', a LALR parser
   generator] 1. Of your own work: A humorous allusion often used in
   titles to acknowledge that the topic is not original, though the
   content is. As in `Yet Another AI Group' or `Yet Another Simulated
   Annealing Algorithm'. 2. Of others' work: Describes something of which
   there are already far too many. See also [15041]YA-, [15042]YABA,
   [15043]YAUN.
     _________________________________________________________________

   Node:YHBT, Next:[15044]YKYBHTLW, Previous:[15045]Yet Another,
   Up:[15046]= Y =

   YHBT //

   [Usenet: very common] Abbreviation: You Have Been Trolled (see
   [15047]troll, sense 1). Especially used in "YHBT. YHL. HAND.", which
   is widely understood to expand to "You Have Been Trolled. You Have
   Lost. Have A Nice Day". You are quite likely to see this if you
   respond incautiously to a flame-provoking post that was obviously
   floated as sucker bait.
     _________________________________________________________________

   Node:YKYBHTLW, Next:[15048]YMMV, Previous:[15049]YHBT, Up:[15050]= Y =

   YKYBHTLW // abbrev.

   Abbreviation of `You know you've been hacking too long when...', which
   became established on the Usenet group alt.folklore.computers during
   extended discussion of the indicated entry in the Jargon File.
     _________________________________________________________________

   Node:YMMV, Next:[15051]You are not expected to understand this,
   Previous:[15052]YKYBHTLW, Up:[15053]= Y =

   YMMV // cav.

   Abbreviation for [15054]Your mileage may vary common on Usenet.
     _________________________________________________________________

   Node:You are not expected to understand this, Next:[15055]You know
   you've been hacking too long when, Previous:[15056]YMMV, Up:[15057]= Y
   =

   You are not expected to understand this [Unix] cav.

   The canonical comment describing something [15058]magic or too
   complicated to bother explaining properly. From an infamous comment in
   the context-switching code of the V6 Unix kernel. Dennis Ritchie has
   [15059]explained this in detail.
     _________________________________________________________________

   Node:You know you've been hacking too long when, Next:[15060]Your
   mileage may vary, Previous:[15061]You are not expected to understand
   this, Up:[15062]= Y =

   You know you've been hacking too long when

   The set-up line for a genre of one-liners told by hackers about
   themselves. These include the following:

     * not only do you check your email more often than your paper mail,
       but you remember your [15063]network address faster than your
       postal one.
     * your [15064]SO kisses you on the neck and the first thing you
       think is "Uh, oh, [15065]priority interrupt."
     * you go to balance your checkbook and discover that you're doing it
       in octal.
     * your computers have a higher street value than your car.
     * in your universe, `round numbers' are powers of 2, not 10.
     * more than once, you have woken up recalling a dream in some
       programming language.
     * you realize you have never seen half of your best friends.

   A [15066]list list of these can be found by searching for this phrase
   on the web.

   [An early version of this entry said "All but one of these have been
   reliably reported as hacker traits (some of them quite often). Even
   hackers may have trouble spotting the ringer." The ringer was
   balancing one's checkbook in octal, which I made up out of whole
   cloth. Although more respondents picked that one out as fiction than
   any of the others, I also received multiple independent reports of its
   actually happening, most famously to Grace Hopper while she was
   working with BINAC in 1949. --ESR]
     _________________________________________________________________

   Node:Your mileage may vary, Next:[15067]Yow!, Previous:[15068]You know
   you've been hacking too long when, Up:[15069]= Y =

   Your mileage may vary cav.

   [from the standard disclaimer attached to EPA mileage ratings by
   American car manufacturers] 1. A ritual warning often found in Unix
   freeware distributions. Translates roughly as "Hey, I tried to write
   this portably, but who knows what'll happen on your system?" 2. More
   generally, a qualifier attached to advice. "I find that sending
   flowers works well, but your mileage may vary."
     _________________________________________________________________

   Node:Yow!, Next:[15070]yoyo mode, Previous:[15071]Your mileage may
   vary, Up:[15072]= Y =

   Yow! /yow/ interj.

   [from "Zippy the Pinhead" comix] A favored hacker expression of
   humorous surprise or emphasis. "Yow! Check out what happens when you
   twiddle the foo option on this display hack!" Compare [15073]gurfle.
     _________________________________________________________________

   Node:yoyo mode, Next:[15074]Yu-Shiang Whole Fish,
   Previous:[15075]Yow!, Up:[15076]= Y =

   yoyo mode n.

   The state in which the system is said to be when it rapidly alternates
   several times between being up and being down. Interestingly (and
   perhaps not by coincidence), many hardware vendors give out free yoyos
   at Usenix exhibits.

   Sun Microsystems gave out logoized yoyos at SIGPLAN '88. Tourists
   staying at one of Atlanta's most respectable hotels were subsequently
   treated to the sight of 200 of the country's top computer scientists
   testing yo-yo algorithms in the lobby.
     _________________________________________________________________

   Node:Yu-Shiang Whole Fish, Next:[15077]zap, Previous:[15078]yoyo mode,
   Up:[15079]= Y =

   Yu-Shiang Whole Fish /yoo-shyang hohl fish/ n. obs.

   The character gamma (extended SAIL ASCII 0001001), which with a loop
   in its tail looks like a little fish swimming down the page. The term
   is actually the name of a Chinese dish in which a fish is cooked whole
   (not [15080]parsed) and covered with Yu-Shiang (or Yu-Hsiang) sauce.
   Usage: primarily by people on the MIT LISP Machine, which could
   display this character on the screen. Tends to elicit incredulity from
   people who hear about it second-hand.
     _________________________________________________________________

   Node:= Z =, Previous:[15081]= Y =, Up:[15082]The Jargon Lexicon

= Z =

     * [15083]zap:
     * [15084]zapped:
     * [15085]Zawinski's Law:
     * [15086]zbeba:
     * [15087]zen:
     * [15088]zero:
     * [15089]zero-content:
     * [15090]Zero-One-Infinity Rule:
     * [15091]zeroth:
     * [15092]zigamorph:
     * [15093]zip:
     * [15094]zipperhead:
     * [15095]zombie:
     * [15096]zorch:
     * [15097]Zork:
     * [15098]zorkmid:
     _________________________________________________________________

   Node:zap, Next:[15099]zapped, Previous:[15100]Yu-Shiang Whole Fish,
   Up:[15101]= Z =

   zap

   1. n. Spiciness. 2. vt. To make food spicy. 3. vt. To make someone
   `suffer' by making his food spicy. (Most hackers love spicy food.
   Hot-and-sour soup is considered wimpy unless it makes you wipe your
   nose for the rest of the meal.) See [15102]zapped. 4. vt. To modify,
   usually to correct; esp. used when the action is performed with a
   debugger or binary patching tool. Also implies surgical precision.
   "Zap the debug level to 6 and run it again." In the IBM mainframe
   world, binary patches are applied to programs or to the OS with a
   program called `superzap', whose file name is `IMASPZAP' (possibly
   contrived from I M A SuPerZAP). 5. vt. To erase or reset. 6. To
   [15103]fry a chip with static electricity. "Uh oh -- I think that
   lightning strike may have zapped the disk controller."
     _________________________________________________________________

   Node:zapped, Next:[15104]Zawinski's Law, Previous:[15105]zap,
   Up:[15106]= Z =

   zapped adj.

   Spicy. This term is used to distinguish between food that is hot (in
   temperature) and food that is spicy-hot. For example, the Chinese
   appetizer Bon Bon Chicken is a kind of chicken salad that is cold but
   zapped; by contrast, [15107]vanilla wonton soup is hot but not zapped.
   See also [15108]oriental food, [15109]laser chicken. See [15110]zap,
   senses 1 and 2.
     _________________________________________________________________

   Node:Zawinski's Law, Next:[15111]zbeba, Previous:[15112]zapped,
   Up:[15113]= Z =

   Zawinski's Law

   "Every program attempts to expand until it can read mail. Those
   programs which cannot so expand are replaced by ones which can."
   Coined by Jamie Zawinski (who called it the "Law of Software
   Envelopment") to express his belief that all truly useful programs
   experience pressure to evolve into toolkits and application platforms
   (the mailer thing, he says, is just a side effect of that). It is
   commonly cited, though with widely varying degrees of accuracy.
     _________________________________________________________________

   Node:zbeba, Next:[15114]zen, Previous:[15115]Zawinski's Law,
   Up:[15116]= Z =

   zbeba n.

   [USENET] The word `moron' in [15117]rot13. Used to describe newbies
   who are behaving with especial cluelessness.
     _________________________________________________________________

   Node:zen, Next:[15118]zero, Previous:[15119]zbeba, Up:[15120]= Z =

   zen vt.

   To figure out something by meditation or by a sudden flash of
   enlightenment. Originally applied to bugs, but occasionally applied to
   problems of life in general. "How'd you figure out the buffer
   allocation problem?" "Oh, I zenned it." Contrast [15121]grok, which
   connotes a time-extended version of zenning a system. Compare
   [15122]hack mode. See also [15123]guru.
     _________________________________________________________________

   Node:zero, Next:[15124]zero-content, Previous:[15125]zen, Up:[15126]=
   Z =

   zero vt.

   1. To set to 0. Usually said of small pieces of data, such as bits or
   words (esp. in the construction `zero out'). 2. To erase; to discard
   all data from. Said of disks and directories, where `zeroing' need not
   involve actually writing zeroes throughout the area being zeroed. One
   may speak of something being `logically zeroed' rather than being
   `physically zeroed'. See [15127]scribble.
     _________________________________________________________________

   Node:zero-content, Next:[15128]Zero-One-Infinity Rule,
   Previous:[15129]zero, Up:[15130]= Z =

   zero-content adj.

   Syn. [15131]content-free.
     _________________________________________________________________

   Node:Zero-One-Infinity Rule, Next:[15132]zeroth,
   Previous:[15133]zero-content, Up:[15134]= Z =

   Zero-One-Infinity Rule prov.

   "Allow none of [15135]foo, one of [15136]foo, or any number of
   [15137]foo." A rule of thumb for software design, which instructs one
   to not place [15138]random limits on the number of instances of a
   given entity (such as: windows in a window system, letters in an OS's
   filenames, etc.). Specifically, one should either disallow the entity
   entirely, allow exactly one instance (an "exception"), or allow as
   many as the user wants - address space and memory permitting.

   The logic behind this rule is that there are often situations where it
   makes clear sense to allow one of something instead of none. However,
   if one decides to go further and allow N (for N > 1), then why not
   N+1? And if N+1, then why not N+2, and so on? Once above 1, there's no
   excuse not to allow any N; hence, [15139]infinity.

   Many hackers recall in this connection Isaac Asimov's SF novel "The
   Gods Themselves" in which a character announces that the number 2 is
   impossible - if you're going to believe in more than one universe, you
   might as well believe in an infinite number of them.
     _________________________________________________________________

   Node:zeroth, Next:[15140]zigamorph, Previous:[15141]Zero-One-Infinity
   Rule, Up:[15142]= Z =

   zeroth /zee'rohth/ adj.

   First. Among software designers, comes from C's and LISP's 0-based
   indexing of arrays. Hardware people also tend to start counting at 0
   instead of 1; this is natural since, e.g., the 256 states of 8 bits
   correspond to the binary numbers 0, 1, ..., 255 and the digital
   devices known as `counters' count in this way.

   Hackers and computer scientists often like to call the first chapter
   of a publication `Chapter 0', especially if it is of an introductory
   nature (one of the classic instances was in the First Edition of
   [15143]K&R). In recent years this trait has also been observed among
   many pure mathematicians (who have an independent tradition of
   numbering from 0). Zero-based numbering tends to reduce
   [15144]fencepost errors, though it cannot eliminate them entirely.
     _________________________________________________________________

   Node:zigamorph, Next:[15145]zip, Previous:[15146]zeroth, Up:[15147]= Z
   =

   zigamorph /zig'*-morf/ n.

   1. Hex FF (11111111) when used as a delimiter or [15148]fence
   character. Usage: primarily at IBM shops. 2. [proposed] n. The Unicode
   non-character U+FFFF (1111111111111111), a character code which is not
   assigned to any character, and so is usable as end-of-string. (Unicode
   is a 16-bit character code intended to cover all of the world's
   writing systems, including Latin, Greek, Cyrillic, Chinese, hiragana,
   katakana, Devanagari, Thai, Laotian and many other scripts - support
   for [15149]elvish is planned for a future release).
     _________________________________________________________________

   Node:zip, Next:[15150]zipperhead, Previous:[15151]zigamorph,
   Up:[15152]= Z =

   zip vt.

   [primarily MS-DOS] To create a compressed archive from a group of
   files using PKWare's PKZIP or a compatible archiver. Its use is
   spreading now that portable implementations of the algorithm have been
   written. Commonly used as follows: "I'll zip it up and send it to
   you." See [15153]tar and feather.
     _________________________________________________________________

   Node:zipperhead, Next:[15154]zombie, Previous:[15155]zip, Up:[15156]=
   Z =

   zipperhead n.

   [IBM] A person with a closed mind.
     _________________________________________________________________

   Node:zombie, Next:[15157]zorch, Previous:[15158]zipperhead,
   Up:[15159]= Z =

   zombie n.

   [Unix] A process that has died but has not yet relinquished its
   process table slot (because the parent process hasn't executed a
   wait(2) for it yet). These can be seen in ps(1) listings occasionally.
   Compare [15160]orphan.
     _________________________________________________________________

   Node:zorch, Next:[15161]Zork, Previous:[15162]zombie, Up:[15163]= Z =

   zorch /zorch/

   1. [TMRC] v. To attack with an inverse heat sink. 2. [TMRC] v. To
   travel, with v approaching c [that is, with velocity approaching
   lightspeed --ESR]. 3. [MIT] v. To propel something very quickly. "The
   new comm software is very fast; it really zorches files through the
   network." 4. [MIT] n. Influence. Brownie points. Good karma. The
   intangible and fuzzy currency in which favors are measured. "I'd
   rather not ask him for that just yet; I think I've used up my quota of
   zorch with him for the week." 5. [MIT] n. Energy, drive, or ability.
   "I think I'll [15164]punt that change for now; I've been up for 30
   hours and I've run out of zorch." 6. [MIT] v. To flunk an exam or
   course.
     _________________________________________________________________

   Node:Zork, Next:[15165]zorkmid, Previous:[15166]zorch, Up:[15167]= Z =

   Zork /zork/ n.

   The second of the great early experiments in computer fantasy gaming;
   see [15168]ADVENT. Originally written on MIT-DM during 1977-1979,
   later distributed with BSD Unix (as a patched, sourceless RT-11
   FORTRAN binary; see [15169]retrocomputing) and commercialized as `The
   Zork Trilogy' by [15170]Infocom. The FORTRAN source was later
   rewritten for portability and released to Usenet under the name
   "Dungeon". Both FORTRAN "Dungeon" and translated C versions are
   available at many FTP sites. See also [15171]grue.
     _________________________________________________________________

   Node:zorkmid, Previous:[15172]Zork, Up:[15173]= Z =

   zorkmid /zork'mid/ n.

   The canonical unit of currency in hacker-written games. This
   originated in [15174]Zork but has spread to [15175]nethack and is
   referred to in several other games.

   (Lexicon Entries End Here)
     _________________________________________________________________

   Node:Appendix A, Next:[15176]Appendix B, Previous:[15177]The Jargon
   Lexicon, Up:[15178]Top

                                Hacker Folklore

   This appendix contains several legends and fables that illuminate the
   meaning of various entries in the lexicon.
     * [15179]The Meaning of Hack: ...and three famous ones
     * [15180]TV Typewriters: A Tale of Hackish Ingenuity
     * [15181]A Story About Magic: By Guy Steele
     * [15182]Some AI Koans: Wit and Wisdom of the Masters
     * [15183]OS and JEDGAR: Intrigue and mayhem under ITS
     * [15184]The Story of Mel: One of hackerdom's great myths
     _________________________________________________________________

   Node:The Meaning of Hack, Next:[15185]TV Typewriters,
   Previous:[15186]Appendix A, Up:[15187]Appendix A

The Meaning of `Hack'

   "The word [15188]hack doesn't really have 69 different meanings",
   according to MIT hacker Phil Agre. "In fact, [15189]hack has only one
   meaning, an extremely subtle and profound one which defies
   articulation. Which connotation is implied by a given use of the word
   depends in similarly profound ways on the context. Similar remarks
   apply to a couple of other hacker words, most notably [15190]random."

   Hacking might be characterized as `an appropriate application of
   ingenuity'. Whether the result is a quick-and-dirty patchwork job or a
   carefully crafted work of art, you have to admire the cleverness that
   went into it.

   An important secondary meaning of [15191]hack is `a creative practical
   joke'. This kind of hack is easier to explain to non-hackers than the
   programming kind. Of course, some hacks have both natures; see the
   lexicon entries for [15192]pseudo and [15193]kgbvax. But here are some
   examples of pure practical jokes that illustrate the hacking spirit:

     In 1961, students from Caltech (California Institute of Technology,
     in Pasadena) hacked the Rose Bowl football game. One student posed
     as a reporter and `interviewed' the director of the University of
     Washington card stunts (such stunts involve people in the stands
     who hold up colored cards to make pictures). The reporter learned
     exactly how the stunts were operated, and also that the director
     would be out to dinner later.

     While the director was eating, the students (who called themselves
     the `Fiendish Fourteen') picked a lock and stole a blank direction
     sheet for the card stunts. They then had a printer run off 2300
     copies of the blank. The next day they picked the lock again and
     stole the master plans for the stunts -- large sheets of graph
     paper colored in with the stunt pictures. Using these as a guide,
     they made new instructions for three of the stunts on the
     duplicated blanks. Finally, they broke in once more, replacing the
     stolen master plans and substituting the stack of diddled
     instruction sheets for the original set.

     The result was that three of the pictures were totally different.
     Instead of `WASHINGTON', the word ``CALTECH' was flashed. Another
     stunt showed the word `HUSKIES', the Washington nickname, but
     spelled it backwards. And what was supposed to have been a picture
     of a husky instead showed a beaver. (Both Caltech and MIT use the
     beaver -- nature's engineer -- as a mascot.)

     After the game, the Washington faculty athletic representative
     said: "Some thought it ingenious; others were indignant." The
     Washington student body president remarked: "No hard feelings, but
     at the time it was unbelievable. We were amazed."

   This is now considered a classic hack, particularly because revising
   the direction sheets constituted a form of programming.

   Here is another classic hack:

     On November 20, 1982, MIT hacked the Harvard-Yale football game.
     Just after Harvard's second touchdown against Yale, in the first
     quarter, a small black ball popped up out of the ground at the
     40-yard line, and grew bigger, and bigger, and bigger. The letters
     `MIT' appeared all over the ball. As the players and officials
     stood around gawking, the ball grew to six feet in diameter and
     then burst with a bang and a cloud of white smoke.

     The "Boston Globe" later reported: "If you want to know the truth,
     MIT won The Game."

     The prank had taken weeks of careful planning by members of MIT's
     Delta Kappa Epsilon fraternity. The device consisted of a weather
     balloon, a hydraulic ram powered by Freon gas to lift it out of the
     ground, and a vacuum-cleaner motor to inflate it. They made eight
     separate expeditions to Harvard Stadium between 1 and 5 A.M.,
     locating an unused 110-volt circuit in the stadium and running
     buried wires from the stadium circuit to the 40-yard line, where
     they buried the balloon device. When the time came to activate the
     device, two fraternity members had merely to flip a circuit breaker
     and push a plug into an outlet.

     This stunt had all the earmarks of a perfect hack: surprise,
     publicity, the ingenious use of technology, safety, and
     harmlessness. The use of manual control allowed the prank to be
     timed so as not to disrupt the game (it was set off between plays,
     so the outcome of the game would not be unduly affected). The
     perpetrators had even thoughtfully attached a note to the balloon
     explaining that the device was not dangerous and contained no
     explosives.

     Harvard president Derek Bok commented: "They have an awful lot of
     clever people down there at MIT, and they did it again." President
     Paul E. Gray of MIT said: "There is absolutely no truth to the
     rumor that I had anything to do with it, but I wish there were."

   The hacks above are verifiable history; they can be proved to have
   happened. Many other classic-hack stories from MIT and elsewhere,
   though retold as history, have the characteristics of what Jan
   Brunvand has called `urban folklore' (see [15194]FOAF). Perhaps the
   best known of these is the legend of the infamous trolley-car hack, an
   alleged incident in which engineering students are said to have welded
   a trolley car to its tracks with thermite. Numerous versions of this
   have been recorded from the 1940s to the present, most set at MIT but
   at least one very detailed version set at CMU.

   Brian Leibowitz has researched MIT hacks both real and mythical
   extensively; the interested reader is referred to his delightful
   pictorial compendium "The Journal of the Institute for Hacks,
   Tomfoolery, and Pranks" (MIT Museum, 1990; ISBN 0-917027-03-5). The
   Institute has a World Wide Web page at
   [15195]http://hacks.mit.edu/Hacks/Gallery.html. There is rumored to be
   a sequel entitled "Is This The Way To Baker Street?". The Caltech
   Alumni Association has published two similar books titled "Legends of
   Caltech" and "More Legends of Caltech".

   Finally, here is a story about one of the classic computer hacks.

     Back in the mid-1970s, several of the system support staff at
     Motorola discovered a relatively simple way to crack system
     security on the Xerox CP-V timesharing system. Through a simple
     programming strategy, it was possible for a user program to trick
     the system into running a portion of the program in `master mode'
     (supervisor state), in which memory protection does not apply. The
     program could then poke a large value into its `privilege level'
     byte (normally write-protected) and could then proceed to bypass
     all levels of security within the file-management system, patch the
     system monitor, and do numerous other interesting things. In short,
     the barn door was wide open.

     Motorola quite properly reported this problem to Xerox via an
     official `level 1 SIDR' (a bug report with an intended urgency of
     `needs to be fixed yesterday'). Because the text of each SIDR was
     entered into a database that could be viewed by quite a number of
     people, Motorola followed the approved procedure: they simply
     reported the problem as `Security SIDR', and attached all of the
     necessary documentation, ways-to-reproduce, etc.

     The CP-V people at Xerox sat on their thumbs; they either didn't
     realize the severity of the problem, or didn't assign the necessary
     operating-system-staff resources to develop and distribute an
     official patch.

     Months passed. The Motorola guys pestered their Xerox field-support
     rep, to no avail. Finally they decided to take direct action, to
     demonstrate to Xerox management just how easily the system could be
     cracked and just how thoroughly the security safeguards could be
     subverted.

     They dug around in the operating-system listings and devised a
     thoroughly devilish set of patches. These patches were then
     incorporated into a pair of programs called `Robin Hood' and `Friar
     Tuck'. Robin Hood and Friar Tuck were designed to run as `ghost
     jobs' (daemons, in Unix terminology); they would use the existing
     loophole to subvert system security, install the necessary patches,
     and then keep an eye on one another's statuses in order to keep the
     system operator (in effect, the superuser) from aborting them.

     One fine day, the system operator on the main CP-V software
     development system in El Segundo was surprised by a number of
     unusual phenomena. These included the following:
     * Tape drives would rewind and dismount their tapes in the middle of
       a job.
     * Disk drives would seek back and forth so rapidly that they would
       attempt to walk across the floor (see [15196]walking drives).
     * The card-punch output device would occasionally start up of itself
       and punch a [15197]lace card. These would usually jam in the
       punch.
     * The console would print snide and insulting messages from Robin
       Hood to Friar Tuck, or vice versa.
     * The Xerox card reader had two output stackers; it could be
       instructed to stack into A, stack into B, or stack into A (unless
       a card was unreadable, in which case the bad card was placed into
       stacker B). One of the patches installed by the ghosts added some
       code to the card-reader driver... after reading a card, it would
       flip over to the opposite stacker. As a result, card decks would
       divide themselves in half when they were read, leaving the
       operator to recollate them manually.

     Naturally, the operator called in the operating-system developers.
     They found the bandit ghost jobs running, and [15198]gunned them...
     and were once again surprised. When Robin Hood was gunned, the
     following sequence of events took place:
!X id1

id1: Friar Tuck... I am under attack!  Pray save me!
id1: Off (aborted)

id2: Fear not, friend Robin!  I shall rout the Sheriff
     of Nottingham's men!

id1: Thank you, my good fellow!

     Each ghost-job would detect the fact that the other had been
     killed, and would start a new copy of the recently slain program
     within a few milliseconds. The only way to kill both ghosts was to
     kill them simultaneously (very difficult) or to deliberately crash
     the system.

     Finally, the system programmers did the latter -- only to find that
     the bandits appeared once again when the system rebooted! It turned
     out that these two programs had patched the boot-time OS image (the
     kernel file, in Unix terms) and had added themselves to the list of
     programs that were to be started at boot time (this is similar to
     the way MS-DOS viruses propagate).

     The Robin Hood and Friar Tuck ghosts were finally eradicated when
     the system staff rebooted the system from a clean boot-tape and
     reinstalled the monitor. Not long thereafter, Xerox released a
     patch for this problem.

     It is alleged that Xerox filed a complaint with Motorola's
     management about the merry-prankster actions of the two employees
     in question. It is not recorded that any serious disciplinary
     action was taken against either of them.
     _________________________________________________________________

   Node:TV Typewriters, Next:[15199]A Story About Magic,
   Previous:[15200]The Meaning of Hack, Up:[15201]Appendix A

TV Typewriters A Tale of Hackish Ingenuity

   Here is a true story about a glass tty: One day an MIT hacker was in a
   motorcycle accident and broke his leg. He had to stay in the hospital
   quite a while, and got restless because he couldn't [15202]hack. Two
   of his friends therefore took a terminal and a modem for it to the
   hospital, so that he could use the computer by telephone from his
   hospital bed.

   Now this happened some years before the spread of home computers, and
   computer terminals were not a familiar sight to the average person.
   When the two friends got to the hospital, a guard stopped them and
   asked what they were carrying. They explained that they wanted to take
   a computer terminal to their friend who was a patient.

   The guard got out his list of things that patients were permitted to
   have in their rooms: TV, radio, electric razor, typewriter, tape
   player, ... no computer terminals. Computer terminals weren't on the
   list, so the guard wouldn't let it in. Rules are rules, you know.
   (This guard was clearly a [15203]droid.)

   Fair enough, said the two friends, and they left again. They were
   frustrated, of course, because they knew that the terminal was as
   harmless as a TV or anything else on the list... which gave them an
   idea.

   The next day they returned, and the same thing happened: a guard
   stopped them and asked what they were carrying. They said: "This is a
   TV typewriter!" The guard was skeptical, so they plugged it in and
   demonstrated it. "See? You just type on the keyboard and what you type
   shows up on the TV screen." Now the guard didn't stop to think about
   how utterly useless a typewriter would be that didn't produce any
   paper copies of what you typed; but this was clearly a TV typewriter,
   no doubt about it. So he checked his list: "A TV is all right, a
   typewriter is all right ... okay, take it on in!"

   [Historical note: Many years ago, "Popular Electronics" published
   solder-it-yourself plans for a TV typewriter. Despite the essential
   uselessness of the device, it was an enormously popular project. Steve
   Ciarcia, the man behind "Byte" magazine's "Circuit Cellar" feature,
   resurrected this ghost in one of his books of the early 1980s. He
   ascribed its popularity (no doubt correctly) to the feeling of power
   the builder could achieve by being able to decide himself what would
   be shown on the TV. --ESR]

   [Antihistorical note: On September 23rd, 1992, the L.A. Times ran the
   following bit in Steve Harvey's `Only in L.A.' column:

     It must have been borrowed from a museum: Solomon Waters of
     Altadena, a 6-year-old first-grader, came home from his first day
     of school and excitedly told his mother how he had written on "a
     machine that looks like a computer-but without the TV screen."

     She asked him if it could have been a "typewriter."

     "Yeah! Yeah!" he said. "That's what it was called."

   I have since investigated this matter and determined that many of
   today's teenagers have never seen a slide rule, either.... - ESR]
     _________________________________________________________________

   Node:A Story About Magic, Next:[15204]Some AI Koans,
   Previous:[15205]TV Typewriters, Up:[15206]Appendix A

A Story About `Magic'

   Some years ago, I (GLS) was snooping around in the cabinets that
   housed the MIT AI Lab's PDP-10, and noticed a little switch glued to
   the frame of one cabinet. It was obviously a homebrew job, added by
   one of the lab's hardware hackers (no one knows who).

   You don't touch an unknown switch on a computer without knowing what
   it does, because you might crash the computer. The switch was labeled
   in a most unhelpful way. It had two positions, and scrawled in pencil
   on the metal switch body were the words `magic' and `more magic'. The
   switch was in the `more magic' position.

   I called another hacker over to look at it. He had never seen the
   switch before either. Closer examination revealed that the switch had
   only one wire running to it! The other end of the wire did disappear
   into the maze of wires inside the computer, but it's a basic fact of
   electricity that a switch can't do anything unless there are two wires
   connected to it. This switch had a wire connected on one side and no
   wire on its other side.

   It was clear that this switch was someone's idea of a silly joke.
   Convinced by our reasoning that the switch was inoperative, we flipped
   it. The computer instantly crashed.

   Imagine our utter astonishment. We wrote it off as coincidence, but
   nevertheless restored the switch to the `more magic' position before
   reviving the computer.

   A year later, I told this story to yet another hacker, David Moon as I
   recall. He clearly doubted my sanity, or suspected me of a
   supernatural belief in the power of this switch, or perhaps thought I
   was fooling him with a bogus saga. To prove it to him, I showed him
   the very switch, still glued to the cabinet frame with only one wire
   connected to it, still in the `more magic' position. We scrutinized
   the switch and its lone connection, and found that the other end of
   the wire, though connected to the computer wiring, was connected to a
   ground pin. That clearly made the switch doubly useless: not only was
   it electrically nonoperative, but it was connected to a place that
   couldn't affect anything anyway. So we flipped the switch.

   The computer promptly crashed.

   This time we ran for Richard Greenblatt, a long-time MIT hacker, who
   was close at hand. He had never noticed the switch before, either. He
   inspected it, concluded it was useless, got some diagonal cutters and
   [15207]diked it out. We then revived the computer and it has run fine
   ever since.

   We still don't know how the switch crashed the machine. There is a
   theory that some circuit near the ground pin was marginal, and
   flipping the switch changed the electrical capacitance enough to upset
   the circuit as millionth-of-a-second pulses went through it. But we'll
   never know for sure; all we can really say is that the switch was
   [15208]magic.

   I still have that switch in my basement. Maybe I'm silly, but I
   usually keep it set on `more magic'.

   1994: Another explanation of this story has since been offered. Note
   that the switch body was metal. Suppose that the non-connected side of
   the switch was connected to the switch body (usually the body is
   connected to a separate earth lug, but there are exceptions). The body
   is connected to the computer case, which is, presumably, grounded. Now
   the circuit ground within the machine isn't necessarily at the same
   potential as the case ground, so flipping the switch connected the
   circuit ground to the case ground, causing a voltage drop/jump which
   reset the machine. This was probably discovered by someone who found
   out the hard way that there was a potential difference between the
   two, and who then wired in the switch as a joke.
     _________________________________________________________________

   Node:Some AI Koans, Next:[15209]OS and JEDGAR, Previous:[15210]A Story
   About Magic, Up:[15211]Appendix A

Some AI Koans

   These are some of the funniest examples of a genre of jokes told at
   the MIT AI Lab about various noted hackers. The original koans were
   composed by Danny Hillis, who would later found Connection Machines,
   Inc. In reading these, it is at least useful to know that Minsky,
   Sussman, and Drescher are AI researchers of note, that Tom Knight was
   one of the Lisp machine's principal designers, and that David Moon
   wrote much of Lisp Machine Lisp.

                                   * * *

   A novice was trying to fix a broken Lisp machine by turning the power
   off and on.

   Knight, seeing what the student was doing, spoke sternly: "You cannot
   fix a machine by just power-cycling it with no understanding of what
   is going wrong."

   Knight turned the machine off and on.

   The machine worked.

                                   * * *

   One day a student came to Moon and said: "I understand how to make a
   better garbage collector. We must keep a reference count of the
   pointers to each cons."

   Moon patiently told the student the following story:

     "One day a student came to Moon and said: `I understand how to make
     a better garbage collector...

   [Ed. note: Pure reference-count garbage collectors have problems with
   circular structures that point to themselves.]

                                   * * *

   In the days when Sussman was a novice, Minsky once came to him as he
   sat hacking at the PDP-6.

   "What are you doing?", asked Minsky.

   "I am training a randomly wired neural net to play Tic-Tac-Toe"
   Sussman replied.

   "Why is the net wired randomly?", asked Minsky.

   "I do not want it to have any preconceptions of how to play", Sussman
   said.

   Minsky then shut his eyes.

   "Why do you close your eyes?", Sussman asked his teacher.

   "So that the room will be empty."

   At that moment, Sussman was enlightened.

                                   * * *

   A disciple of another sect once came to Drescher as he was eating his
   morning meal.

   "I would like to give you this personality test", said the outsider,
   "because I want you to be happy."

   Drescher took the paper that was offered him and put it into the
   toaster, saying: "I wish the toaster to be happy, too."
     _________________________________________________________________

   Node:OS and JEDGAR, Next:[15212]The Story of Mel, Previous:[15213]Some
   AI Koans, Up:[15214]Appendix A

OS and JEDGAR

   This story says a lot about the ITS ethos.

   On the ITS system there was a program that allowed you to see what was
   being printed on someone else's terminal. It spied on the other guy's
   output by examining the insides of the monitor system. The output spy
   program was called OS. Throughout the rest of the computer science
   world (and at IBM too) OS means `operating system', but among old-time
   ITS hackers it almost always meant `output spy'.

   OS could work because ITS purposely had very little in the way of
   `protection' that prevented one user from trespassing on another's
   areas. Fair is fair, however. There was another program that would
   automatically notify you if anyone started to spy on your output. It
   worked in exactly the same way, by looking at the insides of the
   operating system to see if anyone else was looking at the insides that
   had to do with your output. This `counterspy' program was called
   JEDGAR (a six-letterism pronounced as two syllables: /jed'gr/), in
   honor of the former head of the FBI.

   But there's more. JEDGAR would ask the user for `license to kill'. If
   the user said yes, then JEDGAR would actually [15215]gun the job of
   the [15216]luser who was spying. Unfortunately, people found that this
   made life too violent, especially when tourists learned about it. One
   of the systems hackers solved the problem by replacing JEDGAR with
   another program that only pretended to do its job. It took a long time
   to do this, because every copy of JEDGAR had to be patched. To this
   day no one knows how many people never figured out that JEDGAR had
   been defanged.

   Interestingly, there is still a security module named JEDGAR alive as
   of late 1994 -- in the Unisys MCP for large systems. It is unknown to
   us whether the name is tribute or independent invention.
     _________________________________________________________________

   Node:The Story of Mel, Previous:[15217]OS and JEDGAR,
   Up:[15218]Appendix A

The Story of Mel

   This was posted to Usenet by its author, Ed Nather
   ([15219]utastro!nather), on May 21, 1983.
A recent article devoted to the macho side of programming
made the bald and unvarnished statement:

    Real Programmers write in FORTRAN.

Maybe they do now,
in this decadent era of
Lite beer, hand calculators, and ``user-friendly'' software
but back in the Good Old Days,
when the term ``software'' sounded funny
and Real Computers were made out of drums and vacuum tubes,
Real Programmers wrote in machine code.
Not FORTRAN.  Not RATFOR.  Not, even, assembly language.
Machine Code.
Raw, unadorned, inscrutable hexadecimal numbers.
Directly.

Lest a whole new generation of programmers
grow up in ignorance of this glorious past,
I feel duty-bound to describe,
as best I can through the generation gap,
how a Real Programmer wrote code.
I'll call him Mel,
because that was his name.

I first met Mel when I went to work for Royal McBee Computer Corp.,
a now-defunct subsidiary of the typewriter company.
The firm manufactured the LGP-30,
a small, cheap (by the standards of the day)
drum-memory computer,
and had just started to manufacture
the RPC-4000, a much-improved,
bigger, better, faster --- drum-memory computer.
Cores cost too much,
and weren't here to stay, anyway.
(That's why you haven't heard of the company,
or the computer.)

I had been hired to write a FORTRAN compiler
for this new marvel and Mel was my guide to its wonders.
Mel didn't approve of compilers.

``If a program can't rewrite its own code'',
he asked, ``what good is it?''

Mel had written,
in hexadecimal,
the most popular computer program the company owned.
It ran on the LGP-30
and played blackjack with potential customers
at computer shows.
Its effect was always dramatic.
The LGP-30 booth was packed at every show,
and the IBM salesmen stood around
talking to each other.
Whether or not this actually sold computers
was a question we never discussed.

Mel's job was to re-write
the blackjack program for the RPC-4000.
(Port?  What does that mean?)
The new computer had a one-plus-one
addressing scheme,
in which each machine instruction,
in addition to the operation code
and the address of the needed operand,
had a second address that indicated where, on the revolving drum,
the next instruction was located.

In modern parlance,
every single instruction was followed by a GO TO!
Put that in Pascal's pipe and smoke it.

Mel loved the RPC-4000
because he could optimize his code:
that is, locate instructions on the drum
so that just as one finished its job,
the next would be just arriving at the ``read head''
and available for immediate execution.
There was a program to do that job,
an ``optimizing assembler'',
but Mel refused to use it.

``You never know where it's going to put things'',
he explained, ``so you'd have to use separate constants''.

It was a long time before I understood that remark.
Since Mel knew the numerical value
of every operation code,
and assigned his own drum addresses,
every instruction he wrote could also be considered
a numerical constant.
He could pick up an earlier ``add'' instruction, say,
and multiply by it,
if it had the right numeric value.
His code was not easy for someone else to modify.

I compared Mel's hand-optimized programs
with the same code massaged by the optimizing assembler program,
and Mel's always ran faster.
That was because the ``top-down'' method of program design
hadn't been invented yet,
and Mel wouldn't have used it anyway.
He wrote the innermost parts of his program loops first,
so they would get first choice
of the optimum address locations on the drum.
The optimizing assembler wasn't smart enough to do it that way.

Mel never wrote time-delay loops, either,
even when the balky Flexowriter
required a delay between output characters to work right.
He just located instructions on the drum
so each successive one was just past the read head
when it was needed;
the drum had to execute another complete revolution
to find the next instruction.
He coined an unforgettable term for this procedure.
Although ``optimum'' is an absolute term,
like ``unique'', it became common verbal practice
to make it relative:
``not quite optimum'' or ``less optimum''
or ``not very optimum''.
Mel called the maximum time-delay locations
the ``most pessimum''.

After he finished the blackjack program
and got it to run
(``Even the initializer is optimized'',
he said proudly),
he got a Change Request from the sales department.
The program used an elegant (optimized)
random number generator
to shuffle the ``cards'' and deal from the ``deck'',
and some of the salesmen felt it was too fair,
since sometimes the customers lost.
They wanted Mel to modify the program
so, at the setting of a sense switch on the console,
they could change the odds and let the customer win.

Mel balked.
He felt this was patently dishonest,
which it was,
and that it impinged on his personal integrity as a programmer,
which it did,
so he refused to do it.
The Head Salesman talked to Mel,
as did the Big Boss and, at the boss's urging,
a few Fellow Programmers.
Mel finally gave in and wrote the code,
but he got the test backwards,
and, when the sense switch was turned on,
the program would cheat, winning every time.
Mel was delighted with this,
claiming his subconscious was uncontrollably ethical,
and adamantly refused to fix it.

After Mel had left the company for greener pa$ture$,
the Big Boss asked me to look at the code
and see if I could find the test and reverse it.
Somewhat reluctantly, I agreed to look.
Tracking Mel's code was a real adventure.

I have often felt that programming is an art form,
whose real value can only be appreciated
by another versed in the same arcane art;
there are lovely gems and brilliant coups
hidden from human view and admiration, sometimes forever,
by the very nature of the process.
You can learn a lot about an individual
just by reading through his code,
even in hexadecimal.
Mel was, I think, an unsung genius.

Perhaps my greatest shock came
when I found an innocent loop that had no test in it.
No test.  None.
Common sense said it had to be a closed loop,
where the program would circle, forever, endlessly.
Program control passed right through it, however,
and safely out the other side.
It took me two weeks to figure it out.

The RPC-4000 computer had a really modern facility
called an index register.
It allowed the programmer to write a program loop
that used an indexed instruction inside;
each time through,
the number in the index register
was added to the address of that instruction,
so it would refer
to the next datum in a series.
He had only to increment the index register
each time through.
Mel never used it.

Instead, he would pull the instruction into a machine register,
add one to its address,
and store it back.
He would then execute the modified instruction
right from the register.
The loop was written so this additional execution time
was taken into account ---
just as this instruction finished,
the next one was right under the drum's read head,
ready to go.
But the loop had no test in it.

The vital clue came when I noticed
the index register bit,
the bit that lay between the address
and the operation code in the instruction word,
was turned on ---
yet Mel never used the index register,
leaving it zero all the time.
When the light went on it nearly blinded me.

He had located the data he was working on
near the top of memory ---
the largest locations the instructions could address ---
so, after the last datum was handled,
incrementing the instruction address
would make it overflow.
The carry would add one to the
operation code, changing it to the next one in the instruction set:
a jump instruction.
Sure enough, the next program instruction was
in address location zero,
and the program went happily on its way.

I haven't kept in touch with Mel,
so I don't know if he ever gave in to the flood of
change that has washed over programming techniques
since those long-gone days.
I like to think he didn't.
In any event,
I was impressed enough that I quit looking for the
offending test,
telling the Big Boss I couldn't find it.
He didn't seem surprised.

When I left the company,
the blackjack program would still cheat
if you turned on the right sense switch,
and I think that's how it should be.
I didn't feel comfortable
hacking up the code of a Real Programmer.

   This is one of hackerdom's great heroic epics, free verse or no. In a
   few spare images it captures more about the esthetics and psychology
   of hacking than all the scholarly volumes on the subject put together.
   For an opposing point of view, see the entry for [15220]Real
   Programmer.

   [1992 postscript -- the author writes: "The original submission to the
   net was not in free verse, nor any approximation to it -- it was
   straight prose style, in non-justified paragraphs. In bouncing around
   the net it apparently got modified into the `free verse' form now
   popular. In other words, it got hacked on the net. That seems
   appropriate, somehow." The author adds that he likes the `free-verse'
   version better...]

   [1999 update: Mel's last name is now known. The manual for the LGP-30
   refers to "Mel Kaye of Royal McBee who did the bulk of the programming
   [...] of the ACT 1 system".]
     _________________________________________________________________

   Node:Appendix B, Next:[15221]Appendix C, Previous:[15222]Appendix A,
   Up:[15223]Top

                        A Portrait of J. Random Hacker

   This profile reflects detailed comments on an earlier `trial balloon'
   version from about a hundred Usenet respondents. Where comparatives
   are used, the implicit `other' is a randomly selected segment of the
   non-hacker population of the same size as hackerdom.

   An important point: Except in some relatively minor respects such as
   slang vocabulary, hackers don't get to be the way they are by
   imitating each other. Rather, it seems to be the case that the
   combination of personality traits that makes a hacker so conditions
   one's outlook on life that one tends to end up being like other
   hackers whether one wants to or not (much as bizarrely detailed
   similarities in behavior and preferences are found in genetic twins
   raised separately).
     * [15224]General Appearance:
     * [15225]Dress:
     * [15226]Reading Habits:
     * [15227]Other Interests:
     * [15228]Physical Activity and Sports:
     * [15229]Education:
     * [15230]Things Hackers Detest and Avoid:
     * [15231]Food:
     * [15232]Politics:
     * [15233]Gender and Ethnicity:
     * [15234]Religion:
     * [15235]Ceremonial Chemicals:
     * [15236]Communication Style:
     * [15237]Geographical Distribution:
     * [15238]Sexual Habits:
     * [15239]Personality Characteristics:
     * [15240]Weaknesses of the Hacker Personality:
     * [15241]Miscellaneous:
     _________________________________________________________________

   Node:General Appearance, Next:[15242]Dress, Up:[15243]Appendix B

General Appearance

   Intelligent. Scruffy. Intense. Abstracted. Surprisingly for a
   sedentary profession, more hackers run to skinny than fat; both
   extremes are more common than elsewhere. Tans are rare.
     _________________________________________________________________

   Node:Dress, Next:[15244]Reading Habits, Previous:[15245]General
   Appearance, Up:[15246]Appendix B

Dress

   Casual, vaguely post-hippie; T-shirts, jeans, running shoes,
   Birkenstocks (or bare feet). Long hair, beards, and moustaches are
   common. High incidence of tie-dye and intellectual or humorous
   `slogan' T-shirts (only rarely computer related; that would be too
   obvious).

   A substantial minority prefers `outdoorsy' clothing -- hiking boots
   ("in case a mountain should suddenly spring up in the machine room",
   as one famous parody put it), khakis, lumberjack or chamois shirts,
   and the like.

   Very few actually fit the "National Lampoon" Nerd stereotype, though
   it lingers on at MIT and may have been more common before 1975. At
   least since the late Seventies backpacks have been more common than
   briefcases, and the hacker `look' has been more whole-earth than
   whole-polyester.

   Hackers dress for comfort, function, and minimal maintenance hassles
   rather than for appearance (some, perhaps unfortunately, take this to
   extremes and neglect personal hygiene). They have a very low tolerance
   of suits and other `business' attire; in fact, it is not uncommon for
   hackers to quit a job rather than conform to a dress code.

   Female hackers almost never wear visible makeup, and many use none at
   all.
     _________________________________________________________________

   Node:Reading Habits, Next:[15247]Other Interests,
   Previous:[15248]Dress, Up:[15249]Appendix B

Reading Habits

   Omnivorous, but usually includes lots of science and science fiction.
   The typical hacker household might subscribe to "Analog", "Scientific
   American", "Whole-Earth Review", and "Smithsonian" (most hackers
   ignore "Wired" and other self-consciously `cyberpunk' magazines,
   considering them [15250]wannabee fodder). Hackers often have a reading
   range that astonishes liberal arts people but tend not to talk about
   it as much. Many hackers spend as much of their spare time reading as
   the average American burns up watching TV, and often keep shelves and
   shelves of well-thumbed books in their homes.
     _________________________________________________________________

   Node:Other Interests, Next:[15251]Physical Activity and Sports,
   Previous:[15252]Reading Habits, Up:[15253]Appendix B

Other Interests

   Some hobbies are widely shared and recognized as going with the
   culture: science fiction, music, medievalism (in the active form
   practiced by the Society for Creative Anachronism and similar
   organizations), chess, go, backgammon, wargames, and intellectual
   games of all kinds. (Role-playing games such as Dungeons and Dragons
   used to be extremely popular among hackers but they lost a bit of
   their luster as they moved into the mainstream and became heavily
   commercialized. More recently, "Magic: The Gathering" has been widely
   popular among hackers.) Logic puzzles. Ham radio. Other interests that
   seem to correlate less strongly but positively with hackerdom include
   linguistics and theater teching.
     _________________________________________________________________

   Node:Physical Activity and Sports, Next:[15254]Education,
   Previous:[15255]Other Interests, Up:[15256]Appendix B

Physical Activity and Sports

   Many (perhaps even most) hackers don't follow or do sports at all and
   are determinedly anti-physical. Among those who do, interest in
   spectator sports is low to non-existent; sports are something one
   does, not something one watches on TV.

   Further, hackers avoid most team sports like the plague. Volleyball
   was long a notable exception, perhaps because it's non-contact and
   relatively friendly; Ultimate Frisbee has become quite popular for
   similar reasons. Hacker sports are almost always primarily
   self-competitive ones involving concentration, stamina, and micromotor
   skills: martial arts, bicycling, auto racing, kite flying, hiking,
   rock climbing, aviation, target-shooting, sailing, caving, juggling,
   skiing, skating, skydiving, scuba diving. Hackers' delight in
   techno-toys also tends to draw them towards hobbies with nifty
   complicated equipment that they can tinker with.

   The popularity of martial arts in the hacker culture deserves special
   mention. Many observers have noted it, and the connection has grown
   noticeably stronger over time. In the 1970s, many hackers admired
   martial arts disciplines from a distance, sensing a compatible ideal
   in their exaltation of skill through rigorous self-discipline and
   concentration. As martial arts became increasingly mainstreamed in the
   U.S. and other western countries, hackers moved from admiring to doing
   in large numbers. In 1997, for example, your humble editor recalls
   sitting down with five strangers at the first Perl conference and
   discovering that four of us were in active training in some sort of
   martial art - and, what is more interesting, nobody at the table found
   this particularly odd.

   Today (2000), martial arts seems to have become established as the
   hacker exercise form of choice, and the martial-arts culture combining
   skill-centered elitism with a willingness to let anybody join seems a
   stronger parallel to hacker behavior than ever. Common usages in
   hacker slang un-ironically analogize programming to kung fu (thus, one
   hears talk of "code-fu" or in reference to specific skills like
   "HTML-fu"). Albeit with slightly more irony, today's hackers readily
   analogize assimilation into the hacker culture with the plot of a Jet
   Li movie: the aspiring newbie studies with masters of the tradition,
   develops his art through deep meditation, ventures forth to perform
   heroic feats of hacking, and eventually becomes a master who trains
   the next generation of newbies.
     _________________________________________________________________

   Node:Education, Next:[15257]Things Hackers Detest and Avoid,
   Previous:[15258]Physical Activity and Sports, Up:[15259]Appendix B

Education

   Nearly all hackers past their teens are either college-degreed or
   self-educated to an equivalent level. The self-taught hacker is often
   considered (at least by other hackers) to be better-motivated, and may
   be more respected, than his school-shaped counterpart. Academic areas
   from which people often gravitate into hackerdom include (besides the
   obvious computer science and electrical engineering) physics,
   mathematics, linguistics, and philosophy.
     _________________________________________________________________

   Node:Things Hackers Detest and Avoid, Next:[15260]Food,
   Previous:[15261]Education, Up:[15262]Appendix B

Things Hackers Detest and Avoid

   IBM mainframes. All the works of Microsoft. Smurfs, Ewoks, and other
   forms of offensive cuteness. Bureaucracies. Stupid people. Easy
   listening music. Television (with occasional exceptions for cartoons,
   movies, and good SF like "Star Trek" classic or Babylon 5). Business
   suits. Dishonesty. Incompetence. Boredom. COBOL. BASIC.
   Character-based menu interfaces.
     _________________________________________________________________

   Node:Food, Next:[15263]Politics, Previous:[15264]Things Hackers Detest
   and Avoid, Up:[15265]Appendix B

Food

   Ethnic. Spicy. Oriental, esp. Chinese and most esp. Szechuan, Hunan,
   and Mandarin (hackers consider Cantonese vaguely déclassé). Hackers
   prefer the exotic; for example, the Japanese-food fans among them will
   eat with gusto such delicacies as fugu (poisonous pufferfish) and
   whale. Thai food has experienced flurries of popularity. Where
   available, high-quality Jewish delicatessen food is much esteemed. A
   visible minority of Southwestern and Pacific Coast hackers prefers
   Mexican.

   For those all-night hacks, pizza and microwaved burritos are big.
   Interestingly, though the mainstream culture has tended to think of
   hackers as incorrigible junk-food junkies, many have at least mildly
   health-foodist attitudes and are fairly discriminating about what they
   eat. This may be generational; anecdotal evidence suggests that the
   stereotype was more on the mark before the early 1980s.
     _________________________________________________________________

   Node:Politics, Next:[15266]Gender and Ethnicity, Previous:[15267]Food,
   Up:[15268]Appendix B

Politics

   Vaguely liberal-moderate, except for the strong libertarian contingent
   which rejects conventional left-right politics entirely. The only safe
   generalization is that hackers tend to be rather anti-authoritarian;
   thus, both conventional conservatism and `hard' leftism are rare.
   Hackers are far more likely than most non-hackers to either (a) be
   aggressively apolitical or (b) entertain peculiar or idiosyncratic
   political ideas and actually try to live by them day-to-day.
     _________________________________________________________________

   Node:Gender and Ethnicity, Next:[15269]Religion,
   Previous:[15270]Politics, Up:[15271]Appendix B

Gender and Ethnicity

   Hackerdom is still predominantly male. However, the percentage of
   women is clearly higher than the low-single-digit range typical for
   technical professions, and female hackers are generally respected and
   dealt with as equals.

   In the U.S., hackerdom is predominantly Caucasian with strong
   minorities of Jews (East Coast) and Orientals (West Coast). The Jewish
   contingent has exerted a particularly pervasive cultural influence
   (see [15272]Food, above, and note that several common jargon terms are
   obviously mutated Yiddish).

   The ethnic distribution of hackers is understood by them to be a
   function of which ethnic groups tend to seek and value education.
   Racial and ethnic prejudice is notably uncommon and tends to be met
   with freezing contempt.

   When asked, hackers often ascribe their culture's gender- and
   color-blindness to a positive effect of text-only network channels,
   and this is doubtless a powerful influence. Also, the ties many
   hackers have to AI research and SF literature may have helped them to
   develop an idea of personhood that is inclusive rather than exclusive
   -- after all, if one's imagination readily grants full human rights to
   future AI programs, robots, dolphins, and extraterrestrial aliens,
   mere color and gender can't seem very important any more.
     _________________________________________________________________

   Node:Religion, Next:[15273]Ceremonial Chemicals,
   Previous:[15274]Gender and Ethnicity, Up:[15275]Appendix B

Religion

   Agnostic. Atheist. Non-observant Jewish. Neo-pagan. Very commonly,
   three or more of these are combined in the same person. Conventional
   faith-holding Christianity is rare though not unknown.

   Even hackers who identify with a religious affiliation tend to be
   relaxed about it, hostile to organized religion in general and all
   forms of religious bigotry in particular. Many enjoy `parody'
   religions such as Discordianism and the Church of the SubGenius.

   Also, many hackers are influenced to varying degrees by Zen Buddhism
   or (less commonly) Taoism, and blend them easily with their `native'
   religions.

   There is a definite strain of mystical, almost Gnostic sensibility
   that shows up even among those hackers not actively involved with
   neo-paganism, Discordianism, or Zen. Hacker folklore that pays homage
   to `wizards' and speaks of incantations and demons has too much
   psychological truthfulness about it to be entirely a joke.
     _________________________________________________________________

   Node:Ceremonial Chemicals, Next:[15276]Communication Style,
   Previous:[15277]Religion, Up:[15278]Appendix B

Ceremonial Chemicals

   Most hackers don't smoke tobacco, and use alcohol in moderation if at
   all. However, there has been something of a trend towards exotic beers
   since about 1995, especially among younger Linux hackers apparently
   influenced by Linus Torvalds's fondness for Guiness.

   Limited use of non-addictive psychedelic drugs, such as cannabis, LSD,
   psilocybin, nitrous oxide, etc., used to be relatively common and is
   still regarded with more tolerance than in the mainstream culture. Use
   of `downers' and opiates, on the other hand, appears to be
   particularly rare; hackers seem in general to dislike drugs that make
   them stupid. But [15279]on the gripping hand, many hackers regularly
   wire up on caffeine and/or sugar for all-night hacking runs.
     _________________________________________________________________

   Node:Communication Style, Next:[15280]Geographical Distribution,
   Previous:[15281]Ceremonial Chemicals, Up:[15282]Appendix B

Communication Style

   See the discussions of speech and writing styles near the beginning of
   this File. Though hackers often have poor person-to-person
   communication skills, they are as a rule quite sensitive to nuances of
   language and very precise in their use of it. They are often better at
   writing than at speaking.
     _________________________________________________________________

   Node:Geographical Distribution, Next:[15283]Sexual Habits,
   Previous:[15284]Communication Style, Up:[15285]Appendix B

Geographical Distribution

   In the United States, hackerdom revolves on a Bay Area-to-Boston axis;
   about half of the hard core seems to live within a hundred miles of
   Cambridge (Massachusetts) or Berkeley (California), although there are
   significant contingents in Los Angeles, in the Pacific Northwest, and
   around Washington DC. Hackers tend to cluster around large cities,
   especially `university towns' such as the Raleigh-Durham area in North
   Carolina or Princeton, New Jersey (this may simply reflect the fact
   that many are students or ex-students living near their alma maters).
     _________________________________________________________________

   Node:Sexual Habits, Next:[15286]Personality Characteristics,
   Previous:[15287]Geographical Distribution, Up:[15288]Appendix B

Sexual Habits

   Hackerdom easily tolerates a much wider range of sexual and lifestyle
   variation than the mainstream culture. It includes a relatively large
   gay and bisexual contingent. Hackers are somewhat more likely to live
   in polygynous or polyandrous relationships, practice open marriage, or
   live in communes or group houses. In this, as in general appearance,
   hackerdom semi-consciously maintains `counterculture' values.
     _________________________________________________________________

   Node:Personality Characteristics, Next:[15289]Weaknesses of the Hacker
   Personality, Previous:[15290]Sexual Habits, Up:[15291]Appendix B

Personality Characteristics

   The most obvious common `personality' characteristics of hackers are
   high intelligence, consuming curiosity, and facility with intellectual
   abstractions. Also, most hackers are `neophiles', stimulated by and
   appreciative of novelty (especially intellectual novelty). Most are
   also relatively individualistic and anti-conformist.

   Although high general intelligence is common among hackers, it is not
   the sine qua non one might expect. Another trait is probably even more
   important: the ability to mentally absorb, retain, and reference large
   amounts of `meaningless' detail, trusting to later experience to give
   it context and meaning. A person of merely average analytical
   intelligence who has this trait can become an effective hacker, but a
   creative genius who lacks it will swiftly find himself outdistanced by
   people who routinely upload the contents of thick reference manuals
   into their brains. [During the production of the first book version of
   this document, for example, I learned most of the rather complex
   typesetting language TeX over about four working days, mainly by
   inhaling Knuth's 477-page manual. My editor's flabbergasted reaction
   to this genuinely surprised me, because years of associating with
   hackers have conditioned me to consider such performances routine and
   to be expected. --ESR]

   Contrary to stereotype, hackers are not usually intellectually narrow;
   they tend to be interested in any subject that can provide mental
   stimulation, and can often discourse knowledgeably and even
   interestingly on any number of obscure subjects -- if you can get them
   to talk at all, as opposed to, say, going back to their hacking.

   It is noticeable (and contrary to many outsiders' expectations) that
   the better a hacker is at hacking, the more likely he or she is to
   have outside interests at which he or she is more than merely
   competent.

   Hackers are `control freaks' in a way that has nothing to do with the
   usual coercive or authoritarian connotations of the term. In the same
   way that children delight in making model trains go forward and back
   by moving a switch, hackers love making complicated things like
   computers do nifty stuff for them. But it has to be their nifty stuff.
   They don't like tedium, nondeterminism, or most of the fussy, boring,
   ill-defined little tasks that go with maintaining a normal existence.
   Accordingly, they tend to be careful and orderly in their intellectual
   lives and chaotic elsewhere. Their code will be beautiful, even if
   their desks are buried in 3 feet of crap.

   Hackers are generally only very weakly motivated by conventional
   rewards such as social approval or money. They tend to be attracted by
   challenges and excited by interesting toys, and to judge the interest
   of work or other activities in terms of the challenges offered and the
   toys they get to play with.

   In terms of Myers-Briggs and equivalent psychometric systems,
   hackerdom appears to concentrate the relatively rare INTJ and INTP
   types; that is, introverted, intuitive, and thinker types (as opposed
   to the extroverted-sensate personalities that predominate in the
   mainstream culture). ENT[JP] types are also concentrated among hackers
   but are in a minority.
     _________________________________________________________________

   Node:Weaknesses of the Hacker Personality, Next:[15292]Miscellaneous,
   Previous:[15293]Personality Characteristics, Up:[15294]Appendix B

Weaknesses of the Hacker Personality

   Hackers have relatively little ability to identify emotionally with
   other people. This may be because hackers generally aren't much like
   `other people'. Unsurprisingly, hackers also tend towards
   self-absorption, intellectual arrogance, and impatience with people
   and tasks perceived to be wasting their time.

   As cynical as hackers sometimes wax about the amount of idiocy in the
   world, they tend by reflex to assume that everyone is as rational,
   `cool', and imaginative as they consider themselves. This bias often
   contributes to weakness in communication skills. Hackers tend to be
   especially poor at confrontation and negotiation.

   Because of their passionate embrace of (what they consider to be) the
   [15295]Right Thing, hackers can be unfortunately intolerant and
   bigoted on technical issues, in marked contrast to their general
   spirit of camaraderie and tolerance of alternative viewpoints
   otherwise. Old-time [15296]ITS partisans look down on the ever-growing
   hordes of [15297]Unix hackers; Unix aficionados despise [15298]VMS and
   [15299]MS-DOS; and hackers who are used to conventional command-line
   user interfaces loudly loathe mouse-and-menu based systems such as the
   Macintosh. Hackers who don't indulge in [15300]Usenet consider it a
   huge waste of time and [15301]bandwidth; fans of old adventure games
   such as [15302]ADVENT and [15303]Zork consider [15304]MUDs to be
   glorified chat systems devoid of atmosphere or interesting puzzles;
   hackers who are willing to devote endless hours to Usenet or MUDs
   consider [15305]IRC to be a real waste of time; IRCies think MUDs
   might be okay if there weren't all those silly puzzles in the way.
   And, of course, there are the perennial [15306]holy wars --
   [15307]EMACS vs. [15308]vi, [15309]big-endian vs.
   [15310]little-endian, RISC vs. CISC, etc., etc., etc. As in society at
   large, the intensity and duration of these debates is usually
   inversely proportional to the number of objective, factual arguments
   available to buttress any position.

   As a result of all the above traits, many hackers have difficulty
   maintaining stable relationships. At worst, they can produce the
   classic [15311]computer geek: withdrawn, relationally incompetent,
   sexually frustrated, and desperately unhappy when not submerged in his
   or her craft. Fortunately, this extreme is far less common than
   mainstream folklore paints it -- but almost all hackers will recognize
   something of themselves in the unflattering paragraphs above.

   Hackers are often monumentally disorganized and sloppy about dealing
   with the physical world. Bills don't get paid on time, clutter piles
   up to incredible heights in homes and offices, and minor maintenance
   tasks get deferred indefinitely.

   1994-95's fad behavioral disease was a syndrome called Attention
   Deficit Disorder (ADD), supposedly characterized by (among other
   things) a combination of short attention span with an ability to
   `hyperfocus' imaginatively on interesting tasks. In 1998-1999 another
   syndrome that is said to overlap with many hacker traits entered
   popular awareness: Asperger's syndrome (AS). This disorder is also
   sometimes called `high-function autism', though researchers are
   divided on whether AS is in fact a mild form of autism or a distinct
   syndrome with a different etiology. AS patients exhibit mild to severe
   deficits in interpreting facial and body-language cues and in modeling
   or empathizing with others' emotions. Though some AS patients exhibit
   mild retardation, others compensate for their deficits with high
   intelligence and analytical ability, and frequently seek out technical
   fields where problem-solving abilities are at a premium and people
   skills are relatively unimportant. Both syndromes are thought to
   relate to abnormalities in neurotransmitter chemistry, especially the
   brain's processing of serotonin.

   Many hackers have noticed that mainstream culture has shown a tendency
   to pathologize and medicalize normal variations in personality,
   especially those variations that make life more complicated for
   authority figures and conformists. Thus, hackers aware of the issue
   tend to be among those questioning whether ADD and AS actually exist;
   and if so whether they are really `diseases' rather than extremes of a
   normal genetic variation like having freckles or being able to taste
   DPT. In either case, they have a sneaking tendency to wonder if these
   syndromes are over-diagnosed and over-treated. After all, people in
   authority will always be inconvenienced by schoolchildren or workers
   or citizens who are prickly, intelligent individualists - thus, any
   social system that depends on authority relationships will tend to
   helpfully ostracize and therapize and drug such `abnormal' people
   until they are properly docile and stupid and `well-socialized'.

   So hackers tend to believe they have good reason for skepticism about
   clinical explanations of the hacker personality. That being said, most
   would also concede that some hacker traits coincide with indicators
   for ADD and AS - the status of caffeeine as a hacker beverage of
   choice may be connected to the fact that it bonds to the same neural
   receptors as Ritalin, the drug most commonly prescribed for ADD. It is
   probably true that boosters of both would find a rather higher rate of
   clinical ADD among hackers than the supposedly mainstream-normal 3-5%
   (AS is rarer and there are not yet good estimates of incidence as of
   2000).
     _________________________________________________________________

   Node:Miscellaneous, Previous:[15312]Weaknesses of the Hacker
   Personality, Up:[15313]Appendix B

Miscellaneous

   Hackers are more likely to have cats than dogs (in fact, it is widely
   grokked that cats have the hacker nature). Many drive incredibly
   decrepit heaps and forget to wash them; richer ones drive spiffy
   Porsches and RX-7s and then forget to have them washed. Almost all
   hackers have terribly bad handwriting, and often fall into the habit
   of block-printing everything like junior draftsmen.
     _________________________________________________________________

   Node:Appendix C, Next:[15314]Bibliography, Previous:[15315]Appendix B,
   Up:[15316]Top

                          Helping Hacker Culture Grow

   If you enjoyed the Jargon File, please help the culture that created
   it grow and flourish. Here are several ways you can help:

   o If you are a writer or journalist, don't say or write [15317]hacker
   when you mean [15318]cracker. If you work with writers or journalists,
   educate them on this issue and push them to do the right thing. If you
   catch a newspaper or magazine abusing the work `hacker', write them
   and straighten them out (this appendix includes a model letter).

   o If you're a techie or computer hobbyist, get involved with one of
   the free Unixes. Toss out that lame Microsoft OS, or confine it to one
   disk partition and put Linux or FreeBSD or NetBSD on the other one.
   And the next time your friend or boss is thinking about some
   proprietary software `solution' that costs more than it's worth, be
   ready to blow the competition away with open-source software running
   over a Unix.

   o Contribute to organizations like the Free Software Foundation that
   promote the production of high-quality free and open-source software.
   You can reach the Free Software Foundation at gnu@gnu.org, by phone at
   +1-617-542-5942, or by snail-mail at 59 Temple Place, Suite 330,
   Boston, MA 02111-1307 USA.

   o Support the League for Programming Freedom, which opposes over-broad
   software patents that constantly threaten to blow up in hackers'
   faces, preventing them from developing innovative software for
   tomorrow's needs. You can reach the League for Programming Freedom at
   lpf@uunet.uu.net. by phone at +1 617 621 7084, or by snail-mail at 1
   Kendall Square #143, P.O.Box 9171, Cambridge, Massachusetts 02139 USA.

   o Join the continuing fight against Internet censorship, visit the
   Center for Democracy and Technology Home Page at
   [15319]http://www.cdt.org.

   o If you do nothing else, please help fight government attempts to
   seize political control of Internet content and restrict strong
   cryptography. The so-called `Communications Decency Act' was declared
   unconstitutional by the Supreme Court, but U.S. cryptography policy
   still infringes our First Amendment rights. Surf to the Center for
   Democracy and technology's home page at [15320]http://www.cdt.org to
   see what you can do to help fight censorship of the net.

   Here's the text of a letter RMS wrote to the Wall Street Journal to
   complain about their policy of using "hacker" only in a pejorative
   sense. We hear that most major newspapers have the same policy. If
   you'd like to help change this situation, send your favorite newspaper
   the same letter - or, better yet, write your own letter.

     Dear Editor:

     This letter is not meant for publication, although you can publish
     it if you wish. It is meant specifically for you, the editor, not
     the public.

     I am a hacker. That is to say, I enjoy playing with computers --
     working with, learning about, and writing clever computer programs.
     I am not a cracker; I don't make a practice of breaking computer
     security.

     There's nothing shameful about the hacking I do. But when I tell
     people I am a hacker, people think I'm admitting something naughty
     -- because newspapers such as yours misuse the word "hacker",
     giving the impression that it means "security breaker" and nothing
     else. You are giving hackers a bad name.

     The saddest thing is that this problem is perpetuated deliberately.
     Your reporters know the difference between "hacker" and "security
     breaker". They know how to make the distinction, but you don't let
     them! You insist on using "hacker" pejoratively. When reporters try
     to use another word, you change it. When reporters try to explain
     the other meanings, you cut it.

     Of course, you have a reason. You say that readers have become used
     to your insulting usage of "hacker", so that you cannot change it
     now. Well, you can't undo past mistakes today; but that is no
     excuse to repeat them tomorrow.

     If I were what you call a "hacker", at this point I would threaten
     to crack your computer and crash it. But I am a hacker, not a
     cracker. I don't do that kind of thing! I have enough computers to
     play with at home and at work; I don't need yours. Besides, it's
     not my way to respond to insults with violence. My response is this
     letter.

     You owe hackers an apology; but more than that, you owe us ordinary
     respect.

     Sincerely, etc.
     _________________________________________________________________

   Node:Bibliography, Previous:[15321]Appendix C, Up:[15322]Top

                                 Bibliography

   Here are some other books you can read to help you understand the
   hacker mindset.

   Escher, Bach: An Eternal Golden BraidGödel, Escher, Bach: An Eternal
   Golden Braid
   Douglas Hofstadter
   Basic Books, 1979
   ISBN 0-394-74502-7

   This book reads like an intellectual Grand Tour of hacker
   preoccupations. Music, mathematical logic, programming, speculations
   on the nature of intelligence, biology, and Zen are woven into a
   brilliant tapestry themed on the concept of encoded self-reference.
   The perfect left-brain companion to "Illuminatus".

   Illuminatus!
   I. "The Eye in the Pyramid"
   II. "The Golden Apple"
   III. "Leviathan".
   Robert Shea and Robert Anton Wilson
   Dell, 1988
   ISBN 0-440-53981-1

   This work of alleged fiction is an incredible berserko-surrealist
   rollercoaster of world-girdling conspiracies, intelligent dolphins,
   the fall of Atlantis, who really killed JFK, sex, drugs, rock'n'roll,
   and the Cosmic Giggle Factor. First published in three volumes, but
   there is now a one-volume trade paperback, carried by most chain
   bookstores under SF. The perfect right-brain companion to Hofstadter's
   "Gödel, Escher, Bach". See [15323]Eris, [15324]Discordianism,
   [15325]random numbers, [15326]Church of the SubGenius.

   The Hitchhiker's Guide to the Galaxy
   Douglas Adams
   Pocket Books, 1981
   ISBN 0-671-46149-4

   This `Monty Python in Space' spoof of SF genre traditions has been
   popular among hackers ever since the original British radio show. Read
   it if only to learn about Vogons (see [15327]bogon) and the
   significance of the number 42 (see [15328]random numbers) -- and why
   the winningest chess program of 1990 was called `Deep Thought'.

   The Tao of Programming
   James Geoffrey
   Infobooks, 1987
   ISBN 0-931137-07-1

   This gentle, funny spoof of the "Tao Te Ching" contains much that is
   illuminating about the hacker way of thought. "When you have learned
   to snatch the error code from the trap frame, it will be time for you
   to leave."

   Hackers
   Steven Levy
   Anchor/Doubleday 1984
   ISBN 0-385-19195-2

   Levy's book is at its best in describing the early MIT hackers at the
   Model Railroad Club and the early days of the microcomputer
   revolution. He never understood Unix or the networks, though, and his
   enshrinement of Richard Stallman as "the last true hacker" turns out
   (thankfully) to have been quite misleading. Despite being a bit dated
   and containing some minor errors (many fixed in the paperback
   edition), this remains a useful and stimulating book that captures the
   feel of several important hacker subcultures.

   The Computer Contradictionary
   Stan Kelly-Bootle
   MIT Press, 1995
   ISBN 0-262-61112-0

   This pastiche of Ambrose Bierce's famous work is similar in format to
   the Jargon File (and quotes several entries from TNHD-2) but somewhat
   different in tone and intent. It is more satirical and less
   anthropological, and is largely a product of the author's literate and
   quirky imagination. For example, it defines `computer science' as "a
   study akin to numerology and astrology, but lacking the precision of
   the former and the success of the latter" and `implementation' as "The
   fruitless struggle by the talented and underpaid to fulfill promises
   made by the rich and ignorant"; `flowchart' becomes "to obfuscate a
   problem with esoteric cartoons". Revised and expanded from "The
   Devil's DP Dictionary", McGraw-Hill 1981, ISBN 0-07-034022-6; that
   work had some stylistic influence on TNHD-1.

   The Devouring Fungus: Tales from the Computer Age
   Karla Jennings
   Norton, 1990
   ISBN 0-393-30732-8

   The author of this pioneering compendium knits together a great deal
   of computer- and hacker-related folklore with good writing and a few
   well-chosen cartoons. She has a keen eye for the human aspects of the
   lore and is very good at illuminating the psychology and evolution of
   hackerdom. Unfortunately, a number of small errors and awkwardnesses
   suggest that she didn't have the final manuscript checked over by a
   native speaker; the glossary in the back is particularly embarrassing,
   and at least one classic tale (the Magic Switch story, retold here
   under [15329]A Story About Magic in Appendix A is given in incomplete
   and badly mangled form. Nevertheless, this book is a win overall and
   can be enjoyed by hacker and non-hacker alike.

   The Soul of a New Machine
   Tracy Kidder
   Little, Brown, 1981
   (paperback: Avon, 1982
   ISBN 0-380-59931-7)

   This book (a 1982 Pulitzer Prize winner) documents the adventure of
   the design of a new Data General computer, the MV-8000 Eagle. It is an
   amazingly well-done portrait of the hacker mindset -- although largely
   the hardware hacker -- done by a complete outsider. It is a bit thin
   in spots, but with enough technical information to be entertaining to
   the serious hacker while providing non-technical people a view of what
   day-to-day life can be like -- the fun, the excitement, the disasters.
   During one period, when the microcode and logic were glitching at the
   nanosecond level, one of the overworked engineers departed the
   company, leaving behind a note on his terminal as his letter of
   resignation: "I am going to a commune in Vermont and will deal with no
   unit of time shorter than a season."

   Life with UNIX: a Guide for Everyone
   Don Libes and Sandy Ressler
   Prentice-Hall, 1989
   ISBN 0-13-536657-7

   The authors of this book set out to tell you all the things about Unix
   that tutorials and technical books won't. The result is gossipy,
   funny, opinionated, downright weird in spots, and invaluable. Along
   the way they expose you to enough of Unix's history, folklore and
   humor to qualify as a first-class source for these things. Because so
   much of today's hackerdom is involved with Unix, this in turn
   illuminates many of its in-jokes and preoccupations.

   True Names ... and Other Dangers
   Vernor Vinge
   Baen Books, 1987
   ISBN 0-671-65363-6

   Hacker demigod Richard Stallman used to say that the title story of
   this book "expresses the spirit of hacking best". Until the subject of
   the next entry came out, it was hard to even nominate another
   contender. The other stories in this collection are also fine work by
   an author who has since won multiple Hugos and is one of today's very
   best practitioners of hard SF.

   Snow Crash
   Neal Stephenson
   Bantam, 1992
   ISBN 0-553-56261-4

   Stephenson's epic, comic cyberpunk novel is deeply knowing about the
   hacker psychology and its foibles in a way no other author of fiction
   has ever even approached. His imagination, his grasp of the relevant
   technical details, and his ability to communicate the excitement of
   hacking and its results are astonishing, delightful, and (so far)
   unsurpassed.

   Cyberpunk: Outlaws and Hackers on the Computer Frontier
   Katie Hafner & John Markoff
   Simon & Schuster 1991
   ISBN 0-671-68322-5

   This book gathers narratives about the careers of three notorious
   crackers into a clear-eyed but sympathetic portrait of hackerdom's
   dark side. The principals are Kevin Mitnick, "Pengo" and "Hagbard" of
   the Chaos Computer Club, and Robert T. Morris (see [15330]RTM, sense
   2) . Markoff and Hafner focus as much on their psychologies and
   motivations as on the details of their exploits, but don't slight the
   latter. The result is a balanced and fascinating account, particularly
   useful when read immediately before or after Cliff Stoll's [15331]The
   Cuckoo's Egg. It is especially instructive to compare RTM, a true
   hacker who blundered, with the sociopathic phone-freak Mitnick and the
   alienated, drug-addled crackers who made the Chaos Club notorious. The
   gulf between [15332]wizard and [15333]wannabee has seldom been made
   more obvious.

   Technobabble
   John Barry
   MIT Press 1991
   ISBN 0-262-02333-4

   Barry's book takes a critical and humorous look at the `technobabble'
   of acronyms, neologisms, hyperbole, and metaphor spawned by the
   computer industry. Though he discusses some of the same mechanisms of
   jargon formation that occur in hackish, most of what he chronicles is
   actually suit-speak -- the obfuscatory language of press releases,
   marketroids, and Silicon Valley CEOs rather than the playful jargon of
   hackers (most of whom wouldn't be caught dead uttering the kind of
   pompous, passive-voiced word salad he deplores).

   The Cuckoo's Egg
   Clifford Stoll
   Doubleday 1989
   ISBN 0-385-24946-2

   Clifford Stoll's absorbing tale of how he tracked Markus Hess and the
   Chaos Club cracking ring nicely illustrates the difference between
   `hacker' and `cracker'. Stoll's portrait of himself, his lady Martha,
   and his friends at Berkeley and on the Internet paints a marvelously
   vivid picture of how hackers and the people around them like to live
   and how they think.
#===================== THE JARGON FILE ENDS HERE ====================#
